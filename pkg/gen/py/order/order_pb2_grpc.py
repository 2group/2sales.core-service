# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from order import order_pb2 as order_dot_order__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in order/order_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class OrderServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListCart = channel.unary_unary(
                '/order.OrderService/ListCart',
                request_serializer=order_dot_order__pb2.ListCartRequest.SerializeToString,
                response_deserializer=order_dot_order__pb2.ListCartResponse.FromString,
                _registered_method=True)
        self.AddProductToCart = channel.unary_unary(
                '/order.OrderService/AddProductToCart',
                request_serializer=order_dot_order__pb2.AddProductToCartRequest.SerializeToString,
                response_deserializer=order_dot_order__pb2.AddProductToCartResponse.FromString,
                _registered_method=True)
        self.DeleteProductFromCart = channel.unary_unary(
                '/order.OrderService/DeleteProductFromCart',
                request_serializer=order_dot_order__pb2.DeleteProductFromCartRequest.SerializeToString,
                response_deserializer=order_dot_order__pb2.DeleteProductFromCartResponse.FromString,
                _registered_method=True)
        self.GetCountOfProductInCart = channel.unary_unary(
                '/order.OrderService/GetCountOfProductInCart',
                request_serializer=order_dot_order__pb2.GetCountOfProductInCartRequest.SerializeToString,
                response_deserializer=order_dot_order__pb2.GetCountOfProductInCartResponse.FromString,
                _registered_method=True)
        self.CreateOrder = channel.unary_unary(
                '/order.OrderService/CreateOrder',
                request_serializer=order_dot_order__pb2.CreateOrderRequest.SerializeToString,
                response_deserializer=order_dot_order__pb2.CreateOrderResponse.FromString,
                _registered_method=True)
        self.CreateSubOrder = channel.unary_unary(
                '/order.OrderService/CreateSubOrder',
                request_serializer=order_dot_order__pb2.CreateSubOrderRequest.SerializeToString,
                response_deserializer=order_dot_order__pb2.CreateSubOrderResponse.FromString,
                _registered_method=True)
        self.GetSubOrder = channel.unary_unary(
                '/order.OrderService/GetSubOrder',
                request_serializer=order_dot_order__pb2.GetSubOrderRequest.SerializeToString,
                response_deserializer=order_dot_order__pb2.GetSubOrderResponse.FromString,
                _registered_method=True)
        self.UpdateSubOrder = channel.unary_unary(
                '/order.OrderService/UpdateSubOrder',
                request_serializer=order_dot_order__pb2.UpdateSubOrderRequest.SerializeToString,
                response_deserializer=order_dot_order__pb2.UpdateSubOrderResponse.FromString,
                _registered_method=True)
        self.ListSubOrder = channel.unary_unary(
                '/order.OrderService/ListSubOrder',
                request_serializer=order_dot_order__pb2.ListSubOrderRequest.SerializeToString,
                response_deserializer=order_dot_order__pb2.ListSubOrderResponse.FromString,
                _registered_method=True)


class OrderServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListCart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddProductToCart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProductFromCart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCountOfProductInCart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSubOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSubOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSubOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSubOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListCart': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCart,
                    request_deserializer=order_dot_order__pb2.ListCartRequest.FromString,
                    response_serializer=order_dot_order__pb2.ListCartResponse.SerializeToString,
            ),
            'AddProductToCart': grpc.unary_unary_rpc_method_handler(
                    servicer.AddProductToCart,
                    request_deserializer=order_dot_order__pb2.AddProductToCartRequest.FromString,
                    response_serializer=order_dot_order__pb2.AddProductToCartResponse.SerializeToString,
            ),
            'DeleteProductFromCart': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProductFromCart,
                    request_deserializer=order_dot_order__pb2.DeleteProductFromCartRequest.FromString,
                    response_serializer=order_dot_order__pb2.DeleteProductFromCartResponse.SerializeToString,
            ),
            'GetCountOfProductInCart': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCountOfProductInCart,
                    request_deserializer=order_dot_order__pb2.GetCountOfProductInCartRequest.FromString,
                    response_serializer=order_dot_order__pb2.GetCountOfProductInCartResponse.SerializeToString,
            ),
            'CreateOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrder,
                    request_deserializer=order_dot_order__pb2.CreateOrderRequest.FromString,
                    response_serializer=order_dot_order__pb2.CreateOrderResponse.SerializeToString,
            ),
            'CreateSubOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSubOrder,
                    request_deserializer=order_dot_order__pb2.CreateSubOrderRequest.FromString,
                    response_serializer=order_dot_order__pb2.CreateSubOrderResponse.SerializeToString,
            ),
            'GetSubOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSubOrder,
                    request_deserializer=order_dot_order__pb2.GetSubOrderRequest.FromString,
                    response_serializer=order_dot_order__pb2.GetSubOrderResponse.SerializeToString,
            ),
            'UpdateSubOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSubOrder,
                    request_deserializer=order_dot_order__pb2.UpdateSubOrderRequest.FromString,
                    response_serializer=order_dot_order__pb2.UpdateSubOrderResponse.SerializeToString,
            ),
            'ListSubOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSubOrder,
                    request_deserializer=order_dot_order__pb2.ListSubOrderRequest.FromString,
                    response_serializer=order_dot_order__pb2.ListSubOrderResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'order.OrderService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('order.OrderService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class OrderService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListCart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/order.OrderService/ListCart',
            order_dot_order__pb2.ListCartRequest.SerializeToString,
            order_dot_order__pb2.ListCartResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddProductToCart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/order.OrderService/AddProductToCart',
            order_dot_order__pb2.AddProductToCartRequest.SerializeToString,
            order_dot_order__pb2.AddProductToCartResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteProductFromCart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/order.OrderService/DeleteProductFromCart',
            order_dot_order__pb2.DeleteProductFromCartRequest.SerializeToString,
            order_dot_order__pb2.DeleteProductFromCartResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCountOfProductInCart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/order.OrderService/GetCountOfProductInCart',
            order_dot_order__pb2.GetCountOfProductInCartRequest.SerializeToString,
            order_dot_order__pb2.GetCountOfProductInCartResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/order.OrderService/CreateOrder',
            order_dot_order__pb2.CreateOrderRequest.SerializeToString,
            order_dot_order__pb2.CreateOrderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateSubOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/order.OrderService/CreateSubOrder',
            order_dot_order__pb2.CreateSubOrderRequest.SerializeToString,
            order_dot_order__pb2.CreateSubOrderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSubOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/order.OrderService/GetSubOrder',
            order_dot_order__pb2.GetSubOrderRequest.SerializeToString,
            order_dot_order__pb2.GetSubOrderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateSubOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/order.OrderService/UpdateSubOrder',
            order_dot_order__pb2.UpdateSubOrderRequest.SerializeToString,
            order_dot_order__pb2.UpdateSubOrderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListSubOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/order.OrderService/ListSubOrder',
            order_dot_order__pb2.ListSubOrderRequest.SerializeToString,
            order_dot_order__pb2.ListSubOrderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

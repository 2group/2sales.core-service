# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from product import product_pb2 as product_dot_product__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in product/product_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ProductServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateProduct = channel.unary_unary(
                '/product.ProductService/CreateProduct',
                request_serializer=product_dot_product__pb2.CreateProductRequest.SerializeToString,
                response_deserializer=product_dot_product__pb2.CreateProductResponse.FromString,
                _registered_method=True)
        self.ListProducts = channel.unary_unary(
                '/product.ProductService/ListProducts',
                request_serializer=product_dot_product__pb2.ListProductsRequest.SerializeToString,
                response_deserializer=product_dot_product__pb2.ListProductsResponse.FromString,
                _registered_method=True)
        self.DuplicateProduct = channel.unary_unary(
                '/product.ProductService/DuplicateProduct',
                request_serializer=product_dot_product__pb2.DuplicateProductRequest.SerializeToString,
                response_deserializer=product_dot_product__pb2.DuplicateProductResponse.FromString,
                _registered_method=True)
        self.UploadProducts = channel.unary_unary(
                '/product.ProductService/UploadProducts',
                request_serializer=product_dot_product__pb2.UploadProductsRequest.SerializeToString,
                response_deserializer=product_dot_product__pb2.UploadProductsResponse.FromString,
                _registered_method=True)
        self.PatchProduct = channel.unary_unary(
                '/product.ProductService/PatchProduct',
                request_serializer=product_dot_product__pb2.PatchProductRequest.SerializeToString,
                response_deserializer=product_dot_product__pb2.PatchProductResponse.FromString,
                _registered_method=True)
        self.GetProduct = channel.unary_unary(
                '/product.ProductService/GetProduct',
                request_serializer=product_dot_product__pb2.GetProductRequest.SerializeToString,
                response_deserializer=product_dot_product__pb2.GetProductResponse.FromString,
                _registered_method=True)
        self.DeleteProduct = channel.unary_unary(
                '/product.ProductService/DeleteProduct',
                request_serializer=product_dot_product__pb2.DeleteProductRequest.SerializeToString,
                response_deserializer=product_dot_product__pb2.DeleteProductResponse.FromString,
                _registered_method=True)
        self.CreateProductCategory = channel.unary_unary(
                '/product.ProductService/CreateProductCategory',
                request_serializer=product_dot_product__pb2.CreateProductCategoryRequest.SerializeToString,
                response_deserializer=product_dot_product__pb2.CreateProductCategoryResponse.FromString,
                _registered_method=True)
        self.GetProductCategoryWithChildren = channel.unary_unary(
                '/product.ProductService/GetProductCategoryWithChildren',
                request_serializer=product_dot_product__pb2.GetProductCategoryWithChildrenRequest.SerializeToString,
                response_deserializer=product_dot_product__pb2.GetProductCategoryWithChildrenResponse.FromString,
                _registered_method=True)
        self.ListCategories = channel.unary_unary(
                '/product.ProductService/ListCategories',
                request_serializer=product_dot_product__pb2.ListCategoriesRequest.SerializeToString,
                response_deserializer=product_dot_product__pb2.ListCategoriesResponse.FromString,
                _registered_method=True)
        self.ListProductGroups = channel.unary_unary(
                '/product.ProductService/ListProductGroups',
                request_serializer=product_dot_product__pb2.ListProductGroupsRequest.SerializeToString,
                response_deserializer=product_dot_product__pb2.ListProductGroupsResponse.FromString,
                _registered_method=True)
        self.CreateProductGroup = channel.unary_unary(
                '/product.ProductService/CreateProductGroup',
                request_serializer=product_dot_product__pb2.CreateProductGroupRequest.SerializeToString,
                response_deserializer=product_dot_product__pb2.CreateProductGroupResponse.FromString,
                _registered_method=True)
        self.GetProductGroup = channel.unary_unary(
                '/product.ProductService/GetProductGroup',
                request_serializer=product_dot_product__pb2.GetProductGroupRequest.SerializeToString,
                response_deserializer=product_dot_product__pb2.GetProductGroupResponse.FromString,
                _registered_method=True)
        self.UpdateProductGroup = channel.unary_unary(
                '/product.ProductService/UpdateProductGroup',
                request_serializer=product_dot_product__pb2.UpdateProductGroupRequest.SerializeToString,
                response_deserializer=product_dot_product__pb2.UpdateProductGroupResponse.FromString,
                _registered_method=True)
        self.DeleteProductGroup = channel.unary_unary(
                '/product.ProductService/DeleteProductGroup',
                request_serializer=product_dot_product__pb2.DeleteProductGroupRequest.SerializeToString,
                response_deserializer=product_dot_product__pb2.DeleteProductGroupResponse.FromString,
                _registered_method=True)
        self.GeneratePresignedURLs = channel.unary_unary(
                '/product.ProductService/GeneratePresignedURLs',
                request_serializer=product_dot_product__pb2.GeneratePresignedURLsRequest.SerializeToString,
                response_deserializer=product_dot_product__pb2.GeneratePresignedURLsResponse.FromString,
                _registered_method=True)


class ProductServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProducts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DuplicateProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadProducts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PatchProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateProductCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductCategoryWithChildren(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCategories(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProductGroups(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateProductGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProductGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProductGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GeneratePresignedURLs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProductServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProduct,
                    request_deserializer=product_dot_product__pb2.CreateProductRequest.FromString,
                    response_serializer=product_dot_product__pb2.CreateProductResponse.SerializeToString,
            ),
            'ListProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProducts,
                    request_deserializer=product_dot_product__pb2.ListProductsRequest.FromString,
                    response_serializer=product_dot_product__pb2.ListProductsResponse.SerializeToString,
            ),
            'DuplicateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.DuplicateProduct,
                    request_deserializer=product_dot_product__pb2.DuplicateProductRequest.FromString,
                    response_serializer=product_dot_product__pb2.DuplicateProductResponse.SerializeToString,
            ),
            'UploadProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadProducts,
                    request_deserializer=product_dot_product__pb2.UploadProductsRequest.FromString,
                    response_serializer=product_dot_product__pb2.UploadProductsResponse.SerializeToString,
            ),
            'PatchProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.PatchProduct,
                    request_deserializer=product_dot_product__pb2.PatchProductRequest.FromString,
                    response_serializer=product_dot_product__pb2.PatchProductResponse.SerializeToString,
            ),
            'GetProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProduct,
                    request_deserializer=product_dot_product__pb2.GetProductRequest.FromString,
                    response_serializer=product_dot_product__pb2.GetProductResponse.SerializeToString,
            ),
            'DeleteProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProduct,
                    request_deserializer=product_dot_product__pb2.DeleteProductRequest.FromString,
                    response_serializer=product_dot_product__pb2.DeleteProductResponse.SerializeToString,
            ),
            'CreateProductCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProductCategory,
                    request_deserializer=product_dot_product__pb2.CreateProductCategoryRequest.FromString,
                    response_serializer=product_dot_product__pb2.CreateProductCategoryResponse.SerializeToString,
            ),
            'GetProductCategoryWithChildren': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductCategoryWithChildren,
                    request_deserializer=product_dot_product__pb2.GetProductCategoryWithChildrenRequest.FromString,
                    response_serializer=product_dot_product__pb2.GetProductCategoryWithChildrenResponse.SerializeToString,
            ),
            'ListCategories': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCategories,
                    request_deserializer=product_dot_product__pb2.ListCategoriesRequest.FromString,
                    response_serializer=product_dot_product__pb2.ListCategoriesResponse.SerializeToString,
            ),
            'ListProductGroups': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProductGroups,
                    request_deserializer=product_dot_product__pb2.ListProductGroupsRequest.FromString,
                    response_serializer=product_dot_product__pb2.ListProductGroupsResponse.SerializeToString,
            ),
            'CreateProductGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProductGroup,
                    request_deserializer=product_dot_product__pb2.CreateProductGroupRequest.FromString,
                    response_serializer=product_dot_product__pb2.CreateProductGroupResponse.SerializeToString,
            ),
            'GetProductGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductGroup,
                    request_deserializer=product_dot_product__pb2.GetProductGroupRequest.FromString,
                    response_serializer=product_dot_product__pb2.GetProductGroupResponse.SerializeToString,
            ),
            'UpdateProductGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProductGroup,
                    request_deserializer=product_dot_product__pb2.UpdateProductGroupRequest.FromString,
                    response_serializer=product_dot_product__pb2.UpdateProductGroupResponse.SerializeToString,
            ),
            'DeleteProductGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProductGroup,
                    request_deserializer=product_dot_product__pb2.DeleteProductGroupRequest.FromString,
                    response_serializer=product_dot_product__pb2.DeleteProductGroupResponse.SerializeToString,
            ),
            'GeneratePresignedURLs': grpc.unary_unary_rpc_method_handler(
                    servicer.GeneratePresignedURLs,
                    request_deserializer=product_dot_product__pb2.GeneratePresignedURLsRequest.FromString,
                    response_serializer=product_dot_product__pb2.GeneratePresignedURLsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'product.ProductService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('product.ProductService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ProductService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.ProductService/CreateProduct',
            product_dot_product__pb2.CreateProductRequest.SerializeToString,
            product_dot_product__pb2.CreateProductResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.ProductService/ListProducts',
            product_dot_product__pb2.ListProductsRequest.SerializeToString,
            product_dot_product__pb2.ListProductsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DuplicateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.ProductService/DuplicateProduct',
            product_dot_product__pb2.DuplicateProductRequest.SerializeToString,
            product_dot_product__pb2.DuplicateProductResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UploadProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.ProductService/UploadProducts',
            product_dot_product__pb2.UploadProductsRequest.SerializeToString,
            product_dot_product__pb2.UploadProductsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PatchProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.ProductService/PatchProduct',
            product_dot_product__pb2.PatchProductRequest.SerializeToString,
            product_dot_product__pb2.PatchProductResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.ProductService/GetProduct',
            product_dot_product__pb2.GetProductRequest.SerializeToString,
            product_dot_product__pb2.GetProductResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.ProductService/DeleteProduct',
            product_dot_product__pb2.DeleteProductRequest.SerializeToString,
            product_dot_product__pb2.DeleteProductResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateProductCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.ProductService/CreateProductCategory',
            product_dot_product__pb2.CreateProductCategoryRequest.SerializeToString,
            product_dot_product__pb2.CreateProductCategoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProductCategoryWithChildren(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.ProductService/GetProductCategoryWithChildren',
            product_dot_product__pb2.GetProductCategoryWithChildrenRequest.SerializeToString,
            product_dot_product__pb2.GetProductCategoryWithChildrenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListCategories(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.ProductService/ListCategories',
            product_dot_product__pb2.ListCategoriesRequest.SerializeToString,
            product_dot_product__pb2.ListCategoriesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListProductGroups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.ProductService/ListProductGroups',
            product_dot_product__pb2.ListProductGroupsRequest.SerializeToString,
            product_dot_product__pb2.ListProductGroupsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateProductGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.ProductService/CreateProductGroup',
            product_dot_product__pb2.CreateProductGroupRequest.SerializeToString,
            product_dot_product__pb2.CreateProductGroupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProductGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.ProductService/GetProductGroup',
            product_dot_product__pb2.GetProductGroupRequest.SerializeToString,
            product_dot_product__pb2.GetProductGroupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateProductGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.ProductService/UpdateProductGroup',
            product_dot_product__pb2.UpdateProductGroupRequest.SerializeToString,
            product_dot_product__pb2.UpdateProductGroupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteProductGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.ProductService/DeleteProductGroup',
            product_dot_product__pb2.DeleteProductGroupRequest.SerializeToString,
            product_dot_product__pb2.DeleteProductGroupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GeneratePresignedURLs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/product.ProductService/GeneratePresignedURLs',
            product_dot_product__pb2.GeneratePresignedURLsRequest.SerializeToString,
            product_dot_product__pb2.GeneratePresignedURLsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

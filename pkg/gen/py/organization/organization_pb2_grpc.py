# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from organization import organization_pb2 as organization_dot_organization__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in organization/organization_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class OrganizationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateOrganization = channel.unary_unary(
                '/organization.OrganizationService/CreateOrganization',
                request_serializer=organization_dot_organization__pb2.CreateOrganizationRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.CreateOrganizationResponse.FromString,
                _registered_method=True)
        self.GetOrganization = channel.unary_unary(
                '/organization.OrganizationService/GetOrganization',
                request_serializer=organization_dot_organization__pb2.GetOrganizationRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.GetOrganizationResponse.FromString,
                _registered_method=True)
        self.ListOrganizations = channel.unary_unary(
                '/organization.OrganizationService/ListOrganizations',
                request_serializer=organization_dot_organization__pb2.ListOrganizationsRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.ListOrganizationsResponse.FromString,
                _registered_method=True)
        self.PatchOrganization = channel.unary_unary(
                '/organization.OrganizationService/PatchOrganization',
                request_serializer=organization_dot_organization__pb2.PatchOrganizationRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.PatchOrganizationResponse.FromString,
                _registered_method=True)
        self.UpdateOrganization = channel.unary_unary(
                '/organization.OrganizationService/UpdateOrganization',
                request_serializer=organization_dot_organization__pb2.UpdateOrganizationRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.UpdateOrganizationResponse.FromString,
                _registered_method=True)
        self.CreateCounterparty = channel.unary_unary(
                '/organization.OrganizationService/CreateCounterparty',
                request_serializer=organization_dot_organization__pb2.CreateCounterpartyRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.CreateCounterpartyResponse.FromString,
                _registered_method=True)
        self.GetCounterparty = channel.unary_unary(
                '/organization.OrganizationService/GetCounterparty',
                request_serializer=organization_dot_organization__pb2.GetCounterpartyRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.GetCounterpartyResponse.FromString,
                _registered_method=True)
        self.ListCounterparties = channel.unary_unary(
                '/organization.OrganizationService/ListCounterparties',
                request_serializer=organization_dot_organization__pb2.ListCounterpartiesRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.ListCounterpartiesResponse.FromString,
                _registered_method=True)
        self.PatchCounterparty = channel.unary_unary(
                '/organization.OrganizationService/PatchCounterparty',
                request_serializer=organization_dot_organization__pb2.PatchCounterpartyRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.PatchCounterpartyResponse.FromString,
                _registered_method=True)
        self.ListBankAccounts = channel.unary_unary(
                '/organization.OrganizationService/ListBankAccounts',
                request_serializer=organization_dot_organization__pb2.ListBankAccountsRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.ListBankAccountsResponse.FromString,
                _registered_method=True)
        self.GetDefaultBankAccount = channel.unary_unary(
                '/organization.OrganizationService/GetDefaultBankAccount',
                request_serializer=organization_dot_organization__pb2.GetDefaultBankAccountRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.GetDefaultBankAccountResponse.FromString,
                _registered_method=True)
        self.CreateBankAccount = channel.unary_unary(
                '/organization.OrganizationService/CreateBankAccount',
                request_serializer=organization_dot_organization__pb2.CreateBankAccountRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.CreateBankAccountResponse.FromString,
                _registered_method=True)
        self.UpdateBankAccount = channel.unary_unary(
                '/organization.OrganizationService/UpdateBankAccount',
                request_serializer=organization_dot_organization__pb2.UpdateBankAccountRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.UpdateBankAccountResponse.FromString,
                _registered_method=True)
        self.UpdateBankAccounts = channel.unary_unary(
                '/organization.OrganizationService/UpdateBankAccounts',
                request_serializer=organization_dot_organization__pb2.UpdateBankAccountsRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.UpdateBankAccountsResponse.FromString,
                _registered_method=True)
        self.DeleteBankAccount = channel.unary_unary(
                '/organization.OrganizationService/DeleteBankAccount',
                request_serializer=organization_dot_organization__pb2.DeleteBankAccountRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.DeleteBankAccountResponse.FromString,
                _registered_method=True)
        self.CreateAddress = channel.unary_unary(
                '/organization.OrganizationService/CreateAddress',
                request_serializer=organization_dot_organization__pb2.CreateAddressRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.CreateAddressResponse.FromString,
                _registered_method=True)
        self.GetAddress = channel.unary_unary(
                '/organization.OrganizationService/GetAddress',
                request_serializer=organization_dot_organization__pb2.GetAddressRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.GetAddressResponse.FromString,
                _registered_method=True)
        self.UpdateAddress = channel.unary_unary(
                '/organization.OrganizationService/UpdateAddress',
                request_serializer=organization_dot_organization__pb2.UpdateAddressRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.UpdateAddressResponse.FromString,
                _registered_method=True)
        self.PatchAddress = channel.unary_unary(
                '/organization.OrganizationService/PatchAddress',
                request_serializer=organization_dot_organization__pb2.PatchAddressRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.PatchAddressResponse.FromString,
                _registered_method=True)
        self.DeleteAddress = channel.unary_unary(
                '/organization.OrganizationService/DeleteAddress',
                request_serializer=organization_dot_organization__pb2.DeleteAddressRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.DeleteAddressResponse.FromString,
                _registered_method=True)
        self.CreateRelationship = channel.unary_unary(
                '/organization.OrganizationService/CreateRelationship',
                request_serializer=organization_dot_organization__pb2.CreateRelationshipRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.CreateRelationshipResponse.FromString,
                _registered_method=True)
        self.ListRelationships = channel.unary_unary(
                '/organization.OrganizationService/ListRelationships',
                request_serializer=organization_dot_organization__pb2.ListRelationshipsRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.ListRelationshipsResponse.FromString,
                _registered_method=True)
        self.EnsureRelationshipExists = channel.unary_unary(
                '/organization.OrganizationService/EnsureRelationshipExists',
                request_serializer=organization_dot_organization__pb2.EnsureRelationshipExistsRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.EnsureRelationshipExistsResponse.FromString,
                _registered_method=True)
        self.UpdateRelationship = channel.unary_unary(
                '/organization.OrganizationService/UpdateRelationship',
                request_serializer=organization_dot_organization__pb2.UpdateRelationshipRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.UpdateRelationshipResponse.FromString,
                _registered_method=True)
        self.GetRelationshipType = channel.unary_unary(
                '/organization.OrganizationService/GetRelationshipType',
                request_serializer=organization_dot_organization__pb2.GetRelationshipTypeRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.GetRelationshipTypeResponse.FromString,
                _registered_method=True)
        self.ListRelationshipTypes = channel.unary_unary(
                '/organization.OrganizationService/ListRelationshipTypes',
                request_serializer=organization_dot_organization__pb2.ListRelationshipTypesRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.ListRelationshipTypesResponse.FromString,
                _registered_method=True)
        self.CreateRelationshipType = channel.unary_unary(
                '/organization.OrganizationService/CreateRelationshipType',
                request_serializer=organization_dot_organization__pb2.CreateRelationshipTypeRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.CreateRelationshipTypeResponse.FromString,
                _registered_method=True)
        self.UpdateRelationshipType = channel.unary_unary(
                '/organization.OrganizationService/UpdateRelationshipType',
                request_serializer=organization_dot_organization__pb2.UpdateRelationshipTypeRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.UpdateRelationshipTypeResponse.FromString,
                _registered_method=True)
        self.CreateContact = channel.unary_unary(
                '/organization.OrganizationService/CreateContact',
                request_serializer=organization_dot_organization__pb2.CreateContactRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.CreateContactResponse.FromString,
                _registered_method=True)
        self.GetContact = channel.unary_unary(
                '/organization.OrganizationService/GetContact',
                request_serializer=organization_dot_organization__pb2.GetContactRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.GetContactResponse.FromString,
                _registered_method=True)
        self.UpdateContact = channel.unary_unary(
                '/organization.OrganizationService/UpdateContact',
                request_serializer=organization_dot_organization__pb2.UpdateContactRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.UpdateContactResponse.FromString,
                _registered_method=True)
        self.DeleteContact = channel.unary_unary(
                '/organization.OrganizationService/DeleteContact',
                request_serializer=organization_dot_organization__pb2.DeleteContactRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.DeleteContactResponse.FromString,
                _registered_method=True)
        self.ListContacts = channel.unary_unary(
                '/organization.OrganizationService/ListContacts',
                request_serializer=organization_dot_organization__pb2.ListContactsRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.ListContactsResponse.FromString,
                _registered_method=True)
        self.GeneratePresignedURLs = channel.unary_unary(
                '/organization.OrganizationService/GeneratePresignedURLs',
                request_serializer=organization_dot_organization__pb2.GeneratePresignedURLsRequest.SerializeToString,
                response_deserializer=organization_dot_organization__pb2.GeneratePresignedURLsResponse.FromString,
                _registered_method=True)


class OrganizationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateOrganization(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrganization(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOrganizations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PatchOrganization(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOrganization(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCounterparty(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCounterparty(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCounterparties(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PatchCounterparty(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBankAccounts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDefaultBankAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateBankAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBankAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBankAccounts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteBankAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PatchAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRelationship(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRelationships(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnsureRelationshipExists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRelationship(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRelationshipType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRelationshipTypes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRelationshipType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRelationshipType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateContact(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContact(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateContact(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteContact(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListContacts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GeneratePresignedURLs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrganizationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateOrganization': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrganization,
                    request_deserializer=organization_dot_organization__pb2.CreateOrganizationRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.CreateOrganizationResponse.SerializeToString,
            ),
            'GetOrganization': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrganization,
                    request_deserializer=organization_dot_organization__pb2.GetOrganizationRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.GetOrganizationResponse.SerializeToString,
            ),
            'ListOrganizations': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOrganizations,
                    request_deserializer=organization_dot_organization__pb2.ListOrganizationsRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.ListOrganizationsResponse.SerializeToString,
            ),
            'PatchOrganization': grpc.unary_unary_rpc_method_handler(
                    servicer.PatchOrganization,
                    request_deserializer=organization_dot_organization__pb2.PatchOrganizationRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.PatchOrganizationResponse.SerializeToString,
            ),
            'UpdateOrganization': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOrganization,
                    request_deserializer=organization_dot_organization__pb2.UpdateOrganizationRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.UpdateOrganizationResponse.SerializeToString,
            ),
            'CreateCounterparty': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCounterparty,
                    request_deserializer=organization_dot_organization__pb2.CreateCounterpartyRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.CreateCounterpartyResponse.SerializeToString,
            ),
            'GetCounterparty': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCounterparty,
                    request_deserializer=organization_dot_organization__pb2.GetCounterpartyRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.GetCounterpartyResponse.SerializeToString,
            ),
            'ListCounterparties': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCounterparties,
                    request_deserializer=organization_dot_organization__pb2.ListCounterpartiesRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.ListCounterpartiesResponse.SerializeToString,
            ),
            'PatchCounterparty': grpc.unary_unary_rpc_method_handler(
                    servicer.PatchCounterparty,
                    request_deserializer=organization_dot_organization__pb2.PatchCounterpartyRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.PatchCounterpartyResponse.SerializeToString,
            ),
            'ListBankAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBankAccounts,
                    request_deserializer=organization_dot_organization__pb2.ListBankAccountsRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.ListBankAccountsResponse.SerializeToString,
            ),
            'GetDefaultBankAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDefaultBankAccount,
                    request_deserializer=organization_dot_organization__pb2.GetDefaultBankAccountRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.GetDefaultBankAccountResponse.SerializeToString,
            ),
            'CreateBankAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBankAccount,
                    request_deserializer=organization_dot_organization__pb2.CreateBankAccountRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.CreateBankAccountResponse.SerializeToString,
            ),
            'UpdateBankAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBankAccount,
                    request_deserializer=organization_dot_organization__pb2.UpdateBankAccountRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.UpdateBankAccountResponse.SerializeToString,
            ),
            'UpdateBankAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBankAccounts,
                    request_deserializer=organization_dot_organization__pb2.UpdateBankAccountsRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.UpdateBankAccountsResponse.SerializeToString,
            ),
            'DeleteBankAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteBankAccount,
                    request_deserializer=organization_dot_organization__pb2.DeleteBankAccountRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.DeleteBankAccountResponse.SerializeToString,
            ),
            'CreateAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAddress,
                    request_deserializer=organization_dot_organization__pb2.CreateAddressRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.CreateAddressResponse.SerializeToString,
            ),
            'GetAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAddress,
                    request_deserializer=organization_dot_organization__pb2.GetAddressRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.GetAddressResponse.SerializeToString,
            ),
            'UpdateAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAddress,
                    request_deserializer=organization_dot_organization__pb2.UpdateAddressRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.UpdateAddressResponse.SerializeToString,
            ),
            'PatchAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.PatchAddress,
                    request_deserializer=organization_dot_organization__pb2.PatchAddressRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.PatchAddressResponse.SerializeToString,
            ),
            'DeleteAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAddress,
                    request_deserializer=organization_dot_organization__pb2.DeleteAddressRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.DeleteAddressResponse.SerializeToString,
            ),
            'CreateRelationship': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRelationship,
                    request_deserializer=organization_dot_organization__pb2.CreateRelationshipRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.CreateRelationshipResponse.SerializeToString,
            ),
            'ListRelationships': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRelationships,
                    request_deserializer=organization_dot_organization__pb2.ListRelationshipsRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.ListRelationshipsResponse.SerializeToString,
            ),
            'EnsureRelationshipExists': grpc.unary_unary_rpc_method_handler(
                    servicer.EnsureRelationshipExists,
                    request_deserializer=organization_dot_organization__pb2.EnsureRelationshipExistsRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.EnsureRelationshipExistsResponse.SerializeToString,
            ),
            'UpdateRelationship': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRelationship,
                    request_deserializer=organization_dot_organization__pb2.UpdateRelationshipRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.UpdateRelationshipResponse.SerializeToString,
            ),
            'GetRelationshipType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRelationshipType,
                    request_deserializer=organization_dot_organization__pb2.GetRelationshipTypeRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.GetRelationshipTypeResponse.SerializeToString,
            ),
            'ListRelationshipTypes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRelationshipTypes,
                    request_deserializer=organization_dot_organization__pb2.ListRelationshipTypesRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.ListRelationshipTypesResponse.SerializeToString,
            ),
            'CreateRelationshipType': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRelationshipType,
                    request_deserializer=organization_dot_organization__pb2.CreateRelationshipTypeRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.CreateRelationshipTypeResponse.SerializeToString,
            ),
            'UpdateRelationshipType': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRelationshipType,
                    request_deserializer=organization_dot_organization__pb2.UpdateRelationshipTypeRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.UpdateRelationshipTypeResponse.SerializeToString,
            ),
            'CreateContact': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateContact,
                    request_deserializer=organization_dot_organization__pb2.CreateContactRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.CreateContactResponse.SerializeToString,
            ),
            'GetContact': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContact,
                    request_deserializer=organization_dot_organization__pb2.GetContactRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.GetContactResponse.SerializeToString,
            ),
            'UpdateContact': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateContact,
                    request_deserializer=organization_dot_organization__pb2.UpdateContactRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.UpdateContactResponse.SerializeToString,
            ),
            'DeleteContact': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteContact,
                    request_deserializer=organization_dot_organization__pb2.DeleteContactRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.DeleteContactResponse.SerializeToString,
            ),
            'ListContacts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListContacts,
                    request_deserializer=organization_dot_organization__pb2.ListContactsRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.ListContactsResponse.SerializeToString,
            ),
            'GeneratePresignedURLs': grpc.unary_unary_rpc_method_handler(
                    servicer.GeneratePresignedURLs,
                    request_deserializer=organization_dot_organization__pb2.GeneratePresignedURLsRequest.FromString,
                    response_serializer=organization_dot_organization__pb2.GeneratePresignedURLsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'organization.OrganizationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('organization.OrganizationService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class OrganizationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateOrganization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/CreateOrganization',
            organization_dot_organization__pb2.CreateOrganizationRequest.SerializeToString,
            organization_dot_organization__pb2.CreateOrganizationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOrganization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/GetOrganization',
            organization_dot_organization__pb2.GetOrganizationRequest.SerializeToString,
            organization_dot_organization__pb2.GetOrganizationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListOrganizations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/ListOrganizations',
            organization_dot_organization__pb2.ListOrganizationsRequest.SerializeToString,
            organization_dot_organization__pb2.ListOrganizationsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PatchOrganization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/PatchOrganization',
            organization_dot_organization__pb2.PatchOrganizationRequest.SerializeToString,
            organization_dot_organization__pb2.PatchOrganizationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateOrganization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/UpdateOrganization',
            organization_dot_organization__pb2.UpdateOrganizationRequest.SerializeToString,
            organization_dot_organization__pb2.UpdateOrganizationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateCounterparty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/CreateCounterparty',
            organization_dot_organization__pb2.CreateCounterpartyRequest.SerializeToString,
            organization_dot_organization__pb2.CreateCounterpartyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCounterparty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/GetCounterparty',
            organization_dot_organization__pb2.GetCounterpartyRequest.SerializeToString,
            organization_dot_organization__pb2.GetCounterpartyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListCounterparties(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/ListCounterparties',
            organization_dot_organization__pb2.ListCounterpartiesRequest.SerializeToString,
            organization_dot_organization__pb2.ListCounterpartiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PatchCounterparty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/PatchCounterparty',
            organization_dot_organization__pb2.PatchCounterpartyRequest.SerializeToString,
            organization_dot_organization__pb2.PatchCounterpartyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListBankAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/ListBankAccounts',
            organization_dot_organization__pb2.ListBankAccountsRequest.SerializeToString,
            organization_dot_organization__pb2.ListBankAccountsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDefaultBankAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/GetDefaultBankAccount',
            organization_dot_organization__pb2.GetDefaultBankAccountRequest.SerializeToString,
            organization_dot_organization__pb2.GetDefaultBankAccountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateBankAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/CreateBankAccount',
            organization_dot_organization__pb2.CreateBankAccountRequest.SerializeToString,
            organization_dot_organization__pb2.CreateBankAccountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateBankAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/UpdateBankAccount',
            organization_dot_organization__pb2.UpdateBankAccountRequest.SerializeToString,
            organization_dot_organization__pb2.UpdateBankAccountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateBankAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/UpdateBankAccounts',
            organization_dot_organization__pb2.UpdateBankAccountsRequest.SerializeToString,
            organization_dot_organization__pb2.UpdateBankAccountsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteBankAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/DeleteBankAccount',
            organization_dot_organization__pb2.DeleteBankAccountRequest.SerializeToString,
            organization_dot_organization__pb2.DeleteBankAccountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/CreateAddress',
            organization_dot_organization__pb2.CreateAddressRequest.SerializeToString,
            organization_dot_organization__pb2.CreateAddressResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/GetAddress',
            organization_dot_organization__pb2.GetAddressRequest.SerializeToString,
            organization_dot_organization__pb2.GetAddressResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/UpdateAddress',
            organization_dot_organization__pb2.UpdateAddressRequest.SerializeToString,
            organization_dot_organization__pb2.UpdateAddressResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PatchAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/PatchAddress',
            organization_dot_organization__pb2.PatchAddressRequest.SerializeToString,
            organization_dot_organization__pb2.PatchAddressResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/DeleteAddress',
            organization_dot_organization__pb2.DeleteAddressRequest.SerializeToString,
            organization_dot_organization__pb2.DeleteAddressResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateRelationship(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/CreateRelationship',
            organization_dot_organization__pb2.CreateRelationshipRequest.SerializeToString,
            organization_dot_organization__pb2.CreateRelationshipResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListRelationships(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/ListRelationships',
            organization_dot_organization__pb2.ListRelationshipsRequest.SerializeToString,
            organization_dot_organization__pb2.ListRelationshipsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EnsureRelationshipExists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/EnsureRelationshipExists',
            organization_dot_organization__pb2.EnsureRelationshipExistsRequest.SerializeToString,
            organization_dot_organization__pb2.EnsureRelationshipExistsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateRelationship(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/UpdateRelationship',
            organization_dot_organization__pb2.UpdateRelationshipRequest.SerializeToString,
            organization_dot_organization__pb2.UpdateRelationshipResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRelationshipType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/GetRelationshipType',
            organization_dot_organization__pb2.GetRelationshipTypeRequest.SerializeToString,
            organization_dot_organization__pb2.GetRelationshipTypeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListRelationshipTypes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/ListRelationshipTypes',
            organization_dot_organization__pb2.ListRelationshipTypesRequest.SerializeToString,
            organization_dot_organization__pb2.ListRelationshipTypesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateRelationshipType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/CreateRelationshipType',
            organization_dot_organization__pb2.CreateRelationshipTypeRequest.SerializeToString,
            organization_dot_organization__pb2.CreateRelationshipTypeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateRelationshipType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/UpdateRelationshipType',
            organization_dot_organization__pb2.UpdateRelationshipTypeRequest.SerializeToString,
            organization_dot_organization__pb2.UpdateRelationshipTypeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateContact(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/CreateContact',
            organization_dot_organization__pb2.CreateContactRequest.SerializeToString,
            organization_dot_organization__pb2.CreateContactResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetContact(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/GetContact',
            organization_dot_organization__pb2.GetContactRequest.SerializeToString,
            organization_dot_organization__pb2.GetContactResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateContact(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/UpdateContact',
            organization_dot_organization__pb2.UpdateContactRequest.SerializeToString,
            organization_dot_organization__pb2.UpdateContactResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteContact(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/DeleteContact',
            organization_dot_organization__pb2.DeleteContactRequest.SerializeToString,
            organization_dot_organization__pb2.DeleteContactResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListContacts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/ListContacts',
            organization_dot_organization__pb2.ListContactsRequest.SerializeToString,
            organization_dot_organization__pb2.ListContactsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GeneratePresignedURLs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/organization.OrganizationService/GeneratePresignedURLs',
            organization_dot_organization__pb2.GeneratePresignedURLsRequest.SerializeToString,
            organization_dot_organization__pb2.GeneratePresignedURLsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from crm import crm_pb2 as crm_dot_crm__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in crm/crm_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class CRMServiceStub(object):
    """-----------------------------------------------------------------------------
    Service Definition
    -----------------------------------------------------------------------------
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateLead = channel.unary_unary(
                '/crm.CRMService/CreateLead',
                request_serializer=crm_dot_crm__pb2.CreateLeadRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.CreateLeadResponse.FromString,
                _registered_method=True)
        self.GetLead = channel.unary_unary(
                '/crm.CRMService/GetLead',
                request_serializer=crm_dot_crm__pb2.GetLeadRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.GetLeadResponse.FromString,
                _registered_method=True)
        self.ListLeads = channel.unary_unary(
                '/crm.CRMService/ListLeads',
                request_serializer=crm_dot_crm__pb2.ListLeadsRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.ListLeadsResponse.FromString,
                _registered_method=True)
        self.UpdateLead = channel.unary_unary(
                '/crm.CRMService/UpdateLead',
                request_serializer=crm_dot_crm__pb2.UpdateLeadRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.UpdateLeadResponse.FromString,
                _registered_method=True)
        self.PatchLead = channel.unary_unary(
                '/crm.CRMService/PatchLead',
                request_serializer=crm_dot_crm__pb2.PatchLeadRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.PatchLeadResponse.FromString,
                _registered_method=True)
        self.DeleteLead = channel.unary_unary(
                '/crm.CRMService/DeleteLead',
                request_serializer=crm_dot_crm__pb2.DeleteLeadRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.DeleteLeadResponse.FromString,
                _registered_method=True)
        self.CreateTask = channel.unary_unary(
                '/crm.CRMService/CreateTask',
                request_serializer=crm_dot_crm__pb2.CreateTaskRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.CreateTaskResponse.FromString,
                _registered_method=True)
        self.GetTask = channel.unary_unary(
                '/crm.CRMService/GetTask',
                request_serializer=crm_dot_crm__pb2.GetTaskRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.GetTaskResponse.FromString,
                _registered_method=True)
        self.ListTasks = channel.unary_unary(
                '/crm.CRMService/ListTasks',
                request_serializer=crm_dot_crm__pb2.ListTasksRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.ListTasksResponse.FromString,
                _registered_method=True)
        self.UpdateTask = channel.unary_unary(
                '/crm.CRMService/UpdateTask',
                request_serializer=crm_dot_crm__pb2.UpdateTaskRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.UpdateTaskResponse.FromString,
                _registered_method=True)
        self.DeleteTask = channel.unary_unary(
                '/crm.CRMService/DeleteTask',
                request_serializer=crm_dot_crm__pb2.DeleteTaskRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.DeleteTaskResponse.FromString,
                _registered_method=True)
        self.CreateNote = channel.unary_unary(
                '/crm.CRMService/CreateNote',
                request_serializer=crm_dot_crm__pb2.CreateNoteRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.CreateNoteResponse.FromString,
                _registered_method=True)
        self.GetNote = channel.unary_unary(
                '/crm.CRMService/GetNote',
                request_serializer=crm_dot_crm__pb2.GetNoteRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.GetNoteResponse.FromString,
                _registered_method=True)
        self.ListNotes = channel.unary_unary(
                '/crm.CRMService/ListNotes',
                request_serializer=crm_dot_crm__pb2.ListNotesRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.ListNotesResponse.FromString,
                _registered_method=True)
        self.UpdateNote = channel.unary_unary(
                '/crm.CRMService/UpdateNote',
                request_serializer=crm_dot_crm__pb2.UpdateNoteRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.UpdateNoteResponse.FromString,
                _registered_method=True)
        self.DeleteNote = channel.unary_unary(
                '/crm.CRMService/DeleteNote',
                request_serializer=crm_dot_crm__pb2.DeleteNoteRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.DeleteNoteResponse.FromString,
                _registered_method=True)
        self.CreateChatMessage = channel.unary_unary(
                '/crm.CRMService/CreateChatMessage',
                request_serializer=crm_dot_crm__pb2.CreateChatMessageRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.CreateChatMessageResponse.FromString,
                _registered_method=True)
        self.GetChatMessage = channel.unary_unary(
                '/crm.CRMService/GetChatMessage',
                request_serializer=crm_dot_crm__pb2.GetChatMessageRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.GetChatMessageResponse.FromString,
                _registered_method=True)
        self.ListChatMessages = channel.unary_unary(
                '/crm.CRMService/ListChatMessages',
                request_serializer=crm_dot_crm__pb2.ListChatMessagesRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.ListChatMessagesResponse.FromString,
                _registered_method=True)
        self.UpdateChatMessage = channel.unary_unary(
                '/crm.CRMService/UpdateChatMessage',
                request_serializer=crm_dot_crm__pb2.UpdateChatMessageRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.UpdateChatMessageResponse.FromString,
                _registered_method=True)
        self.DeleteChatMessage = channel.unary_unary(
                '/crm.CRMService/DeleteChatMessage',
                request_serializer=crm_dot_crm__pb2.DeleteChatMessageRequest.SerializeToString,
                response_deserializer=crm_dot_crm__pb2.DeleteChatMessageResponse.FromString,
                _registered_method=True)


class CRMServiceServicer(object):
    """-----------------------------------------------------------------------------
    Service Definition
    -----------------------------------------------------------------------------
    """

    def CreateLead(self, request, context):
        """Leads
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLeads(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PatchLead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteLead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTask(self, request, context):
        """Tasks
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTasks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNote(self, request, context):
        """Notes
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNote(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListNotes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNote(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteNote(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateChatMessage(self, request, context):
        """Chat Messages
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChatMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListChatMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateChatMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteChatMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CRMServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateLead': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLead,
                    request_deserializer=crm_dot_crm__pb2.CreateLeadRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.CreateLeadResponse.SerializeToString,
            ),
            'GetLead': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLead,
                    request_deserializer=crm_dot_crm__pb2.GetLeadRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.GetLeadResponse.SerializeToString,
            ),
            'ListLeads': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLeads,
                    request_deserializer=crm_dot_crm__pb2.ListLeadsRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.ListLeadsResponse.SerializeToString,
            ),
            'UpdateLead': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLead,
                    request_deserializer=crm_dot_crm__pb2.UpdateLeadRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.UpdateLeadResponse.SerializeToString,
            ),
            'PatchLead': grpc.unary_unary_rpc_method_handler(
                    servicer.PatchLead,
                    request_deserializer=crm_dot_crm__pb2.PatchLeadRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.PatchLeadResponse.SerializeToString,
            ),
            'DeleteLead': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteLead,
                    request_deserializer=crm_dot_crm__pb2.DeleteLeadRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.DeleteLeadResponse.SerializeToString,
            ),
            'CreateTask': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTask,
                    request_deserializer=crm_dot_crm__pb2.CreateTaskRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.CreateTaskResponse.SerializeToString,
            ),
            'GetTask': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTask,
                    request_deserializer=crm_dot_crm__pb2.GetTaskRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.GetTaskResponse.SerializeToString,
            ),
            'ListTasks': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTasks,
                    request_deserializer=crm_dot_crm__pb2.ListTasksRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.ListTasksResponse.SerializeToString,
            ),
            'UpdateTask': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTask,
                    request_deserializer=crm_dot_crm__pb2.UpdateTaskRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.UpdateTaskResponse.SerializeToString,
            ),
            'DeleteTask': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTask,
                    request_deserializer=crm_dot_crm__pb2.DeleteTaskRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.DeleteTaskResponse.SerializeToString,
            ),
            'CreateNote': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNote,
                    request_deserializer=crm_dot_crm__pb2.CreateNoteRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.CreateNoteResponse.SerializeToString,
            ),
            'GetNote': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNote,
                    request_deserializer=crm_dot_crm__pb2.GetNoteRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.GetNoteResponse.SerializeToString,
            ),
            'ListNotes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNotes,
                    request_deserializer=crm_dot_crm__pb2.ListNotesRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.ListNotesResponse.SerializeToString,
            ),
            'UpdateNote': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNote,
                    request_deserializer=crm_dot_crm__pb2.UpdateNoteRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.UpdateNoteResponse.SerializeToString,
            ),
            'DeleteNote': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteNote,
                    request_deserializer=crm_dot_crm__pb2.DeleteNoteRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.DeleteNoteResponse.SerializeToString,
            ),
            'CreateChatMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateChatMessage,
                    request_deserializer=crm_dot_crm__pb2.CreateChatMessageRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.CreateChatMessageResponse.SerializeToString,
            ),
            'GetChatMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChatMessage,
                    request_deserializer=crm_dot_crm__pb2.GetChatMessageRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.GetChatMessageResponse.SerializeToString,
            ),
            'ListChatMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.ListChatMessages,
                    request_deserializer=crm_dot_crm__pb2.ListChatMessagesRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.ListChatMessagesResponse.SerializeToString,
            ),
            'UpdateChatMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateChatMessage,
                    request_deserializer=crm_dot_crm__pb2.UpdateChatMessageRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.UpdateChatMessageResponse.SerializeToString,
            ),
            'DeleteChatMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteChatMessage,
                    request_deserializer=crm_dot_crm__pb2.DeleteChatMessageRequest.FromString,
                    response_serializer=crm_dot_crm__pb2.DeleteChatMessageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'crm.CRMService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('crm.CRMService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CRMService(object):
    """-----------------------------------------------------------------------------
    Service Definition
    -----------------------------------------------------------------------------
    """

    @staticmethod
    def CreateLead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/CreateLead',
            crm_dot_crm__pb2.CreateLeadRequest.SerializeToString,
            crm_dot_crm__pb2.CreateLeadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/GetLead',
            crm_dot_crm__pb2.GetLeadRequest.SerializeToString,
            crm_dot_crm__pb2.GetLeadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListLeads(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/ListLeads',
            crm_dot_crm__pb2.ListLeadsRequest.SerializeToString,
            crm_dot_crm__pb2.ListLeadsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateLead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/UpdateLead',
            crm_dot_crm__pb2.UpdateLeadRequest.SerializeToString,
            crm_dot_crm__pb2.UpdateLeadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PatchLead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/PatchLead',
            crm_dot_crm__pb2.PatchLeadRequest.SerializeToString,
            crm_dot_crm__pb2.PatchLeadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteLead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/DeleteLead',
            crm_dot_crm__pb2.DeleteLeadRequest.SerializeToString,
            crm_dot_crm__pb2.DeleteLeadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/CreateTask',
            crm_dot_crm__pb2.CreateTaskRequest.SerializeToString,
            crm_dot_crm__pb2.CreateTaskResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/GetTask',
            crm_dot_crm__pb2.GetTaskRequest.SerializeToString,
            crm_dot_crm__pb2.GetTaskResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListTasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/ListTasks',
            crm_dot_crm__pb2.ListTasksRequest.SerializeToString,
            crm_dot_crm__pb2.ListTasksResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/UpdateTask',
            crm_dot_crm__pb2.UpdateTaskRequest.SerializeToString,
            crm_dot_crm__pb2.UpdateTaskResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/DeleteTask',
            crm_dot_crm__pb2.DeleteTaskRequest.SerializeToString,
            crm_dot_crm__pb2.DeleteTaskResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateNote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/CreateNote',
            crm_dot_crm__pb2.CreateNoteRequest.SerializeToString,
            crm_dot_crm__pb2.CreateNoteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetNote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/GetNote',
            crm_dot_crm__pb2.GetNoteRequest.SerializeToString,
            crm_dot_crm__pb2.GetNoteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListNotes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/ListNotes',
            crm_dot_crm__pb2.ListNotesRequest.SerializeToString,
            crm_dot_crm__pb2.ListNotesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateNote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/UpdateNote',
            crm_dot_crm__pb2.UpdateNoteRequest.SerializeToString,
            crm_dot_crm__pb2.UpdateNoteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteNote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/DeleteNote',
            crm_dot_crm__pb2.DeleteNoteRequest.SerializeToString,
            crm_dot_crm__pb2.DeleteNoteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateChatMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/CreateChatMessage',
            crm_dot_crm__pb2.CreateChatMessageRequest.SerializeToString,
            crm_dot_crm__pb2.CreateChatMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetChatMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/GetChatMessage',
            crm_dot_crm__pb2.GetChatMessageRequest.SerializeToString,
            crm_dot_crm__pb2.GetChatMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListChatMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/ListChatMessages',
            crm_dot_crm__pb2.ListChatMessagesRequest.SerializeToString,
            crm_dot_crm__pb2.ListChatMessagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateChatMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/UpdateChatMessage',
            crm_dot_crm__pb2.UpdateChatMessageRequest.SerializeToString,
            crm_dot_crm__pb2.UpdateChatMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteChatMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/crm.CRMService/DeleteChatMessage',
            crm_dot_crm__pb2.DeleteChatMessageRequest.SerializeToString,
            crm_dot_crm__pb2.DeleteChatMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

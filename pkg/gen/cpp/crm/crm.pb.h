// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: crm/crm.proto
// Protobuf C++ Version: 5.29.3

#ifndef crm_2fcrm_2eproto_2epb_2eh
#define crm_2fcrm_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "user/user.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_crm_2fcrm_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_crm_2fcrm_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_crm_2fcrm_2eproto;
namespace crm {
class AddressModel;
struct AddressModelDefaultTypeInternal;
extern AddressModelDefaultTypeInternal _AddressModel_default_instance_;
class ChatMessageModel;
struct ChatMessageModelDefaultTypeInternal;
extern ChatMessageModelDefaultTypeInternal _ChatMessageModel_default_instance_;
class Contact;
struct ContactDefaultTypeInternal;
extern ContactDefaultTypeInternal _Contact_default_instance_;
class CreateChatMessageRequest;
struct CreateChatMessageRequestDefaultTypeInternal;
extern CreateChatMessageRequestDefaultTypeInternal _CreateChatMessageRequest_default_instance_;
class CreateChatMessageResponse;
struct CreateChatMessageResponseDefaultTypeInternal;
extern CreateChatMessageResponseDefaultTypeInternal _CreateChatMessageResponse_default_instance_;
class CreateLeadRequest;
struct CreateLeadRequestDefaultTypeInternal;
extern CreateLeadRequestDefaultTypeInternal _CreateLeadRequest_default_instance_;
class CreateLeadResponse;
struct CreateLeadResponseDefaultTypeInternal;
extern CreateLeadResponseDefaultTypeInternal _CreateLeadResponse_default_instance_;
class CreateNoteRequest;
struct CreateNoteRequestDefaultTypeInternal;
extern CreateNoteRequestDefaultTypeInternal _CreateNoteRequest_default_instance_;
class CreateNoteResponse;
struct CreateNoteResponseDefaultTypeInternal;
extern CreateNoteResponseDefaultTypeInternal _CreateNoteResponse_default_instance_;
class CreateTaskRequest;
struct CreateTaskRequestDefaultTypeInternal;
extern CreateTaskRequestDefaultTypeInternal _CreateTaskRequest_default_instance_;
class CreateTaskResponse;
struct CreateTaskResponseDefaultTypeInternal;
extern CreateTaskResponseDefaultTypeInternal _CreateTaskResponse_default_instance_;
class DeleteChatMessageRequest;
struct DeleteChatMessageRequestDefaultTypeInternal;
extern DeleteChatMessageRequestDefaultTypeInternal _DeleteChatMessageRequest_default_instance_;
class DeleteChatMessageResponse;
struct DeleteChatMessageResponseDefaultTypeInternal;
extern DeleteChatMessageResponseDefaultTypeInternal _DeleteChatMessageResponse_default_instance_;
class DeleteLeadRequest;
struct DeleteLeadRequestDefaultTypeInternal;
extern DeleteLeadRequestDefaultTypeInternal _DeleteLeadRequest_default_instance_;
class DeleteLeadResponse;
struct DeleteLeadResponseDefaultTypeInternal;
extern DeleteLeadResponseDefaultTypeInternal _DeleteLeadResponse_default_instance_;
class DeleteNoteRequest;
struct DeleteNoteRequestDefaultTypeInternal;
extern DeleteNoteRequestDefaultTypeInternal _DeleteNoteRequest_default_instance_;
class DeleteNoteResponse;
struct DeleteNoteResponseDefaultTypeInternal;
extern DeleteNoteResponseDefaultTypeInternal _DeleteNoteResponse_default_instance_;
class DeleteTaskRequest;
struct DeleteTaskRequestDefaultTypeInternal;
extern DeleteTaskRequestDefaultTypeInternal _DeleteTaskRequest_default_instance_;
class DeleteTaskResponse;
struct DeleteTaskResponseDefaultTypeInternal;
extern DeleteTaskResponseDefaultTypeInternal _DeleteTaskResponse_default_instance_;
class GetChatMessageRequest;
struct GetChatMessageRequestDefaultTypeInternal;
extern GetChatMessageRequestDefaultTypeInternal _GetChatMessageRequest_default_instance_;
class GetChatMessageResponse;
struct GetChatMessageResponseDefaultTypeInternal;
extern GetChatMessageResponseDefaultTypeInternal _GetChatMessageResponse_default_instance_;
class GetLeadRequest;
struct GetLeadRequestDefaultTypeInternal;
extern GetLeadRequestDefaultTypeInternal _GetLeadRequest_default_instance_;
class GetLeadResponse;
struct GetLeadResponseDefaultTypeInternal;
extern GetLeadResponseDefaultTypeInternal _GetLeadResponse_default_instance_;
class GetNoteRequest;
struct GetNoteRequestDefaultTypeInternal;
extern GetNoteRequestDefaultTypeInternal _GetNoteRequest_default_instance_;
class GetNoteResponse;
struct GetNoteResponseDefaultTypeInternal;
extern GetNoteResponseDefaultTypeInternal _GetNoteResponse_default_instance_;
class GetTaskRequest;
struct GetTaskRequestDefaultTypeInternal;
extern GetTaskRequestDefaultTypeInternal _GetTaskRequest_default_instance_;
class GetTaskResponse;
struct GetTaskResponseDefaultTypeInternal;
extern GetTaskResponseDefaultTypeInternal _GetTaskResponse_default_instance_;
class Lead;
struct LeadDefaultTypeInternal;
extern LeadDefaultTypeInternal _Lead_default_instance_;
class LeadModel;
struct LeadModelDefaultTypeInternal;
extern LeadModelDefaultTypeInternal _LeadModel_default_instance_;
class ListChatMessagesRequest;
struct ListChatMessagesRequestDefaultTypeInternal;
extern ListChatMessagesRequestDefaultTypeInternal _ListChatMessagesRequest_default_instance_;
class ListChatMessagesResponse;
struct ListChatMessagesResponseDefaultTypeInternal;
extern ListChatMessagesResponseDefaultTypeInternal _ListChatMessagesResponse_default_instance_;
class ListLeadsRequest;
struct ListLeadsRequestDefaultTypeInternal;
extern ListLeadsRequestDefaultTypeInternal _ListLeadsRequest_default_instance_;
class ListLeadsResponse;
struct ListLeadsResponseDefaultTypeInternal;
extern ListLeadsResponseDefaultTypeInternal _ListLeadsResponse_default_instance_;
class ListNotesRequest;
struct ListNotesRequestDefaultTypeInternal;
extern ListNotesRequestDefaultTypeInternal _ListNotesRequest_default_instance_;
class ListNotesResponse;
struct ListNotesResponseDefaultTypeInternal;
extern ListNotesResponseDefaultTypeInternal _ListNotesResponse_default_instance_;
class ListTasksRequest;
struct ListTasksRequestDefaultTypeInternal;
extern ListTasksRequestDefaultTypeInternal _ListTasksRequest_default_instance_;
class ListTasksResponse;
struct ListTasksResponseDefaultTypeInternal;
extern ListTasksResponseDefaultTypeInternal _ListTasksResponse_default_instance_;
class NoteModel;
struct NoteModelDefaultTypeInternal;
extern NoteModelDefaultTypeInternal _NoteModel_default_instance_;
class Organization;
struct OrganizationDefaultTypeInternal;
extern OrganizationDefaultTypeInternal _Organization_default_instance_;
class PatchLeadRequest;
struct PatchLeadRequestDefaultTypeInternal;
extern PatchLeadRequestDefaultTypeInternal _PatchLeadRequest_default_instance_;
class PatchLeadResponse;
struct PatchLeadResponseDefaultTypeInternal;
extern PatchLeadResponseDefaultTypeInternal _PatchLeadResponse_default_instance_;
class TaskModel;
struct TaskModelDefaultTypeInternal;
extern TaskModelDefaultTypeInternal _TaskModel_default_instance_;
class UpdateChatMessageRequest;
struct UpdateChatMessageRequestDefaultTypeInternal;
extern UpdateChatMessageRequestDefaultTypeInternal _UpdateChatMessageRequest_default_instance_;
class UpdateChatMessageResponse;
struct UpdateChatMessageResponseDefaultTypeInternal;
extern UpdateChatMessageResponseDefaultTypeInternal _UpdateChatMessageResponse_default_instance_;
class UpdateLeadRequest;
struct UpdateLeadRequestDefaultTypeInternal;
extern UpdateLeadRequestDefaultTypeInternal _UpdateLeadRequest_default_instance_;
class UpdateLeadResponse;
struct UpdateLeadResponseDefaultTypeInternal;
extern UpdateLeadResponseDefaultTypeInternal _UpdateLeadResponse_default_instance_;
class UpdateNoteRequest;
struct UpdateNoteRequestDefaultTypeInternal;
extern UpdateNoteRequestDefaultTypeInternal _UpdateNoteRequest_default_instance_;
class UpdateNoteResponse;
struct UpdateNoteResponseDefaultTypeInternal;
extern UpdateNoteResponseDefaultTypeInternal _UpdateNoteResponse_default_instance_;
class UpdateTaskRequest;
struct UpdateTaskRequestDefaultTypeInternal;
extern UpdateTaskRequestDefaultTypeInternal _UpdateTaskRequest_default_instance_;
class UpdateTaskResponse;
struct UpdateTaskResponseDefaultTypeInternal;
extern UpdateTaskResponseDefaultTypeInternal _UpdateTaskResponse_default_instance_;
}  // namespace crm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace crm {

// ===================================================================


// -------------------------------------------------------------------

class UpdateTaskRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.UpdateTaskRequest) */ {
 public:
  inline UpdateTaskRequest() : UpdateTaskRequest(nullptr) {}
  ~UpdateTaskRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateTaskRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateTaskRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateTaskRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateTaskRequest(const UpdateTaskRequest& from) : UpdateTaskRequest(nullptr, from) {}
  inline UpdateTaskRequest(UpdateTaskRequest&& from) noexcept
      : UpdateTaskRequest(nullptr, std::move(from)) {}
  inline UpdateTaskRequest& operator=(const UpdateTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateTaskRequest& operator=(UpdateTaskRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateTaskRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateTaskRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateTaskRequest*>(
        &_UpdateTaskRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(UpdateTaskRequest& a, UpdateTaskRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateTaskRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateTaskRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateTaskRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateTaskRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateTaskRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateTaskRequest& from) { UpdateTaskRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateTaskRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.UpdateTaskRequest"; }

 protected:
  explicit UpdateTaskRequest(::google::protobuf::Arena* arena);
  UpdateTaskRequest(::google::protobuf::Arena* arena, const UpdateTaskRequest& from);
  UpdateTaskRequest(::google::protobuf::Arena* arena, UpdateTaskRequest&& from) noexcept
      : UpdateTaskRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTitleFieldNumber = 4,
    kDescriptionFieldNumber = 5,
    kStatusFieldNumber = 6,
    kFromTimeFieldNumber = 7,
    kDueTimeFieldNumber = 8,
    kTaskIdFieldNumber = 1,
    kLeadIdFieldNumber = 2,
    kAssignedToFieldNumber = 3,
  };
  // string title = 4;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string description = 5;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string status = 6;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // string from_time = 7;
  void clear_from_time() ;
  const std::string& from_time() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from_time(Arg_&& arg, Args_... args);
  std::string* mutable_from_time();
  PROTOBUF_NODISCARD std::string* release_from_time();
  void set_allocated_from_time(std::string* value);

  private:
  const std::string& _internal_from_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_from_time(
      const std::string& value);
  std::string* _internal_mutable_from_time();

  public:
  // string due_time = 8;
  void clear_due_time() ;
  const std::string& due_time() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_due_time(Arg_&& arg, Args_... args);
  std::string* mutable_due_time();
  PROTOBUF_NODISCARD std::string* release_due_time();
  void set_allocated_due_time(std::string* value);

  private:
  const std::string& _internal_due_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_due_time(
      const std::string& value);
  std::string* _internal_mutable_due_time();

  public:
  // int64 task_id = 1;
  void clear_task_id() ;
  ::int64_t task_id() const;
  void set_task_id(::int64_t value);

  private:
  ::int64_t _internal_task_id() const;
  void _internal_set_task_id(::int64_t value);

  public:
  // int64 lead_id = 2;
  void clear_lead_id() ;
  ::int64_t lead_id() const;
  void set_lead_id(::int64_t value);

  private:
  ::int64_t _internal_lead_id() const;
  void _internal_set_lead_id(::int64_t value);

  public:
  // int64 assigned_to = 3;
  void clear_assigned_to() ;
  ::int64_t assigned_to() const;
  void set_assigned_to(::int64_t value);

  private:
  ::int64_t _internal_assigned_to() const;
  void _internal_set_assigned_to(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.UpdateTaskRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      77, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateTaskRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::google::protobuf::internal::ArenaStringPtr from_time_;
    ::google::protobuf::internal::ArenaStringPtr due_time_;
    ::int64_t task_id_;
    ::int64_t lead_id_;
    ::int64_t assigned_to_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class UpdateNoteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.UpdateNoteRequest) */ {
 public:
  inline UpdateNoteRequest() : UpdateNoteRequest(nullptr) {}
  ~UpdateNoteRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateNoteRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateNoteRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateNoteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateNoteRequest(const UpdateNoteRequest& from) : UpdateNoteRequest(nullptr, from) {}
  inline UpdateNoteRequest(UpdateNoteRequest&& from) noexcept
      : UpdateNoteRequest(nullptr, std::move(from)) {}
  inline UpdateNoteRequest& operator=(const UpdateNoteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateNoteRequest& operator=(UpdateNoteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateNoteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateNoteRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateNoteRequest*>(
        &_UpdateNoteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(UpdateNoteRequest& a, UpdateNoteRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateNoteRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateNoteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateNoteRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateNoteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateNoteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateNoteRequest& from) { UpdateNoteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateNoteRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.UpdateNoteRequest"; }

 protected:
  explicit UpdateNoteRequest(::google::protobuf::Arena* arena);
  UpdateNoteRequest(::google::protobuf::Arena* arena, const UpdateNoteRequest& from);
  UpdateNoteRequest(::google::protobuf::Arena* arena, UpdateNoteRequest&& from) noexcept
      : UpdateNoteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContentFieldNumber = 4,
    kNoteIdFieldNumber = 1,
    kLeadIdFieldNumber = 2,
    kCreatedByFieldNumber = 3,
  };
  // string content = 4;
  void clear_content() ;
  const std::string& content() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content(Arg_&& arg, Args_... args);
  std::string* mutable_content();
  PROTOBUF_NODISCARD std::string* release_content();
  void set_allocated_content(std::string* value);

  private:
  const std::string& _internal_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content(
      const std::string& value);
  std::string* _internal_mutable_content();

  public:
  // int64 note_id = 1;
  void clear_note_id() ;
  ::int64_t note_id() const;
  void set_note_id(::int64_t value);

  private:
  ::int64_t _internal_note_id() const;
  void _internal_set_note_id(::int64_t value);

  public:
  // int64 lead_id = 2;
  void clear_lead_id() ;
  ::int64_t lead_id() const;
  void set_lead_id(::int64_t value);

  private:
  ::int64_t _internal_lead_id() const;
  void _internal_set_lead_id(::int64_t value);

  public:
  // int64 created_by = 3;
  void clear_created_by() ;
  ::int64_t created_by() const;
  void set_created_by(::int64_t value);

  private:
  ::int64_t _internal_created_by() const;
  void _internal_set_created_by(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.UpdateNoteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      37, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateNoteRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr content_;
    ::int64_t note_id_;
    ::int64_t lead_id_;
    ::int64_t created_by_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class UpdateChatMessageRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.UpdateChatMessageRequest) */ {
 public:
  inline UpdateChatMessageRequest() : UpdateChatMessageRequest(nullptr) {}
  ~UpdateChatMessageRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateChatMessageRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateChatMessageRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateChatMessageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateChatMessageRequest(const UpdateChatMessageRequest& from) : UpdateChatMessageRequest(nullptr, from) {}
  inline UpdateChatMessageRequest(UpdateChatMessageRequest&& from) noexcept
      : UpdateChatMessageRequest(nullptr, std::move(from)) {}
  inline UpdateChatMessageRequest& operator=(const UpdateChatMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateChatMessageRequest& operator=(UpdateChatMessageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateChatMessageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateChatMessageRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateChatMessageRequest*>(
        &_UpdateChatMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 46;
  friend void swap(UpdateChatMessageRequest& a, UpdateChatMessageRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateChatMessageRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateChatMessageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateChatMessageRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateChatMessageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateChatMessageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateChatMessageRequest& from) { UpdateChatMessageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateChatMessageRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.UpdateChatMessageRequest"; }

 protected:
  explicit UpdateChatMessageRequest(::google::protobuf::Arena* arena);
  UpdateChatMessageRequest(::google::protobuf::Arena* arena, const UpdateChatMessageRequest& from);
  UpdateChatMessageRequest(::google::protobuf::Arena* arena, UpdateChatMessageRequest&& from) noexcept
      : UpdateChatMessageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageTextFieldNumber = 4,
    kMessageIdFieldNumber = 1,
    kLeadIdFieldNumber = 2,
    kCreatedByFieldNumber = 3,
  };
  // string message_text = 4;
  void clear_message_text() ;
  const std::string& message_text() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message_text(Arg_&& arg, Args_... args);
  std::string* mutable_message_text();
  PROTOBUF_NODISCARD std::string* release_message_text();
  void set_allocated_message_text(std::string* value);

  private:
  const std::string& _internal_message_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message_text(
      const std::string& value);
  std::string* _internal_mutable_message_text();

  public:
  // int64 message_id = 1;
  void clear_message_id() ;
  ::int64_t message_id() const;
  void set_message_id(::int64_t value);

  private:
  ::int64_t _internal_message_id() const;
  void _internal_set_message_id(::int64_t value);

  public:
  // int64 lead_id = 2;
  void clear_lead_id() ;
  ::int64_t lead_id() const;
  void set_lead_id(::int64_t value);

  private:
  ::int64_t _internal_lead_id() const;
  void _internal_set_lead_id(::int64_t value);

  public:
  // int64 created_by = 3;
  void clear_created_by() ;
  ::int64_t created_by() const;
  void set_created_by(::int64_t value);

  private:
  ::int64_t _internal_created_by() const;
  void _internal_set_created_by(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.UpdateChatMessageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      49, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateChatMessageRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_text_;
    ::int64_t message_id_;
    ::int64_t lead_id_;
    ::int64_t created_by_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class TaskModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.TaskModel) */ {
 public:
  inline TaskModel() : TaskModel(nullptr) {}
  ~TaskModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TaskModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TaskModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TaskModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline TaskModel(const TaskModel& from) : TaskModel(nullptr, from) {}
  inline TaskModel(TaskModel&& from) noexcept
      : TaskModel(nullptr, std::move(from)) {}
  inline TaskModel& operator=(const TaskModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline TaskModel& operator=(TaskModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TaskModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const TaskModel* internal_default_instance() {
    return reinterpret_cast<const TaskModel*>(
        &_TaskModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(TaskModel& a, TaskModel& b) { a.Swap(&b); }
  inline void Swap(TaskModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TaskModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TaskModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TaskModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TaskModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TaskModel& from) { TaskModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TaskModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.TaskModel"; }

 protected:
  explicit TaskModel(::google::protobuf::Arena* arena);
  TaskModel(::google::protobuf::Arena* arena, const TaskModel& from);
  TaskModel(::google::protobuf::Arena* arena, TaskModel&& from) noexcept
      : TaskModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTitleFieldNumber = 4,
    kDescriptionFieldNumber = 5,
    kStatusFieldNumber = 6,
    kFromTimeFieldNumber = 7,
    kDueTimeFieldNumber = 8,
    kCreatedAtFieldNumber = 9,
    kUpdatedAtFieldNumber = 10,
    kLeadIdFieldNumber = 2,
    kAssignedToFieldNumber = 3,
    kTaskIdFieldNumber = 1,
  };
  // string title = 4;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string description = 5;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string status = 6;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // string from_time = 7;
  void clear_from_time() ;
  const std::string& from_time() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from_time(Arg_&& arg, Args_... args);
  std::string* mutable_from_time();
  PROTOBUF_NODISCARD std::string* release_from_time();
  void set_allocated_from_time(std::string* value);

  private:
  const std::string& _internal_from_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_from_time(
      const std::string& value);
  std::string* _internal_mutable_from_time();

  public:
  // string due_time = 8;
  void clear_due_time() ;
  const std::string& due_time() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_due_time(Arg_&& arg, Args_... args);
  std::string* mutable_due_time();
  PROTOBUF_NODISCARD std::string* release_due_time();
  void set_allocated_due_time(std::string* value);

  private:
  const std::string& _internal_due_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_due_time(
      const std::string& value);
  std::string* _internal_mutable_due_time();

  public:
  // string created_at = 9;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // string updated_at = 10;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // int64 lead_id = 2;
  void clear_lead_id() ;
  ::int64_t lead_id() const;
  void set_lead_id(::int64_t value);

  private:
  ::int64_t _internal_lead_id() const;
  void _internal_set_lead_id(::int64_t value);

  public:
  // int64 assigned_to = 3;
  void clear_assigned_to() ;
  ::int64_t assigned_to() const;
  void set_assigned_to(::int64_t value);

  private:
  ::int64_t _internal_assigned_to() const;
  void _internal_set_assigned_to(::int64_t value);

  public:
  // int32 task_id = 1;
  void clear_task_id() ;
  ::int32_t task_id() const;
  void set_task_id(::int32_t value);

  private:
  ::int32_t _internal_task_id() const;
  void _internal_set_task_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.TaskModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 0,
      89, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TaskModel& from_msg);
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::google::protobuf::internal::ArenaStringPtr from_time_;
    ::google::protobuf::internal::ArenaStringPtr due_time_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::int64_t lead_id_;
    ::int64_t assigned_to_;
    ::int32_t task_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class NoteModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.NoteModel) */ {
 public:
  inline NoteModel() : NoteModel(nullptr) {}
  ~NoteModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NoteModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NoteModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NoteModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline NoteModel(const NoteModel& from) : NoteModel(nullptr, from) {}
  inline NoteModel(NoteModel&& from) noexcept
      : NoteModel(nullptr, std::move(from)) {}
  inline NoteModel& operator=(const NoteModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline NoteModel& operator=(NoteModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NoteModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const NoteModel* internal_default_instance() {
    return reinterpret_cast<const NoteModel*>(
        &_NoteModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(NoteModel& a, NoteModel& b) { a.Swap(&b); }
  inline void Swap(NoteModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NoteModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NoteModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NoteModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NoteModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NoteModel& from) { NoteModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NoteModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.NoteModel"; }

 protected:
  explicit NoteModel(::google::protobuf::Arena* arena);
  NoteModel(::google::protobuf::Arena* arena, const NoteModel& from);
  NoteModel(::google::protobuf::Arena* arena, NoteModel&& from) noexcept
      : NoteModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContentFieldNumber = 4,
    kCreatedAtFieldNumber = 5,
    kUpdatedAtFieldNumber = 6,
    kNoteIdFieldNumber = 1,
    kLeadIdFieldNumber = 2,
    kCreatedByFieldNumber = 3,
  };
  // string content = 4;
  void clear_content() ;
  const std::string& content() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content(Arg_&& arg, Args_... args);
  std::string* mutable_content();
  PROTOBUF_NODISCARD std::string* release_content();
  void set_allocated_content(std::string* value);

  private:
  const std::string& _internal_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content(
      const std::string& value);
  std::string* _internal_mutable_content();

  public:
  // string created_at = 5;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // string updated_at = 6;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // int64 note_id = 1;
  void clear_note_id() ;
  ::int64_t note_id() const;
  void set_note_id(::int64_t value);

  private:
  ::int64_t _internal_note_id() const;
  void _internal_set_note_id(::int64_t value);

  public:
  // int64 lead_id = 2;
  void clear_lead_id() ;
  ::int64_t lead_id() const;
  void set_lead_id(::int64_t value);

  private:
  ::int64_t _internal_lead_id() const;
  void _internal_set_lead_id(::int64_t value);

  public:
  // int64 created_by = 3;
  void clear_created_by() ;
  ::int64_t created_by() const;
  void set_created_by(::int64_t value);

  private:
  ::int64_t _internal_created_by() const;
  void _internal_set_created_by(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.NoteModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      49, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NoteModel& from_msg);
    ::google::protobuf::internal::ArenaStringPtr content_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::int64_t note_id_;
    ::int64_t lead_id_;
    ::int64_t created_by_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class ListTasksRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.ListTasksRequest) */ {
 public:
  inline ListTasksRequest() : ListTasksRequest(nullptr) {}
  ~ListTasksRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListTasksRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListTasksRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListTasksRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListTasksRequest(const ListTasksRequest& from) : ListTasksRequest(nullptr, from) {}
  inline ListTasksRequest(ListTasksRequest&& from) noexcept
      : ListTasksRequest(nullptr, std::move(from)) {}
  inline ListTasksRequest& operator=(const ListTasksRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListTasksRequest& operator=(ListTasksRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListTasksRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListTasksRequest* internal_default_instance() {
    return reinterpret_cast<const ListTasksRequest*>(
        &_ListTasksRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(ListTasksRequest& a, ListTasksRequest& b) { a.Swap(&b); }
  inline void Swap(ListTasksRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListTasksRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListTasksRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListTasksRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListTasksRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListTasksRequest& from) { ListTasksRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListTasksRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.ListTasksRequest"; }

 protected:
  explicit ListTasksRequest(::google::protobuf::Arena* arena);
  ListTasksRequest(::google::protobuf::Arena* arena, const ListTasksRequest& from);
  ListTasksRequest(::google::protobuf::Arena* arena, ListTasksRequest&& from) noexcept
      : ListTasksRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeadIdFieldNumber = 1,
    kPageFieldNumber = 2,
    kPageSizeFieldNumber = 3,
  };
  // int64 lead_id = 1;
  void clear_lead_id() ;
  ::int64_t lead_id() const;
  void set_lead_id(::int64_t value);

  private:
  ::int64_t _internal_lead_id() const;
  void _internal_set_lead_id(::int64_t value);

  public:
  // int32 page = 2;
  void clear_page() ;
  ::int32_t page() const;
  void set_page(::int32_t value);

  private:
  ::int32_t _internal_page() const;
  void _internal_set_page(::int32_t value);

  public:
  // int32 page_size = 3;
  void clear_page_size() ;
  ::int32_t page_size() const;
  void set_page_size(::int32_t value);

  private:
  ::int32_t _internal_page_size() const;
  void _internal_set_page_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.ListTasksRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListTasksRequest& from_msg);
    ::int64_t lead_id_;
    ::int32_t page_;
    ::int32_t page_size_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class ListNotesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.ListNotesRequest) */ {
 public:
  inline ListNotesRequest() : ListNotesRequest(nullptr) {}
  ~ListNotesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListNotesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListNotesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListNotesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListNotesRequest(const ListNotesRequest& from) : ListNotesRequest(nullptr, from) {}
  inline ListNotesRequest(ListNotesRequest&& from) noexcept
      : ListNotesRequest(nullptr, std::move(from)) {}
  inline ListNotesRequest& operator=(const ListNotesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListNotesRequest& operator=(ListNotesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListNotesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListNotesRequest* internal_default_instance() {
    return reinterpret_cast<const ListNotesRequest*>(
        &_ListNotesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(ListNotesRequest& a, ListNotesRequest& b) { a.Swap(&b); }
  inline void Swap(ListNotesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListNotesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListNotesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListNotesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListNotesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListNotesRequest& from) { ListNotesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListNotesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.ListNotesRequest"; }

 protected:
  explicit ListNotesRequest(::google::protobuf::Arena* arena);
  ListNotesRequest(::google::protobuf::Arena* arena, const ListNotesRequest& from);
  ListNotesRequest(::google::protobuf::Arena* arena, ListNotesRequest&& from) noexcept
      : ListNotesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeadIdFieldNumber = 1,
    kPageFieldNumber = 2,
    kPageSizeFieldNumber = 3,
  };
  // int64 lead_id = 1;
  void clear_lead_id() ;
  ::int64_t lead_id() const;
  void set_lead_id(::int64_t value);

  private:
  ::int64_t _internal_lead_id() const;
  void _internal_set_lead_id(::int64_t value);

  public:
  // int32 page = 2;
  void clear_page() ;
  ::int32_t page() const;
  void set_page(::int32_t value);

  private:
  ::int32_t _internal_page() const;
  void _internal_set_page(::int32_t value);

  public:
  // int32 page_size = 3;
  void clear_page_size() ;
  ::int32_t page_size() const;
  void set_page_size(::int32_t value);

  private:
  ::int32_t _internal_page_size() const;
  void _internal_set_page_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.ListNotesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListNotesRequest& from_msg);
    ::int64_t lead_id_;
    ::int32_t page_;
    ::int32_t page_size_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class ListLeadsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.ListLeadsRequest) */ {
 public:
  inline ListLeadsRequest() : ListLeadsRequest(nullptr) {}
  ~ListLeadsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListLeadsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListLeadsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListLeadsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListLeadsRequest(const ListLeadsRequest& from) : ListLeadsRequest(nullptr, from) {}
  inline ListLeadsRequest(ListLeadsRequest&& from) noexcept
      : ListLeadsRequest(nullptr, std::move(from)) {}
  inline ListLeadsRequest& operator=(const ListLeadsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListLeadsRequest& operator=(ListLeadsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListLeadsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListLeadsRequest* internal_default_instance() {
    return reinterpret_cast<const ListLeadsRequest*>(
        &_ListLeadsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(ListLeadsRequest& a, ListLeadsRequest& b) { a.Swap(&b); }
  inline void Swap(ListLeadsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListLeadsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListLeadsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListLeadsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListLeadsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListLeadsRequest& from) { ListLeadsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListLeadsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.ListLeadsRequest"; }

 protected:
  explicit ListLeadsRequest(::google::protobuf::Arena* arena);
  ListLeadsRequest(::google::protobuf::Arena* arena, const ListLeadsRequest& from);
  ListLeadsRequest(::google::protobuf::Arena* arena, ListLeadsRequest&& from) noexcept
      : ListLeadsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrganizationIdFieldNumber = 1,
    kLimitFieldNumber = 2,
    kOffsetFieldNumber = 3,
  };
  // int64 organization_id = 1;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // int32 limit = 2;
  void clear_limit() ;
  ::int32_t limit() const;
  void set_limit(::int32_t value);

  private:
  ::int32_t _internal_limit() const;
  void _internal_set_limit(::int32_t value);

  public:
  // int32 offset = 3;
  void clear_offset() ;
  ::int32_t offset() const;
  void set_offset(::int32_t value);

  private:
  ::int32_t _internal_offset() const;
  void _internal_set_offset(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.ListLeadsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListLeadsRequest& from_msg);
    ::int64_t organization_id_;
    ::int32_t limit_;
    ::int32_t offset_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class ListChatMessagesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.ListChatMessagesRequest) */ {
 public:
  inline ListChatMessagesRequest() : ListChatMessagesRequest(nullptr) {}
  ~ListChatMessagesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListChatMessagesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListChatMessagesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListChatMessagesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListChatMessagesRequest(const ListChatMessagesRequest& from) : ListChatMessagesRequest(nullptr, from) {}
  inline ListChatMessagesRequest(ListChatMessagesRequest&& from) noexcept
      : ListChatMessagesRequest(nullptr, std::move(from)) {}
  inline ListChatMessagesRequest& operator=(const ListChatMessagesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListChatMessagesRequest& operator=(ListChatMessagesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListChatMessagesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListChatMessagesRequest* internal_default_instance() {
    return reinterpret_cast<const ListChatMessagesRequest*>(
        &_ListChatMessagesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(ListChatMessagesRequest& a, ListChatMessagesRequest& b) { a.Swap(&b); }
  inline void Swap(ListChatMessagesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListChatMessagesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListChatMessagesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListChatMessagesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListChatMessagesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListChatMessagesRequest& from) { ListChatMessagesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListChatMessagesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.ListChatMessagesRequest"; }

 protected:
  explicit ListChatMessagesRequest(::google::protobuf::Arena* arena);
  ListChatMessagesRequest(::google::protobuf::Arena* arena, const ListChatMessagesRequest& from);
  ListChatMessagesRequest(::google::protobuf::Arena* arena, ListChatMessagesRequest&& from) noexcept
      : ListChatMessagesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeadIdFieldNumber = 1,
    kPageFieldNumber = 2,
    kPageSizeFieldNumber = 3,
  };
  // int64 lead_id = 1;
  void clear_lead_id() ;
  ::int64_t lead_id() const;
  void set_lead_id(::int64_t value);

  private:
  ::int64_t _internal_lead_id() const;
  void _internal_set_lead_id(::int64_t value);

  public:
  // int32 page = 2;
  void clear_page() ;
  ::int32_t page() const;
  void set_page(::int32_t value);

  private:
  ::int32_t _internal_page() const;
  void _internal_set_page(::int32_t value);

  public:
  // int32 page_size = 3;
  void clear_page_size() ;
  ::int32_t page_size() const;
  void set_page_size(::int32_t value);

  private:
  ::int32_t _internal_page_size() const;
  void _internal_set_page_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.ListChatMessagesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListChatMessagesRequest& from_msg);
    ::int64_t lead_id_;
    ::int32_t page_;
    ::int32_t page_size_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class LeadModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.LeadModel) */ {
 public:
  inline LeadModel() : LeadModel(nullptr) {}
  ~LeadModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LeadModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LeadModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LeadModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline LeadModel(const LeadModel& from) : LeadModel(nullptr, from) {}
  inline LeadModel(LeadModel&& from) noexcept
      : LeadModel(nullptr, std::move(from)) {}
  inline LeadModel& operator=(const LeadModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeadModel& operator=(LeadModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeadModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const LeadModel* internal_default_instance() {
    return reinterpret_cast<const LeadModel*>(
        &_LeadModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(LeadModel& a, LeadModel& b) { a.Swap(&b); }
  inline void Swap(LeadModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeadModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeadModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LeadModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeadModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LeadModel& from) { LeadModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LeadModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.LeadModel"; }

 protected:
  explicit LeadModel(::google::protobuf::Arena* arena);
  LeadModel(::google::protobuf::Arena* arena, const LeadModel& from);
  LeadModel(::google::protobuf::Arena* arena, LeadModel&& from) noexcept
      : LeadModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeadNameFieldNumber = 2,
    kStageFieldNumber = 5,
    kCreatedAtFieldNumber = 8,
    kUpdatedAtFieldNumber = 9,
    kLeadIdFieldNumber = 1,
    kCreatedByOrganizationIdFieldNumber = 3,
    kCounterpartyOrganizationIdFieldNumber = 4,
    kEstimatedValueFieldNumber = 6,
    kCreatedByUserIdFieldNumber = 7,
  };
  // optional string lead_name = 2;
  bool has_lead_name() const;
  void clear_lead_name() ;
  const std::string& lead_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lead_name(Arg_&& arg, Args_... args);
  std::string* mutable_lead_name();
  PROTOBUF_NODISCARD std::string* release_lead_name();
  void set_allocated_lead_name(std::string* value);

  private:
  const std::string& _internal_lead_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lead_name(
      const std::string& value);
  std::string* _internal_mutable_lead_name();

  public:
  // string stage = 5;
  void clear_stage() ;
  const std::string& stage() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_stage(Arg_&& arg, Args_... args);
  std::string* mutable_stage();
  PROTOBUF_NODISCARD std::string* release_stage();
  void set_allocated_stage(std::string* value);

  private:
  const std::string& _internal_stage() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_stage(
      const std::string& value);
  std::string* _internal_mutable_stage();

  public:
  // optional string created_at = 8;
  bool has_created_at() const;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // optional string updated_at = 9;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // optional int64 lead_id = 1;
  bool has_lead_id() const;
  void clear_lead_id() ;
  ::int64_t lead_id() const;
  void set_lead_id(::int64_t value);

  private:
  ::int64_t _internal_lead_id() const;
  void _internal_set_lead_id(::int64_t value);

  public:
  // optional int64 created_by_organization_id = 3;
  bool has_created_by_organization_id() const;
  void clear_created_by_organization_id() ;
  ::int64_t created_by_organization_id() const;
  void set_created_by_organization_id(::int64_t value);

  private:
  ::int64_t _internal_created_by_organization_id() const;
  void _internal_set_created_by_organization_id(::int64_t value);

  public:
  // optional int64 counterparty_organization_id = 4;
  bool has_counterparty_organization_id() const;
  void clear_counterparty_organization_id() ;
  ::int64_t counterparty_organization_id() const;
  void set_counterparty_organization_id(::int64_t value);

  private:
  ::int64_t _internal_counterparty_organization_id() const;
  void _internal_set_counterparty_organization_id(::int64_t value);

  public:
  // optional double estimated_value = 6;
  bool has_estimated_value() const;
  void clear_estimated_value() ;
  double estimated_value() const;
  void set_estimated_value(double value);

  private:
  double _internal_estimated_value() const;
  void _internal_set_estimated_value(double value);

  public:
  // optional int64 created_by_user_id = 7;
  bool has_created_by_user_id() const;
  void clear_created_by_user_id() ;
  ::int64_t created_by_user_id() const;
  void set_created_by_user_id(::int64_t value);

  private:
  ::int64_t _internal_created_by_user_id() const;
  void _internal_set_created_by_user_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.LeadModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      64, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LeadModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr lead_name_;
    ::google::protobuf::internal::ArenaStringPtr stage_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::int64_t lead_id_;
    ::int64_t created_by_organization_id_;
    ::int64_t counterparty_organization_id_;
    double estimated_value_;
    ::int64_t created_by_user_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class GetTaskRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.GetTaskRequest) */ {
 public:
  inline GetTaskRequest() : GetTaskRequest(nullptr) {}
  ~GetTaskRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetTaskRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetTaskRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetTaskRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetTaskRequest(const GetTaskRequest& from) : GetTaskRequest(nullptr, from) {}
  inline GetTaskRequest(GetTaskRequest&& from) noexcept
      : GetTaskRequest(nullptr, std::move(from)) {}
  inline GetTaskRequest& operator=(const GetTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTaskRequest& operator=(GetTaskRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTaskRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTaskRequest* internal_default_instance() {
    return reinterpret_cast<const GetTaskRequest*>(
        &_GetTaskRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(GetTaskRequest& a, GetTaskRequest& b) { a.Swap(&b); }
  inline void Swap(GetTaskRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTaskRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTaskRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetTaskRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetTaskRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetTaskRequest& from) { GetTaskRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetTaskRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.GetTaskRequest"; }

 protected:
  explicit GetTaskRequest(::google::protobuf::Arena* arena);
  GetTaskRequest(::google::protobuf::Arena* arena, const GetTaskRequest& from);
  GetTaskRequest(::google::protobuf::Arena* arena, GetTaskRequest&& from) noexcept
      : GetTaskRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTaskIdFieldNumber = 1,
  };
  // int64 task_id = 1;
  void clear_task_id() ;
  ::int64_t task_id() const;
  void set_task_id(::int64_t value);

  private:
  ::int64_t _internal_task_id() const;
  void _internal_set_task_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.GetTaskRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetTaskRequest& from_msg);
    ::int64_t task_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class GetNoteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.GetNoteRequest) */ {
 public:
  inline GetNoteRequest() : GetNoteRequest(nullptr) {}
  ~GetNoteRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetNoteRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetNoteRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetNoteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetNoteRequest(const GetNoteRequest& from) : GetNoteRequest(nullptr, from) {}
  inline GetNoteRequest(GetNoteRequest&& from) noexcept
      : GetNoteRequest(nullptr, std::move(from)) {}
  inline GetNoteRequest& operator=(const GetNoteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetNoteRequest& operator=(GetNoteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetNoteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetNoteRequest* internal_default_instance() {
    return reinterpret_cast<const GetNoteRequest*>(
        &_GetNoteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(GetNoteRequest& a, GetNoteRequest& b) { a.Swap(&b); }
  inline void Swap(GetNoteRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetNoteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetNoteRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetNoteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetNoteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetNoteRequest& from) { GetNoteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetNoteRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.GetNoteRequest"; }

 protected:
  explicit GetNoteRequest(::google::protobuf::Arena* arena);
  GetNoteRequest(::google::protobuf::Arena* arena, const GetNoteRequest& from);
  GetNoteRequest(::google::protobuf::Arena* arena, GetNoteRequest&& from) noexcept
      : GetNoteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNoteIdFieldNumber = 1,
  };
  // int64 note_id = 1;
  void clear_note_id() ;
  ::int64_t note_id() const;
  void set_note_id(::int64_t value);

  private:
  ::int64_t _internal_note_id() const;
  void _internal_set_note_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.GetNoteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetNoteRequest& from_msg);
    ::int64_t note_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class GetLeadRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.GetLeadRequest) */ {
 public:
  inline GetLeadRequest() : GetLeadRequest(nullptr) {}
  ~GetLeadRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetLeadRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetLeadRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetLeadRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetLeadRequest(const GetLeadRequest& from) : GetLeadRequest(nullptr, from) {}
  inline GetLeadRequest(GetLeadRequest&& from) noexcept
      : GetLeadRequest(nullptr, std::move(from)) {}
  inline GetLeadRequest& operator=(const GetLeadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLeadRequest& operator=(GetLeadRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLeadRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLeadRequest* internal_default_instance() {
    return reinterpret_cast<const GetLeadRequest*>(
        &_GetLeadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(GetLeadRequest& a, GetLeadRequest& b) { a.Swap(&b); }
  inline void Swap(GetLeadRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLeadRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLeadRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetLeadRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLeadRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetLeadRequest& from) { GetLeadRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetLeadRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.GetLeadRequest"; }

 protected:
  explicit GetLeadRequest(::google::protobuf::Arena* arena);
  GetLeadRequest(::google::protobuf::Arena* arena, const GetLeadRequest& from);
  GetLeadRequest(::google::protobuf::Arena* arena, GetLeadRequest&& from) noexcept
      : GetLeadRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeadIdFieldNumber = 1,
  };
  // int64 lead_id = 1;
  void clear_lead_id() ;
  ::int64_t lead_id() const;
  void set_lead_id(::int64_t value);

  private:
  ::int64_t _internal_lead_id() const;
  void _internal_set_lead_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.GetLeadRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetLeadRequest& from_msg);
    ::int64_t lead_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class GetChatMessageRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.GetChatMessageRequest) */ {
 public:
  inline GetChatMessageRequest() : GetChatMessageRequest(nullptr) {}
  ~GetChatMessageRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetChatMessageRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetChatMessageRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetChatMessageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetChatMessageRequest(const GetChatMessageRequest& from) : GetChatMessageRequest(nullptr, from) {}
  inline GetChatMessageRequest(GetChatMessageRequest&& from) noexcept
      : GetChatMessageRequest(nullptr, std::move(from)) {}
  inline GetChatMessageRequest& operator=(const GetChatMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetChatMessageRequest& operator=(GetChatMessageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetChatMessageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetChatMessageRequest* internal_default_instance() {
    return reinterpret_cast<const GetChatMessageRequest*>(
        &_GetChatMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 42;
  friend void swap(GetChatMessageRequest& a, GetChatMessageRequest& b) { a.Swap(&b); }
  inline void Swap(GetChatMessageRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetChatMessageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetChatMessageRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetChatMessageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetChatMessageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetChatMessageRequest& from) { GetChatMessageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetChatMessageRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.GetChatMessageRequest"; }

 protected:
  explicit GetChatMessageRequest(::google::protobuf::Arena* arena);
  GetChatMessageRequest(::google::protobuf::Arena* arena, const GetChatMessageRequest& from);
  GetChatMessageRequest(::google::protobuf::Arena* arena, GetChatMessageRequest&& from) noexcept
      : GetChatMessageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageIdFieldNumber = 1,
  };
  // int64 message_id = 1;
  void clear_message_id() ;
  ::int64_t message_id() const;
  void set_message_id(::int64_t value);

  private:
  ::int64_t _internal_message_id() const;
  void _internal_set_message_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.GetChatMessageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetChatMessageRequest& from_msg);
    ::int64_t message_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class DeleteTaskResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.DeleteTaskResponse) */ {
 public:
  inline DeleteTaskResponse() : DeleteTaskResponse(nullptr) {}
  ~DeleteTaskResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteTaskResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteTaskResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteTaskResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteTaskResponse(const DeleteTaskResponse& from) : DeleteTaskResponse(nullptr, from) {}
  inline DeleteTaskResponse(DeleteTaskResponse&& from) noexcept
      : DeleteTaskResponse(nullptr, std::move(from)) {}
  inline DeleteTaskResponse& operator=(const DeleteTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteTaskResponse& operator=(DeleteTaskResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteTaskResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteTaskResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteTaskResponse*>(
        &_DeleteTaskResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(DeleteTaskResponse& a, DeleteTaskResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteTaskResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteTaskResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteTaskResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteTaskResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteTaskResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteTaskResponse& from) { DeleteTaskResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteTaskResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.DeleteTaskResponse"; }

 protected:
  explicit DeleteTaskResponse(::google::protobuf::Arena* arena);
  DeleteTaskResponse(::google::protobuf::Arena* arena, const DeleteTaskResponse& from);
  DeleteTaskResponse(::google::protobuf::Arena* arena, DeleteTaskResponse&& from) noexcept
      : DeleteTaskResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:crm.DeleteTaskResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteTaskResponse& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class DeleteTaskRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.DeleteTaskRequest) */ {
 public:
  inline DeleteTaskRequest() : DeleteTaskRequest(nullptr) {}
  ~DeleteTaskRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteTaskRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteTaskRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteTaskRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteTaskRequest(const DeleteTaskRequest& from) : DeleteTaskRequest(nullptr, from) {}
  inline DeleteTaskRequest(DeleteTaskRequest&& from) noexcept
      : DeleteTaskRequest(nullptr, std::move(from)) {}
  inline DeleteTaskRequest& operator=(const DeleteTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteTaskRequest& operator=(DeleteTaskRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteTaskRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteTaskRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteTaskRequest*>(
        &_DeleteTaskRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(DeleteTaskRequest& a, DeleteTaskRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteTaskRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteTaskRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteTaskRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteTaskRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteTaskRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteTaskRequest& from) { DeleteTaskRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteTaskRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.DeleteTaskRequest"; }

 protected:
  explicit DeleteTaskRequest(::google::protobuf::Arena* arena);
  DeleteTaskRequest(::google::protobuf::Arena* arena, const DeleteTaskRequest& from);
  DeleteTaskRequest(::google::protobuf::Arena* arena, DeleteTaskRequest&& from) noexcept
      : DeleteTaskRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTaskIdFieldNumber = 1,
  };
  // int64 task_id = 1;
  void clear_task_id() ;
  ::int64_t task_id() const;
  void set_task_id(::int64_t value);

  private:
  ::int64_t _internal_task_id() const;
  void _internal_set_task_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.DeleteTaskRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteTaskRequest& from_msg);
    ::int64_t task_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class DeleteNoteResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.DeleteNoteResponse) */ {
 public:
  inline DeleteNoteResponse() : DeleteNoteResponse(nullptr) {}
  ~DeleteNoteResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteNoteResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteNoteResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteNoteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteNoteResponse(const DeleteNoteResponse& from) : DeleteNoteResponse(nullptr, from) {}
  inline DeleteNoteResponse(DeleteNoteResponse&& from) noexcept
      : DeleteNoteResponse(nullptr, std::move(from)) {}
  inline DeleteNoteResponse& operator=(const DeleteNoteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteNoteResponse& operator=(DeleteNoteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteNoteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteNoteResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteNoteResponse*>(
        &_DeleteNoteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(DeleteNoteResponse& a, DeleteNoteResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteNoteResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteNoteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteNoteResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteNoteResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteNoteResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteNoteResponse& from) { DeleteNoteResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteNoteResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.DeleteNoteResponse"; }

 protected:
  explicit DeleteNoteResponse(::google::protobuf::Arena* arena);
  DeleteNoteResponse(::google::protobuf::Arena* arena, const DeleteNoteResponse& from);
  DeleteNoteResponse(::google::protobuf::Arena* arena, DeleteNoteResponse&& from) noexcept
      : DeleteNoteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:crm.DeleteNoteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteNoteResponse& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class DeleteNoteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.DeleteNoteRequest) */ {
 public:
  inline DeleteNoteRequest() : DeleteNoteRequest(nullptr) {}
  ~DeleteNoteRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteNoteRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteNoteRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteNoteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteNoteRequest(const DeleteNoteRequest& from) : DeleteNoteRequest(nullptr, from) {}
  inline DeleteNoteRequest(DeleteNoteRequest&& from) noexcept
      : DeleteNoteRequest(nullptr, std::move(from)) {}
  inline DeleteNoteRequest& operator=(const DeleteNoteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteNoteRequest& operator=(DeleteNoteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteNoteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteNoteRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteNoteRequest*>(
        &_DeleteNoteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(DeleteNoteRequest& a, DeleteNoteRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteNoteRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteNoteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteNoteRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteNoteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteNoteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteNoteRequest& from) { DeleteNoteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteNoteRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.DeleteNoteRequest"; }

 protected:
  explicit DeleteNoteRequest(::google::protobuf::Arena* arena);
  DeleteNoteRequest(::google::protobuf::Arena* arena, const DeleteNoteRequest& from);
  DeleteNoteRequest(::google::protobuf::Arena* arena, DeleteNoteRequest&& from) noexcept
      : DeleteNoteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNoteIdFieldNumber = 1,
  };
  // int64 note_id = 1;
  void clear_note_id() ;
  ::int64_t note_id() const;
  void set_note_id(::int64_t value);

  private:
  ::int64_t _internal_note_id() const;
  void _internal_set_note_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.DeleteNoteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteNoteRequest& from_msg);
    ::int64_t note_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class DeleteLeadResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.DeleteLeadResponse) */ {
 public:
  inline DeleteLeadResponse() : DeleteLeadResponse(nullptr) {}
  ~DeleteLeadResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteLeadResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteLeadResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteLeadResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteLeadResponse(const DeleteLeadResponse& from) : DeleteLeadResponse(nullptr, from) {}
  inline DeleteLeadResponse(DeleteLeadResponse&& from) noexcept
      : DeleteLeadResponse(nullptr, std::move(from)) {}
  inline DeleteLeadResponse& operator=(const DeleteLeadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteLeadResponse& operator=(DeleteLeadResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteLeadResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteLeadResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteLeadResponse*>(
        &_DeleteLeadResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(DeleteLeadResponse& a, DeleteLeadResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteLeadResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteLeadResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteLeadResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteLeadResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteLeadResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteLeadResponse& from) { DeleteLeadResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteLeadResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.DeleteLeadResponse"; }

 protected:
  explicit DeleteLeadResponse(::google::protobuf::Arena* arena);
  DeleteLeadResponse(::google::protobuf::Arena* arena, const DeleteLeadResponse& from);
  DeleteLeadResponse(::google::protobuf::Arena* arena, DeleteLeadResponse&& from) noexcept
      : DeleteLeadResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:crm.DeleteLeadResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteLeadResponse& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class DeleteLeadRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.DeleteLeadRequest) */ {
 public:
  inline DeleteLeadRequest() : DeleteLeadRequest(nullptr) {}
  ~DeleteLeadRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteLeadRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteLeadRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteLeadRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteLeadRequest(const DeleteLeadRequest& from) : DeleteLeadRequest(nullptr, from) {}
  inline DeleteLeadRequest(DeleteLeadRequest&& from) noexcept
      : DeleteLeadRequest(nullptr, std::move(from)) {}
  inline DeleteLeadRequest& operator=(const DeleteLeadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteLeadRequest& operator=(DeleteLeadRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteLeadRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteLeadRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteLeadRequest*>(
        &_DeleteLeadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(DeleteLeadRequest& a, DeleteLeadRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteLeadRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteLeadRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteLeadRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteLeadRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteLeadRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteLeadRequest& from) { DeleteLeadRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteLeadRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.DeleteLeadRequest"; }

 protected:
  explicit DeleteLeadRequest(::google::protobuf::Arena* arena);
  DeleteLeadRequest(::google::protobuf::Arena* arena, const DeleteLeadRequest& from);
  DeleteLeadRequest(::google::protobuf::Arena* arena, DeleteLeadRequest&& from) noexcept
      : DeleteLeadRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeadIdFieldNumber = 1,
  };
  // int64 lead_id = 1;
  void clear_lead_id() ;
  ::int64_t lead_id() const;
  void set_lead_id(::int64_t value);

  private:
  ::int64_t _internal_lead_id() const;
  void _internal_set_lead_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.DeleteLeadRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteLeadRequest& from_msg);
    ::int64_t lead_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class DeleteChatMessageResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.DeleteChatMessageResponse) */ {
 public:
  inline DeleteChatMessageResponse() : DeleteChatMessageResponse(nullptr) {}
  ~DeleteChatMessageResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteChatMessageResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteChatMessageResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteChatMessageResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteChatMessageResponse(const DeleteChatMessageResponse& from) : DeleteChatMessageResponse(nullptr, from) {}
  inline DeleteChatMessageResponse(DeleteChatMessageResponse&& from) noexcept
      : DeleteChatMessageResponse(nullptr, std::move(from)) {}
  inline DeleteChatMessageResponse& operator=(const DeleteChatMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteChatMessageResponse& operator=(DeleteChatMessageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteChatMessageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteChatMessageResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteChatMessageResponse*>(
        &_DeleteChatMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 49;
  friend void swap(DeleteChatMessageResponse& a, DeleteChatMessageResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteChatMessageResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteChatMessageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteChatMessageResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteChatMessageResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteChatMessageResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteChatMessageResponse& from) { DeleteChatMessageResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteChatMessageResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.DeleteChatMessageResponse"; }

 protected:
  explicit DeleteChatMessageResponse(::google::protobuf::Arena* arena);
  DeleteChatMessageResponse(::google::protobuf::Arena* arena, const DeleteChatMessageResponse& from);
  DeleteChatMessageResponse(::google::protobuf::Arena* arena, DeleteChatMessageResponse&& from) noexcept
      : DeleteChatMessageResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:crm.DeleteChatMessageResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteChatMessageResponse& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class DeleteChatMessageRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.DeleteChatMessageRequest) */ {
 public:
  inline DeleteChatMessageRequest() : DeleteChatMessageRequest(nullptr) {}
  ~DeleteChatMessageRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteChatMessageRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteChatMessageRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteChatMessageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteChatMessageRequest(const DeleteChatMessageRequest& from) : DeleteChatMessageRequest(nullptr, from) {}
  inline DeleteChatMessageRequest(DeleteChatMessageRequest&& from) noexcept
      : DeleteChatMessageRequest(nullptr, std::move(from)) {}
  inline DeleteChatMessageRequest& operator=(const DeleteChatMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteChatMessageRequest& operator=(DeleteChatMessageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteChatMessageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteChatMessageRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteChatMessageRequest*>(
        &_DeleteChatMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 48;
  friend void swap(DeleteChatMessageRequest& a, DeleteChatMessageRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteChatMessageRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteChatMessageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteChatMessageRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteChatMessageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteChatMessageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteChatMessageRequest& from) { DeleteChatMessageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteChatMessageRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.DeleteChatMessageRequest"; }

 protected:
  explicit DeleteChatMessageRequest(::google::protobuf::Arena* arena);
  DeleteChatMessageRequest(::google::protobuf::Arena* arena, const DeleteChatMessageRequest& from);
  DeleteChatMessageRequest(::google::protobuf::Arena* arena, DeleteChatMessageRequest&& from) noexcept
      : DeleteChatMessageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageIdFieldNumber = 1,
  };
  // int64 message_id = 1;
  void clear_message_id() ;
  ::int64_t message_id() const;
  void set_message_id(::int64_t value);

  private:
  ::int64_t _internal_message_id() const;
  void _internal_set_message_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.DeleteChatMessageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteChatMessageRequest& from_msg);
    ::int64_t message_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class CreateTaskRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.CreateTaskRequest) */ {
 public:
  inline CreateTaskRequest() : CreateTaskRequest(nullptr) {}
  ~CreateTaskRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateTaskRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateTaskRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateTaskRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateTaskRequest(const CreateTaskRequest& from) : CreateTaskRequest(nullptr, from) {}
  inline CreateTaskRequest(CreateTaskRequest&& from) noexcept
      : CreateTaskRequest(nullptr, std::move(from)) {}
  inline CreateTaskRequest& operator=(const CreateTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateTaskRequest& operator=(CreateTaskRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateTaskRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateTaskRequest* internal_default_instance() {
    return reinterpret_cast<const CreateTaskRequest*>(
        &_CreateTaskRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(CreateTaskRequest& a, CreateTaskRequest& b) { a.Swap(&b); }
  inline void Swap(CreateTaskRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateTaskRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateTaskRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateTaskRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateTaskRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateTaskRequest& from) { CreateTaskRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateTaskRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.CreateTaskRequest"; }

 protected:
  explicit CreateTaskRequest(::google::protobuf::Arena* arena);
  CreateTaskRequest(::google::protobuf::Arena* arena, const CreateTaskRequest& from);
  CreateTaskRequest(::google::protobuf::Arena* arena, CreateTaskRequest&& from) noexcept
      : CreateTaskRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTitleFieldNumber = 3,
    kDescriptionFieldNumber = 4,
    kStatusFieldNumber = 5,
    kFromTimeFieldNumber = 6,
    kDueTimeFieldNumber = 7,
    kLeadIdFieldNumber = 1,
    kAssignedToFieldNumber = 2,
  };
  // string title = 3;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string description = 4;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string status = 5;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // string from_time = 6;
  void clear_from_time() ;
  const std::string& from_time() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from_time(Arg_&& arg, Args_... args);
  std::string* mutable_from_time();
  PROTOBUF_NODISCARD std::string* release_from_time();
  void set_allocated_from_time(std::string* value);

  private:
  const std::string& _internal_from_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_from_time(
      const std::string& value);
  std::string* _internal_mutable_from_time();

  public:
  // string due_time = 7;
  void clear_due_time() ;
  const std::string& due_time() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_due_time(Arg_&& arg, Args_... args);
  std::string* mutable_due_time();
  PROTOBUF_NODISCARD std::string* release_due_time();
  void set_allocated_due_time(std::string* value);

  private:
  const std::string& _internal_due_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_due_time(
      const std::string& value);
  std::string* _internal_mutable_due_time();

  public:
  // int64 lead_id = 1;
  void clear_lead_id() ;
  ::int64_t lead_id() const;
  void set_lead_id(::int64_t value);

  private:
  ::int64_t _internal_lead_id() const;
  void _internal_set_lead_id(::int64_t value);

  public:
  // int64 assigned_to = 2;
  void clear_assigned_to() ;
  ::int64_t assigned_to() const;
  void set_assigned_to(::int64_t value);

  private:
  ::int64_t _internal_assigned_to() const;
  void _internal_set_assigned_to(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.CreateTaskRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      69, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateTaskRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::google::protobuf::internal::ArenaStringPtr from_time_;
    ::google::protobuf::internal::ArenaStringPtr due_time_;
    ::int64_t lead_id_;
    ::int64_t assigned_to_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class CreateNoteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.CreateNoteRequest) */ {
 public:
  inline CreateNoteRequest() : CreateNoteRequest(nullptr) {}
  ~CreateNoteRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateNoteRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateNoteRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateNoteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateNoteRequest(const CreateNoteRequest& from) : CreateNoteRequest(nullptr, from) {}
  inline CreateNoteRequest(CreateNoteRequest&& from) noexcept
      : CreateNoteRequest(nullptr, std::move(from)) {}
  inline CreateNoteRequest& operator=(const CreateNoteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateNoteRequest& operator=(CreateNoteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateNoteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateNoteRequest* internal_default_instance() {
    return reinterpret_cast<const CreateNoteRequest*>(
        &_CreateNoteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(CreateNoteRequest& a, CreateNoteRequest& b) { a.Swap(&b); }
  inline void Swap(CreateNoteRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateNoteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateNoteRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateNoteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateNoteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateNoteRequest& from) { CreateNoteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateNoteRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.CreateNoteRequest"; }

 protected:
  explicit CreateNoteRequest(::google::protobuf::Arena* arena);
  CreateNoteRequest(::google::protobuf::Arena* arena, const CreateNoteRequest& from);
  CreateNoteRequest(::google::protobuf::Arena* arena, CreateNoteRequest&& from) noexcept
      : CreateNoteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContentFieldNumber = 3,
    kLeadIdFieldNumber = 1,
    kCreatedByFieldNumber = 2,
  };
  // string content = 3;
  void clear_content() ;
  const std::string& content() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content(Arg_&& arg, Args_... args);
  std::string* mutable_content();
  PROTOBUF_NODISCARD std::string* release_content();
  void set_allocated_content(std::string* value);

  private:
  const std::string& _internal_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content(
      const std::string& value);
  std::string* _internal_mutable_content();

  public:
  // int64 lead_id = 1;
  void clear_lead_id() ;
  ::int64_t lead_id() const;
  void set_lead_id(::int64_t value);

  private:
  ::int64_t _internal_lead_id() const;
  void _internal_set_lead_id(::int64_t value);

  public:
  // int64 created_by = 2;
  void clear_created_by() ;
  ::int64_t created_by() const;
  void set_created_by(::int64_t value);

  private:
  ::int64_t _internal_created_by() const;
  void _internal_set_created_by(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.CreateNoteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      37, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateNoteRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr content_;
    ::int64_t lead_id_;
    ::int64_t created_by_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class CreateChatMessageRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.CreateChatMessageRequest) */ {
 public:
  inline CreateChatMessageRequest() : CreateChatMessageRequest(nullptr) {}
  ~CreateChatMessageRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateChatMessageRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateChatMessageRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateChatMessageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateChatMessageRequest(const CreateChatMessageRequest& from) : CreateChatMessageRequest(nullptr, from) {}
  inline CreateChatMessageRequest(CreateChatMessageRequest&& from) noexcept
      : CreateChatMessageRequest(nullptr, std::move(from)) {}
  inline CreateChatMessageRequest& operator=(const CreateChatMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateChatMessageRequest& operator=(CreateChatMessageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateChatMessageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateChatMessageRequest* internal_default_instance() {
    return reinterpret_cast<const CreateChatMessageRequest*>(
        &_CreateChatMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(CreateChatMessageRequest& a, CreateChatMessageRequest& b) { a.Swap(&b); }
  inline void Swap(CreateChatMessageRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateChatMessageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateChatMessageRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateChatMessageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateChatMessageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateChatMessageRequest& from) { CreateChatMessageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateChatMessageRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.CreateChatMessageRequest"; }

 protected:
  explicit CreateChatMessageRequest(::google::protobuf::Arena* arena);
  CreateChatMessageRequest(::google::protobuf::Arena* arena, const CreateChatMessageRequest& from);
  CreateChatMessageRequest(::google::protobuf::Arena* arena, CreateChatMessageRequest&& from) noexcept
      : CreateChatMessageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageTextFieldNumber = 3,
    kLeadIdFieldNumber = 1,
    kCreatedByFieldNumber = 2,
  };
  // string message_text = 3;
  void clear_message_text() ;
  const std::string& message_text() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message_text(Arg_&& arg, Args_... args);
  std::string* mutable_message_text();
  PROTOBUF_NODISCARD std::string* release_message_text();
  void set_allocated_message_text(std::string* value);

  private:
  const std::string& _internal_message_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message_text(
      const std::string& value);
  std::string* _internal_mutable_message_text();

  public:
  // int64 lead_id = 1;
  void clear_lead_id() ;
  ::int64_t lead_id() const;
  void set_lead_id(::int64_t value);

  private:
  ::int64_t _internal_lead_id() const;
  void _internal_set_lead_id(::int64_t value);

  public:
  // int64 created_by = 2;
  void clear_created_by() ;
  ::int64_t created_by() const;
  void set_created_by(::int64_t value);

  private:
  ::int64_t _internal_created_by() const;
  void _internal_set_created_by(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.CreateChatMessageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      49, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateChatMessageRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_text_;
    ::int64_t lead_id_;
    ::int64_t created_by_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class Contact final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.Contact) */ {
 public:
  inline Contact() : Contact(nullptr) {}
  ~Contact() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Contact* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Contact));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Contact(
      ::google::protobuf::internal::ConstantInitialized);

  inline Contact(const Contact& from) : Contact(nullptr, from) {}
  inline Contact(Contact&& from) noexcept
      : Contact(nullptr, std::move(from)) {}
  inline Contact& operator=(const Contact& from) {
    CopyFrom(from);
    return *this;
  }
  inline Contact& operator=(Contact&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Contact& default_instance() {
    return *internal_default_instance();
  }
  static inline const Contact* internal_default_instance() {
    return reinterpret_cast<const Contact*>(
        &_Contact_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Contact& a, Contact& b) { a.Swap(&b); }
  inline void Swap(Contact* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Contact* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Contact* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Contact>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Contact& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Contact& from) { Contact::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Contact* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.Contact"; }

 protected:
  explicit Contact(::google::protobuf::Arena* arena);
  Contact(::google::protobuf::Arena* arena, const Contact& from);
  Contact(::google::protobuf::Arena* arena, Contact&& from) noexcept
      : Contact(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContactPersonFieldNumber = 4,
    kPhoneNumberFieldNumber = 5,
    kEmailFieldNumber = 6,
    kContactIdFieldNumber = 1,
    kOrganizationIdFieldNumber = 2,
    kLeadIdFieldNumber = 3,
  };
  // optional string contact_person = 4;
  bool has_contact_person() const;
  void clear_contact_person() ;
  const std::string& contact_person() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contact_person(Arg_&& arg, Args_... args);
  std::string* mutable_contact_person();
  PROTOBUF_NODISCARD std::string* release_contact_person();
  void set_allocated_contact_person(std::string* value);

  private:
  const std::string& _internal_contact_person() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contact_person(
      const std::string& value);
  std::string* _internal_mutable_contact_person();

  public:
  // optional string phone_number = 5;
  bool has_phone_number() const;
  void clear_phone_number() ;
  const std::string& phone_number() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_phone_number(Arg_&& arg, Args_... args);
  std::string* mutable_phone_number();
  PROTOBUF_NODISCARD std::string* release_phone_number();
  void set_allocated_phone_number(std::string* value);

  private:
  const std::string& _internal_phone_number() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_phone_number(
      const std::string& value);
  std::string* _internal_mutable_phone_number();

  public:
  // optional string email = 6;
  bool has_email() const;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // optional int64 contact_id = 1;
  bool has_contact_id() const;
  void clear_contact_id() ;
  ::int64_t contact_id() const;
  void set_contact_id(::int64_t value);

  private:
  ::int64_t _internal_contact_id() const;
  void _internal_set_contact_id(::int64_t value);

  public:
  // optional int64 organization_id = 2;
  bool has_organization_id() const;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // optional int64 lead_id = 3;
  bool has_lead_id() const;
  void clear_lead_id() ;
  ::int64_t lead_id() const;
  void set_lead_id(::int64_t value);

  private:
  ::int64_t _internal_lead_id() const;
  void _internal_set_lead_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.Contact)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      51, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Contact& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr contact_person_;
    ::google::protobuf::internal::ArenaStringPtr phone_number_;
    ::google::protobuf::internal::ArenaStringPtr email_;
    ::int64_t contact_id_;
    ::int64_t organization_id_;
    ::int64_t lead_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class ChatMessageModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.ChatMessageModel) */ {
 public:
  inline ChatMessageModel() : ChatMessageModel(nullptr) {}
  ~ChatMessageModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ChatMessageModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ChatMessageModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChatMessageModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChatMessageModel(const ChatMessageModel& from) : ChatMessageModel(nullptr, from) {}
  inline ChatMessageModel(ChatMessageModel&& from) noexcept
      : ChatMessageModel(nullptr, std::move(from)) {}
  inline ChatMessageModel& operator=(const ChatMessageModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChatMessageModel& operator=(ChatMessageModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChatMessageModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChatMessageModel* internal_default_instance() {
    return reinterpret_cast<const ChatMessageModel*>(
        &_ChatMessageModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ChatMessageModel& a, ChatMessageModel& b) { a.Swap(&b); }
  inline void Swap(ChatMessageModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChatMessageModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChatMessageModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ChatMessageModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChatMessageModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChatMessageModel& from) { ChatMessageModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ChatMessageModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.ChatMessageModel"; }

 protected:
  explicit ChatMessageModel(::google::protobuf::Arena* arena);
  ChatMessageModel(::google::protobuf::Arena* arena, const ChatMessageModel& from);
  ChatMessageModel(::google::protobuf::Arena* arena, ChatMessageModel&& from) noexcept
      : ChatMessageModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageTextFieldNumber = 4,
    kCreatedAtFieldNumber = 5,
    kMessageIdFieldNumber = 1,
    kLeadIdFieldNumber = 2,
    kCreatedByFieldNumber = 3,
  };
  // string message_text = 4;
  void clear_message_text() ;
  const std::string& message_text() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message_text(Arg_&& arg, Args_... args);
  std::string* mutable_message_text();
  PROTOBUF_NODISCARD std::string* release_message_text();
  void set_allocated_message_text(std::string* value);

  private:
  const std::string& _internal_message_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message_text(
      const std::string& value);
  std::string* _internal_mutable_message_text();

  public:
  // string created_at = 5;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // int64 message_id = 1;
  void clear_message_id() ;
  ::int64_t message_id() const;
  void set_message_id(::int64_t value);

  private:
  ::int64_t _internal_message_id() const;
  void _internal_set_message_id(::int64_t value);

  public:
  // int64 lead_id = 2;
  void clear_lead_id() ;
  ::int64_t lead_id() const;
  void set_lead_id(::int64_t value);

  private:
  ::int64_t _internal_lead_id() const;
  void _internal_set_lead_id(::int64_t value);

  public:
  // int64 created_by = 3;
  void clear_created_by() ;
  ::int64_t created_by() const;
  void set_created_by(::int64_t value);

  private:
  ::int64_t _internal_created_by() const;
  void _internal_set_created_by(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.ChatMessageModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      51, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChatMessageModel& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_text_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::int64_t message_id_;
    ::int64_t lead_id_;
    ::int64_t created_by_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class AddressModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.AddressModel) */ {
 public:
  inline AddressModel() : AddressModel(nullptr) {}
  ~AddressModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddressModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddressModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddressModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddressModel(const AddressModel& from) : AddressModel(nullptr, from) {}
  inline AddressModel(AddressModel&& from) noexcept
      : AddressModel(nullptr, std::move(from)) {}
  inline AddressModel& operator=(const AddressModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddressModel& operator=(AddressModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddressModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddressModel* internal_default_instance() {
    return reinterpret_cast<const AddressModel*>(
        &_AddressModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(AddressModel& a, AddressModel& b) { a.Swap(&b); }
  inline void Swap(AddressModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddressModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddressModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddressModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddressModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddressModel& from) { AddressModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddressModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.AddressModel"; }

 protected:
  explicit AddressModel(::google::protobuf::Arena* arena);
  AddressModel(::google::protobuf::Arena* arena, const AddressModel& from);
  AddressModel(::google::protobuf::Arena* arena, AddressModel&& from) noexcept
      : AddressModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressLineFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // optional string address_line = 2;
  bool has_address_line() const;
  void clear_address_line() ;
  const std::string& address_line() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address_line(Arg_&& arg, Args_... args);
  std::string* mutable_address_line();
  PROTOBUF_NODISCARD std::string* release_address_line();
  void set_allocated_address_line(std::string* value);

  private:
  const std::string& _internal_address_line() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address_line(
      const std::string& value);
  std::string* _internal_mutable_address_line();

  public:
  // optional int64 id = 1;
  bool has_id() const;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.AddressModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      37, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddressModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr address_line_;
    ::int64_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class UpdateTaskResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.UpdateTaskResponse) */ {
 public:
  inline UpdateTaskResponse() : UpdateTaskResponse(nullptr) {}
  ~UpdateTaskResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateTaskResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateTaskResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateTaskResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateTaskResponse(const UpdateTaskResponse& from) : UpdateTaskResponse(nullptr, from) {}
  inline UpdateTaskResponse(UpdateTaskResponse&& from) noexcept
      : UpdateTaskResponse(nullptr, std::move(from)) {}
  inline UpdateTaskResponse& operator=(const UpdateTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateTaskResponse& operator=(UpdateTaskResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateTaskResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateTaskResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateTaskResponse*>(
        &_UpdateTaskResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(UpdateTaskResponse& a, UpdateTaskResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateTaskResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateTaskResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateTaskResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateTaskResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateTaskResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateTaskResponse& from) { UpdateTaskResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateTaskResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.UpdateTaskResponse"; }

 protected:
  explicit UpdateTaskResponse(::google::protobuf::Arena* arena);
  UpdateTaskResponse(::google::protobuf::Arena* arena, const UpdateTaskResponse& from);
  UpdateTaskResponse(::google::protobuf::Arena* arena, UpdateTaskResponse&& from) noexcept
      : UpdateTaskResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTaskFieldNumber = 1,
  };
  // .crm.TaskModel task = 1;
  bool has_task() const;
  void clear_task() ;
  const ::crm::TaskModel& task() const;
  PROTOBUF_NODISCARD ::crm::TaskModel* release_task();
  ::crm::TaskModel* mutable_task();
  void set_allocated_task(::crm::TaskModel* value);
  void unsafe_arena_set_allocated_task(::crm::TaskModel* value);
  ::crm::TaskModel* unsafe_arena_release_task();

  private:
  const ::crm::TaskModel& _internal_task() const;
  ::crm::TaskModel* _internal_mutable_task();

  public:
  // @@protoc_insertion_point(class_scope:crm.UpdateTaskResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateTaskResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crm::TaskModel* task_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class UpdateNoteResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.UpdateNoteResponse) */ {
 public:
  inline UpdateNoteResponse() : UpdateNoteResponse(nullptr) {}
  ~UpdateNoteResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateNoteResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateNoteResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateNoteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateNoteResponse(const UpdateNoteResponse& from) : UpdateNoteResponse(nullptr, from) {}
  inline UpdateNoteResponse(UpdateNoteResponse&& from) noexcept
      : UpdateNoteResponse(nullptr, std::move(from)) {}
  inline UpdateNoteResponse& operator=(const UpdateNoteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateNoteResponse& operator=(UpdateNoteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateNoteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateNoteResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateNoteResponse*>(
        &_UpdateNoteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(UpdateNoteResponse& a, UpdateNoteResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateNoteResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateNoteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateNoteResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateNoteResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateNoteResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateNoteResponse& from) { UpdateNoteResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateNoteResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.UpdateNoteResponse"; }

 protected:
  explicit UpdateNoteResponse(::google::protobuf::Arena* arena);
  UpdateNoteResponse(::google::protobuf::Arena* arena, const UpdateNoteResponse& from);
  UpdateNoteResponse(::google::protobuf::Arena* arena, UpdateNoteResponse&& from) noexcept
      : UpdateNoteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNoteFieldNumber = 1,
  };
  // .crm.NoteModel note = 1;
  bool has_note() const;
  void clear_note() ;
  const ::crm::NoteModel& note() const;
  PROTOBUF_NODISCARD ::crm::NoteModel* release_note();
  ::crm::NoteModel* mutable_note();
  void set_allocated_note(::crm::NoteModel* value);
  void unsafe_arena_set_allocated_note(::crm::NoteModel* value);
  ::crm::NoteModel* unsafe_arena_release_note();

  private:
  const ::crm::NoteModel& _internal_note() const;
  ::crm::NoteModel* _internal_mutable_note();

  public:
  // @@protoc_insertion_point(class_scope:crm.UpdateNoteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateNoteResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crm::NoteModel* note_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class UpdateChatMessageResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.UpdateChatMessageResponse) */ {
 public:
  inline UpdateChatMessageResponse() : UpdateChatMessageResponse(nullptr) {}
  ~UpdateChatMessageResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateChatMessageResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateChatMessageResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateChatMessageResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateChatMessageResponse(const UpdateChatMessageResponse& from) : UpdateChatMessageResponse(nullptr, from) {}
  inline UpdateChatMessageResponse(UpdateChatMessageResponse&& from) noexcept
      : UpdateChatMessageResponse(nullptr, std::move(from)) {}
  inline UpdateChatMessageResponse& operator=(const UpdateChatMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateChatMessageResponse& operator=(UpdateChatMessageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateChatMessageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateChatMessageResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateChatMessageResponse*>(
        &_UpdateChatMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 47;
  friend void swap(UpdateChatMessageResponse& a, UpdateChatMessageResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateChatMessageResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateChatMessageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateChatMessageResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateChatMessageResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateChatMessageResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateChatMessageResponse& from) { UpdateChatMessageResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateChatMessageResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.UpdateChatMessageResponse"; }

 protected:
  explicit UpdateChatMessageResponse(::google::protobuf::Arena* arena);
  UpdateChatMessageResponse(::google::protobuf::Arena* arena, const UpdateChatMessageResponse& from);
  UpdateChatMessageResponse(::google::protobuf::Arena* arena, UpdateChatMessageResponse&& from) noexcept
      : UpdateChatMessageResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChatMessageFieldNumber = 1,
  };
  // .crm.ChatMessageModel chat_message = 1;
  bool has_chat_message() const;
  void clear_chat_message() ;
  const ::crm::ChatMessageModel& chat_message() const;
  PROTOBUF_NODISCARD ::crm::ChatMessageModel* release_chat_message();
  ::crm::ChatMessageModel* mutable_chat_message();
  void set_allocated_chat_message(::crm::ChatMessageModel* value);
  void unsafe_arena_set_allocated_chat_message(::crm::ChatMessageModel* value);
  ::crm::ChatMessageModel* unsafe_arena_release_chat_message();

  private:
  const ::crm::ChatMessageModel& _internal_chat_message() const;
  ::crm::ChatMessageModel* _internal_mutable_chat_message();

  public:
  // @@protoc_insertion_point(class_scope:crm.UpdateChatMessageResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateChatMessageResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crm::ChatMessageModel* chat_message_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class Organization final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.Organization) */ {
 public:
  inline Organization() : Organization(nullptr) {}
  ~Organization() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Organization* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Organization));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Organization(
      ::google::protobuf::internal::ConstantInitialized);

  inline Organization(const Organization& from) : Organization(nullptr, from) {}
  inline Organization(Organization&& from) noexcept
      : Organization(nullptr, std::move(from)) {}
  inline Organization& operator=(const Organization& from) {
    CopyFrom(from);
    return *this;
  }
  inline Organization& operator=(Organization&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Organization& default_instance() {
    return *internal_default_instance();
  }
  static inline const Organization* internal_default_instance() {
    return reinterpret_cast<const Organization*>(
        &_Organization_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Organization& a, Organization& b) { a.Swap(&b); }
  inline void Swap(Organization* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Organization* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Organization* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Organization>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Organization& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Organization& from) { Organization::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Organization* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.Organization"; }

 protected:
  explicit Organization(::google::protobuf::Arena* arena);
  Organization(::google::protobuf::Arena* arena, const Organization& from);
  Organization(::google::protobuf::Arena* arena, Organization&& from) noexcept
      : Organization(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kLegalNameFieldNumber = 3,
    kAddressFieldNumber = 4,
    kOrganizationIdFieldNumber = 1,
  };
  // optional string name = 2;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string legal_name = 3;
  bool has_legal_name() const;
  void clear_legal_name() ;
  const std::string& legal_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_legal_name(Arg_&& arg, Args_... args);
  std::string* mutable_legal_name();
  PROTOBUF_NODISCARD std::string* release_legal_name();
  void set_allocated_legal_name(std::string* value);

  private:
  const std::string& _internal_legal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_legal_name(
      const std::string& value);
  std::string* _internal_mutable_legal_name();

  public:
  // .crm.AddressModel address = 4;
  bool has_address() const;
  void clear_address() ;
  const ::crm::AddressModel& address() const;
  PROTOBUF_NODISCARD ::crm::AddressModel* release_address();
  ::crm::AddressModel* mutable_address();
  void set_allocated_address(::crm::AddressModel* value);
  void unsafe_arena_set_allocated_address(::crm::AddressModel* value);
  ::crm::AddressModel* unsafe_arena_release_address();

  private:
  const ::crm::AddressModel& _internal_address() const;
  ::crm::AddressModel* _internal_mutable_address();

  public:
  // optional int64 organization_id = 1;
  bool has_organization_id() const;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.Organization)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      39, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Organization& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr legal_name_;
    ::crm::AddressModel* address_;
    ::int64_t organization_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class ListTasksResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.ListTasksResponse) */ {
 public:
  inline ListTasksResponse() : ListTasksResponse(nullptr) {}
  ~ListTasksResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListTasksResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListTasksResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListTasksResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListTasksResponse(const ListTasksResponse& from) : ListTasksResponse(nullptr, from) {}
  inline ListTasksResponse(ListTasksResponse&& from) noexcept
      : ListTasksResponse(nullptr, std::move(from)) {}
  inline ListTasksResponse& operator=(const ListTasksResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListTasksResponse& operator=(ListTasksResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListTasksResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListTasksResponse* internal_default_instance() {
    return reinterpret_cast<const ListTasksResponse*>(
        &_ListTasksResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(ListTasksResponse& a, ListTasksResponse& b) { a.Swap(&b); }
  inline void Swap(ListTasksResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListTasksResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListTasksResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListTasksResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListTasksResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListTasksResponse& from) { ListTasksResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListTasksResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.ListTasksResponse"; }

 protected:
  explicit ListTasksResponse(::google::protobuf::Arena* arena);
  ListTasksResponse(::google::protobuf::Arena* arena, const ListTasksResponse& from);
  ListTasksResponse(::google::protobuf::Arena* arena, ListTasksResponse&& from) noexcept
      : ListTasksResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTasksFieldNumber = 1,
    kTotalCountFieldNumber = 2,
  };
  // repeated .crm.TaskModel tasks = 1;
  int tasks_size() const;
  private:
  int _internal_tasks_size() const;

  public:
  void clear_tasks() ;
  ::crm::TaskModel* mutable_tasks(int index);
  ::google::protobuf::RepeatedPtrField<::crm::TaskModel>* mutable_tasks();

  private:
  const ::google::protobuf::RepeatedPtrField<::crm::TaskModel>& _internal_tasks() const;
  ::google::protobuf::RepeatedPtrField<::crm::TaskModel>* _internal_mutable_tasks();
  public:
  const ::crm::TaskModel& tasks(int index) const;
  ::crm::TaskModel* add_tasks();
  const ::google::protobuf::RepeatedPtrField<::crm::TaskModel>& tasks() const;
  // int32 total_count = 2;
  void clear_total_count() ;
  ::int32_t total_count() const;
  void set_total_count(::int32_t value);

  private:
  ::int32_t _internal_total_count() const;
  void _internal_set_total_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.ListTasksResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListTasksResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::crm::TaskModel > tasks_;
    ::int32_t total_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class ListNotesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.ListNotesResponse) */ {
 public:
  inline ListNotesResponse() : ListNotesResponse(nullptr) {}
  ~ListNotesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListNotesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListNotesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListNotesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListNotesResponse(const ListNotesResponse& from) : ListNotesResponse(nullptr, from) {}
  inline ListNotesResponse(ListNotesResponse&& from) noexcept
      : ListNotesResponse(nullptr, std::move(from)) {}
  inline ListNotesResponse& operator=(const ListNotesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListNotesResponse& operator=(ListNotesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListNotesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListNotesResponse* internal_default_instance() {
    return reinterpret_cast<const ListNotesResponse*>(
        &_ListNotesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(ListNotesResponse& a, ListNotesResponse& b) { a.Swap(&b); }
  inline void Swap(ListNotesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListNotesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListNotesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListNotesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListNotesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListNotesResponse& from) { ListNotesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListNotesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.ListNotesResponse"; }

 protected:
  explicit ListNotesResponse(::google::protobuf::Arena* arena);
  ListNotesResponse(::google::protobuf::Arena* arena, const ListNotesResponse& from);
  ListNotesResponse(::google::protobuf::Arena* arena, ListNotesResponse&& from) noexcept
      : ListNotesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNotesFieldNumber = 1,
    kTotalCountFieldNumber = 2,
  };
  // repeated .crm.NoteModel notes = 1;
  int notes_size() const;
  private:
  int _internal_notes_size() const;

  public:
  void clear_notes() ;
  ::crm::NoteModel* mutable_notes(int index);
  ::google::protobuf::RepeatedPtrField<::crm::NoteModel>* mutable_notes();

  private:
  const ::google::protobuf::RepeatedPtrField<::crm::NoteModel>& _internal_notes() const;
  ::google::protobuf::RepeatedPtrField<::crm::NoteModel>* _internal_mutable_notes();
  public:
  const ::crm::NoteModel& notes(int index) const;
  ::crm::NoteModel* add_notes();
  const ::google::protobuf::RepeatedPtrField<::crm::NoteModel>& notes() const;
  // int32 total_count = 2;
  void clear_total_count() ;
  ::int32_t total_count() const;
  void set_total_count(::int32_t value);

  private:
  ::int32_t _internal_total_count() const;
  void _internal_set_total_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.ListNotesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListNotesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::crm::NoteModel > notes_;
    ::int32_t total_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class ListChatMessagesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.ListChatMessagesResponse) */ {
 public:
  inline ListChatMessagesResponse() : ListChatMessagesResponse(nullptr) {}
  ~ListChatMessagesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListChatMessagesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListChatMessagesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListChatMessagesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListChatMessagesResponse(const ListChatMessagesResponse& from) : ListChatMessagesResponse(nullptr, from) {}
  inline ListChatMessagesResponse(ListChatMessagesResponse&& from) noexcept
      : ListChatMessagesResponse(nullptr, std::move(from)) {}
  inline ListChatMessagesResponse& operator=(const ListChatMessagesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListChatMessagesResponse& operator=(ListChatMessagesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListChatMessagesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListChatMessagesResponse* internal_default_instance() {
    return reinterpret_cast<const ListChatMessagesResponse*>(
        &_ListChatMessagesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 45;
  friend void swap(ListChatMessagesResponse& a, ListChatMessagesResponse& b) { a.Swap(&b); }
  inline void Swap(ListChatMessagesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListChatMessagesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListChatMessagesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListChatMessagesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListChatMessagesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListChatMessagesResponse& from) { ListChatMessagesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListChatMessagesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.ListChatMessagesResponse"; }

 protected:
  explicit ListChatMessagesResponse(::google::protobuf::Arena* arena);
  ListChatMessagesResponse(::google::protobuf::Arena* arena, const ListChatMessagesResponse& from);
  ListChatMessagesResponse(::google::protobuf::Arena* arena, ListChatMessagesResponse&& from) noexcept
      : ListChatMessagesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChatMessagesFieldNumber = 1,
    kTotalCountFieldNumber = 2,
  };
  // repeated .crm.ChatMessageModel chat_messages = 1;
  int chat_messages_size() const;
  private:
  int _internal_chat_messages_size() const;

  public:
  void clear_chat_messages() ;
  ::crm::ChatMessageModel* mutable_chat_messages(int index);
  ::google::protobuf::RepeatedPtrField<::crm::ChatMessageModel>* mutable_chat_messages();

  private:
  const ::google::protobuf::RepeatedPtrField<::crm::ChatMessageModel>& _internal_chat_messages() const;
  ::google::protobuf::RepeatedPtrField<::crm::ChatMessageModel>* _internal_mutable_chat_messages();
  public:
  const ::crm::ChatMessageModel& chat_messages(int index) const;
  ::crm::ChatMessageModel* add_chat_messages();
  const ::google::protobuf::RepeatedPtrField<::crm::ChatMessageModel>& chat_messages() const;
  // int32 total_count = 2;
  void clear_total_count() ;
  ::int32_t total_count() const;
  void set_total_count(::int32_t value);

  private:
  ::int32_t _internal_total_count() const;
  void _internal_set_total_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.ListChatMessagesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListChatMessagesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::crm::ChatMessageModel > chat_messages_;
    ::int32_t total_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class GetTaskResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.GetTaskResponse) */ {
 public:
  inline GetTaskResponse() : GetTaskResponse(nullptr) {}
  ~GetTaskResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetTaskResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetTaskResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetTaskResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetTaskResponse(const GetTaskResponse& from) : GetTaskResponse(nullptr, from) {}
  inline GetTaskResponse(GetTaskResponse&& from) noexcept
      : GetTaskResponse(nullptr, std::move(from)) {}
  inline GetTaskResponse& operator=(const GetTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTaskResponse& operator=(GetTaskResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTaskResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTaskResponse* internal_default_instance() {
    return reinterpret_cast<const GetTaskResponse*>(
        &_GetTaskResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(GetTaskResponse& a, GetTaskResponse& b) { a.Swap(&b); }
  inline void Swap(GetTaskResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTaskResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTaskResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetTaskResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetTaskResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetTaskResponse& from) { GetTaskResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetTaskResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.GetTaskResponse"; }

 protected:
  explicit GetTaskResponse(::google::protobuf::Arena* arena);
  GetTaskResponse(::google::protobuf::Arena* arena, const GetTaskResponse& from);
  GetTaskResponse(::google::protobuf::Arena* arena, GetTaskResponse&& from) noexcept
      : GetTaskResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTaskFieldNumber = 1,
  };
  // .crm.TaskModel task = 1;
  bool has_task() const;
  void clear_task() ;
  const ::crm::TaskModel& task() const;
  PROTOBUF_NODISCARD ::crm::TaskModel* release_task();
  ::crm::TaskModel* mutable_task();
  void set_allocated_task(::crm::TaskModel* value);
  void unsafe_arena_set_allocated_task(::crm::TaskModel* value);
  ::crm::TaskModel* unsafe_arena_release_task();

  private:
  const ::crm::TaskModel& _internal_task() const;
  ::crm::TaskModel* _internal_mutable_task();

  public:
  // @@protoc_insertion_point(class_scope:crm.GetTaskResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetTaskResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crm::TaskModel* task_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class GetNoteResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.GetNoteResponse) */ {
 public:
  inline GetNoteResponse() : GetNoteResponse(nullptr) {}
  ~GetNoteResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetNoteResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetNoteResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetNoteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetNoteResponse(const GetNoteResponse& from) : GetNoteResponse(nullptr, from) {}
  inline GetNoteResponse(GetNoteResponse&& from) noexcept
      : GetNoteResponse(nullptr, std::move(from)) {}
  inline GetNoteResponse& operator=(const GetNoteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetNoteResponse& operator=(GetNoteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetNoteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetNoteResponse* internal_default_instance() {
    return reinterpret_cast<const GetNoteResponse*>(
        &_GetNoteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(GetNoteResponse& a, GetNoteResponse& b) { a.Swap(&b); }
  inline void Swap(GetNoteResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetNoteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetNoteResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetNoteResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetNoteResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetNoteResponse& from) { GetNoteResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetNoteResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.GetNoteResponse"; }

 protected:
  explicit GetNoteResponse(::google::protobuf::Arena* arena);
  GetNoteResponse(::google::protobuf::Arena* arena, const GetNoteResponse& from);
  GetNoteResponse(::google::protobuf::Arena* arena, GetNoteResponse&& from) noexcept
      : GetNoteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNoteFieldNumber = 1,
  };
  // .crm.NoteModel note = 1;
  bool has_note() const;
  void clear_note() ;
  const ::crm::NoteModel& note() const;
  PROTOBUF_NODISCARD ::crm::NoteModel* release_note();
  ::crm::NoteModel* mutable_note();
  void set_allocated_note(::crm::NoteModel* value);
  void unsafe_arena_set_allocated_note(::crm::NoteModel* value);
  ::crm::NoteModel* unsafe_arena_release_note();

  private:
  const ::crm::NoteModel& _internal_note() const;
  ::crm::NoteModel* _internal_mutable_note();

  public:
  // @@protoc_insertion_point(class_scope:crm.GetNoteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetNoteResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crm::NoteModel* note_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class GetChatMessageResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.GetChatMessageResponse) */ {
 public:
  inline GetChatMessageResponse() : GetChatMessageResponse(nullptr) {}
  ~GetChatMessageResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetChatMessageResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetChatMessageResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetChatMessageResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetChatMessageResponse(const GetChatMessageResponse& from) : GetChatMessageResponse(nullptr, from) {}
  inline GetChatMessageResponse(GetChatMessageResponse&& from) noexcept
      : GetChatMessageResponse(nullptr, std::move(from)) {}
  inline GetChatMessageResponse& operator=(const GetChatMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetChatMessageResponse& operator=(GetChatMessageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetChatMessageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetChatMessageResponse* internal_default_instance() {
    return reinterpret_cast<const GetChatMessageResponse*>(
        &_GetChatMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 43;
  friend void swap(GetChatMessageResponse& a, GetChatMessageResponse& b) { a.Swap(&b); }
  inline void Swap(GetChatMessageResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetChatMessageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetChatMessageResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetChatMessageResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetChatMessageResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetChatMessageResponse& from) { GetChatMessageResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetChatMessageResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.GetChatMessageResponse"; }

 protected:
  explicit GetChatMessageResponse(::google::protobuf::Arena* arena);
  GetChatMessageResponse(::google::protobuf::Arena* arena, const GetChatMessageResponse& from);
  GetChatMessageResponse(::google::protobuf::Arena* arena, GetChatMessageResponse&& from) noexcept
      : GetChatMessageResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChatMessageFieldNumber = 1,
  };
  // .crm.ChatMessageModel chat_message = 1;
  bool has_chat_message() const;
  void clear_chat_message() ;
  const ::crm::ChatMessageModel& chat_message() const;
  PROTOBUF_NODISCARD ::crm::ChatMessageModel* release_chat_message();
  ::crm::ChatMessageModel* mutable_chat_message();
  void set_allocated_chat_message(::crm::ChatMessageModel* value);
  void unsafe_arena_set_allocated_chat_message(::crm::ChatMessageModel* value);
  ::crm::ChatMessageModel* unsafe_arena_release_chat_message();

  private:
  const ::crm::ChatMessageModel& _internal_chat_message() const;
  ::crm::ChatMessageModel* _internal_mutable_chat_message();

  public:
  // @@protoc_insertion_point(class_scope:crm.GetChatMessageResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetChatMessageResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crm::ChatMessageModel* chat_message_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class CreateTaskResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.CreateTaskResponse) */ {
 public:
  inline CreateTaskResponse() : CreateTaskResponse(nullptr) {}
  ~CreateTaskResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateTaskResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateTaskResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateTaskResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateTaskResponse(const CreateTaskResponse& from) : CreateTaskResponse(nullptr, from) {}
  inline CreateTaskResponse(CreateTaskResponse&& from) noexcept
      : CreateTaskResponse(nullptr, std::move(from)) {}
  inline CreateTaskResponse& operator=(const CreateTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateTaskResponse& operator=(CreateTaskResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateTaskResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateTaskResponse* internal_default_instance() {
    return reinterpret_cast<const CreateTaskResponse*>(
        &_CreateTaskResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(CreateTaskResponse& a, CreateTaskResponse& b) { a.Swap(&b); }
  inline void Swap(CreateTaskResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateTaskResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateTaskResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateTaskResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateTaskResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateTaskResponse& from) { CreateTaskResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateTaskResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.CreateTaskResponse"; }

 protected:
  explicit CreateTaskResponse(::google::protobuf::Arena* arena);
  CreateTaskResponse(::google::protobuf::Arena* arena, const CreateTaskResponse& from);
  CreateTaskResponse(::google::protobuf::Arena* arena, CreateTaskResponse&& from) noexcept
      : CreateTaskResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTaskFieldNumber = 1,
  };
  // .crm.TaskModel task = 1;
  bool has_task() const;
  void clear_task() ;
  const ::crm::TaskModel& task() const;
  PROTOBUF_NODISCARD ::crm::TaskModel* release_task();
  ::crm::TaskModel* mutable_task();
  void set_allocated_task(::crm::TaskModel* value);
  void unsafe_arena_set_allocated_task(::crm::TaskModel* value);
  ::crm::TaskModel* unsafe_arena_release_task();

  private:
  const ::crm::TaskModel& _internal_task() const;
  ::crm::TaskModel* _internal_mutable_task();

  public:
  // @@protoc_insertion_point(class_scope:crm.CreateTaskResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateTaskResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crm::TaskModel* task_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class CreateNoteResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.CreateNoteResponse) */ {
 public:
  inline CreateNoteResponse() : CreateNoteResponse(nullptr) {}
  ~CreateNoteResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateNoteResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateNoteResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateNoteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateNoteResponse(const CreateNoteResponse& from) : CreateNoteResponse(nullptr, from) {}
  inline CreateNoteResponse(CreateNoteResponse&& from) noexcept
      : CreateNoteResponse(nullptr, std::move(from)) {}
  inline CreateNoteResponse& operator=(const CreateNoteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateNoteResponse& operator=(CreateNoteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateNoteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateNoteResponse* internal_default_instance() {
    return reinterpret_cast<const CreateNoteResponse*>(
        &_CreateNoteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(CreateNoteResponse& a, CreateNoteResponse& b) { a.Swap(&b); }
  inline void Swap(CreateNoteResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateNoteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateNoteResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateNoteResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateNoteResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateNoteResponse& from) { CreateNoteResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateNoteResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.CreateNoteResponse"; }

 protected:
  explicit CreateNoteResponse(::google::protobuf::Arena* arena);
  CreateNoteResponse(::google::protobuf::Arena* arena, const CreateNoteResponse& from);
  CreateNoteResponse(::google::protobuf::Arena* arena, CreateNoteResponse&& from) noexcept
      : CreateNoteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNoteFieldNumber = 1,
  };
  // .crm.NoteModel note = 1;
  bool has_note() const;
  void clear_note() ;
  const ::crm::NoteModel& note() const;
  PROTOBUF_NODISCARD ::crm::NoteModel* release_note();
  ::crm::NoteModel* mutable_note();
  void set_allocated_note(::crm::NoteModel* value);
  void unsafe_arena_set_allocated_note(::crm::NoteModel* value);
  ::crm::NoteModel* unsafe_arena_release_note();

  private:
  const ::crm::NoteModel& _internal_note() const;
  ::crm::NoteModel* _internal_mutable_note();

  public:
  // @@protoc_insertion_point(class_scope:crm.CreateNoteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateNoteResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crm::NoteModel* note_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class CreateChatMessageResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.CreateChatMessageResponse) */ {
 public:
  inline CreateChatMessageResponse() : CreateChatMessageResponse(nullptr) {}
  ~CreateChatMessageResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateChatMessageResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateChatMessageResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateChatMessageResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateChatMessageResponse(const CreateChatMessageResponse& from) : CreateChatMessageResponse(nullptr, from) {}
  inline CreateChatMessageResponse(CreateChatMessageResponse&& from) noexcept
      : CreateChatMessageResponse(nullptr, std::move(from)) {}
  inline CreateChatMessageResponse& operator=(const CreateChatMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateChatMessageResponse& operator=(CreateChatMessageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateChatMessageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateChatMessageResponse* internal_default_instance() {
    return reinterpret_cast<const CreateChatMessageResponse*>(
        &_CreateChatMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(CreateChatMessageResponse& a, CreateChatMessageResponse& b) { a.Swap(&b); }
  inline void Swap(CreateChatMessageResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateChatMessageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateChatMessageResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateChatMessageResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateChatMessageResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateChatMessageResponse& from) { CreateChatMessageResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateChatMessageResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.CreateChatMessageResponse"; }

 protected:
  explicit CreateChatMessageResponse(::google::protobuf::Arena* arena);
  CreateChatMessageResponse(::google::protobuf::Arena* arena, const CreateChatMessageResponse& from);
  CreateChatMessageResponse(::google::protobuf::Arena* arena, CreateChatMessageResponse&& from) noexcept
      : CreateChatMessageResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChatMessageFieldNumber = 1,
  };
  // .crm.ChatMessageModel chat_message = 1;
  bool has_chat_message() const;
  void clear_chat_message() ;
  const ::crm::ChatMessageModel& chat_message() const;
  PROTOBUF_NODISCARD ::crm::ChatMessageModel* release_chat_message();
  ::crm::ChatMessageModel* mutable_chat_message();
  void set_allocated_chat_message(::crm::ChatMessageModel* value);
  void unsafe_arena_set_allocated_chat_message(::crm::ChatMessageModel* value);
  ::crm::ChatMessageModel* unsafe_arena_release_chat_message();

  private:
  const ::crm::ChatMessageModel& _internal_chat_message() const;
  ::crm::ChatMessageModel* _internal_mutable_chat_message();

  public:
  // @@protoc_insertion_point(class_scope:crm.CreateChatMessageResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateChatMessageResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crm::ChatMessageModel* chat_message_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class Lead final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.Lead) */ {
 public:
  inline Lead() : Lead(nullptr) {}
  ~Lead() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Lead* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Lead));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Lead(
      ::google::protobuf::internal::ConstantInitialized);

  inline Lead(const Lead& from) : Lead(nullptr, from) {}
  inline Lead(Lead&& from) noexcept
      : Lead(nullptr, std::move(from)) {}
  inline Lead& operator=(const Lead& from) {
    CopyFrom(from);
    return *this;
  }
  inline Lead& operator=(Lead&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Lead& default_instance() {
    return *internal_default_instance();
  }
  static inline const Lead* internal_default_instance() {
    return reinterpret_cast<const Lead*>(
        &_Lead_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Lead& a, Lead& b) { a.Swap(&b); }
  inline void Swap(Lead* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Lead* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Lead* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Lead>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Lead& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Lead& from) { Lead::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Lead* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.Lead"; }

 protected:
  explicit Lead(::google::protobuf::Arena* arena);
  Lead(::google::protobuf::Arena* arena, const Lead& from);
  Lead(::google::protobuf::Arena* arena, Lead&& from) noexcept
      : Lead(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContactsFieldNumber = 5,
    kLeadNameFieldNumber = 2,
    kStageFieldNumber = 6,
    kCreatedAtFieldNumber = 9,
    kUpdatedAtFieldNumber = 10,
    kCounterpartyOrganizationFieldNumber = 4,
    kCreatedByUserFieldNumber = 8,
    kLeadIdFieldNumber = 1,
    kCreatedByOrganizationIdFieldNumber = 3,
    kEstimatedValueFieldNumber = 7,
  };
  // repeated .crm.Contact contacts = 5;
  int contacts_size() const;
  private:
  int _internal_contacts_size() const;

  public:
  void clear_contacts() ;
  ::crm::Contact* mutable_contacts(int index);
  ::google::protobuf::RepeatedPtrField<::crm::Contact>* mutable_contacts();

  private:
  const ::google::protobuf::RepeatedPtrField<::crm::Contact>& _internal_contacts() const;
  ::google::protobuf::RepeatedPtrField<::crm::Contact>* _internal_mutable_contacts();
  public:
  const ::crm::Contact& contacts(int index) const;
  ::crm::Contact* add_contacts();
  const ::google::protobuf::RepeatedPtrField<::crm::Contact>& contacts() const;
  // optional string lead_name = 2;
  bool has_lead_name() const;
  void clear_lead_name() ;
  const std::string& lead_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lead_name(Arg_&& arg, Args_... args);
  std::string* mutable_lead_name();
  PROTOBUF_NODISCARD std::string* release_lead_name();
  void set_allocated_lead_name(std::string* value);

  private:
  const std::string& _internal_lead_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lead_name(
      const std::string& value);
  std::string* _internal_mutable_lead_name();

  public:
  // string stage = 6;
  void clear_stage() ;
  const std::string& stage() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_stage(Arg_&& arg, Args_... args);
  std::string* mutable_stage();
  PROTOBUF_NODISCARD std::string* release_stage();
  void set_allocated_stage(std::string* value);

  private:
  const std::string& _internal_stage() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_stage(
      const std::string& value);
  std::string* _internal_mutable_stage();

  public:
  // optional string created_at = 9;
  bool has_created_at() const;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // optional string updated_at = 10;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // optional .crm.Organization counterparty_organization = 4;
  bool has_counterparty_organization() const;
  void clear_counterparty_organization() ;
  const ::crm::Organization& counterparty_organization() const;
  PROTOBUF_NODISCARD ::crm::Organization* release_counterparty_organization();
  ::crm::Organization* mutable_counterparty_organization();
  void set_allocated_counterparty_organization(::crm::Organization* value);
  void unsafe_arena_set_allocated_counterparty_organization(::crm::Organization* value);
  ::crm::Organization* unsafe_arena_release_counterparty_organization();

  private:
  const ::crm::Organization& _internal_counterparty_organization() const;
  ::crm::Organization* _internal_mutable_counterparty_organization();

  public:
  // optional .user.User created_by_user = 8;
  bool has_created_by_user() const;
  void clear_created_by_user() ;
  const ::user::User& created_by_user() const;
  PROTOBUF_NODISCARD ::user::User* release_created_by_user();
  ::user::User* mutable_created_by_user();
  void set_allocated_created_by_user(::user::User* value);
  void unsafe_arena_set_allocated_created_by_user(::user::User* value);
  ::user::User* unsafe_arena_release_created_by_user();

  private:
  const ::user::User& _internal_created_by_user() const;
  ::user::User* _internal_mutable_created_by_user();

  public:
  // optional int64 lead_id = 1;
  bool has_lead_id() const;
  void clear_lead_id() ;
  ::int64_t lead_id() const;
  void set_lead_id(::int64_t value);

  private:
  ::int64_t _internal_lead_id() const;
  void _internal_set_lead_id(::int64_t value);

  public:
  // optional int64 created_by_organization_id = 3;
  bool has_created_by_organization_id() const;
  void clear_created_by_organization_id() ;
  ::int64_t created_by_organization_id() const;
  void set_created_by_organization_id(::int64_t value);

  private:
  ::int64_t _internal_created_by_organization_id() const;
  void _internal_set_created_by_organization_id(::int64_t value);

  public:
  // optional double estimated_value = 7;
  bool has_estimated_value() const;
  void clear_estimated_value() ;
  double estimated_value() const;
  void set_estimated_value(double value);

  private:
  double _internal_estimated_value() const;
  void _internal_set_estimated_value(double value);

  public:
  // @@protoc_insertion_point(class_scope:crm.Lead)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 3,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Lead& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::crm::Contact > contacts_;
    ::google::protobuf::internal::ArenaStringPtr lead_name_;
    ::google::protobuf::internal::ArenaStringPtr stage_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::crm::Organization* counterparty_organization_;
    ::user::User* created_by_user_;
    ::int64_t lead_id_;
    ::int64_t created_by_organization_id_;
    double estimated_value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class UpdateLeadResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.UpdateLeadResponse) */ {
 public:
  inline UpdateLeadResponse() : UpdateLeadResponse(nullptr) {}
  ~UpdateLeadResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateLeadResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateLeadResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateLeadResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateLeadResponse(const UpdateLeadResponse& from) : UpdateLeadResponse(nullptr, from) {}
  inline UpdateLeadResponse(UpdateLeadResponse&& from) noexcept
      : UpdateLeadResponse(nullptr, std::move(from)) {}
  inline UpdateLeadResponse& operator=(const UpdateLeadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateLeadResponse& operator=(UpdateLeadResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateLeadResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateLeadResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateLeadResponse*>(
        &_UpdateLeadResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(UpdateLeadResponse& a, UpdateLeadResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateLeadResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateLeadResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateLeadResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateLeadResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateLeadResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateLeadResponse& from) { UpdateLeadResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateLeadResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.UpdateLeadResponse"; }

 protected:
  explicit UpdateLeadResponse(::google::protobuf::Arena* arena);
  UpdateLeadResponse(::google::protobuf::Arena* arena, const UpdateLeadResponse& from);
  UpdateLeadResponse(::google::protobuf::Arena* arena, UpdateLeadResponse&& from) noexcept
      : UpdateLeadResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeadFieldNumber = 1,
  };
  // .crm.Lead lead = 1;
  bool has_lead() const;
  void clear_lead() ;
  const ::crm::Lead& lead() const;
  PROTOBUF_NODISCARD ::crm::Lead* release_lead();
  ::crm::Lead* mutable_lead();
  void set_allocated_lead(::crm::Lead* value);
  void unsafe_arena_set_allocated_lead(::crm::Lead* value);
  ::crm::Lead* unsafe_arena_release_lead();

  private:
  const ::crm::Lead& _internal_lead() const;
  ::crm::Lead* _internal_mutable_lead();

  public:
  // @@protoc_insertion_point(class_scope:crm.UpdateLeadResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateLeadResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crm::Lead* lead_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class UpdateLeadRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.UpdateLeadRequest) */ {
 public:
  inline UpdateLeadRequest() : UpdateLeadRequest(nullptr) {}
  ~UpdateLeadRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateLeadRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateLeadRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateLeadRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateLeadRequest(const UpdateLeadRequest& from) : UpdateLeadRequest(nullptr, from) {}
  inline UpdateLeadRequest(UpdateLeadRequest&& from) noexcept
      : UpdateLeadRequest(nullptr, std::move(from)) {}
  inline UpdateLeadRequest& operator=(const UpdateLeadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateLeadRequest& operator=(UpdateLeadRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateLeadRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateLeadRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateLeadRequest*>(
        &_UpdateLeadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(UpdateLeadRequest& a, UpdateLeadRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateLeadRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateLeadRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateLeadRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateLeadRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateLeadRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateLeadRequest& from) { UpdateLeadRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateLeadRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.UpdateLeadRequest"; }

 protected:
  explicit UpdateLeadRequest(::google::protobuf::Arena* arena);
  UpdateLeadRequest(::google::protobuf::Arena* arena, const UpdateLeadRequest& from);
  UpdateLeadRequest(::google::protobuf::Arena* arena, UpdateLeadRequest&& from) noexcept
      : UpdateLeadRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeadFieldNumber = 1,
  };
  // .crm.Lead lead = 1;
  bool has_lead() const;
  void clear_lead() ;
  const ::crm::Lead& lead() const;
  PROTOBUF_NODISCARD ::crm::Lead* release_lead();
  ::crm::Lead* mutable_lead();
  void set_allocated_lead(::crm::Lead* value);
  void unsafe_arena_set_allocated_lead(::crm::Lead* value);
  ::crm::Lead* unsafe_arena_release_lead();

  private:
  const ::crm::Lead& _internal_lead() const;
  ::crm::Lead* _internal_mutable_lead();

  public:
  // @@protoc_insertion_point(class_scope:crm.UpdateLeadRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateLeadRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crm::Lead* lead_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class PatchLeadResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.PatchLeadResponse) */ {
 public:
  inline PatchLeadResponse() : PatchLeadResponse(nullptr) {}
  ~PatchLeadResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PatchLeadResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PatchLeadResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PatchLeadResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PatchLeadResponse(const PatchLeadResponse& from) : PatchLeadResponse(nullptr, from) {}
  inline PatchLeadResponse(PatchLeadResponse&& from) noexcept
      : PatchLeadResponse(nullptr, std::move(from)) {}
  inline PatchLeadResponse& operator=(const PatchLeadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PatchLeadResponse& operator=(PatchLeadResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PatchLeadResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PatchLeadResponse* internal_default_instance() {
    return reinterpret_cast<const PatchLeadResponse*>(
        &_PatchLeadResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(PatchLeadResponse& a, PatchLeadResponse& b) { a.Swap(&b); }
  inline void Swap(PatchLeadResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PatchLeadResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PatchLeadResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PatchLeadResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PatchLeadResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PatchLeadResponse& from) { PatchLeadResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PatchLeadResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.PatchLeadResponse"; }

 protected:
  explicit PatchLeadResponse(::google::protobuf::Arena* arena);
  PatchLeadResponse(::google::protobuf::Arena* arena, const PatchLeadResponse& from);
  PatchLeadResponse(::google::protobuf::Arena* arena, PatchLeadResponse&& from) noexcept
      : PatchLeadResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeadFieldNumber = 1,
  };
  // .crm.Lead lead = 1;
  bool has_lead() const;
  void clear_lead() ;
  const ::crm::Lead& lead() const;
  PROTOBUF_NODISCARD ::crm::Lead* release_lead();
  ::crm::Lead* mutable_lead();
  void set_allocated_lead(::crm::Lead* value);
  void unsafe_arena_set_allocated_lead(::crm::Lead* value);
  ::crm::Lead* unsafe_arena_release_lead();

  private:
  const ::crm::Lead& _internal_lead() const;
  ::crm::Lead* _internal_mutable_lead();

  public:
  // @@protoc_insertion_point(class_scope:crm.PatchLeadResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PatchLeadResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crm::Lead* lead_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class PatchLeadRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.PatchLeadRequest) */ {
 public:
  inline PatchLeadRequest() : PatchLeadRequest(nullptr) {}
  ~PatchLeadRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PatchLeadRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PatchLeadRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PatchLeadRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PatchLeadRequest(const PatchLeadRequest& from) : PatchLeadRequest(nullptr, from) {}
  inline PatchLeadRequest(PatchLeadRequest&& from) noexcept
      : PatchLeadRequest(nullptr, std::move(from)) {}
  inline PatchLeadRequest& operator=(const PatchLeadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PatchLeadRequest& operator=(PatchLeadRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PatchLeadRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PatchLeadRequest* internal_default_instance() {
    return reinterpret_cast<const PatchLeadRequest*>(
        &_PatchLeadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(PatchLeadRequest& a, PatchLeadRequest& b) { a.Swap(&b); }
  inline void Swap(PatchLeadRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PatchLeadRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PatchLeadRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PatchLeadRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PatchLeadRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PatchLeadRequest& from) { PatchLeadRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PatchLeadRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.PatchLeadRequest"; }

 protected:
  explicit PatchLeadRequest(::google::protobuf::Arena* arena);
  PatchLeadRequest(::google::protobuf::Arena* arena, const PatchLeadRequest& from);
  PatchLeadRequest(::google::protobuf::Arena* arena, PatchLeadRequest&& from) noexcept
      : PatchLeadRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeadFieldNumber = 1,
  };
  // .crm.Lead lead = 1;
  bool has_lead() const;
  void clear_lead() ;
  const ::crm::Lead& lead() const;
  PROTOBUF_NODISCARD ::crm::Lead* release_lead();
  ::crm::Lead* mutable_lead();
  void set_allocated_lead(::crm::Lead* value);
  void unsafe_arena_set_allocated_lead(::crm::Lead* value);
  ::crm::Lead* unsafe_arena_release_lead();

  private:
  const ::crm::Lead& _internal_lead() const;
  ::crm::Lead* _internal_mutable_lead();

  public:
  // @@protoc_insertion_point(class_scope:crm.PatchLeadRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PatchLeadRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crm::Lead* lead_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class ListLeadsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.ListLeadsResponse) */ {
 public:
  inline ListLeadsResponse() : ListLeadsResponse(nullptr) {}
  ~ListLeadsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListLeadsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListLeadsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListLeadsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListLeadsResponse(const ListLeadsResponse& from) : ListLeadsResponse(nullptr, from) {}
  inline ListLeadsResponse(ListLeadsResponse&& from) noexcept
      : ListLeadsResponse(nullptr, std::move(from)) {}
  inline ListLeadsResponse& operator=(const ListLeadsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListLeadsResponse& operator=(ListLeadsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListLeadsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListLeadsResponse* internal_default_instance() {
    return reinterpret_cast<const ListLeadsResponse*>(
        &_ListLeadsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(ListLeadsResponse& a, ListLeadsResponse& b) { a.Swap(&b); }
  inline void Swap(ListLeadsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListLeadsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListLeadsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListLeadsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListLeadsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListLeadsResponse& from) { ListLeadsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListLeadsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.ListLeadsResponse"; }

 protected:
  explicit ListLeadsResponse(::google::protobuf::Arena* arena);
  ListLeadsResponse(::google::protobuf::Arena* arena, const ListLeadsResponse& from);
  ListLeadsResponse(::google::protobuf::Arena* arena, ListLeadsResponse&& from) noexcept
      : ListLeadsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeadsFieldNumber = 1,
    kTotalCountFieldNumber = 2,
  };
  // repeated .crm.Lead leads = 1;
  int leads_size() const;
  private:
  int _internal_leads_size() const;

  public:
  void clear_leads() ;
  ::crm::Lead* mutable_leads(int index);
  ::google::protobuf::RepeatedPtrField<::crm::Lead>* mutable_leads();

  private:
  const ::google::protobuf::RepeatedPtrField<::crm::Lead>& _internal_leads() const;
  ::google::protobuf::RepeatedPtrField<::crm::Lead>* _internal_mutable_leads();
  public:
  const ::crm::Lead& leads(int index) const;
  ::crm::Lead* add_leads();
  const ::google::protobuf::RepeatedPtrField<::crm::Lead>& leads() const;
  // int32 total_count = 2;
  void clear_total_count() ;
  ::int32_t total_count() const;
  void set_total_count(::int32_t value);

  private:
  ::int32_t _internal_total_count() const;
  void _internal_set_total_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.ListLeadsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListLeadsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::crm::Lead > leads_;
    ::int32_t total_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class GetLeadResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.GetLeadResponse) */ {
 public:
  inline GetLeadResponse() : GetLeadResponse(nullptr) {}
  ~GetLeadResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetLeadResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetLeadResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetLeadResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetLeadResponse(const GetLeadResponse& from) : GetLeadResponse(nullptr, from) {}
  inline GetLeadResponse(GetLeadResponse&& from) noexcept
      : GetLeadResponse(nullptr, std::move(from)) {}
  inline GetLeadResponse& operator=(const GetLeadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLeadResponse& operator=(GetLeadResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLeadResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLeadResponse* internal_default_instance() {
    return reinterpret_cast<const GetLeadResponse*>(
        &_GetLeadResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(GetLeadResponse& a, GetLeadResponse& b) { a.Swap(&b); }
  inline void Swap(GetLeadResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLeadResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLeadResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetLeadResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLeadResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetLeadResponse& from) { GetLeadResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetLeadResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.GetLeadResponse"; }

 protected:
  explicit GetLeadResponse(::google::protobuf::Arena* arena);
  GetLeadResponse(::google::protobuf::Arena* arena, const GetLeadResponse& from);
  GetLeadResponse(::google::protobuf::Arena* arena, GetLeadResponse&& from) noexcept
      : GetLeadResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeadFieldNumber = 1,
  };
  // .crm.Lead lead = 1;
  bool has_lead() const;
  void clear_lead() ;
  const ::crm::Lead& lead() const;
  PROTOBUF_NODISCARD ::crm::Lead* release_lead();
  ::crm::Lead* mutable_lead();
  void set_allocated_lead(::crm::Lead* value);
  void unsafe_arena_set_allocated_lead(::crm::Lead* value);
  ::crm::Lead* unsafe_arena_release_lead();

  private:
  const ::crm::Lead& _internal_lead() const;
  ::crm::Lead* _internal_mutable_lead();

  public:
  // @@protoc_insertion_point(class_scope:crm.GetLeadResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetLeadResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crm::Lead* lead_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class CreateLeadResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.CreateLeadResponse) */ {
 public:
  inline CreateLeadResponse() : CreateLeadResponse(nullptr) {}
  ~CreateLeadResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateLeadResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateLeadResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateLeadResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateLeadResponse(const CreateLeadResponse& from) : CreateLeadResponse(nullptr, from) {}
  inline CreateLeadResponse(CreateLeadResponse&& from) noexcept
      : CreateLeadResponse(nullptr, std::move(from)) {}
  inline CreateLeadResponse& operator=(const CreateLeadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateLeadResponse& operator=(CreateLeadResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateLeadResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateLeadResponse* internal_default_instance() {
    return reinterpret_cast<const CreateLeadResponse*>(
        &_CreateLeadResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(CreateLeadResponse& a, CreateLeadResponse& b) { a.Swap(&b); }
  inline void Swap(CreateLeadResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateLeadResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateLeadResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateLeadResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateLeadResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateLeadResponse& from) { CreateLeadResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateLeadResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.CreateLeadResponse"; }

 protected:
  explicit CreateLeadResponse(::google::protobuf::Arena* arena);
  CreateLeadResponse(::google::protobuf::Arena* arena, const CreateLeadResponse& from);
  CreateLeadResponse(::google::protobuf::Arena* arena, CreateLeadResponse&& from) noexcept
      : CreateLeadResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeadFieldNumber = 1,
  };
  // .crm.Lead lead = 1;
  bool has_lead() const;
  void clear_lead() ;
  const ::crm::Lead& lead() const;
  PROTOBUF_NODISCARD ::crm::Lead* release_lead();
  ::crm::Lead* mutable_lead();
  void set_allocated_lead(::crm::Lead* value);
  void unsafe_arena_set_allocated_lead(::crm::Lead* value);
  ::crm::Lead* unsafe_arena_release_lead();

  private:
  const ::crm::Lead& _internal_lead() const;
  ::crm::Lead* _internal_mutable_lead();

  public:
  // @@protoc_insertion_point(class_scope:crm.CreateLeadResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateLeadResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crm::Lead* lead_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};
// -------------------------------------------------------------------

class CreateLeadRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.CreateLeadRequest) */ {
 public:
  inline CreateLeadRequest() : CreateLeadRequest(nullptr) {}
  ~CreateLeadRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateLeadRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateLeadRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateLeadRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateLeadRequest(const CreateLeadRequest& from) : CreateLeadRequest(nullptr, from) {}
  inline CreateLeadRequest(CreateLeadRequest&& from) noexcept
      : CreateLeadRequest(nullptr, std::move(from)) {}
  inline CreateLeadRequest& operator=(const CreateLeadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateLeadRequest& operator=(CreateLeadRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateLeadRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateLeadRequest* internal_default_instance() {
    return reinterpret_cast<const CreateLeadRequest*>(
        &_CreateLeadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(CreateLeadRequest& a, CreateLeadRequest& b) { a.Swap(&b); }
  inline void Swap(CreateLeadRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateLeadRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateLeadRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateLeadRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateLeadRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateLeadRequest& from) { CreateLeadRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateLeadRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.CreateLeadRequest"; }

 protected:
  explicit CreateLeadRequest(::google::protobuf::Arena* arena);
  CreateLeadRequest(::google::protobuf::Arena* arena, const CreateLeadRequest& from);
  CreateLeadRequest(::google::protobuf::Arena* arena, CreateLeadRequest&& from) noexcept
      : CreateLeadRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeadFieldNumber = 1,
  };
  // .crm.Lead lead = 1;
  bool has_lead() const;
  void clear_lead() ;
  const ::crm::Lead& lead() const;
  PROTOBUF_NODISCARD ::crm::Lead* release_lead();
  ::crm::Lead* mutable_lead();
  void set_allocated_lead(::crm::Lead* value);
  void unsafe_arena_set_allocated_lead(::crm::Lead* value);
  ::crm::Lead* unsafe_arena_release_lead();

  private:
  const ::crm::Lead& _internal_lead() const;
  ::crm::Lead* _internal_mutable_lead();

  public:
  // @@protoc_insertion_point(class_scope:crm.CreateLeadRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateLeadRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crm::Lead* lead_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_crm_2fcrm_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Organization

// optional int64 organization_id = 1;
inline bool Organization::has_organization_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Organization::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t Organization::organization_id() const {
  // @@protoc_insertion_point(field_get:crm.Organization.organization_id)
  return _internal_organization_id();
}
inline void Organization::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:crm.Organization.organization_id)
}
inline ::int64_t Organization::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void Organization::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// optional string name = 2;
inline bool Organization::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Organization::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Organization::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.Organization.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Organization::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.Organization.name)
}
inline std::string* Organization::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:crm.Organization.name)
  return _s;
}
inline const std::string& Organization::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Organization::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Organization::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Organization::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.Organization.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void Organization::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.Organization.name)
}

// optional string legal_name = 3;
inline bool Organization::has_legal_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Organization::clear_legal_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legal_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Organization::legal_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.Organization.legal_name)
  return _internal_legal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Organization::set_legal_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.legal_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.Organization.legal_name)
}
inline std::string* Organization::mutable_legal_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_legal_name();
  // @@protoc_insertion_point(field_mutable:crm.Organization.legal_name)
  return _s;
}
inline const std::string& Organization::_internal_legal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legal_name_.Get();
}
inline void Organization::_internal_set_legal_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.legal_name_.Set(value, GetArena());
}
inline std::string* Organization::_internal_mutable_legal_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.legal_name_.Mutable( GetArena());
}
inline std::string* Organization::release_legal_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.Organization.legal_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.legal_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.legal_name_.Set("", GetArena());
  }
  return released;
}
inline void Organization::set_allocated_legal_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.legal_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.legal_name_.IsDefault()) {
    _impl_.legal_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.Organization.legal_name)
}

// .crm.AddressModel address = 4;
inline bool Organization::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline void Organization::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ != nullptr) _impl_.address_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::crm::AddressModel& Organization::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::AddressModel* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::AddressModel&>(::crm::_AddressModel_default_instance_);
}
inline const ::crm::AddressModel& Organization::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.Organization.address)
  return _internal_address();
}
inline void Organization::unsafe_arena_set_allocated_address(::crm::AddressModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::crm::AddressModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.Organization.address)
}
inline ::crm::AddressModel* Organization::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::crm::AddressModel* released = _impl_.address_;
  _impl_.address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::AddressModel* Organization::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.Organization.address)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::crm::AddressModel* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::crm::AddressModel* Organization::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::AddressModel>(GetArena());
    _impl_.address_ = reinterpret_cast<::crm::AddressModel*>(p);
  }
  return _impl_.address_;
}
inline ::crm::AddressModel* Organization::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::crm::AddressModel* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:crm.Organization.address)
  return _msg;
}
inline void Organization::set_allocated_address(::crm::AddressModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.address_ = reinterpret_cast<::crm::AddressModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.Organization.address)
}

// -------------------------------------------------------------------

// Lead

// optional int64 lead_id = 1;
inline bool Lead::has_lead_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Lead::clear_lead_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t Lead::lead_id() const {
  // @@protoc_insertion_point(field_get:crm.Lead.lead_id)
  return _internal_lead_id();
}
inline void Lead::set_lead_id(::int64_t value) {
  _internal_set_lead_id(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:crm.Lead.lead_id)
}
inline ::int64_t Lead::_internal_lead_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_id_;
}
inline void Lead::_internal_set_lead_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = value;
}

// optional string lead_name = 2;
inline bool Lead::has_lead_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Lead::clear_lead_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Lead::lead_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.Lead.lead_name)
  return _internal_lead_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Lead::set_lead_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.lead_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.Lead.lead_name)
}
inline std::string* Lead::mutable_lead_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lead_name();
  // @@protoc_insertion_point(field_mutable:crm.Lead.lead_name)
  return _s;
}
inline const std::string& Lead::_internal_lead_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_name_.Get();
}
inline void Lead::_internal_set_lead_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.lead_name_.Set(value, GetArena());
}
inline std::string* Lead::_internal_mutable_lead_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.lead_name_.Mutable( GetArena());
}
inline std::string* Lead::release_lead_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.Lead.lead_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.lead_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.lead_name_.Set("", GetArena());
  }
  return released;
}
inline void Lead::set_allocated_lead_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.lead_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.lead_name_.IsDefault()) {
    _impl_.lead_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.Lead.lead_name)
}

// optional int64 created_by_organization_id = 3;
inline bool Lead::has_created_by_organization_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Lead::clear_created_by_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_organization_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int64_t Lead::created_by_organization_id() const {
  // @@protoc_insertion_point(field_get:crm.Lead.created_by_organization_id)
  return _internal_created_by_organization_id();
}
inline void Lead::set_created_by_organization_id(::int64_t value) {
  _internal_set_created_by_organization_id(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:crm.Lead.created_by_organization_id)
}
inline ::int64_t Lead::_internal_created_by_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_organization_id_;
}
inline void Lead::_internal_set_created_by_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_organization_id_ = value;
}

// optional .crm.Organization counterparty_organization = 4;
inline bool Lead::has_counterparty_organization() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.counterparty_organization_ != nullptr);
  return value;
}
inline void Lead::clear_counterparty_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counterparty_organization_ != nullptr) _impl_.counterparty_organization_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::crm::Organization& Lead::_internal_counterparty_organization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::Organization* p = _impl_.counterparty_organization_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::Organization&>(::crm::_Organization_default_instance_);
}
inline const ::crm::Organization& Lead::counterparty_organization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.Lead.counterparty_organization)
  return _internal_counterparty_organization();
}
inline void Lead::unsafe_arena_set_allocated_counterparty_organization(::crm::Organization* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.counterparty_organization_);
  }
  _impl_.counterparty_organization_ = reinterpret_cast<::crm::Organization*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.Lead.counterparty_organization)
}
inline ::crm::Organization* Lead::release_counterparty_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::crm::Organization* released = _impl_.counterparty_organization_;
  _impl_.counterparty_organization_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::Organization* Lead::unsafe_arena_release_counterparty_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.Lead.counterparty_organization)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::crm::Organization* temp = _impl_.counterparty_organization_;
  _impl_.counterparty_organization_ = nullptr;
  return temp;
}
inline ::crm::Organization* Lead::_internal_mutable_counterparty_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counterparty_organization_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::Organization>(GetArena());
    _impl_.counterparty_organization_ = reinterpret_cast<::crm::Organization*>(p);
  }
  return _impl_.counterparty_organization_;
}
inline ::crm::Organization* Lead::mutable_counterparty_organization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::crm::Organization* _msg = _internal_mutable_counterparty_organization();
  // @@protoc_insertion_point(field_mutable:crm.Lead.counterparty_organization)
  return _msg;
}
inline void Lead::set_allocated_counterparty_organization(::crm::Organization* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.counterparty_organization_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.counterparty_organization_ = reinterpret_cast<::crm::Organization*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.Lead.counterparty_organization)
}

// repeated .crm.Contact contacts = 5;
inline int Lead::_internal_contacts_size() const {
  return _internal_contacts().size();
}
inline int Lead::contacts_size() const {
  return _internal_contacts_size();
}
inline void Lead::clear_contacts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contacts_.Clear();
}
inline ::crm::Contact* Lead::mutable_contacts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:crm.Lead.contacts)
  return _internal_mutable_contacts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::crm::Contact>* Lead::mutable_contacts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:crm.Lead.contacts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_contacts();
}
inline const ::crm::Contact& Lead::contacts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.Lead.contacts)
  return _internal_contacts().Get(index);
}
inline ::crm::Contact* Lead::add_contacts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::crm::Contact* _add = _internal_mutable_contacts()->Add();
  // @@protoc_insertion_point(field_add:crm.Lead.contacts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::crm::Contact>& Lead::contacts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:crm.Lead.contacts)
  return _internal_contacts();
}
inline const ::google::protobuf::RepeatedPtrField<::crm::Contact>&
Lead::_internal_contacts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contacts_;
}
inline ::google::protobuf::RepeatedPtrField<::crm::Contact>*
Lead::_internal_mutable_contacts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.contacts_;
}

// string stage = 6;
inline void Lead::clear_stage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_.ClearToEmpty();
}
inline const std::string& Lead::stage() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.Lead.stage)
  return _internal_stage();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Lead::set_stage(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.Lead.stage)
}
inline std::string* Lead::mutable_stage() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_stage();
  // @@protoc_insertion_point(field_mutable:crm.Lead.stage)
  return _s;
}
inline const std::string& Lead::_internal_stage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stage_.Get();
}
inline void Lead::_internal_set_stage(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_.Set(value, GetArena());
}
inline std::string* Lead::_internal_mutable_stage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.stage_.Mutable( GetArena());
}
inline std::string* Lead::release_stage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.Lead.stage)
  return _impl_.stage_.Release();
}
inline void Lead::set_allocated_stage(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.stage_.IsDefault()) {
    _impl_.stage_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.Lead.stage)
}

// optional double estimated_value = 7;
inline bool Lead::has_estimated_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void Lead::clear_estimated_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.estimated_value_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline double Lead::estimated_value() const {
  // @@protoc_insertion_point(field_get:crm.Lead.estimated_value)
  return _internal_estimated_value();
}
inline void Lead::set_estimated_value(double value) {
  _internal_set_estimated_value(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:crm.Lead.estimated_value)
}
inline double Lead::_internal_estimated_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.estimated_value_;
}
inline void Lead::_internal_set_estimated_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.estimated_value_ = value;
}

// optional .user.User created_by_user = 8;
inline bool Lead::has_created_by_user() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_by_user_ != nullptr);
  return value;
}
inline const ::user::User& Lead::_internal_created_by_user() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::user::User* p = _impl_.created_by_user_;
  return p != nullptr ? *p : reinterpret_cast<const ::user::User&>(::user::_User_default_instance_);
}
inline const ::user::User& Lead::created_by_user() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.Lead.created_by_user)
  return _internal_created_by_user();
}
inline void Lead::unsafe_arena_set_allocated_created_by_user(::user::User* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_by_user_);
  }
  _impl_.created_by_user_ = reinterpret_cast<::user::User*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.Lead.created_by_user)
}
inline ::user::User* Lead::release_created_by_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::user::User* released = _impl_.created_by_user_;
  _impl_.created_by_user_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::user::User* Lead::unsafe_arena_release_created_by_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.Lead.created_by_user)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::user::User* temp = _impl_.created_by_user_;
  _impl_.created_by_user_ = nullptr;
  return temp;
}
inline ::user::User* Lead::_internal_mutable_created_by_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_by_user_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::user::User>(GetArena());
    _impl_.created_by_user_ = reinterpret_cast<::user::User*>(p);
  }
  return _impl_.created_by_user_;
}
inline ::user::User* Lead::mutable_created_by_user() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::user::User* _msg = _internal_mutable_created_by_user();
  // @@protoc_insertion_point(field_mutable:crm.Lead.created_by_user)
  return _msg;
}
inline void Lead::set_allocated_created_by_user(::user::User* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_by_user_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.created_by_user_ = reinterpret_cast<::user::User*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.Lead.created_by_user)
}

// optional string created_at = 9;
inline bool Lead::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Lead::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Lead::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.Lead.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Lead::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.Lead.created_at)
}
inline std::string* Lead::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:crm.Lead.created_at)
  return _s;
}
inline const std::string& Lead::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void Lead::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* Lead::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* Lead::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.Lead.created_at)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.created_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.created_at_.Set("", GetArena());
  }
  return released;
}
inline void Lead::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.Lead.created_at)
}

// optional string updated_at = 10;
inline bool Lead::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Lead::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& Lead::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.Lead.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Lead::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.Lead.updated_at)
}
inline std::string* Lead::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:crm.Lead.updated_at)
  return _s;
}
inline const std::string& Lead::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void Lead::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* Lead::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* Lead::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.Lead.updated_at)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.updated_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  return released;
}
inline void Lead::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_at_.IsDefault()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.Lead.updated_at)
}

// -------------------------------------------------------------------

// Contact

// optional int64 contact_id = 1;
inline bool Contact::has_contact_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Contact::clear_contact_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contact_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t Contact::contact_id() const {
  // @@protoc_insertion_point(field_get:crm.Contact.contact_id)
  return _internal_contact_id();
}
inline void Contact::set_contact_id(::int64_t value) {
  _internal_set_contact_id(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:crm.Contact.contact_id)
}
inline ::int64_t Contact::_internal_contact_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contact_id_;
}
inline void Contact::_internal_set_contact_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contact_id_ = value;
}

// optional int64 organization_id = 2;
inline bool Contact::has_organization_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Contact::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t Contact::organization_id() const {
  // @@protoc_insertion_point(field_get:crm.Contact.organization_id)
  return _internal_organization_id();
}
inline void Contact::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:crm.Contact.organization_id)
}
inline ::int64_t Contact::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void Contact::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// optional int64 lead_id = 3;
inline bool Contact::has_lead_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Contact::clear_lead_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t Contact::lead_id() const {
  // @@protoc_insertion_point(field_get:crm.Contact.lead_id)
  return _internal_lead_id();
}
inline void Contact::set_lead_id(::int64_t value) {
  _internal_set_lead_id(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:crm.Contact.lead_id)
}
inline ::int64_t Contact::_internal_lead_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_id_;
}
inline void Contact::_internal_set_lead_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = value;
}

// optional string contact_person = 4;
inline bool Contact::has_contact_person() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Contact::clear_contact_person() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contact_person_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Contact::contact_person() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.Contact.contact_person)
  return _internal_contact_person();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Contact::set_contact_person(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.contact_person_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.Contact.contact_person)
}
inline std::string* Contact::mutable_contact_person() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contact_person();
  // @@protoc_insertion_point(field_mutable:crm.Contact.contact_person)
  return _s;
}
inline const std::string& Contact::_internal_contact_person() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contact_person_.Get();
}
inline void Contact::_internal_set_contact_person(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.contact_person_.Set(value, GetArena());
}
inline std::string* Contact::_internal_mutable_contact_person() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.contact_person_.Mutable( GetArena());
}
inline std::string* Contact::release_contact_person() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.Contact.contact_person)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.contact_person_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.contact_person_.Set("", GetArena());
  }
  return released;
}
inline void Contact::set_allocated_contact_person(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.contact_person_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.contact_person_.IsDefault()) {
    _impl_.contact_person_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.Contact.contact_person)
}

// optional string phone_number = 5;
inline bool Contact::has_phone_number() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Contact::clear_phone_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phone_number_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Contact::phone_number() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.Contact.phone_number)
  return _internal_phone_number();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Contact::set_phone_number(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.phone_number_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.Contact.phone_number)
}
inline std::string* Contact::mutable_phone_number() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_phone_number();
  // @@protoc_insertion_point(field_mutable:crm.Contact.phone_number)
  return _s;
}
inline const std::string& Contact::_internal_phone_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.phone_number_.Get();
}
inline void Contact::_internal_set_phone_number(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.phone_number_.Set(value, GetArena());
}
inline std::string* Contact::_internal_mutable_phone_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.phone_number_.Mutable( GetArena());
}
inline std::string* Contact::release_phone_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.Contact.phone_number)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.phone_number_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.phone_number_.Set("", GetArena());
  }
  return released;
}
inline void Contact::set_allocated_phone_number(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.phone_number_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.phone_number_.IsDefault()) {
    _impl_.phone_number_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.Contact.phone_number)
}

// optional string email = 6;
inline bool Contact::has_email() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Contact::clear_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.email_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& Contact::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.Contact.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Contact::set_email(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.Contact.email)
}
inline std::string* Contact::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:crm.Contact.email)
  return _s;
}
inline const std::string& Contact::_internal_email() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.email_.Get();
}
inline void Contact::_internal_set_email(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.email_.Set(value, GetArena());
}
inline std::string* Contact::_internal_mutable_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* Contact::release_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.Contact.email)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.email_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.email_.Set("", GetArena());
  }
  return released;
}
inline void Contact::set_allocated_email(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.email_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.email_.IsDefault()) {
    _impl_.email_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.Contact.email)
}

// -------------------------------------------------------------------

// LeadModel

// optional int64 lead_id = 1;
inline bool LeadModel::has_lead_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void LeadModel::clear_lead_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t LeadModel::lead_id() const {
  // @@protoc_insertion_point(field_get:crm.LeadModel.lead_id)
  return _internal_lead_id();
}
inline void LeadModel::set_lead_id(::int64_t value) {
  _internal_set_lead_id(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:crm.LeadModel.lead_id)
}
inline ::int64_t LeadModel::_internal_lead_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_id_;
}
inline void LeadModel::_internal_set_lead_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = value;
}

// optional string lead_name = 2;
inline bool LeadModel::has_lead_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void LeadModel::clear_lead_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& LeadModel::lead_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.LeadModel.lead_name)
  return _internal_lead_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeadModel::set_lead_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.lead_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.LeadModel.lead_name)
}
inline std::string* LeadModel::mutable_lead_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lead_name();
  // @@protoc_insertion_point(field_mutable:crm.LeadModel.lead_name)
  return _s;
}
inline const std::string& LeadModel::_internal_lead_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_name_.Get();
}
inline void LeadModel::_internal_set_lead_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.lead_name_.Set(value, GetArena());
}
inline std::string* LeadModel::_internal_mutable_lead_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.lead_name_.Mutable( GetArena());
}
inline std::string* LeadModel::release_lead_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.LeadModel.lead_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.lead_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.lead_name_.Set("", GetArena());
  }
  return released;
}
inline void LeadModel::set_allocated_lead_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.lead_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.lead_name_.IsDefault()) {
    _impl_.lead_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.LeadModel.lead_name)
}

// optional int64 created_by_organization_id = 3;
inline bool LeadModel::has_created_by_organization_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void LeadModel::clear_created_by_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_organization_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t LeadModel::created_by_organization_id() const {
  // @@protoc_insertion_point(field_get:crm.LeadModel.created_by_organization_id)
  return _internal_created_by_organization_id();
}
inline void LeadModel::set_created_by_organization_id(::int64_t value) {
  _internal_set_created_by_organization_id(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:crm.LeadModel.created_by_organization_id)
}
inline ::int64_t LeadModel::_internal_created_by_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_organization_id_;
}
inline void LeadModel::_internal_set_created_by_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_organization_id_ = value;
}

// optional int64 counterparty_organization_id = 4;
inline bool LeadModel::has_counterparty_organization_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void LeadModel::clear_counterparty_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counterparty_organization_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t LeadModel::counterparty_organization_id() const {
  // @@protoc_insertion_point(field_get:crm.LeadModel.counterparty_organization_id)
  return _internal_counterparty_organization_id();
}
inline void LeadModel::set_counterparty_organization_id(::int64_t value) {
  _internal_set_counterparty_organization_id(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:crm.LeadModel.counterparty_organization_id)
}
inline ::int64_t LeadModel::_internal_counterparty_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.counterparty_organization_id_;
}
inline void LeadModel::_internal_set_counterparty_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counterparty_organization_id_ = value;
}

// string stage = 5;
inline void LeadModel::clear_stage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_.ClearToEmpty();
}
inline const std::string& LeadModel::stage() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.LeadModel.stage)
  return _internal_stage();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeadModel::set_stage(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.LeadModel.stage)
}
inline std::string* LeadModel::mutable_stage() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_stage();
  // @@protoc_insertion_point(field_mutable:crm.LeadModel.stage)
  return _s;
}
inline const std::string& LeadModel::_internal_stage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stage_.Get();
}
inline void LeadModel::_internal_set_stage(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_.Set(value, GetArena());
}
inline std::string* LeadModel::_internal_mutable_stage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.stage_.Mutable( GetArena());
}
inline std::string* LeadModel::release_stage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.LeadModel.stage)
  return _impl_.stage_.Release();
}
inline void LeadModel::set_allocated_stage(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.stage_.IsDefault()) {
    _impl_.stage_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.LeadModel.stage)
}

// optional double estimated_value = 6;
inline bool LeadModel::has_estimated_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void LeadModel::clear_estimated_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.estimated_value_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline double LeadModel::estimated_value() const {
  // @@protoc_insertion_point(field_get:crm.LeadModel.estimated_value)
  return _internal_estimated_value();
}
inline void LeadModel::set_estimated_value(double value) {
  _internal_set_estimated_value(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:crm.LeadModel.estimated_value)
}
inline double LeadModel::_internal_estimated_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.estimated_value_;
}
inline void LeadModel::_internal_set_estimated_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.estimated_value_ = value;
}

// optional int64 created_by_user_id = 7;
inline bool LeadModel::has_created_by_user_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void LeadModel::clear_created_by_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_user_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int64_t LeadModel::created_by_user_id() const {
  // @@protoc_insertion_point(field_get:crm.LeadModel.created_by_user_id)
  return _internal_created_by_user_id();
}
inline void LeadModel::set_created_by_user_id(::int64_t value) {
  _internal_set_created_by_user_id(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:crm.LeadModel.created_by_user_id)
}
inline ::int64_t LeadModel::_internal_created_by_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_user_id_;
}
inline void LeadModel::_internal_set_created_by_user_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_user_id_ = value;
}

// optional string created_at = 8;
inline bool LeadModel::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void LeadModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& LeadModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.LeadModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeadModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.LeadModel.created_at)
}
inline std::string* LeadModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:crm.LeadModel.created_at)
  return _s;
}
inline const std::string& LeadModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void LeadModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* LeadModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* LeadModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.LeadModel.created_at)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.created_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.created_at_.Set("", GetArena());
  }
  return released;
}
inline void LeadModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.LeadModel.created_at)
}

// optional string updated_at = 9;
inline bool LeadModel::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void LeadModel::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& LeadModel::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.LeadModel.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeadModel::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.LeadModel.updated_at)
}
inline std::string* LeadModel::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:crm.LeadModel.updated_at)
  return _s;
}
inline const std::string& LeadModel::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void LeadModel::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* LeadModel::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* LeadModel::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.LeadModel.updated_at)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.updated_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  return released;
}
inline void LeadModel::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_at_.IsDefault()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.LeadModel.updated_at)
}

// -------------------------------------------------------------------

// TaskModel

// int32 task_id = 1;
inline void TaskModel::clear_task_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_ = 0;
}
inline ::int32_t TaskModel::task_id() const {
  // @@protoc_insertion_point(field_get:crm.TaskModel.task_id)
  return _internal_task_id();
}
inline void TaskModel::set_task_id(::int32_t value) {
  _internal_set_task_id(value);
  // @@protoc_insertion_point(field_set:crm.TaskModel.task_id)
}
inline ::int32_t TaskModel::_internal_task_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.task_id_;
}
inline void TaskModel::_internal_set_task_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_ = value;
}

// int64 lead_id = 2;
inline void TaskModel::clear_lead_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = ::int64_t{0};
}
inline ::int64_t TaskModel::lead_id() const {
  // @@protoc_insertion_point(field_get:crm.TaskModel.lead_id)
  return _internal_lead_id();
}
inline void TaskModel::set_lead_id(::int64_t value) {
  _internal_set_lead_id(value);
  // @@protoc_insertion_point(field_set:crm.TaskModel.lead_id)
}
inline ::int64_t TaskModel::_internal_lead_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_id_;
}
inline void TaskModel::_internal_set_lead_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = value;
}

// int64 assigned_to = 3;
inline void TaskModel::clear_assigned_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.assigned_to_ = ::int64_t{0};
}
inline ::int64_t TaskModel::assigned_to() const {
  // @@protoc_insertion_point(field_get:crm.TaskModel.assigned_to)
  return _internal_assigned_to();
}
inline void TaskModel::set_assigned_to(::int64_t value) {
  _internal_set_assigned_to(value);
  // @@protoc_insertion_point(field_set:crm.TaskModel.assigned_to)
}
inline ::int64_t TaskModel::_internal_assigned_to() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.assigned_to_;
}
inline void TaskModel::_internal_set_assigned_to(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.assigned_to_ = value;
}

// string title = 4;
inline void TaskModel::clear_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& TaskModel::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.TaskModel.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TaskModel::set_title(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.TaskModel.title)
}
inline std::string* TaskModel::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:crm.TaskModel.title)
  return _s;
}
inline const std::string& TaskModel::_internal_title() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.title_.Get();
}
inline void TaskModel::_internal_set_title(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(value, GetArena());
}
inline std::string* TaskModel::_internal_mutable_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* TaskModel::release_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.TaskModel.title)
  return _impl_.title_.Release();
}
inline void TaskModel::set_allocated_title(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.title_.IsDefault()) {
    _impl_.title_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.TaskModel.title)
}

// string description = 5;
inline void TaskModel::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& TaskModel::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.TaskModel.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TaskModel::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.TaskModel.description)
}
inline std::string* TaskModel::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:crm.TaskModel.description)
  return _s;
}
inline const std::string& TaskModel::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void TaskModel::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* TaskModel::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* TaskModel::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.TaskModel.description)
  return _impl_.description_.Release();
}
inline void TaskModel::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.TaskModel.description)
}

// string status = 6;
inline void TaskModel::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& TaskModel::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.TaskModel.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TaskModel::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.TaskModel.status)
}
inline std::string* TaskModel::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:crm.TaskModel.status)
  return _s;
}
inline const std::string& TaskModel::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void TaskModel::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(value, GetArena());
}
inline std::string* TaskModel::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* TaskModel::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.TaskModel.status)
  return _impl_.status_.Release();
}
inline void TaskModel::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_.IsDefault()) {
    _impl_.status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.TaskModel.status)
}

// string from_time = 7;
inline void TaskModel::clear_from_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_time_.ClearToEmpty();
}
inline const std::string& TaskModel::from_time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.TaskModel.from_time)
  return _internal_from_time();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TaskModel::set_from_time(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_time_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.TaskModel.from_time)
}
inline std::string* TaskModel::mutable_from_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_from_time();
  // @@protoc_insertion_point(field_mutable:crm.TaskModel.from_time)
  return _s;
}
inline const std::string& TaskModel::_internal_from_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_time_.Get();
}
inline void TaskModel::_internal_set_from_time(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_time_.Set(value, GetArena());
}
inline std::string* TaskModel::_internal_mutable_from_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.from_time_.Mutable( GetArena());
}
inline std::string* TaskModel::release_from_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.TaskModel.from_time)
  return _impl_.from_time_.Release();
}
inline void TaskModel::set_allocated_from_time(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_time_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.from_time_.IsDefault()) {
    _impl_.from_time_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.TaskModel.from_time)
}

// string due_time = 8;
inline void TaskModel::clear_due_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.due_time_.ClearToEmpty();
}
inline const std::string& TaskModel::due_time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.TaskModel.due_time)
  return _internal_due_time();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TaskModel::set_due_time(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.due_time_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.TaskModel.due_time)
}
inline std::string* TaskModel::mutable_due_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_due_time();
  // @@protoc_insertion_point(field_mutable:crm.TaskModel.due_time)
  return _s;
}
inline const std::string& TaskModel::_internal_due_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.due_time_.Get();
}
inline void TaskModel::_internal_set_due_time(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.due_time_.Set(value, GetArena());
}
inline std::string* TaskModel::_internal_mutable_due_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.due_time_.Mutable( GetArena());
}
inline std::string* TaskModel::release_due_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.TaskModel.due_time)
  return _impl_.due_time_.Release();
}
inline void TaskModel::set_allocated_due_time(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.due_time_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.due_time_.IsDefault()) {
    _impl_.due_time_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.TaskModel.due_time)
}

// string created_at = 9;
inline void TaskModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& TaskModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.TaskModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TaskModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.TaskModel.created_at)
}
inline std::string* TaskModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:crm.TaskModel.created_at)
  return _s;
}
inline const std::string& TaskModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void TaskModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* TaskModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* TaskModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.TaskModel.created_at)
  return _impl_.created_at_.Release();
}
inline void TaskModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.TaskModel.created_at)
}

// string updated_at = 10;
inline void TaskModel::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
}
inline const std::string& TaskModel::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.TaskModel.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TaskModel::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.TaskModel.updated_at)
}
inline std::string* TaskModel::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:crm.TaskModel.updated_at)
  return _s;
}
inline const std::string& TaskModel::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void TaskModel::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* TaskModel::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* TaskModel::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.TaskModel.updated_at)
  return _impl_.updated_at_.Release();
}
inline void TaskModel::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_at_.IsDefault()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.TaskModel.updated_at)
}

// -------------------------------------------------------------------

// NoteModel

// int64 note_id = 1;
inline void NoteModel::clear_note_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.note_id_ = ::int64_t{0};
}
inline ::int64_t NoteModel::note_id() const {
  // @@protoc_insertion_point(field_get:crm.NoteModel.note_id)
  return _internal_note_id();
}
inline void NoteModel::set_note_id(::int64_t value) {
  _internal_set_note_id(value);
  // @@protoc_insertion_point(field_set:crm.NoteModel.note_id)
}
inline ::int64_t NoteModel::_internal_note_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.note_id_;
}
inline void NoteModel::_internal_set_note_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.note_id_ = value;
}

// int64 lead_id = 2;
inline void NoteModel::clear_lead_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = ::int64_t{0};
}
inline ::int64_t NoteModel::lead_id() const {
  // @@protoc_insertion_point(field_get:crm.NoteModel.lead_id)
  return _internal_lead_id();
}
inline void NoteModel::set_lead_id(::int64_t value) {
  _internal_set_lead_id(value);
  // @@protoc_insertion_point(field_set:crm.NoteModel.lead_id)
}
inline ::int64_t NoteModel::_internal_lead_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_id_;
}
inline void NoteModel::_internal_set_lead_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = value;
}

// int64 created_by = 3;
inline void NoteModel::clear_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = ::int64_t{0};
}
inline ::int64_t NoteModel::created_by() const {
  // @@protoc_insertion_point(field_get:crm.NoteModel.created_by)
  return _internal_created_by();
}
inline void NoteModel::set_created_by(::int64_t value) {
  _internal_set_created_by(value);
  // @@protoc_insertion_point(field_set:crm.NoteModel.created_by)
}
inline ::int64_t NoteModel::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_;
}
inline void NoteModel::_internal_set_created_by(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = value;
}

// string content = 4;
inline void NoteModel::clear_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.ClearToEmpty();
}
inline const std::string& NoteModel::content() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.NoteModel.content)
  return _internal_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NoteModel::set_content(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.NoteModel.content)
}
inline std::string* NoteModel::mutable_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:crm.NoteModel.content)
  return _s;
}
inline const std::string& NoteModel::_internal_content() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.content_.Get();
}
inline void NoteModel::_internal_set_content(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.Set(value, GetArena());
}
inline std::string* NoteModel::_internal_mutable_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.content_.Mutable( GetArena());
}
inline std::string* NoteModel::release_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.NoteModel.content)
  return _impl_.content_.Release();
}
inline void NoteModel::set_allocated_content(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.content_.IsDefault()) {
    _impl_.content_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.NoteModel.content)
}

// string created_at = 5;
inline void NoteModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& NoteModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.NoteModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NoteModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.NoteModel.created_at)
}
inline std::string* NoteModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:crm.NoteModel.created_at)
  return _s;
}
inline const std::string& NoteModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void NoteModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* NoteModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* NoteModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.NoteModel.created_at)
  return _impl_.created_at_.Release();
}
inline void NoteModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.NoteModel.created_at)
}

// string updated_at = 6;
inline void NoteModel::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
}
inline const std::string& NoteModel::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.NoteModel.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NoteModel::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.NoteModel.updated_at)
}
inline std::string* NoteModel::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:crm.NoteModel.updated_at)
  return _s;
}
inline const std::string& NoteModel::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void NoteModel::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* NoteModel::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* NoteModel::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.NoteModel.updated_at)
  return _impl_.updated_at_.Release();
}
inline void NoteModel::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_at_.IsDefault()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.NoteModel.updated_at)
}

// -------------------------------------------------------------------

// ChatMessageModel

// int64 message_id = 1;
inline void ChatMessageModel::clear_message_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_id_ = ::int64_t{0};
}
inline ::int64_t ChatMessageModel::message_id() const {
  // @@protoc_insertion_point(field_get:crm.ChatMessageModel.message_id)
  return _internal_message_id();
}
inline void ChatMessageModel::set_message_id(::int64_t value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:crm.ChatMessageModel.message_id)
}
inline ::int64_t ChatMessageModel::_internal_message_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_id_;
}
inline void ChatMessageModel::_internal_set_message_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_id_ = value;
}

// int64 lead_id = 2;
inline void ChatMessageModel::clear_lead_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = ::int64_t{0};
}
inline ::int64_t ChatMessageModel::lead_id() const {
  // @@protoc_insertion_point(field_get:crm.ChatMessageModel.lead_id)
  return _internal_lead_id();
}
inline void ChatMessageModel::set_lead_id(::int64_t value) {
  _internal_set_lead_id(value);
  // @@protoc_insertion_point(field_set:crm.ChatMessageModel.lead_id)
}
inline ::int64_t ChatMessageModel::_internal_lead_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_id_;
}
inline void ChatMessageModel::_internal_set_lead_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = value;
}

// int64 created_by = 3;
inline void ChatMessageModel::clear_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = ::int64_t{0};
}
inline ::int64_t ChatMessageModel::created_by() const {
  // @@protoc_insertion_point(field_get:crm.ChatMessageModel.created_by)
  return _internal_created_by();
}
inline void ChatMessageModel::set_created_by(::int64_t value) {
  _internal_set_created_by(value);
  // @@protoc_insertion_point(field_set:crm.ChatMessageModel.created_by)
}
inline ::int64_t ChatMessageModel::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_;
}
inline void ChatMessageModel::_internal_set_created_by(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = value;
}

// string message_text = 4;
inline void ChatMessageModel::clear_message_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_text_.ClearToEmpty();
}
inline const std::string& ChatMessageModel::message_text() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.ChatMessageModel.message_text)
  return _internal_message_text();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChatMessageModel::set_message_text(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_text_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.ChatMessageModel.message_text)
}
inline std::string* ChatMessageModel::mutable_message_text() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message_text();
  // @@protoc_insertion_point(field_mutable:crm.ChatMessageModel.message_text)
  return _s;
}
inline const std::string& ChatMessageModel::_internal_message_text() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_text_.Get();
}
inline void ChatMessageModel::_internal_set_message_text(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_text_.Set(value, GetArena());
}
inline std::string* ChatMessageModel::_internal_mutable_message_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_text_.Mutable( GetArena());
}
inline std::string* ChatMessageModel::release_message_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.ChatMessageModel.message_text)
  return _impl_.message_text_.Release();
}
inline void ChatMessageModel::set_allocated_message_text(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_text_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_text_.IsDefault()) {
    _impl_.message_text_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.ChatMessageModel.message_text)
}

// string created_at = 5;
inline void ChatMessageModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& ChatMessageModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.ChatMessageModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChatMessageModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.ChatMessageModel.created_at)
}
inline std::string* ChatMessageModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:crm.ChatMessageModel.created_at)
  return _s;
}
inline const std::string& ChatMessageModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void ChatMessageModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* ChatMessageModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* ChatMessageModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.ChatMessageModel.created_at)
  return _impl_.created_at_.Release();
}
inline void ChatMessageModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.ChatMessageModel.created_at)
}

// -------------------------------------------------------------------

// AddressModel

// optional int64 id = 1;
inline bool AddressModel::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void AddressModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t AddressModel::id() const {
  // @@protoc_insertion_point(field_get:crm.AddressModel.id)
  return _internal_id();
}
inline void AddressModel::set_id(::int64_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:crm.AddressModel.id)
}
inline ::int64_t AddressModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void AddressModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// optional string address_line = 2;
inline bool AddressModel::has_address_line() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AddressModel::clear_address_line() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_line_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AddressModel::address_line() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.AddressModel.address_line)
  return _internal_address_line();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddressModel::set_address_line(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.address_line_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.AddressModel.address_line)
}
inline std::string* AddressModel::mutable_address_line() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address_line();
  // @@protoc_insertion_point(field_mutable:crm.AddressModel.address_line)
  return _s;
}
inline const std::string& AddressModel::_internal_address_line() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_line_.Get();
}
inline void AddressModel::_internal_set_address_line(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.address_line_.Set(value, GetArena());
}
inline std::string* AddressModel::_internal_mutable_address_line() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.address_line_.Mutable( GetArena());
}
inline std::string* AddressModel::release_address_line() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.AddressModel.address_line)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.address_line_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.address_line_.Set("", GetArena());
  }
  return released;
}
inline void AddressModel::set_allocated_address_line(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.address_line_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_line_.IsDefault()) {
    _impl_.address_line_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.AddressModel.address_line)
}

// -------------------------------------------------------------------

// CreateLeadRequest

// .crm.Lead lead = 1;
inline bool CreateLeadRequest::has_lead() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lead_ != nullptr);
  return value;
}
inline void CreateLeadRequest::clear_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lead_ != nullptr) _impl_.lead_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crm::Lead& CreateLeadRequest::_internal_lead() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::Lead* p = _impl_.lead_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::Lead&>(::crm::_Lead_default_instance_);
}
inline const ::crm::Lead& CreateLeadRequest::lead() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.CreateLeadRequest.lead)
  return _internal_lead();
}
inline void CreateLeadRequest::unsafe_arena_set_allocated_lead(::crm::Lead* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lead_);
  }
  _impl_.lead_ = reinterpret_cast<::crm::Lead*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.CreateLeadRequest.lead)
}
inline ::crm::Lead* CreateLeadRequest::release_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::Lead* released = _impl_.lead_;
  _impl_.lead_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::Lead* CreateLeadRequest::unsafe_arena_release_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.CreateLeadRequest.lead)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::Lead* temp = _impl_.lead_;
  _impl_.lead_ = nullptr;
  return temp;
}
inline ::crm::Lead* CreateLeadRequest::_internal_mutable_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lead_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::Lead>(GetArena());
    _impl_.lead_ = reinterpret_cast<::crm::Lead*>(p);
  }
  return _impl_.lead_;
}
inline ::crm::Lead* CreateLeadRequest::mutable_lead() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crm::Lead* _msg = _internal_mutable_lead();
  // @@protoc_insertion_point(field_mutable:crm.CreateLeadRequest.lead)
  return _msg;
}
inline void CreateLeadRequest::set_allocated_lead(::crm::Lead* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.lead_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.lead_ = reinterpret_cast<::crm::Lead*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.CreateLeadRequest.lead)
}

// -------------------------------------------------------------------

// CreateLeadResponse

// .crm.Lead lead = 1;
inline bool CreateLeadResponse::has_lead() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lead_ != nullptr);
  return value;
}
inline void CreateLeadResponse::clear_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lead_ != nullptr) _impl_.lead_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crm::Lead& CreateLeadResponse::_internal_lead() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::Lead* p = _impl_.lead_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::Lead&>(::crm::_Lead_default_instance_);
}
inline const ::crm::Lead& CreateLeadResponse::lead() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.CreateLeadResponse.lead)
  return _internal_lead();
}
inline void CreateLeadResponse::unsafe_arena_set_allocated_lead(::crm::Lead* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lead_);
  }
  _impl_.lead_ = reinterpret_cast<::crm::Lead*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.CreateLeadResponse.lead)
}
inline ::crm::Lead* CreateLeadResponse::release_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::Lead* released = _impl_.lead_;
  _impl_.lead_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::Lead* CreateLeadResponse::unsafe_arena_release_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.CreateLeadResponse.lead)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::Lead* temp = _impl_.lead_;
  _impl_.lead_ = nullptr;
  return temp;
}
inline ::crm::Lead* CreateLeadResponse::_internal_mutable_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lead_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::Lead>(GetArena());
    _impl_.lead_ = reinterpret_cast<::crm::Lead*>(p);
  }
  return _impl_.lead_;
}
inline ::crm::Lead* CreateLeadResponse::mutable_lead() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crm::Lead* _msg = _internal_mutable_lead();
  // @@protoc_insertion_point(field_mutable:crm.CreateLeadResponse.lead)
  return _msg;
}
inline void CreateLeadResponse::set_allocated_lead(::crm::Lead* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.lead_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.lead_ = reinterpret_cast<::crm::Lead*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.CreateLeadResponse.lead)
}

// -------------------------------------------------------------------

// GetLeadRequest

// int64 lead_id = 1;
inline void GetLeadRequest::clear_lead_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = ::int64_t{0};
}
inline ::int64_t GetLeadRequest::lead_id() const {
  // @@protoc_insertion_point(field_get:crm.GetLeadRequest.lead_id)
  return _internal_lead_id();
}
inline void GetLeadRequest::set_lead_id(::int64_t value) {
  _internal_set_lead_id(value);
  // @@protoc_insertion_point(field_set:crm.GetLeadRequest.lead_id)
}
inline ::int64_t GetLeadRequest::_internal_lead_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_id_;
}
inline void GetLeadRequest::_internal_set_lead_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = value;
}

// -------------------------------------------------------------------

// GetLeadResponse

// .crm.Lead lead = 1;
inline bool GetLeadResponse::has_lead() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lead_ != nullptr);
  return value;
}
inline void GetLeadResponse::clear_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lead_ != nullptr) _impl_.lead_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crm::Lead& GetLeadResponse::_internal_lead() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::Lead* p = _impl_.lead_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::Lead&>(::crm::_Lead_default_instance_);
}
inline const ::crm::Lead& GetLeadResponse::lead() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.GetLeadResponse.lead)
  return _internal_lead();
}
inline void GetLeadResponse::unsafe_arena_set_allocated_lead(::crm::Lead* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lead_);
  }
  _impl_.lead_ = reinterpret_cast<::crm::Lead*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.GetLeadResponse.lead)
}
inline ::crm::Lead* GetLeadResponse::release_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::Lead* released = _impl_.lead_;
  _impl_.lead_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::Lead* GetLeadResponse::unsafe_arena_release_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.GetLeadResponse.lead)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::Lead* temp = _impl_.lead_;
  _impl_.lead_ = nullptr;
  return temp;
}
inline ::crm::Lead* GetLeadResponse::_internal_mutable_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lead_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::Lead>(GetArena());
    _impl_.lead_ = reinterpret_cast<::crm::Lead*>(p);
  }
  return _impl_.lead_;
}
inline ::crm::Lead* GetLeadResponse::mutable_lead() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crm::Lead* _msg = _internal_mutable_lead();
  // @@protoc_insertion_point(field_mutable:crm.GetLeadResponse.lead)
  return _msg;
}
inline void GetLeadResponse::set_allocated_lead(::crm::Lead* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.lead_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.lead_ = reinterpret_cast<::crm::Lead*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.GetLeadResponse.lead)
}

// -------------------------------------------------------------------

// ListLeadsRequest

// int64 organization_id = 1;
inline void ListLeadsRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t ListLeadsRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:crm.ListLeadsRequest.organization_id)
  return _internal_organization_id();
}
inline void ListLeadsRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:crm.ListLeadsRequest.organization_id)
}
inline ::int64_t ListLeadsRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void ListLeadsRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// int32 limit = 2;
inline void ListLeadsRequest::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = 0;
}
inline ::int32_t ListLeadsRequest::limit() const {
  // @@protoc_insertion_point(field_get:crm.ListLeadsRequest.limit)
  return _internal_limit();
}
inline void ListLeadsRequest::set_limit(::int32_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:crm.ListLeadsRequest.limit)
}
inline ::int32_t ListLeadsRequest::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void ListLeadsRequest::_internal_set_limit(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// int32 offset = 3;
inline void ListLeadsRequest::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0;
}
inline ::int32_t ListLeadsRequest::offset() const {
  // @@protoc_insertion_point(field_get:crm.ListLeadsRequest.offset)
  return _internal_offset();
}
inline void ListLeadsRequest::set_offset(::int32_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:crm.ListLeadsRequest.offset)
}
inline ::int32_t ListLeadsRequest::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void ListLeadsRequest::_internal_set_offset(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// -------------------------------------------------------------------

// ListLeadsResponse

// repeated .crm.Lead leads = 1;
inline int ListLeadsResponse::_internal_leads_size() const {
  return _internal_leads().size();
}
inline int ListLeadsResponse::leads_size() const {
  return _internal_leads_size();
}
inline void ListLeadsResponse::clear_leads() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leads_.Clear();
}
inline ::crm::Lead* ListLeadsResponse::mutable_leads(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:crm.ListLeadsResponse.leads)
  return _internal_mutable_leads()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::crm::Lead>* ListLeadsResponse::mutable_leads()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:crm.ListLeadsResponse.leads)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_leads();
}
inline const ::crm::Lead& ListLeadsResponse::leads(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.ListLeadsResponse.leads)
  return _internal_leads().Get(index);
}
inline ::crm::Lead* ListLeadsResponse::add_leads() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::crm::Lead* _add = _internal_mutable_leads()->Add();
  // @@protoc_insertion_point(field_add:crm.ListLeadsResponse.leads)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::crm::Lead>& ListLeadsResponse::leads() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:crm.ListLeadsResponse.leads)
  return _internal_leads();
}
inline const ::google::protobuf::RepeatedPtrField<::crm::Lead>&
ListLeadsResponse::_internal_leads() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.leads_;
}
inline ::google::protobuf::RepeatedPtrField<::crm::Lead>*
ListLeadsResponse::_internal_mutable_leads() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.leads_;
}

// int32 total_count = 2;
inline void ListLeadsResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = 0;
}
inline ::int32_t ListLeadsResponse::total_count() const {
  // @@protoc_insertion_point(field_get:crm.ListLeadsResponse.total_count)
  return _internal_total_count();
}
inline void ListLeadsResponse::set_total_count(::int32_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:crm.ListLeadsResponse.total_count)
}
inline ::int32_t ListLeadsResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void ListLeadsResponse::_internal_set_total_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// -------------------------------------------------------------------

// UpdateLeadRequest

// .crm.Lead lead = 1;
inline bool UpdateLeadRequest::has_lead() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lead_ != nullptr);
  return value;
}
inline void UpdateLeadRequest::clear_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lead_ != nullptr) _impl_.lead_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crm::Lead& UpdateLeadRequest::_internal_lead() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::Lead* p = _impl_.lead_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::Lead&>(::crm::_Lead_default_instance_);
}
inline const ::crm::Lead& UpdateLeadRequest::lead() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.UpdateLeadRequest.lead)
  return _internal_lead();
}
inline void UpdateLeadRequest::unsafe_arena_set_allocated_lead(::crm::Lead* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lead_);
  }
  _impl_.lead_ = reinterpret_cast<::crm::Lead*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.UpdateLeadRequest.lead)
}
inline ::crm::Lead* UpdateLeadRequest::release_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::Lead* released = _impl_.lead_;
  _impl_.lead_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::Lead* UpdateLeadRequest::unsafe_arena_release_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.UpdateLeadRequest.lead)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::Lead* temp = _impl_.lead_;
  _impl_.lead_ = nullptr;
  return temp;
}
inline ::crm::Lead* UpdateLeadRequest::_internal_mutable_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lead_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::Lead>(GetArena());
    _impl_.lead_ = reinterpret_cast<::crm::Lead*>(p);
  }
  return _impl_.lead_;
}
inline ::crm::Lead* UpdateLeadRequest::mutable_lead() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crm::Lead* _msg = _internal_mutable_lead();
  // @@protoc_insertion_point(field_mutable:crm.UpdateLeadRequest.lead)
  return _msg;
}
inline void UpdateLeadRequest::set_allocated_lead(::crm::Lead* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.lead_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.lead_ = reinterpret_cast<::crm::Lead*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.UpdateLeadRequest.lead)
}

// -------------------------------------------------------------------

// UpdateLeadResponse

// .crm.Lead lead = 1;
inline bool UpdateLeadResponse::has_lead() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lead_ != nullptr);
  return value;
}
inline void UpdateLeadResponse::clear_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lead_ != nullptr) _impl_.lead_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crm::Lead& UpdateLeadResponse::_internal_lead() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::Lead* p = _impl_.lead_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::Lead&>(::crm::_Lead_default_instance_);
}
inline const ::crm::Lead& UpdateLeadResponse::lead() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.UpdateLeadResponse.lead)
  return _internal_lead();
}
inline void UpdateLeadResponse::unsafe_arena_set_allocated_lead(::crm::Lead* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lead_);
  }
  _impl_.lead_ = reinterpret_cast<::crm::Lead*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.UpdateLeadResponse.lead)
}
inline ::crm::Lead* UpdateLeadResponse::release_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::Lead* released = _impl_.lead_;
  _impl_.lead_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::Lead* UpdateLeadResponse::unsafe_arena_release_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.UpdateLeadResponse.lead)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::Lead* temp = _impl_.lead_;
  _impl_.lead_ = nullptr;
  return temp;
}
inline ::crm::Lead* UpdateLeadResponse::_internal_mutable_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lead_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::Lead>(GetArena());
    _impl_.lead_ = reinterpret_cast<::crm::Lead*>(p);
  }
  return _impl_.lead_;
}
inline ::crm::Lead* UpdateLeadResponse::mutable_lead() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crm::Lead* _msg = _internal_mutable_lead();
  // @@protoc_insertion_point(field_mutable:crm.UpdateLeadResponse.lead)
  return _msg;
}
inline void UpdateLeadResponse::set_allocated_lead(::crm::Lead* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.lead_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.lead_ = reinterpret_cast<::crm::Lead*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.UpdateLeadResponse.lead)
}

// -------------------------------------------------------------------

// PatchLeadRequest

// .crm.Lead lead = 1;
inline bool PatchLeadRequest::has_lead() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lead_ != nullptr);
  return value;
}
inline void PatchLeadRequest::clear_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lead_ != nullptr) _impl_.lead_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crm::Lead& PatchLeadRequest::_internal_lead() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::Lead* p = _impl_.lead_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::Lead&>(::crm::_Lead_default_instance_);
}
inline const ::crm::Lead& PatchLeadRequest::lead() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.PatchLeadRequest.lead)
  return _internal_lead();
}
inline void PatchLeadRequest::unsafe_arena_set_allocated_lead(::crm::Lead* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lead_);
  }
  _impl_.lead_ = reinterpret_cast<::crm::Lead*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.PatchLeadRequest.lead)
}
inline ::crm::Lead* PatchLeadRequest::release_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::Lead* released = _impl_.lead_;
  _impl_.lead_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::Lead* PatchLeadRequest::unsafe_arena_release_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.PatchLeadRequest.lead)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::Lead* temp = _impl_.lead_;
  _impl_.lead_ = nullptr;
  return temp;
}
inline ::crm::Lead* PatchLeadRequest::_internal_mutable_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lead_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::Lead>(GetArena());
    _impl_.lead_ = reinterpret_cast<::crm::Lead*>(p);
  }
  return _impl_.lead_;
}
inline ::crm::Lead* PatchLeadRequest::mutable_lead() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crm::Lead* _msg = _internal_mutable_lead();
  // @@protoc_insertion_point(field_mutable:crm.PatchLeadRequest.lead)
  return _msg;
}
inline void PatchLeadRequest::set_allocated_lead(::crm::Lead* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.lead_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.lead_ = reinterpret_cast<::crm::Lead*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.PatchLeadRequest.lead)
}

// -------------------------------------------------------------------

// PatchLeadResponse

// .crm.Lead lead = 1;
inline bool PatchLeadResponse::has_lead() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lead_ != nullptr);
  return value;
}
inline void PatchLeadResponse::clear_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lead_ != nullptr) _impl_.lead_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crm::Lead& PatchLeadResponse::_internal_lead() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::Lead* p = _impl_.lead_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::Lead&>(::crm::_Lead_default_instance_);
}
inline const ::crm::Lead& PatchLeadResponse::lead() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.PatchLeadResponse.lead)
  return _internal_lead();
}
inline void PatchLeadResponse::unsafe_arena_set_allocated_lead(::crm::Lead* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lead_);
  }
  _impl_.lead_ = reinterpret_cast<::crm::Lead*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.PatchLeadResponse.lead)
}
inline ::crm::Lead* PatchLeadResponse::release_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::Lead* released = _impl_.lead_;
  _impl_.lead_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::Lead* PatchLeadResponse::unsafe_arena_release_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.PatchLeadResponse.lead)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::Lead* temp = _impl_.lead_;
  _impl_.lead_ = nullptr;
  return temp;
}
inline ::crm::Lead* PatchLeadResponse::_internal_mutable_lead() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lead_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::Lead>(GetArena());
    _impl_.lead_ = reinterpret_cast<::crm::Lead*>(p);
  }
  return _impl_.lead_;
}
inline ::crm::Lead* PatchLeadResponse::mutable_lead() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crm::Lead* _msg = _internal_mutable_lead();
  // @@protoc_insertion_point(field_mutable:crm.PatchLeadResponse.lead)
  return _msg;
}
inline void PatchLeadResponse::set_allocated_lead(::crm::Lead* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.lead_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.lead_ = reinterpret_cast<::crm::Lead*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.PatchLeadResponse.lead)
}

// -------------------------------------------------------------------

// DeleteLeadRequest

// int64 lead_id = 1;
inline void DeleteLeadRequest::clear_lead_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = ::int64_t{0};
}
inline ::int64_t DeleteLeadRequest::lead_id() const {
  // @@protoc_insertion_point(field_get:crm.DeleteLeadRequest.lead_id)
  return _internal_lead_id();
}
inline void DeleteLeadRequest::set_lead_id(::int64_t value) {
  _internal_set_lead_id(value);
  // @@protoc_insertion_point(field_set:crm.DeleteLeadRequest.lead_id)
}
inline ::int64_t DeleteLeadRequest::_internal_lead_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_id_;
}
inline void DeleteLeadRequest::_internal_set_lead_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = value;
}

// -------------------------------------------------------------------

// DeleteLeadResponse

// bool success = 1;
inline void DeleteLeadResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool DeleteLeadResponse::success() const {
  // @@protoc_insertion_point(field_get:crm.DeleteLeadResponse.success)
  return _internal_success();
}
inline void DeleteLeadResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:crm.DeleteLeadResponse.success)
}
inline bool DeleteLeadResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void DeleteLeadResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// CreateTaskRequest

// int64 lead_id = 1;
inline void CreateTaskRequest::clear_lead_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = ::int64_t{0};
}
inline ::int64_t CreateTaskRequest::lead_id() const {
  // @@protoc_insertion_point(field_get:crm.CreateTaskRequest.lead_id)
  return _internal_lead_id();
}
inline void CreateTaskRequest::set_lead_id(::int64_t value) {
  _internal_set_lead_id(value);
  // @@protoc_insertion_point(field_set:crm.CreateTaskRequest.lead_id)
}
inline ::int64_t CreateTaskRequest::_internal_lead_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_id_;
}
inline void CreateTaskRequest::_internal_set_lead_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = value;
}

// int64 assigned_to = 2;
inline void CreateTaskRequest::clear_assigned_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.assigned_to_ = ::int64_t{0};
}
inline ::int64_t CreateTaskRequest::assigned_to() const {
  // @@protoc_insertion_point(field_get:crm.CreateTaskRequest.assigned_to)
  return _internal_assigned_to();
}
inline void CreateTaskRequest::set_assigned_to(::int64_t value) {
  _internal_set_assigned_to(value);
  // @@protoc_insertion_point(field_set:crm.CreateTaskRequest.assigned_to)
}
inline ::int64_t CreateTaskRequest::_internal_assigned_to() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.assigned_to_;
}
inline void CreateTaskRequest::_internal_set_assigned_to(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.assigned_to_ = value;
}

// string title = 3;
inline void CreateTaskRequest::clear_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& CreateTaskRequest::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.CreateTaskRequest.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateTaskRequest::set_title(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.CreateTaskRequest.title)
}
inline std::string* CreateTaskRequest::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:crm.CreateTaskRequest.title)
  return _s;
}
inline const std::string& CreateTaskRequest::_internal_title() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.title_.Get();
}
inline void CreateTaskRequest::_internal_set_title(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(value, GetArena());
}
inline std::string* CreateTaskRequest::_internal_mutable_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* CreateTaskRequest::release_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.CreateTaskRequest.title)
  return _impl_.title_.Release();
}
inline void CreateTaskRequest::set_allocated_title(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.title_.IsDefault()) {
    _impl_.title_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.CreateTaskRequest.title)
}

// string description = 4;
inline void CreateTaskRequest::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& CreateTaskRequest::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.CreateTaskRequest.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateTaskRequest::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.CreateTaskRequest.description)
}
inline std::string* CreateTaskRequest::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:crm.CreateTaskRequest.description)
  return _s;
}
inline const std::string& CreateTaskRequest::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void CreateTaskRequest::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* CreateTaskRequest::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* CreateTaskRequest::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.CreateTaskRequest.description)
  return _impl_.description_.Release();
}
inline void CreateTaskRequest::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.CreateTaskRequest.description)
}

// string status = 5;
inline void CreateTaskRequest::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& CreateTaskRequest::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.CreateTaskRequest.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateTaskRequest::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.CreateTaskRequest.status)
}
inline std::string* CreateTaskRequest::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:crm.CreateTaskRequest.status)
  return _s;
}
inline const std::string& CreateTaskRequest::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void CreateTaskRequest::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(value, GetArena());
}
inline std::string* CreateTaskRequest::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* CreateTaskRequest::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.CreateTaskRequest.status)
  return _impl_.status_.Release();
}
inline void CreateTaskRequest::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_.IsDefault()) {
    _impl_.status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.CreateTaskRequest.status)
}

// string from_time = 6;
inline void CreateTaskRequest::clear_from_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_time_.ClearToEmpty();
}
inline const std::string& CreateTaskRequest::from_time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.CreateTaskRequest.from_time)
  return _internal_from_time();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateTaskRequest::set_from_time(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_time_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.CreateTaskRequest.from_time)
}
inline std::string* CreateTaskRequest::mutable_from_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_from_time();
  // @@protoc_insertion_point(field_mutable:crm.CreateTaskRequest.from_time)
  return _s;
}
inline const std::string& CreateTaskRequest::_internal_from_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_time_.Get();
}
inline void CreateTaskRequest::_internal_set_from_time(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_time_.Set(value, GetArena());
}
inline std::string* CreateTaskRequest::_internal_mutable_from_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.from_time_.Mutable( GetArena());
}
inline std::string* CreateTaskRequest::release_from_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.CreateTaskRequest.from_time)
  return _impl_.from_time_.Release();
}
inline void CreateTaskRequest::set_allocated_from_time(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_time_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.from_time_.IsDefault()) {
    _impl_.from_time_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.CreateTaskRequest.from_time)
}

// string due_time = 7;
inline void CreateTaskRequest::clear_due_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.due_time_.ClearToEmpty();
}
inline const std::string& CreateTaskRequest::due_time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.CreateTaskRequest.due_time)
  return _internal_due_time();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateTaskRequest::set_due_time(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.due_time_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.CreateTaskRequest.due_time)
}
inline std::string* CreateTaskRequest::mutable_due_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_due_time();
  // @@protoc_insertion_point(field_mutable:crm.CreateTaskRequest.due_time)
  return _s;
}
inline const std::string& CreateTaskRequest::_internal_due_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.due_time_.Get();
}
inline void CreateTaskRequest::_internal_set_due_time(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.due_time_.Set(value, GetArena());
}
inline std::string* CreateTaskRequest::_internal_mutable_due_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.due_time_.Mutable( GetArena());
}
inline std::string* CreateTaskRequest::release_due_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.CreateTaskRequest.due_time)
  return _impl_.due_time_.Release();
}
inline void CreateTaskRequest::set_allocated_due_time(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.due_time_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.due_time_.IsDefault()) {
    _impl_.due_time_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.CreateTaskRequest.due_time)
}

// -------------------------------------------------------------------

// CreateTaskResponse

// .crm.TaskModel task = 1;
inline bool CreateTaskResponse::has_task() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.task_ != nullptr);
  return value;
}
inline void CreateTaskResponse::clear_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.task_ != nullptr) _impl_.task_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crm::TaskModel& CreateTaskResponse::_internal_task() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::TaskModel* p = _impl_.task_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::TaskModel&>(::crm::_TaskModel_default_instance_);
}
inline const ::crm::TaskModel& CreateTaskResponse::task() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.CreateTaskResponse.task)
  return _internal_task();
}
inline void CreateTaskResponse::unsafe_arena_set_allocated_task(::crm::TaskModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.task_);
  }
  _impl_.task_ = reinterpret_cast<::crm::TaskModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.CreateTaskResponse.task)
}
inline ::crm::TaskModel* CreateTaskResponse::release_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::TaskModel* released = _impl_.task_;
  _impl_.task_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::TaskModel* CreateTaskResponse::unsafe_arena_release_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.CreateTaskResponse.task)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::TaskModel* temp = _impl_.task_;
  _impl_.task_ = nullptr;
  return temp;
}
inline ::crm::TaskModel* CreateTaskResponse::_internal_mutable_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.task_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::TaskModel>(GetArena());
    _impl_.task_ = reinterpret_cast<::crm::TaskModel*>(p);
  }
  return _impl_.task_;
}
inline ::crm::TaskModel* CreateTaskResponse::mutable_task() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crm::TaskModel* _msg = _internal_mutable_task();
  // @@protoc_insertion_point(field_mutable:crm.CreateTaskResponse.task)
  return _msg;
}
inline void CreateTaskResponse::set_allocated_task(::crm::TaskModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.task_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.task_ = reinterpret_cast<::crm::TaskModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.CreateTaskResponse.task)
}

// -------------------------------------------------------------------

// GetTaskRequest

// int64 task_id = 1;
inline void GetTaskRequest::clear_task_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_ = ::int64_t{0};
}
inline ::int64_t GetTaskRequest::task_id() const {
  // @@protoc_insertion_point(field_get:crm.GetTaskRequest.task_id)
  return _internal_task_id();
}
inline void GetTaskRequest::set_task_id(::int64_t value) {
  _internal_set_task_id(value);
  // @@protoc_insertion_point(field_set:crm.GetTaskRequest.task_id)
}
inline ::int64_t GetTaskRequest::_internal_task_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.task_id_;
}
inline void GetTaskRequest::_internal_set_task_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_ = value;
}

// -------------------------------------------------------------------

// GetTaskResponse

// .crm.TaskModel task = 1;
inline bool GetTaskResponse::has_task() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.task_ != nullptr);
  return value;
}
inline void GetTaskResponse::clear_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.task_ != nullptr) _impl_.task_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crm::TaskModel& GetTaskResponse::_internal_task() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::TaskModel* p = _impl_.task_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::TaskModel&>(::crm::_TaskModel_default_instance_);
}
inline const ::crm::TaskModel& GetTaskResponse::task() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.GetTaskResponse.task)
  return _internal_task();
}
inline void GetTaskResponse::unsafe_arena_set_allocated_task(::crm::TaskModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.task_);
  }
  _impl_.task_ = reinterpret_cast<::crm::TaskModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.GetTaskResponse.task)
}
inline ::crm::TaskModel* GetTaskResponse::release_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::TaskModel* released = _impl_.task_;
  _impl_.task_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::TaskModel* GetTaskResponse::unsafe_arena_release_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.GetTaskResponse.task)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::TaskModel* temp = _impl_.task_;
  _impl_.task_ = nullptr;
  return temp;
}
inline ::crm::TaskModel* GetTaskResponse::_internal_mutable_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.task_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::TaskModel>(GetArena());
    _impl_.task_ = reinterpret_cast<::crm::TaskModel*>(p);
  }
  return _impl_.task_;
}
inline ::crm::TaskModel* GetTaskResponse::mutable_task() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crm::TaskModel* _msg = _internal_mutable_task();
  // @@protoc_insertion_point(field_mutable:crm.GetTaskResponse.task)
  return _msg;
}
inline void GetTaskResponse::set_allocated_task(::crm::TaskModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.task_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.task_ = reinterpret_cast<::crm::TaskModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.GetTaskResponse.task)
}

// -------------------------------------------------------------------

// ListTasksRequest

// int64 lead_id = 1;
inline void ListTasksRequest::clear_lead_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = ::int64_t{0};
}
inline ::int64_t ListTasksRequest::lead_id() const {
  // @@protoc_insertion_point(field_get:crm.ListTasksRequest.lead_id)
  return _internal_lead_id();
}
inline void ListTasksRequest::set_lead_id(::int64_t value) {
  _internal_set_lead_id(value);
  // @@protoc_insertion_point(field_set:crm.ListTasksRequest.lead_id)
}
inline ::int64_t ListTasksRequest::_internal_lead_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_id_;
}
inline void ListTasksRequest::_internal_set_lead_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = value;
}

// int32 page = 2;
inline void ListTasksRequest::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = 0;
}
inline ::int32_t ListTasksRequest::page() const {
  // @@protoc_insertion_point(field_get:crm.ListTasksRequest.page)
  return _internal_page();
}
inline void ListTasksRequest::set_page(::int32_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:crm.ListTasksRequest.page)
}
inline ::int32_t ListTasksRequest::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void ListTasksRequest::_internal_set_page(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// int32 page_size = 3;
inline void ListTasksRequest::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = 0;
}
inline ::int32_t ListTasksRequest::page_size() const {
  // @@protoc_insertion_point(field_get:crm.ListTasksRequest.page_size)
  return _internal_page_size();
}
inline void ListTasksRequest::set_page_size(::int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:crm.ListTasksRequest.page_size)
}
inline ::int32_t ListTasksRequest::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void ListTasksRequest::_internal_set_page_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// -------------------------------------------------------------------

// ListTasksResponse

// repeated .crm.TaskModel tasks = 1;
inline int ListTasksResponse::_internal_tasks_size() const {
  return _internal_tasks().size();
}
inline int ListTasksResponse::tasks_size() const {
  return _internal_tasks_size();
}
inline void ListTasksResponse::clear_tasks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tasks_.Clear();
}
inline ::crm::TaskModel* ListTasksResponse::mutable_tasks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:crm.ListTasksResponse.tasks)
  return _internal_mutable_tasks()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::crm::TaskModel>* ListTasksResponse::mutable_tasks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:crm.ListTasksResponse.tasks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_tasks();
}
inline const ::crm::TaskModel& ListTasksResponse::tasks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.ListTasksResponse.tasks)
  return _internal_tasks().Get(index);
}
inline ::crm::TaskModel* ListTasksResponse::add_tasks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::crm::TaskModel* _add = _internal_mutable_tasks()->Add();
  // @@protoc_insertion_point(field_add:crm.ListTasksResponse.tasks)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::crm::TaskModel>& ListTasksResponse::tasks() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:crm.ListTasksResponse.tasks)
  return _internal_tasks();
}
inline const ::google::protobuf::RepeatedPtrField<::crm::TaskModel>&
ListTasksResponse::_internal_tasks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tasks_;
}
inline ::google::protobuf::RepeatedPtrField<::crm::TaskModel>*
ListTasksResponse::_internal_mutable_tasks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.tasks_;
}

// int32 total_count = 2;
inline void ListTasksResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = 0;
}
inline ::int32_t ListTasksResponse::total_count() const {
  // @@protoc_insertion_point(field_get:crm.ListTasksResponse.total_count)
  return _internal_total_count();
}
inline void ListTasksResponse::set_total_count(::int32_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:crm.ListTasksResponse.total_count)
}
inline ::int32_t ListTasksResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void ListTasksResponse::_internal_set_total_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// -------------------------------------------------------------------

// UpdateTaskRequest

// int64 task_id = 1;
inline void UpdateTaskRequest::clear_task_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_ = ::int64_t{0};
}
inline ::int64_t UpdateTaskRequest::task_id() const {
  // @@protoc_insertion_point(field_get:crm.UpdateTaskRequest.task_id)
  return _internal_task_id();
}
inline void UpdateTaskRequest::set_task_id(::int64_t value) {
  _internal_set_task_id(value);
  // @@protoc_insertion_point(field_set:crm.UpdateTaskRequest.task_id)
}
inline ::int64_t UpdateTaskRequest::_internal_task_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.task_id_;
}
inline void UpdateTaskRequest::_internal_set_task_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_ = value;
}

// int64 lead_id = 2;
inline void UpdateTaskRequest::clear_lead_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = ::int64_t{0};
}
inline ::int64_t UpdateTaskRequest::lead_id() const {
  // @@protoc_insertion_point(field_get:crm.UpdateTaskRequest.lead_id)
  return _internal_lead_id();
}
inline void UpdateTaskRequest::set_lead_id(::int64_t value) {
  _internal_set_lead_id(value);
  // @@protoc_insertion_point(field_set:crm.UpdateTaskRequest.lead_id)
}
inline ::int64_t UpdateTaskRequest::_internal_lead_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_id_;
}
inline void UpdateTaskRequest::_internal_set_lead_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = value;
}

// int64 assigned_to = 3;
inline void UpdateTaskRequest::clear_assigned_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.assigned_to_ = ::int64_t{0};
}
inline ::int64_t UpdateTaskRequest::assigned_to() const {
  // @@protoc_insertion_point(field_get:crm.UpdateTaskRequest.assigned_to)
  return _internal_assigned_to();
}
inline void UpdateTaskRequest::set_assigned_to(::int64_t value) {
  _internal_set_assigned_to(value);
  // @@protoc_insertion_point(field_set:crm.UpdateTaskRequest.assigned_to)
}
inline ::int64_t UpdateTaskRequest::_internal_assigned_to() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.assigned_to_;
}
inline void UpdateTaskRequest::_internal_set_assigned_to(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.assigned_to_ = value;
}

// string title = 4;
inline void UpdateTaskRequest::clear_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& UpdateTaskRequest::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.UpdateTaskRequest.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateTaskRequest::set_title(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.UpdateTaskRequest.title)
}
inline std::string* UpdateTaskRequest::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:crm.UpdateTaskRequest.title)
  return _s;
}
inline const std::string& UpdateTaskRequest::_internal_title() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.title_.Get();
}
inline void UpdateTaskRequest::_internal_set_title(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(value, GetArena());
}
inline std::string* UpdateTaskRequest::_internal_mutable_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* UpdateTaskRequest::release_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.UpdateTaskRequest.title)
  return _impl_.title_.Release();
}
inline void UpdateTaskRequest::set_allocated_title(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.title_.IsDefault()) {
    _impl_.title_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.UpdateTaskRequest.title)
}

// string description = 5;
inline void UpdateTaskRequest::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& UpdateTaskRequest::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.UpdateTaskRequest.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateTaskRequest::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.UpdateTaskRequest.description)
}
inline std::string* UpdateTaskRequest::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:crm.UpdateTaskRequest.description)
  return _s;
}
inline const std::string& UpdateTaskRequest::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void UpdateTaskRequest::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* UpdateTaskRequest::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* UpdateTaskRequest::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.UpdateTaskRequest.description)
  return _impl_.description_.Release();
}
inline void UpdateTaskRequest::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.UpdateTaskRequest.description)
}

// string status = 6;
inline void UpdateTaskRequest::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& UpdateTaskRequest::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.UpdateTaskRequest.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateTaskRequest::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.UpdateTaskRequest.status)
}
inline std::string* UpdateTaskRequest::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:crm.UpdateTaskRequest.status)
  return _s;
}
inline const std::string& UpdateTaskRequest::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void UpdateTaskRequest::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(value, GetArena());
}
inline std::string* UpdateTaskRequest::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* UpdateTaskRequest::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.UpdateTaskRequest.status)
  return _impl_.status_.Release();
}
inline void UpdateTaskRequest::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_.IsDefault()) {
    _impl_.status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.UpdateTaskRequest.status)
}

// string from_time = 7;
inline void UpdateTaskRequest::clear_from_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_time_.ClearToEmpty();
}
inline const std::string& UpdateTaskRequest::from_time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.UpdateTaskRequest.from_time)
  return _internal_from_time();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateTaskRequest::set_from_time(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_time_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.UpdateTaskRequest.from_time)
}
inline std::string* UpdateTaskRequest::mutable_from_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_from_time();
  // @@protoc_insertion_point(field_mutable:crm.UpdateTaskRequest.from_time)
  return _s;
}
inline const std::string& UpdateTaskRequest::_internal_from_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_time_.Get();
}
inline void UpdateTaskRequest::_internal_set_from_time(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_time_.Set(value, GetArena());
}
inline std::string* UpdateTaskRequest::_internal_mutable_from_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.from_time_.Mutable( GetArena());
}
inline std::string* UpdateTaskRequest::release_from_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.UpdateTaskRequest.from_time)
  return _impl_.from_time_.Release();
}
inline void UpdateTaskRequest::set_allocated_from_time(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_time_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.from_time_.IsDefault()) {
    _impl_.from_time_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.UpdateTaskRequest.from_time)
}

// string due_time = 8;
inline void UpdateTaskRequest::clear_due_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.due_time_.ClearToEmpty();
}
inline const std::string& UpdateTaskRequest::due_time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.UpdateTaskRequest.due_time)
  return _internal_due_time();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateTaskRequest::set_due_time(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.due_time_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.UpdateTaskRequest.due_time)
}
inline std::string* UpdateTaskRequest::mutable_due_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_due_time();
  // @@protoc_insertion_point(field_mutable:crm.UpdateTaskRequest.due_time)
  return _s;
}
inline const std::string& UpdateTaskRequest::_internal_due_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.due_time_.Get();
}
inline void UpdateTaskRequest::_internal_set_due_time(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.due_time_.Set(value, GetArena());
}
inline std::string* UpdateTaskRequest::_internal_mutable_due_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.due_time_.Mutable( GetArena());
}
inline std::string* UpdateTaskRequest::release_due_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.UpdateTaskRequest.due_time)
  return _impl_.due_time_.Release();
}
inline void UpdateTaskRequest::set_allocated_due_time(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.due_time_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.due_time_.IsDefault()) {
    _impl_.due_time_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.UpdateTaskRequest.due_time)
}

// -------------------------------------------------------------------

// UpdateTaskResponse

// .crm.TaskModel task = 1;
inline bool UpdateTaskResponse::has_task() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.task_ != nullptr);
  return value;
}
inline void UpdateTaskResponse::clear_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.task_ != nullptr) _impl_.task_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crm::TaskModel& UpdateTaskResponse::_internal_task() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::TaskModel* p = _impl_.task_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::TaskModel&>(::crm::_TaskModel_default_instance_);
}
inline const ::crm::TaskModel& UpdateTaskResponse::task() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.UpdateTaskResponse.task)
  return _internal_task();
}
inline void UpdateTaskResponse::unsafe_arena_set_allocated_task(::crm::TaskModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.task_);
  }
  _impl_.task_ = reinterpret_cast<::crm::TaskModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.UpdateTaskResponse.task)
}
inline ::crm::TaskModel* UpdateTaskResponse::release_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::TaskModel* released = _impl_.task_;
  _impl_.task_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::TaskModel* UpdateTaskResponse::unsafe_arena_release_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.UpdateTaskResponse.task)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::TaskModel* temp = _impl_.task_;
  _impl_.task_ = nullptr;
  return temp;
}
inline ::crm::TaskModel* UpdateTaskResponse::_internal_mutable_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.task_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::TaskModel>(GetArena());
    _impl_.task_ = reinterpret_cast<::crm::TaskModel*>(p);
  }
  return _impl_.task_;
}
inline ::crm::TaskModel* UpdateTaskResponse::mutable_task() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crm::TaskModel* _msg = _internal_mutable_task();
  // @@protoc_insertion_point(field_mutable:crm.UpdateTaskResponse.task)
  return _msg;
}
inline void UpdateTaskResponse::set_allocated_task(::crm::TaskModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.task_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.task_ = reinterpret_cast<::crm::TaskModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.UpdateTaskResponse.task)
}

// -------------------------------------------------------------------

// DeleteTaskRequest

// int64 task_id = 1;
inline void DeleteTaskRequest::clear_task_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_ = ::int64_t{0};
}
inline ::int64_t DeleteTaskRequest::task_id() const {
  // @@protoc_insertion_point(field_get:crm.DeleteTaskRequest.task_id)
  return _internal_task_id();
}
inline void DeleteTaskRequest::set_task_id(::int64_t value) {
  _internal_set_task_id(value);
  // @@protoc_insertion_point(field_set:crm.DeleteTaskRequest.task_id)
}
inline ::int64_t DeleteTaskRequest::_internal_task_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.task_id_;
}
inline void DeleteTaskRequest::_internal_set_task_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_ = value;
}

// -------------------------------------------------------------------

// DeleteTaskResponse

// bool success = 1;
inline void DeleteTaskResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool DeleteTaskResponse::success() const {
  // @@protoc_insertion_point(field_get:crm.DeleteTaskResponse.success)
  return _internal_success();
}
inline void DeleteTaskResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:crm.DeleteTaskResponse.success)
}
inline bool DeleteTaskResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void DeleteTaskResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// CreateNoteRequest

// int64 lead_id = 1;
inline void CreateNoteRequest::clear_lead_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = ::int64_t{0};
}
inline ::int64_t CreateNoteRequest::lead_id() const {
  // @@protoc_insertion_point(field_get:crm.CreateNoteRequest.lead_id)
  return _internal_lead_id();
}
inline void CreateNoteRequest::set_lead_id(::int64_t value) {
  _internal_set_lead_id(value);
  // @@protoc_insertion_point(field_set:crm.CreateNoteRequest.lead_id)
}
inline ::int64_t CreateNoteRequest::_internal_lead_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_id_;
}
inline void CreateNoteRequest::_internal_set_lead_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = value;
}

// int64 created_by = 2;
inline void CreateNoteRequest::clear_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = ::int64_t{0};
}
inline ::int64_t CreateNoteRequest::created_by() const {
  // @@protoc_insertion_point(field_get:crm.CreateNoteRequest.created_by)
  return _internal_created_by();
}
inline void CreateNoteRequest::set_created_by(::int64_t value) {
  _internal_set_created_by(value);
  // @@protoc_insertion_point(field_set:crm.CreateNoteRequest.created_by)
}
inline ::int64_t CreateNoteRequest::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_;
}
inline void CreateNoteRequest::_internal_set_created_by(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = value;
}

// string content = 3;
inline void CreateNoteRequest::clear_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.ClearToEmpty();
}
inline const std::string& CreateNoteRequest::content() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.CreateNoteRequest.content)
  return _internal_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateNoteRequest::set_content(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.CreateNoteRequest.content)
}
inline std::string* CreateNoteRequest::mutable_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:crm.CreateNoteRequest.content)
  return _s;
}
inline const std::string& CreateNoteRequest::_internal_content() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.content_.Get();
}
inline void CreateNoteRequest::_internal_set_content(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.Set(value, GetArena());
}
inline std::string* CreateNoteRequest::_internal_mutable_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.content_.Mutable( GetArena());
}
inline std::string* CreateNoteRequest::release_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.CreateNoteRequest.content)
  return _impl_.content_.Release();
}
inline void CreateNoteRequest::set_allocated_content(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.content_.IsDefault()) {
    _impl_.content_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.CreateNoteRequest.content)
}

// -------------------------------------------------------------------

// CreateNoteResponse

// .crm.NoteModel note = 1;
inline bool CreateNoteResponse::has_note() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.note_ != nullptr);
  return value;
}
inline void CreateNoteResponse::clear_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.note_ != nullptr) _impl_.note_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crm::NoteModel& CreateNoteResponse::_internal_note() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::NoteModel* p = _impl_.note_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::NoteModel&>(::crm::_NoteModel_default_instance_);
}
inline const ::crm::NoteModel& CreateNoteResponse::note() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.CreateNoteResponse.note)
  return _internal_note();
}
inline void CreateNoteResponse::unsafe_arena_set_allocated_note(::crm::NoteModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.note_);
  }
  _impl_.note_ = reinterpret_cast<::crm::NoteModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.CreateNoteResponse.note)
}
inline ::crm::NoteModel* CreateNoteResponse::release_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::NoteModel* released = _impl_.note_;
  _impl_.note_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::NoteModel* CreateNoteResponse::unsafe_arena_release_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.CreateNoteResponse.note)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::NoteModel* temp = _impl_.note_;
  _impl_.note_ = nullptr;
  return temp;
}
inline ::crm::NoteModel* CreateNoteResponse::_internal_mutable_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.note_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::NoteModel>(GetArena());
    _impl_.note_ = reinterpret_cast<::crm::NoteModel*>(p);
  }
  return _impl_.note_;
}
inline ::crm::NoteModel* CreateNoteResponse::mutable_note() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crm::NoteModel* _msg = _internal_mutable_note();
  // @@protoc_insertion_point(field_mutable:crm.CreateNoteResponse.note)
  return _msg;
}
inline void CreateNoteResponse::set_allocated_note(::crm::NoteModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.note_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.note_ = reinterpret_cast<::crm::NoteModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.CreateNoteResponse.note)
}

// -------------------------------------------------------------------

// GetNoteRequest

// int64 note_id = 1;
inline void GetNoteRequest::clear_note_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.note_id_ = ::int64_t{0};
}
inline ::int64_t GetNoteRequest::note_id() const {
  // @@protoc_insertion_point(field_get:crm.GetNoteRequest.note_id)
  return _internal_note_id();
}
inline void GetNoteRequest::set_note_id(::int64_t value) {
  _internal_set_note_id(value);
  // @@protoc_insertion_point(field_set:crm.GetNoteRequest.note_id)
}
inline ::int64_t GetNoteRequest::_internal_note_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.note_id_;
}
inline void GetNoteRequest::_internal_set_note_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.note_id_ = value;
}

// -------------------------------------------------------------------

// GetNoteResponse

// .crm.NoteModel note = 1;
inline bool GetNoteResponse::has_note() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.note_ != nullptr);
  return value;
}
inline void GetNoteResponse::clear_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.note_ != nullptr) _impl_.note_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crm::NoteModel& GetNoteResponse::_internal_note() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::NoteModel* p = _impl_.note_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::NoteModel&>(::crm::_NoteModel_default_instance_);
}
inline const ::crm::NoteModel& GetNoteResponse::note() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.GetNoteResponse.note)
  return _internal_note();
}
inline void GetNoteResponse::unsafe_arena_set_allocated_note(::crm::NoteModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.note_);
  }
  _impl_.note_ = reinterpret_cast<::crm::NoteModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.GetNoteResponse.note)
}
inline ::crm::NoteModel* GetNoteResponse::release_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::NoteModel* released = _impl_.note_;
  _impl_.note_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::NoteModel* GetNoteResponse::unsafe_arena_release_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.GetNoteResponse.note)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::NoteModel* temp = _impl_.note_;
  _impl_.note_ = nullptr;
  return temp;
}
inline ::crm::NoteModel* GetNoteResponse::_internal_mutable_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.note_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::NoteModel>(GetArena());
    _impl_.note_ = reinterpret_cast<::crm::NoteModel*>(p);
  }
  return _impl_.note_;
}
inline ::crm::NoteModel* GetNoteResponse::mutable_note() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crm::NoteModel* _msg = _internal_mutable_note();
  // @@protoc_insertion_point(field_mutable:crm.GetNoteResponse.note)
  return _msg;
}
inline void GetNoteResponse::set_allocated_note(::crm::NoteModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.note_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.note_ = reinterpret_cast<::crm::NoteModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.GetNoteResponse.note)
}

// -------------------------------------------------------------------

// ListNotesRequest

// int64 lead_id = 1;
inline void ListNotesRequest::clear_lead_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = ::int64_t{0};
}
inline ::int64_t ListNotesRequest::lead_id() const {
  // @@protoc_insertion_point(field_get:crm.ListNotesRequest.lead_id)
  return _internal_lead_id();
}
inline void ListNotesRequest::set_lead_id(::int64_t value) {
  _internal_set_lead_id(value);
  // @@protoc_insertion_point(field_set:crm.ListNotesRequest.lead_id)
}
inline ::int64_t ListNotesRequest::_internal_lead_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_id_;
}
inline void ListNotesRequest::_internal_set_lead_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = value;
}

// int32 page = 2;
inline void ListNotesRequest::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = 0;
}
inline ::int32_t ListNotesRequest::page() const {
  // @@protoc_insertion_point(field_get:crm.ListNotesRequest.page)
  return _internal_page();
}
inline void ListNotesRequest::set_page(::int32_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:crm.ListNotesRequest.page)
}
inline ::int32_t ListNotesRequest::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void ListNotesRequest::_internal_set_page(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// int32 page_size = 3;
inline void ListNotesRequest::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = 0;
}
inline ::int32_t ListNotesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:crm.ListNotesRequest.page_size)
  return _internal_page_size();
}
inline void ListNotesRequest::set_page_size(::int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:crm.ListNotesRequest.page_size)
}
inline ::int32_t ListNotesRequest::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void ListNotesRequest::_internal_set_page_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// -------------------------------------------------------------------

// ListNotesResponse

// repeated .crm.NoteModel notes = 1;
inline int ListNotesResponse::_internal_notes_size() const {
  return _internal_notes().size();
}
inline int ListNotesResponse::notes_size() const {
  return _internal_notes_size();
}
inline void ListNotesResponse::clear_notes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notes_.Clear();
}
inline ::crm::NoteModel* ListNotesResponse::mutable_notes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:crm.ListNotesResponse.notes)
  return _internal_mutable_notes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::crm::NoteModel>* ListNotesResponse::mutable_notes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:crm.ListNotesResponse.notes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_notes();
}
inline const ::crm::NoteModel& ListNotesResponse::notes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.ListNotesResponse.notes)
  return _internal_notes().Get(index);
}
inline ::crm::NoteModel* ListNotesResponse::add_notes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::crm::NoteModel* _add = _internal_mutable_notes()->Add();
  // @@protoc_insertion_point(field_add:crm.ListNotesResponse.notes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::crm::NoteModel>& ListNotesResponse::notes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:crm.ListNotesResponse.notes)
  return _internal_notes();
}
inline const ::google::protobuf::RepeatedPtrField<::crm::NoteModel>&
ListNotesResponse::_internal_notes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.notes_;
}
inline ::google::protobuf::RepeatedPtrField<::crm::NoteModel>*
ListNotesResponse::_internal_mutable_notes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.notes_;
}

// int32 total_count = 2;
inline void ListNotesResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = 0;
}
inline ::int32_t ListNotesResponse::total_count() const {
  // @@protoc_insertion_point(field_get:crm.ListNotesResponse.total_count)
  return _internal_total_count();
}
inline void ListNotesResponse::set_total_count(::int32_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:crm.ListNotesResponse.total_count)
}
inline ::int32_t ListNotesResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void ListNotesResponse::_internal_set_total_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// -------------------------------------------------------------------

// UpdateNoteRequest

// int64 note_id = 1;
inline void UpdateNoteRequest::clear_note_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.note_id_ = ::int64_t{0};
}
inline ::int64_t UpdateNoteRequest::note_id() const {
  // @@protoc_insertion_point(field_get:crm.UpdateNoteRequest.note_id)
  return _internal_note_id();
}
inline void UpdateNoteRequest::set_note_id(::int64_t value) {
  _internal_set_note_id(value);
  // @@protoc_insertion_point(field_set:crm.UpdateNoteRequest.note_id)
}
inline ::int64_t UpdateNoteRequest::_internal_note_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.note_id_;
}
inline void UpdateNoteRequest::_internal_set_note_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.note_id_ = value;
}

// int64 lead_id = 2;
inline void UpdateNoteRequest::clear_lead_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = ::int64_t{0};
}
inline ::int64_t UpdateNoteRequest::lead_id() const {
  // @@protoc_insertion_point(field_get:crm.UpdateNoteRequest.lead_id)
  return _internal_lead_id();
}
inline void UpdateNoteRequest::set_lead_id(::int64_t value) {
  _internal_set_lead_id(value);
  // @@protoc_insertion_point(field_set:crm.UpdateNoteRequest.lead_id)
}
inline ::int64_t UpdateNoteRequest::_internal_lead_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_id_;
}
inline void UpdateNoteRequest::_internal_set_lead_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = value;
}

// int64 created_by = 3;
inline void UpdateNoteRequest::clear_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = ::int64_t{0};
}
inline ::int64_t UpdateNoteRequest::created_by() const {
  // @@protoc_insertion_point(field_get:crm.UpdateNoteRequest.created_by)
  return _internal_created_by();
}
inline void UpdateNoteRequest::set_created_by(::int64_t value) {
  _internal_set_created_by(value);
  // @@protoc_insertion_point(field_set:crm.UpdateNoteRequest.created_by)
}
inline ::int64_t UpdateNoteRequest::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_;
}
inline void UpdateNoteRequest::_internal_set_created_by(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = value;
}

// string content = 4;
inline void UpdateNoteRequest::clear_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.ClearToEmpty();
}
inline const std::string& UpdateNoteRequest::content() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.UpdateNoteRequest.content)
  return _internal_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateNoteRequest::set_content(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.UpdateNoteRequest.content)
}
inline std::string* UpdateNoteRequest::mutable_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:crm.UpdateNoteRequest.content)
  return _s;
}
inline const std::string& UpdateNoteRequest::_internal_content() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.content_.Get();
}
inline void UpdateNoteRequest::_internal_set_content(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.Set(value, GetArena());
}
inline std::string* UpdateNoteRequest::_internal_mutable_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.content_.Mutable( GetArena());
}
inline std::string* UpdateNoteRequest::release_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.UpdateNoteRequest.content)
  return _impl_.content_.Release();
}
inline void UpdateNoteRequest::set_allocated_content(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.content_.IsDefault()) {
    _impl_.content_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.UpdateNoteRequest.content)
}

// -------------------------------------------------------------------

// UpdateNoteResponse

// .crm.NoteModel note = 1;
inline bool UpdateNoteResponse::has_note() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.note_ != nullptr);
  return value;
}
inline void UpdateNoteResponse::clear_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.note_ != nullptr) _impl_.note_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crm::NoteModel& UpdateNoteResponse::_internal_note() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::NoteModel* p = _impl_.note_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::NoteModel&>(::crm::_NoteModel_default_instance_);
}
inline const ::crm::NoteModel& UpdateNoteResponse::note() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.UpdateNoteResponse.note)
  return _internal_note();
}
inline void UpdateNoteResponse::unsafe_arena_set_allocated_note(::crm::NoteModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.note_);
  }
  _impl_.note_ = reinterpret_cast<::crm::NoteModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.UpdateNoteResponse.note)
}
inline ::crm::NoteModel* UpdateNoteResponse::release_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::NoteModel* released = _impl_.note_;
  _impl_.note_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::NoteModel* UpdateNoteResponse::unsafe_arena_release_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.UpdateNoteResponse.note)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::NoteModel* temp = _impl_.note_;
  _impl_.note_ = nullptr;
  return temp;
}
inline ::crm::NoteModel* UpdateNoteResponse::_internal_mutable_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.note_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::NoteModel>(GetArena());
    _impl_.note_ = reinterpret_cast<::crm::NoteModel*>(p);
  }
  return _impl_.note_;
}
inline ::crm::NoteModel* UpdateNoteResponse::mutable_note() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crm::NoteModel* _msg = _internal_mutable_note();
  // @@protoc_insertion_point(field_mutable:crm.UpdateNoteResponse.note)
  return _msg;
}
inline void UpdateNoteResponse::set_allocated_note(::crm::NoteModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.note_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.note_ = reinterpret_cast<::crm::NoteModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.UpdateNoteResponse.note)
}

// -------------------------------------------------------------------

// DeleteNoteRequest

// int64 note_id = 1;
inline void DeleteNoteRequest::clear_note_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.note_id_ = ::int64_t{0};
}
inline ::int64_t DeleteNoteRequest::note_id() const {
  // @@protoc_insertion_point(field_get:crm.DeleteNoteRequest.note_id)
  return _internal_note_id();
}
inline void DeleteNoteRequest::set_note_id(::int64_t value) {
  _internal_set_note_id(value);
  // @@protoc_insertion_point(field_set:crm.DeleteNoteRequest.note_id)
}
inline ::int64_t DeleteNoteRequest::_internal_note_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.note_id_;
}
inline void DeleteNoteRequest::_internal_set_note_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.note_id_ = value;
}

// -------------------------------------------------------------------

// DeleteNoteResponse

// bool success = 1;
inline void DeleteNoteResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool DeleteNoteResponse::success() const {
  // @@protoc_insertion_point(field_get:crm.DeleteNoteResponse.success)
  return _internal_success();
}
inline void DeleteNoteResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:crm.DeleteNoteResponse.success)
}
inline bool DeleteNoteResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void DeleteNoteResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// CreateChatMessageRequest

// int64 lead_id = 1;
inline void CreateChatMessageRequest::clear_lead_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = ::int64_t{0};
}
inline ::int64_t CreateChatMessageRequest::lead_id() const {
  // @@protoc_insertion_point(field_get:crm.CreateChatMessageRequest.lead_id)
  return _internal_lead_id();
}
inline void CreateChatMessageRequest::set_lead_id(::int64_t value) {
  _internal_set_lead_id(value);
  // @@protoc_insertion_point(field_set:crm.CreateChatMessageRequest.lead_id)
}
inline ::int64_t CreateChatMessageRequest::_internal_lead_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_id_;
}
inline void CreateChatMessageRequest::_internal_set_lead_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = value;
}

// int64 created_by = 2;
inline void CreateChatMessageRequest::clear_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = ::int64_t{0};
}
inline ::int64_t CreateChatMessageRequest::created_by() const {
  // @@protoc_insertion_point(field_get:crm.CreateChatMessageRequest.created_by)
  return _internal_created_by();
}
inline void CreateChatMessageRequest::set_created_by(::int64_t value) {
  _internal_set_created_by(value);
  // @@protoc_insertion_point(field_set:crm.CreateChatMessageRequest.created_by)
}
inline ::int64_t CreateChatMessageRequest::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_;
}
inline void CreateChatMessageRequest::_internal_set_created_by(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = value;
}

// string message_text = 3;
inline void CreateChatMessageRequest::clear_message_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_text_.ClearToEmpty();
}
inline const std::string& CreateChatMessageRequest::message_text() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.CreateChatMessageRequest.message_text)
  return _internal_message_text();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateChatMessageRequest::set_message_text(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_text_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.CreateChatMessageRequest.message_text)
}
inline std::string* CreateChatMessageRequest::mutable_message_text() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message_text();
  // @@protoc_insertion_point(field_mutable:crm.CreateChatMessageRequest.message_text)
  return _s;
}
inline const std::string& CreateChatMessageRequest::_internal_message_text() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_text_.Get();
}
inline void CreateChatMessageRequest::_internal_set_message_text(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_text_.Set(value, GetArena());
}
inline std::string* CreateChatMessageRequest::_internal_mutable_message_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_text_.Mutable( GetArena());
}
inline std::string* CreateChatMessageRequest::release_message_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.CreateChatMessageRequest.message_text)
  return _impl_.message_text_.Release();
}
inline void CreateChatMessageRequest::set_allocated_message_text(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_text_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_text_.IsDefault()) {
    _impl_.message_text_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.CreateChatMessageRequest.message_text)
}

// -------------------------------------------------------------------

// CreateChatMessageResponse

// .crm.ChatMessageModel chat_message = 1;
inline bool CreateChatMessageResponse::has_chat_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chat_message_ != nullptr);
  return value;
}
inline void CreateChatMessageResponse::clear_chat_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chat_message_ != nullptr) _impl_.chat_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crm::ChatMessageModel& CreateChatMessageResponse::_internal_chat_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::ChatMessageModel* p = _impl_.chat_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::ChatMessageModel&>(::crm::_ChatMessageModel_default_instance_);
}
inline const ::crm::ChatMessageModel& CreateChatMessageResponse::chat_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.CreateChatMessageResponse.chat_message)
  return _internal_chat_message();
}
inline void CreateChatMessageResponse::unsafe_arena_set_allocated_chat_message(::crm::ChatMessageModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chat_message_);
  }
  _impl_.chat_message_ = reinterpret_cast<::crm::ChatMessageModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.CreateChatMessageResponse.chat_message)
}
inline ::crm::ChatMessageModel* CreateChatMessageResponse::release_chat_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::ChatMessageModel* released = _impl_.chat_message_;
  _impl_.chat_message_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::ChatMessageModel* CreateChatMessageResponse::unsafe_arena_release_chat_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.CreateChatMessageResponse.chat_message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::ChatMessageModel* temp = _impl_.chat_message_;
  _impl_.chat_message_ = nullptr;
  return temp;
}
inline ::crm::ChatMessageModel* CreateChatMessageResponse::_internal_mutable_chat_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chat_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::ChatMessageModel>(GetArena());
    _impl_.chat_message_ = reinterpret_cast<::crm::ChatMessageModel*>(p);
  }
  return _impl_.chat_message_;
}
inline ::crm::ChatMessageModel* CreateChatMessageResponse::mutable_chat_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crm::ChatMessageModel* _msg = _internal_mutable_chat_message();
  // @@protoc_insertion_point(field_mutable:crm.CreateChatMessageResponse.chat_message)
  return _msg;
}
inline void CreateChatMessageResponse::set_allocated_chat_message(::crm::ChatMessageModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.chat_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.chat_message_ = reinterpret_cast<::crm::ChatMessageModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.CreateChatMessageResponse.chat_message)
}

// -------------------------------------------------------------------

// GetChatMessageRequest

// int64 message_id = 1;
inline void GetChatMessageRequest::clear_message_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_id_ = ::int64_t{0};
}
inline ::int64_t GetChatMessageRequest::message_id() const {
  // @@protoc_insertion_point(field_get:crm.GetChatMessageRequest.message_id)
  return _internal_message_id();
}
inline void GetChatMessageRequest::set_message_id(::int64_t value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:crm.GetChatMessageRequest.message_id)
}
inline ::int64_t GetChatMessageRequest::_internal_message_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_id_;
}
inline void GetChatMessageRequest::_internal_set_message_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_id_ = value;
}

// -------------------------------------------------------------------

// GetChatMessageResponse

// .crm.ChatMessageModel chat_message = 1;
inline bool GetChatMessageResponse::has_chat_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chat_message_ != nullptr);
  return value;
}
inline void GetChatMessageResponse::clear_chat_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chat_message_ != nullptr) _impl_.chat_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crm::ChatMessageModel& GetChatMessageResponse::_internal_chat_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::ChatMessageModel* p = _impl_.chat_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::ChatMessageModel&>(::crm::_ChatMessageModel_default_instance_);
}
inline const ::crm::ChatMessageModel& GetChatMessageResponse::chat_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.GetChatMessageResponse.chat_message)
  return _internal_chat_message();
}
inline void GetChatMessageResponse::unsafe_arena_set_allocated_chat_message(::crm::ChatMessageModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chat_message_);
  }
  _impl_.chat_message_ = reinterpret_cast<::crm::ChatMessageModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.GetChatMessageResponse.chat_message)
}
inline ::crm::ChatMessageModel* GetChatMessageResponse::release_chat_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::ChatMessageModel* released = _impl_.chat_message_;
  _impl_.chat_message_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::ChatMessageModel* GetChatMessageResponse::unsafe_arena_release_chat_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.GetChatMessageResponse.chat_message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::ChatMessageModel* temp = _impl_.chat_message_;
  _impl_.chat_message_ = nullptr;
  return temp;
}
inline ::crm::ChatMessageModel* GetChatMessageResponse::_internal_mutable_chat_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chat_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::ChatMessageModel>(GetArena());
    _impl_.chat_message_ = reinterpret_cast<::crm::ChatMessageModel*>(p);
  }
  return _impl_.chat_message_;
}
inline ::crm::ChatMessageModel* GetChatMessageResponse::mutable_chat_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crm::ChatMessageModel* _msg = _internal_mutable_chat_message();
  // @@protoc_insertion_point(field_mutable:crm.GetChatMessageResponse.chat_message)
  return _msg;
}
inline void GetChatMessageResponse::set_allocated_chat_message(::crm::ChatMessageModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.chat_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.chat_message_ = reinterpret_cast<::crm::ChatMessageModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.GetChatMessageResponse.chat_message)
}

// -------------------------------------------------------------------

// ListChatMessagesRequest

// int64 lead_id = 1;
inline void ListChatMessagesRequest::clear_lead_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = ::int64_t{0};
}
inline ::int64_t ListChatMessagesRequest::lead_id() const {
  // @@protoc_insertion_point(field_get:crm.ListChatMessagesRequest.lead_id)
  return _internal_lead_id();
}
inline void ListChatMessagesRequest::set_lead_id(::int64_t value) {
  _internal_set_lead_id(value);
  // @@protoc_insertion_point(field_set:crm.ListChatMessagesRequest.lead_id)
}
inline ::int64_t ListChatMessagesRequest::_internal_lead_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_id_;
}
inline void ListChatMessagesRequest::_internal_set_lead_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = value;
}

// int32 page = 2;
inline void ListChatMessagesRequest::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = 0;
}
inline ::int32_t ListChatMessagesRequest::page() const {
  // @@protoc_insertion_point(field_get:crm.ListChatMessagesRequest.page)
  return _internal_page();
}
inline void ListChatMessagesRequest::set_page(::int32_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:crm.ListChatMessagesRequest.page)
}
inline ::int32_t ListChatMessagesRequest::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void ListChatMessagesRequest::_internal_set_page(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// int32 page_size = 3;
inline void ListChatMessagesRequest::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = 0;
}
inline ::int32_t ListChatMessagesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:crm.ListChatMessagesRequest.page_size)
  return _internal_page_size();
}
inline void ListChatMessagesRequest::set_page_size(::int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:crm.ListChatMessagesRequest.page_size)
}
inline ::int32_t ListChatMessagesRequest::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void ListChatMessagesRequest::_internal_set_page_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// -------------------------------------------------------------------

// ListChatMessagesResponse

// repeated .crm.ChatMessageModel chat_messages = 1;
inline int ListChatMessagesResponse::_internal_chat_messages_size() const {
  return _internal_chat_messages().size();
}
inline int ListChatMessagesResponse::chat_messages_size() const {
  return _internal_chat_messages_size();
}
inline void ListChatMessagesResponse::clear_chat_messages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chat_messages_.Clear();
}
inline ::crm::ChatMessageModel* ListChatMessagesResponse::mutable_chat_messages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:crm.ListChatMessagesResponse.chat_messages)
  return _internal_mutable_chat_messages()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::crm::ChatMessageModel>* ListChatMessagesResponse::mutable_chat_messages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:crm.ListChatMessagesResponse.chat_messages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_chat_messages();
}
inline const ::crm::ChatMessageModel& ListChatMessagesResponse::chat_messages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.ListChatMessagesResponse.chat_messages)
  return _internal_chat_messages().Get(index);
}
inline ::crm::ChatMessageModel* ListChatMessagesResponse::add_chat_messages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::crm::ChatMessageModel* _add = _internal_mutable_chat_messages()->Add();
  // @@protoc_insertion_point(field_add:crm.ListChatMessagesResponse.chat_messages)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::crm::ChatMessageModel>& ListChatMessagesResponse::chat_messages() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:crm.ListChatMessagesResponse.chat_messages)
  return _internal_chat_messages();
}
inline const ::google::protobuf::RepeatedPtrField<::crm::ChatMessageModel>&
ListChatMessagesResponse::_internal_chat_messages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chat_messages_;
}
inline ::google::protobuf::RepeatedPtrField<::crm::ChatMessageModel>*
ListChatMessagesResponse::_internal_mutable_chat_messages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.chat_messages_;
}

// int32 total_count = 2;
inline void ListChatMessagesResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = 0;
}
inline ::int32_t ListChatMessagesResponse::total_count() const {
  // @@protoc_insertion_point(field_get:crm.ListChatMessagesResponse.total_count)
  return _internal_total_count();
}
inline void ListChatMessagesResponse::set_total_count(::int32_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:crm.ListChatMessagesResponse.total_count)
}
inline ::int32_t ListChatMessagesResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void ListChatMessagesResponse::_internal_set_total_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// -------------------------------------------------------------------

// UpdateChatMessageRequest

// int64 message_id = 1;
inline void UpdateChatMessageRequest::clear_message_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_id_ = ::int64_t{0};
}
inline ::int64_t UpdateChatMessageRequest::message_id() const {
  // @@protoc_insertion_point(field_get:crm.UpdateChatMessageRequest.message_id)
  return _internal_message_id();
}
inline void UpdateChatMessageRequest::set_message_id(::int64_t value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:crm.UpdateChatMessageRequest.message_id)
}
inline ::int64_t UpdateChatMessageRequest::_internal_message_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_id_;
}
inline void UpdateChatMessageRequest::_internal_set_message_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_id_ = value;
}

// int64 lead_id = 2;
inline void UpdateChatMessageRequest::clear_lead_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = ::int64_t{0};
}
inline ::int64_t UpdateChatMessageRequest::lead_id() const {
  // @@protoc_insertion_point(field_get:crm.UpdateChatMessageRequest.lead_id)
  return _internal_lead_id();
}
inline void UpdateChatMessageRequest::set_lead_id(::int64_t value) {
  _internal_set_lead_id(value);
  // @@protoc_insertion_point(field_set:crm.UpdateChatMessageRequest.lead_id)
}
inline ::int64_t UpdateChatMessageRequest::_internal_lead_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_id_;
}
inline void UpdateChatMessageRequest::_internal_set_lead_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = value;
}

// int64 created_by = 3;
inline void UpdateChatMessageRequest::clear_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = ::int64_t{0};
}
inline ::int64_t UpdateChatMessageRequest::created_by() const {
  // @@protoc_insertion_point(field_get:crm.UpdateChatMessageRequest.created_by)
  return _internal_created_by();
}
inline void UpdateChatMessageRequest::set_created_by(::int64_t value) {
  _internal_set_created_by(value);
  // @@protoc_insertion_point(field_set:crm.UpdateChatMessageRequest.created_by)
}
inline ::int64_t UpdateChatMessageRequest::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_;
}
inline void UpdateChatMessageRequest::_internal_set_created_by(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = value;
}

// string message_text = 4;
inline void UpdateChatMessageRequest::clear_message_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_text_.ClearToEmpty();
}
inline const std::string& UpdateChatMessageRequest::message_text() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.UpdateChatMessageRequest.message_text)
  return _internal_message_text();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateChatMessageRequest::set_message_text(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_text_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.UpdateChatMessageRequest.message_text)
}
inline std::string* UpdateChatMessageRequest::mutable_message_text() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message_text();
  // @@protoc_insertion_point(field_mutable:crm.UpdateChatMessageRequest.message_text)
  return _s;
}
inline const std::string& UpdateChatMessageRequest::_internal_message_text() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_text_.Get();
}
inline void UpdateChatMessageRequest::_internal_set_message_text(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_text_.Set(value, GetArena());
}
inline std::string* UpdateChatMessageRequest::_internal_mutable_message_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_text_.Mutable( GetArena());
}
inline std::string* UpdateChatMessageRequest::release_message_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.UpdateChatMessageRequest.message_text)
  return _impl_.message_text_.Release();
}
inline void UpdateChatMessageRequest::set_allocated_message_text(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_text_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_text_.IsDefault()) {
    _impl_.message_text_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.UpdateChatMessageRequest.message_text)
}

// -------------------------------------------------------------------

// UpdateChatMessageResponse

// .crm.ChatMessageModel chat_message = 1;
inline bool UpdateChatMessageResponse::has_chat_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chat_message_ != nullptr);
  return value;
}
inline void UpdateChatMessageResponse::clear_chat_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chat_message_ != nullptr) _impl_.chat_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crm::ChatMessageModel& UpdateChatMessageResponse::_internal_chat_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::ChatMessageModel* p = _impl_.chat_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::ChatMessageModel&>(::crm::_ChatMessageModel_default_instance_);
}
inline const ::crm::ChatMessageModel& UpdateChatMessageResponse::chat_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.UpdateChatMessageResponse.chat_message)
  return _internal_chat_message();
}
inline void UpdateChatMessageResponse::unsafe_arena_set_allocated_chat_message(::crm::ChatMessageModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chat_message_);
  }
  _impl_.chat_message_ = reinterpret_cast<::crm::ChatMessageModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.UpdateChatMessageResponse.chat_message)
}
inline ::crm::ChatMessageModel* UpdateChatMessageResponse::release_chat_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::ChatMessageModel* released = _impl_.chat_message_;
  _impl_.chat_message_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::ChatMessageModel* UpdateChatMessageResponse::unsafe_arena_release_chat_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.UpdateChatMessageResponse.chat_message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::ChatMessageModel* temp = _impl_.chat_message_;
  _impl_.chat_message_ = nullptr;
  return temp;
}
inline ::crm::ChatMessageModel* UpdateChatMessageResponse::_internal_mutable_chat_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chat_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::ChatMessageModel>(GetArena());
    _impl_.chat_message_ = reinterpret_cast<::crm::ChatMessageModel*>(p);
  }
  return _impl_.chat_message_;
}
inline ::crm::ChatMessageModel* UpdateChatMessageResponse::mutable_chat_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crm::ChatMessageModel* _msg = _internal_mutable_chat_message();
  // @@protoc_insertion_point(field_mutable:crm.UpdateChatMessageResponse.chat_message)
  return _msg;
}
inline void UpdateChatMessageResponse::set_allocated_chat_message(::crm::ChatMessageModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.chat_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.chat_message_ = reinterpret_cast<::crm::ChatMessageModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.UpdateChatMessageResponse.chat_message)
}

// -------------------------------------------------------------------

// DeleteChatMessageRequest

// int64 message_id = 1;
inline void DeleteChatMessageRequest::clear_message_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_id_ = ::int64_t{0};
}
inline ::int64_t DeleteChatMessageRequest::message_id() const {
  // @@protoc_insertion_point(field_get:crm.DeleteChatMessageRequest.message_id)
  return _internal_message_id();
}
inline void DeleteChatMessageRequest::set_message_id(::int64_t value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:crm.DeleteChatMessageRequest.message_id)
}
inline ::int64_t DeleteChatMessageRequest::_internal_message_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_id_;
}
inline void DeleteChatMessageRequest::_internal_set_message_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_id_ = value;
}

// -------------------------------------------------------------------

// DeleteChatMessageResponse

// bool success = 1;
inline void DeleteChatMessageResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool DeleteChatMessageResponse::success() const {
  // @@protoc_insertion_point(field_get:crm.DeleteChatMessageResponse.success)
  return _internal_success();
}
inline void DeleteChatMessageResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:crm.DeleteChatMessageResponse.success)
}
inline bool DeleteChatMessageResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void DeleteChatMessageResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace crm


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // crm_2fcrm_2eproto_2epb_2eh

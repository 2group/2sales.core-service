// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: advertisement/advertisement.proto
// Protobuf C++ Version: 5.29.3

#ifndef advertisement_2fadvertisement_2eproto_2epb_2eh
#define advertisement_2fadvertisement_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_advertisement_2fadvertisement_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_advertisement_2fadvertisement_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_advertisement_2fadvertisement_2eproto;
namespace crm {
class BannerModel;
struct BannerModelDefaultTypeInternal;
extern BannerModelDefaultTypeInternal _BannerModel_default_instance_;
class CreateBannerRequest;
struct CreateBannerRequestDefaultTypeInternal;
extern CreateBannerRequestDefaultTypeInternal _CreateBannerRequest_default_instance_;
class CreateBannerResponse;
struct CreateBannerResponseDefaultTypeInternal;
extern CreateBannerResponseDefaultTypeInternal _CreateBannerResponse_default_instance_;
class ListBannersRequest;
struct ListBannersRequestDefaultTypeInternal;
extern ListBannersRequestDefaultTypeInternal _ListBannersRequest_default_instance_;
class ListBannersResponse;
struct ListBannersResponseDefaultTypeInternal;
extern ListBannersResponseDefaultTypeInternal _ListBannersResponse_default_instance_;
}  // namespace crm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace crm {

// ===================================================================


// -------------------------------------------------------------------

class ListBannersRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.ListBannersRequest) */ {
 public:
  inline ListBannersRequest() : ListBannersRequest(nullptr) {}
  ~ListBannersRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListBannersRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListBannersRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListBannersRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListBannersRequest(const ListBannersRequest& from) : ListBannersRequest(nullptr, from) {}
  inline ListBannersRequest(ListBannersRequest&& from) noexcept
      : ListBannersRequest(nullptr, std::move(from)) {}
  inline ListBannersRequest& operator=(const ListBannersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListBannersRequest& operator=(ListBannersRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListBannersRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListBannersRequest* internal_default_instance() {
    return reinterpret_cast<const ListBannersRequest*>(
        &_ListBannersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ListBannersRequest& a, ListBannersRequest& b) { a.Swap(&b); }
  inline void Swap(ListBannersRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListBannersRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListBannersRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListBannersRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListBannersRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListBannersRequest& from) { ListBannersRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListBannersRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.ListBannersRequest"; }

 protected:
  explicit ListBannersRequest(::google::protobuf::Arena* arena);
  ListBannersRequest(::google::protobuf::Arena* arena, const ListBannersRequest& from);
  ListBannersRequest(::google::protobuf::Arena* arena, ListBannersRequest&& from) noexcept
      : ListBannersRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIsActiveFieldNumber = 1,
  };
  // bool is_active = 1;
  void clear_is_active() ;
  bool is_active() const;
  void set_is_active(bool value);

  private:
  bool _internal_is_active() const;
  void _internal_set_is_active(bool value);

  public:
  // @@protoc_insertion_point(class_scope:crm.ListBannersRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListBannersRequest& from_msg);
    bool is_active_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_advertisement_2fadvertisement_2eproto;
};
// -------------------------------------------------------------------

class BannerModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.BannerModel) */ {
 public:
  inline BannerModel() : BannerModel(nullptr) {}
  ~BannerModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BannerModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BannerModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BannerModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline BannerModel(const BannerModel& from) : BannerModel(nullptr, from) {}
  inline BannerModel(BannerModel&& from) noexcept
      : BannerModel(nullptr, std::move(from)) {}
  inline BannerModel& operator=(const BannerModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline BannerModel& operator=(BannerModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BannerModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const BannerModel* internal_default_instance() {
    return reinterpret_cast<const BannerModel*>(
        &_BannerModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(BannerModel& a, BannerModel& b) { a.Swap(&b); }
  inline void Swap(BannerModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BannerModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BannerModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BannerModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BannerModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BannerModel& from) { BannerModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BannerModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.BannerModel"; }

 protected:
  explicit BannerModel(::google::protobuf::Arena* arena);
  BannerModel(::google::protobuf::Arena* arena, const BannerModel& from);
  BannerModel(::google::protobuf::Arena* arena, BannerModel&& from) noexcept
      : BannerModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kImageUrlFieldNumber = 4,
    kTargetUrlFieldNumber = 5,
    kCreatedAtFieldNumber = 8,
    kUpdatedAtFieldNumber = 9,
    kBannerIdFieldNumber = 1,
    kIsActiveFieldNumber = 6,
    kDisplayOrderFieldNumber = 7,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string description = 3;
  bool has_description() const;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string image_url = 4;
  void clear_image_url() ;
  const std::string& image_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_image_url(Arg_&& arg, Args_... args);
  std::string* mutable_image_url();
  PROTOBUF_NODISCARD std::string* release_image_url();
  void set_allocated_image_url(std::string* value);

  private:
  const std::string& _internal_image_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_image_url(
      const std::string& value);
  std::string* _internal_mutable_image_url();

  public:
  // optional string target_url = 5;
  bool has_target_url() const;
  void clear_target_url() ;
  const std::string& target_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target_url(Arg_&& arg, Args_... args);
  std::string* mutable_target_url();
  PROTOBUF_NODISCARD std::string* release_target_url();
  void set_allocated_target_url(std::string* value);

  private:
  const std::string& _internal_target_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target_url(
      const std::string& value);
  std::string* _internal_mutable_target_url();

  public:
  // string created_at = 8;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // string updated_at = 9;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // int64 banner_id = 1;
  void clear_banner_id() ;
  ::int64_t banner_id() const;
  void set_banner_id(::int64_t value);

  private:
  ::int64_t _internal_banner_id() const;
  void _internal_set_banner_id(::int64_t value);

  public:
  // bool is_active = 6;
  void clear_is_active() ;
  bool is_active() const;
  void set_is_active(bool value);

  private:
  bool _internal_is_active() const;
  void _internal_set_is_active(bool value);

  public:
  // int32 display_order = 7;
  void clear_display_order() ;
  ::int32_t display_order() const;
  void set_display_order(::int32_t value);

  private:
  ::int32_t _internal_display_order() const;
  void _internal_set_display_order(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:crm.BannerModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      86, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BannerModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr image_url_;
    ::google::protobuf::internal::ArenaStringPtr target_url_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::int64_t banner_id_;
    bool is_active_;
    ::int32_t display_order_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_advertisement_2fadvertisement_2eproto;
};
// -------------------------------------------------------------------

class ListBannersResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.ListBannersResponse) */ {
 public:
  inline ListBannersResponse() : ListBannersResponse(nullptr) {}
  ~ListBannersResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListBannersResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListBannersResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListBannersResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListBannersResponse(const ListBannersResponse& from) : ListBannersResponse(nullptr, from) {}
  inline ListBannersResponse(ListBannersResponse&& from) noexcept
      : ListBannersResponse(nullptr, std::move(from)) {}
  inline ListBannersResponse& operator=(const ListBannersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListBannersResponse& operator=(ListBannersResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListBannersResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListBannersResponse* internal_default_instance() {
    return reinterpret_cast<const ListBannersResponse*>(
        &_ListBannersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ListBannersResponse& a, ListBannersResponse& b) { a.Swap(&b); }
  inline void Swap(ListBannersResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListBannersResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListBannersResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListBannersResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListBannersResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListBannersResponse& from) { ListBannersResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListBannersResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.ListBannersResponse"; }

 protected:
  explicit ListBannersResponse(::google::protobuf::Arena* arena);
  ListBannersResponse(::google::protobuf::Arena* arena, const ListBannersResponse& from);
  ListBannersResponse(::google::protobuf::Arena* arena, ListBannersResponse&& from) noexcept
      : ListBannersResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBannersFieldNumber = 1,
  };
  // repeated .crm.BannerModel banners = 1;
  int banners_size() const;
  private:
  int _internal_banners_size() const;

  public:
  void clear_banners() ;
  ::crm::BannerModel* mutable_banners(int index);
  ::google::protobuf::RepeatedPtrField<::crm::BannerModel>* mutable_banners();

  private:
  const ::google::protobuf::RepeatedPtrField<::crm::BannerModel>& _internal_banners() const;
  ::google::protobuf::RepeatedPtrField<::crm::BannerModel>* _internal_mutable_banners();
  public:
  const ::crm::BannerModel& banners(int index) const;
  ::crm::BannerModel* add_banners();
  const ::google::protobuf::RepeatedPtrField<::crm::BannerModel>& banners() const;
  // @@protoc_insertion_point(class_scope:crm.ListBannersResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListBannersResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::crm::BannerModel > banners_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_advertisement_2fadvertisement_2eproto;
};
// -------------------------------------------------------------------

class CreateBannerResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.CreateBannerResponse) */ {
 public:
  inline CreateBannerResponse() : CreateBannerResponse(nullptr) {}
  ~CreateBannerResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateBannerResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateBannerResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateBannerResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateBannerResponse(const CreateBannerResponse& from) : CreateBannerResponse(nullptr, from) {}
  inline CreateBannerResponse(CreateBannerResponse&& from) noexcept
      : CreateBannerResponse(nullptr, std::move(from)) {}
  inline CreateBannerResponse& operator=(const CreateBannerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateBannerResponse& operator=(CreateBannerResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateBannerResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateBannerResponse* internal_default_instance() {
    return reinterpret_cast<const CreateBannerResponse*>(
        &_CreateBannerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CreateBannerResponse& a, CreateBannerResponse& b) { a.Swap(&b); }
  inline void Swap(CreateBannerResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateBannerResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateBannerResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateBannerResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateBannerResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateBannerResponse& from) { CreateBannerResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateBannerResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.CreateBannerResponse"; }

 protected:
  explicit CreateBannerResponse(::google::protobuf::Arena* arena);
  CreateBannerResponse(::google::protobuf::Arena* arena, const CreateBannerResponse& from);
  CreateBannerResponse(::google::protobuf::Arena* arena, CreateBannerResponse&& from) noexcept
      : CreateBannerResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBannerFieldNumber = 1,
  };
  // .crm.BannerModel banner = 1;
  bool has_banner() const;
  void clear_banner() ;
  const ::crm::BannerModel& banner() const;
  PROTOBUF_NODISCARD ::crm::BannerModel* release_banner();
  ::crm::BannerModel* mutable_banner();
  void set_allocated_banner(::crm::BannerModel* value);
  void unsafe_arena_set_allocated_banner(::crm::BannerModel* value);
  ::crm::BannerModel* unsafe_arena_release_banner();

  private:
  const ::crm::BannerModel& _internal_banner() const;
  ::crm::BannerModel* _internal_mutable_banner();

  public:
  // @@protoc_insertion_point(class_scope:crm.CreateBannerResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateBannerResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crm::BannerModel* banner_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_advertisement_2fadvertisement_2eproto;
};
// -------------------------------------------------------------------

class CreateBannerRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:crm.CreateBannerRequest) */ {
 public:
  inline CreateBannerRequest() : CreateBannerRequest(nullptr) {}
  ~CreateBannerRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateBannerRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateBannerRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateBannerRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateBannerRequest(const CreateBannerRequest& from) : CreateBannerRequest(nullptr, from) {}
  inline CreateBannerRequest(CreateBannerRequest&& from) noexcept
      : CreateBannerRequest(nullptr, std::move(from)) {}
  inline CreateBannerRequest& operator=(const CreateBannerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateBannerRequest& operator=(CreateBannerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateBannerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateBannerRequest* internal_default_instance() {
    return reinterpret_cast<const CreateBannerRequest*>(
        &_CreateBannerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CreateBannerRequest& a, CreateBannerRequest& b) { a.Swap(&b); }
  inline void Swap(CreateBannerRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateBannerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateBannerRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateBannerRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateBannerRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateBannerRequest& from) { CreateBannerRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateBannerRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "crm.CreateBannerRequest"; }

 protected:
  explicit CreateBannerRequest(::google::protobuf::Arena* arena);
  CreateBannerRequest(::google::protobuf::Arena* arena, const CreateBannerRequest& from);
  CreateBannerRequest(::google::protobuf::Arena* arena, CreateBannerRequest&& from) noexcept
      : CreateBannerRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBannerFieldNumber = 1,
  };
  // .crm.BannerModel banner = 1;
  bool has_banner() const;
  void clear_banner() ;
  const ::crm::BannerModel& banner() const;
  PROTOBUF_NODISCARD ::crm::BannerModel* release_banner();
  ::crm::BannerModel* mutable_banner();
  void set_allocated_banner(::crm::BannerModel* value);
  void unsafe_arena_set_allocated_banner(::crm::BannerModel* value);
  ::crm::BannerModel* unsafe_arena_release_banner();

  private:
  const ::crm::BannerModel& _internal_banner() const;
  ::crm::BannerModel* _internal_mutable_banner();

  public:
  // @@protoc_insertion_point(class_scope:crm.CreateBannerRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateBannerRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::crm::BannerModel* banner_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_advertisement_2fadvertisement_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BannerModel

// int64 banner_id = 1;
inline void BannerModel::clear_banner_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.banner_id_ = ::int64_t{0};
}
inline ::int64_t BannerModel::banner_id() const {
  // @@protoc_insertion_point(field_get:crm.BannerModel.banner_id)
  return _internal_banner_id();
}
inline void BannerModel::set_banner_id(::int64_t value) {
  _internal_set_banner_id(value);
  // @@protoc_insertion_point(field_set:crm.BannerModel.banner_id)
}
inline ::int64_t BannerModel::_internal_banner_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.banner_id_;
}
inline void BannerModel::_internal_set_banner_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.banner_id_ = value;
}

// string name = 2;
inline void BannerModel::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& BannerModel::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.BannerModel.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BannerModel::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.BannerModel.name)
}
inline std::string* BannerModel::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:crm.BannerModel.name)
  return _s;
}
inline const std::string& BannerModel::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void BannerModel::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* BannerModel::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* BannerModel::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.BannerModel.name)
  return _impl_.name_.Release();
}
inline void BannerModel::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.BannerModel.name)
}

// optional string description = 3;
inline bool BannerModel::has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BannerModel::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& BannerModel::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.BannerModel.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BannerModel::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.BannerModel.description)
}
inline std::string* BannerModel::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:crm.BannerModel.description)
  return _s;
}
inline const std::string& BannerModel::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void BannerModel::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.description_.Set(value, GetArena());
}
inline std::string* BannerModel::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* BannerModel::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.BannerModel.description)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void BannerModel::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.BannerModel.description)
}

// string image_url = 4;
inline void BannerModel::clear_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.ClearToEmpty();
}
inline const std::string& BannerModel::image_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.BannerModel.image_url)
  return _internal_image_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BannerModel::set_image_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.BannerModel.image_url)
}
inline std::string* BannerModel::mutable_image_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_image_url();
  // @@protoc_insertion_point(field_mutable:crm.BannerModel.image_url)
  return _s;
}
inline const std::string& BannerModel::_internal_image_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.image_url_.Get();
}
inline void BannerModel::_internal_set_image_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.Set(value, GetArena());
}
inline std::string* BannerModel::_internal_mutable_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.image_url_.Mutable( GetArena());
}
inline std::string* BannerModel::release_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.BannerModel.image_url)
  return _impl_.image_url_.Release();
}
inline void BannerModel::set_allocated_image_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.image_url_.IsDefault()) {
    _impl_.image_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.BannerModel.image_url)
}

// optional string target_url = 5;
inline bool BannerModel::has_target_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BannerModel::clear_target_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& BannerModel::target_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.BannerModel.target_url)
  return _internal_target_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BannerModel::set_target_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.target_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.BannerModel.target_url)
}
inline std::string* BannerModel::mutable_target_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target_url();
  // @@protoc_insertion_point(field_mutable:crm.BannerModel.target_url)
  return _s;
}
inline const std::string& BannerModel::_internal_target_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_url_.Get();
}
inline void BannerModel::_internal_set_target_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.target_url_.Set(value, GetArena());
}
inline std::string* BannerModel::_internal_mutable_target_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.target_url_.Mutable( GetArena());
}
inline std::string* BannerModel::release_target_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.BannerModel.target_url)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.target_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.target_url_.Set("", GetArena());
  }
  return released;
}
inline void BannerModel::set_allocated_target_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.target_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_url_.IsDefault()) {
    _impl_.target_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.BannerModel.target_url)
}

// bool is_active = 6;
inline void BannerModel::clear_is_active() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_active_ = false;
}
inline bool BannerModel::is_active() const {
  // @@protoc_insertion_point(field_get:crm.BannerModel.is_active)
  return _internal_is_active();
}
inline void BannerModel::set_is_active(bool value) {
  _internal_set_is_active(value);
  // @@protoc_insertion_point(field_set:crm.BannerModel.is_active)
}
inline bool BannerModel::_internal_is_active() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_active_;
}
inline void BannerModel::_internal_set_is_active(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_active_ = value;
}

// int32 display_order = 7;
inline void BannerModel::clear_display_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.display_order_ = 0;
}
inline ::int32_t BannerModel::display_order() const {
  // @@protoc_insertion_point(field_get:crm.BannerModel.display_order)
  return _internal_display_order();
}
inline void BannerModel::set_display_order(::int32_t value) {
  _internal_set_display_order(value);
  // @@protoc_insertion_point(field_set:crm.BannerModel.display_order)
}
inline ::int32_t BannerModel::_internal_display_order() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.display_order_;
}
inline void BannerModel::_internal_set_display_order(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.display_order_ = value;
}

// string created_at = 8;
inline void BannerModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& BannerModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.BannerModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BannerModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.BannerModel.created_at)
}
inline std::string* BannerModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:crm.BannerModel.created_at)
  return _s;
}
inline const std::string& BannerModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void BannerModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* BannerModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* BannerModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.BannerModel.created_at)
  return _impl_.created_at_.Release();
}
inline void BannerModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.BannerModel.created_at)
}

// string updated_at = 9;
inline void BannerModel::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
}
inline const std::string& BannerModel::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.BannerModel.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BannerModel::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:crm.BannerModel.updated_at)
}
inline std::string* BannerModel::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:crm.BannerModel.updated_at)
  return _s;
}
inline const std::string& BannerModel::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void BannerModel::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* BannerModel::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* BannerModel::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.BannerModel.updated_at)
  return _impl_.updated_at_.Release();
}
inline void BannerModel::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_at_.IsDefault()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:crm.BannerModel.updated_at)
}

// -------------------------------------------------------------------

// CreateBannerRequest

// .crm.BannerModel banner = 1;
inline bool CreateBannerRequest::has_banner() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.banner_ != nullptr);
  return value;
}
inline void CreateBannerRequest::clear_banner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.banner_ != nullptr) _impl_.banner_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crm::BannerModel& CreateBannerRequest::_internal_banner() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::BannerModel* p = _impl_.banner_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::BannerModel&>(::crm::_BannerModel_default_instance_);
}
inline const ::crm::BannerModel& CreateBannerRequest::banner() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.CreateBannerRequest.banner)
  return _internal_banner();
}
inline void CreateBannerRequest::unsafe_arena_set_allocated_banner(::crm::BannerModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.banner_);
  }
  _impl_.banner_ = reinterpret_cast<::crm::BannerModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.CreateBannerRequest.banner)
}
inline ::crm::BannerModel* CreateBannerRequest::release_banner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::BannerModel* released = _impl_.banner_;
  _impl_.banner_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::BannerModel* CreateBannerRequest::unsafe_arena_release_banner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.CreateBannerRequest.banner)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::BannerModel* temp = _impl_.banner_;
  _impl_.banner_ = nullptr;
  return temp;
}
inline ::crm::BannerModel* CreateBannerRequest::_internal_mutable_banner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.banner_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::BannerModel>(GetArena());
    _impl_.banner_ = reinterpret_cast<::crm::BannerModel*>(p);
  }
  return _impl_.banner_;
}
inline ::crm::BannerModel* CreateBannerRequest::mutable_banner() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crm::BannerModel* _msg = _internal_mutable_banner();
  // @@protoc_insertion_point(field_mutable:crm.CreateBannerRequest.banner)
  return _msg;
}
inline void CreateBannerRequest::set_allocated_banner(::crm::BannerModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.banner_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.banner_ = reinterpret_cast<::crm::BannerModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.CreateBannerRequest.banner)
}

// -------------------------------------------------------------------

// CreateBannerResponse

// .crm.BannerModel banner = 1;
inline bool CreateBannerResponse::has_banner() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.banner_ != nullptr);
  return value;
}
inline void CreateBannerResponse::clear_banner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.banner_ != nullptr) _impl_.banner_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::crm::BannerModel& CreateBannerResponse::_internal_banner() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::crm::BannerModel* p = _impl_.banner_;
  return p != nullptr ? *p : reinterpret_cast<const ::crm::BannerModel&>(::crm::_BannerModel_default_instance_);
}
inline const ::crm::BannerModel& CreateBannerResponse::banner() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.CreateBannerResponse.banner)
  return _internal_banner();
}
inline void CreateBannerResponse::unsafe_arena_set_allocated_banner(::crm::BannerModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.banner_);
  }
  _impl_.banner_ = reinterpret_cast<::crm::BannerModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:crm.CreateBannerResponse.banner)
}
inline ::crm::BannerModel* CreateBannerResponse::release_banner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::BannerModel* released = _impl_.banner_;
  _impl_.banner_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::crm::BannerModel* CreateBannerResponse::unsafe_arena_release_banner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:crm.CreateBannerResponse.banner)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::crm::BannerModel* temp = _impl_.banner_;
  _impl_.banner_ = nullptr;
  return temp;
}
inline ::crm::BannerModel* CreateBannerResponse::_internal_mutable_banner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.banner_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::crm::BannerModel>(GetArena());
    _impl_.banner_ = reinterpret_cast<::crm::BannerModel*>(p);
  }
  return _impl_.banner_;
}
inline ::crm::BannerModel* CreateBannerResponse::mutable_banner() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::crm::BannerModel* _msg = _internal_mutable_banner();
  // @@protoc_insertion_point(field_mutable:crm.CreateBannerResponse.banner)
  return _msg;
}
inline void CreateBannerResponse::set_allocated_banner(::crm::BannerModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.banner_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.banner_ = reinterpret_cast<::crm::BannerModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:crm.CreateBannerResponse.banner)
}

// -------------------------------------------------------------------

// ListBannersRequest

// bool is_active = 1;
inline void ListBannersRequest::clear_is_active() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_active_ = false;
}
inline bool ListBannersRequest::is_active() const {
  // @@protoc_insertion_point(field_get:crm.ListBannersRequest.is_active)
  return _internal_is_active();
}
inline void ListBannersRequest::set_is_active(bool value) {
  _internal_set_is_active(value);
  // @@protoc_insertion_point(field_set:crm.ListBannersRequest.is_active)
}
inline bool ListBannersRequest::_internal_is_active() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_active_;
}
inline void ListBannersRequest::_internal_set_is_active(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_active_ = value;
}

// -------------------------------------------------------------------

// ListBannersResponse

// repeated .crm.BannerModel banners = 1;
inline int ListBannersResponse::_internal_banners_size() const {
  return _internal_banners().size();
}
inline int ListBannersResponse::banners_size() const {
  return _internal_banners_size();
}
inline void ListBannersResponse::clear_banners() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.banners_.Clear();
}
inline ::crm::BannerModel* ListBannersResponse::mutable_banners(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:crm.ListBannersResponse.banners)
  return _internal_mutable_banners()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::crm::BannerModel>* ListBannersResponse::mutable_banners()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:crm.ListBannersResponse.banners)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_banners();
}
inline const ::crm::BannerModel& ListBannersResponse::banners(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:crm.ListBannersResponse.banners)
  return _internal_banners().Get(index);
}
inline ::crm::BannerModel* ListBannersResponse::add_banners() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::crm::BannerModel* _add = _internal_mutable_banners()->Add();
  // @@protoc_insertion_point(field_add:crm.ListBannersResponse.banners)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::crm::BannerModel>& ListBannersResponse::banners() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:crm.ListBannersResponse.banners)
  return _internal_banners();
}
inline const ::google::protobuf::RepeatedPtrField<::crm::BannerModel>&
ListBannersResponse::_internal_banners() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.banners_;
}
inline ::google::protobuf::RepeatedPtrField<::crm::BannerModel>*
ListBannersResponse::_internal_mutable_banners() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.banners_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace crm


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // advertisement_2fadvertisement_2eproto_2epb_2eh

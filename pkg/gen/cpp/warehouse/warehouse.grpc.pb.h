// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: warehouse/warehouse.proto
#ifndef GRPC_warehouse_2fwarehouse_2eproto__INCLUDED
#define GRPC_warehouse_2fwarehouse_2eproto__INCLUDED

#include "warehouse/warehouse.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace warehouse {

class WarehouseService final {
 public:
  static constexpr char const* service_full_name() {
    return "warehouse.WarehouseService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status CreateWarehouse(::grpc::ClientContext* context, const ::warehouse::CreateWarehouseRequest& request, ::warehouse::CreateWarehouseResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateWarehouseResponse>> AsyncCreateWarehouse(::grpc::ClientContext* context, const ::warehouse::CreateWarehouseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateWarehouseResponse>>(AsyncCreateWarehouseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateWarehouseResponse>> PrepareAsyncCreateWarehouse(::grpc::ClientContext* context, const ::warehouse::CreateWarehouseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateWarehouseResponse>>(PrepareAsyncCreateWarehouseRaw(context, request, cq));
    }
    virtual ::grpc::Status ListWarehouses(::grpc::ClientContext* context, const ::warehouse::ListWarehousesRequest& request, ::warehouse::ListWarehousesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListWarehousesResponse>> AsyncListWarehouses(::grpc::ClientContext* context, const ::warehouse::ListWarehousesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListWarehousesResponse>>(AsyncListWarehousesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListWarehousesResponse>> PrepareAsyncListWarehouses(::grpc::ClientContext* context, const ::warehouse::ListWarehousesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListWarehousesResponse>>(PrepareAsyncListWarehousesRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateWarehouse(::grpc::ClientContext* context, const ::warehouse::UpdateWarehouseRequest& request, ::warehouse::UpdateWarehouseResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::UpdateWarehouseResponse>> AsyncUpdateWarehouse(::grpc::ClientContext* context, const ::warehouse::UpdateWarehouseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::UpdateWarehouseResponse>>(AsyncUpdateWarehouseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::UpdateWarehouseResponse>> PrepareAsyncUpdateWarehouse(::grpc::ClientContext* context, const ::warehouse::UpdateWarehouseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::UpdateWarehouseResponse>>(PrepareAsyncUpdateWarehouseRaw(context, request, cq));
    }
    virtual ::grpc::Status GetProductsInWarehouse(::grpc::ClientContext* context, const ::warehouse::GetProductsInWarehouseRequest& request, ::warehouse::GetProductsInWarehouseResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetProductsInWarehouseResponse>> AsyncGetProductsInWarehouse(::grpc::ClientContext* context, const ::warehouse::GetProductsInWarehouseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetProductsInWarehouseResponse>>(AsyncGetProductsInWarehouseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetProductsInWarehouseResponse>> PrepareAsyncGetProductsInWarehouse(::grpc::ClientContext* context, const ::warehouse::GetProductsInWarehouseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetProductsInWarehouseResponse>>(PrepareAsyncGetProductsInWarehouseRaw(context, request, cq));
    }
    virtual ::grpc::Status GetWarehouseAnalytics(::grpc::ClientContext* context, const ::warehouse::GetWarehouseAnalyticsRequest& request, ::warehouse::GetWarehouseAnalyticsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetWarehouseAnalyticsResponse>> AsyncGetWarehouseAnalytics(::grpc::ClientContext* context, const ::warehouse::GetWarehouseAnalyticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetWarehouseAnalyticsResponse>>(AsyncGetWarehouseAnalyticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetWarehouseAnalyticsResponse>> PrepareAsyncGetWarehouseAnalytics(::grpc::ClientContext* context, const ::warehouse::GetWarehouseAnalyticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetWarehouseAnalyticsResponse>>(PrepareAsyncGetWarehouseAnalyticsRaw(context, request, cq));
    }
    virtual ::grpc::Status AddProductToWarehouse(::grpc::ClientContext* context, const ::warehouse::AddProductToWarehouseRequest& request, ::warehouse::AddProductToWarehouseResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::AddProductToWarehouseResponse>> AsyncAddProductToWarehouse(::grpc::ClientContext* context, const ::warehouse::AddProductToWarehouseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::AddProductToWarehouseResponse>>(AsyncAddProductToWarehouseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::AddProductToWarehouseResponse>> PrepareAsyncAddProductToWarehouse(::grpc::ClientContext* context, const ::warehouse::AddProductToWarehouseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::AddProductToWarehouseResponse>>(PrepareAsyncAddProductToWarehouseRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateAcceptance(::grpc::ClientContext* context, const ::warehouse::CreateAcceptanceRequest& request, ::warehouse::CreateAcceptanceResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateAcceptanceResponse>> AsyncCreateAcceptance(::grpc::ClientContext* context, const ::warehouse::CreateAcceptanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateAcceptanceResponse>>(AsyncCreateAcceptanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateAcceptanceResponse>> PrepareAsyncCreateAcceptance(::grpc::ClientContext* context, const ::warehouse::CreateAcceptanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateAcceptanceResponse>>(PrepareAsyncCreateAcceptanceRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAcceptance(::grpc::ClientContext* context, const ::warehouse::GetAcceptanceRequest& request, ::warehouse::GetAcceptanceResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetAcceptanceResponse>> AsyncGetAcceptance(::grpc::ClientContext* context, const ::warehouse::GetAcceptanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetAcceptanceResponse>>(AsyncGetAcceptanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetAcceptanceResponse>> PrepareAsyncGetAcceptance(::grpc::ClientContext* context, const ::warehouse::GetAcceptanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetAcceptanceResponse>>(PrepareAsyncGetAcceptanceRaw(context, request, cq));
    }
    virtual ::grpc::Status ListAcceptances(::grpc::ClientContext* context, const ::warehouse::ListAcceptancesRequest& request, ::warehouse::ListAcceptancesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListAcceptancesResponse>> AsyncListAcceptances(::grpc::ClientContext* context, const ::warehouse::ListAcceptancesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListAcceptancesResponse>>(AsyncListAcceptancesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListAcceptancesResponse>> PrepareAsyncListAcceptances(::grpc::ClientContext* context, const ::warehouse::ListAcceptancesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListAcceptancesResponse>>(PrepareAsyncListAcceptancesRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateAcceptance(::grpc::ClientContext* context, const ::warehouse::UpdateAcceptanceRequest& request, ::warehouse::UpdateAcceptanceResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::UpdateAcceptanceResponse>> AsyncUpdateAcceptance(::grpc::ClientContext* context, const ::warehouse::UpdateAcceptanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::UpdateAcceptanceResponse>>(AsyncUpdateAcceptanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::UpdateAcceptanceResponse>> PrepareAsyncUpdateAcceptance(::grpc::ClientContext* context, const ::warehouse::UpdateAcceptanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::UpdateAcceptanceResponse>>(PrepareAsyncUpdateAcceptanceRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteAcceptance(::grpc::ClientContext* context, const ::warehouse::DeleteAcceptanceRequest& request, ::warehouse::DeleteAcceptanceResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::DeleteAcceptanceResponse>> AsyncDeleteAcceptance(::grpc::ClientContext* context, const ::warehouse::DeleteAcceptanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::DeleteAcceptanceResponse>>(AsyncDeleteAcceptanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::DeleteAcceptanceResponse>> PrepareAsyncDeleteAcceptance(::grpc::ClientContext* context, const ::warehouse::DeleteAcceptanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::DeleteAcceptanceResponse>>(PrepareAsyncDeleteAcceptanceRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateWriteOff(::grpc::ClientContext* context, const ::warehouse::CreateWriteOffRequest& request, ::warehouse::CreateWriteOffResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateWriteOffResponse>> AsyncCreateWriteOff(::grpc::ClientContext* context, const ::warehouse::CreateWriteOffRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateWriteOffResponse>>(AsyncCreateWriteOffRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateWriteOffResponse>> PrepareAsyncCreateWriteOff(::grpc::ClientContext* context, const ::warehouse::CreateWriteOffRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateWriteOffResponse>>(PrepareAsyncCreateWriteOffRaw(context, request, cq));
    }
    virtual ::grpc::Status GetWriteOff(::grpc::ClientContext* context, const ::warehouse::GetWriteOffRequest& request, ::warehouse::GetWriteOffResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetWriteOffResponse>> AsyncGetWriteOff(::grpc::ClientContext* context, const ::warehouse::GetWriteOffRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetWriteOffResponse>>(AsyncGetWriteOffRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetWriteOffResponse>> PrepareAsyncGetWriteOff(::grpc::ClientContext* context, const ::warehouse::GetWriteOffRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetWriteOffResponse>>(PrepareAsyncGetWriteOffRaw(context, request, cq));
    }
    virtual ::grpc::Status ListWriteOff(::grpc::ClientContext* context, const ::warehouse::ListWriteOffRequest& request, ::warehouse::ListWriteOffResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListWriteOffResponse>> AsyncListWriteOff(::grpc::ClientContext* context, const ::warehouse::ListWriteOffRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListWriteOffResponse>>(AsyncListWriteOffRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListWriteOffResponse>> PrepareAsyncListWriteOff(::grpc::ClientContext* context, const ::warehouse::ListWriteOffRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListWriteOffResponse>>(PrepareAsyncListWriteOffRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateMoving(::grpc::ClientContext* context, const ::warehouse::CreateMovingRequest& request, ::warehouse::CreateMovingResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateMovingResponse>> AsyncCreateMoving(::grpc::ClientContext* context, const ::warehouse::CreateMovingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateMovingResponse>>(AsyncCreateMovingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateMovingResponse>> PrepareAsyncCreateMoving(::grpc::ClientContext* context, const ::warehouse::CreateMovingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateMovingResponse>>(PrepareAsyncCreateMovingRaw(context, request, cq));
    }
    virtual ::grpc::Status GetMoving(::grpc::ClientContext* context, const ::warehouse::GetMovingRequest& request, ::warehouse::GetMovingResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetMovingResponse>> AsyncGetMoving(::grpc::ClientContext* context, const ::warehouse::GetMovingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetMovingResponse>>(AsyncGetMovingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetMovingResponse>> PrepareAsyncGetMoving(::grpc::ClientContext* context, const ::warehouse::GetMovingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetMovingResponse>>(PrepareAsyncGetMovingRaw(context, request, cq));
    }
    virtual ::grpc::Status ListMoving(::grpc::ClientContext* context, const ::warehouse::ListMovingRequest& request, ::warehouse::ListMovingResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListMovingResponse>> AsyncListMoving(::grpc::ClientContext* context, const ::warehouse::ListMovingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListMovingResponse>>(AsyncListMovingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListMovingResponse>> PrepareAsyncListMoving(::grpc::ClientContext* context, const ::warehouse::ListMovingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListMovingResponse>>(PrepareAsyncListMovingRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateInventory(::grpc::ClientContext* context, const ::warehouse::CreateInventoryRequest& request, ::warehouse::CreateInventoryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateInventoryResponse>> AsyncCreateInventory(::grpc::ClientContext* context, const ::warehouse::CreateInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateInventoryResponse>>(AsyncCreateInventoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateInventoryResponse>> PrepareAsyncCreateInventory(::grpc::ClientContext* context, const ::warehouse::CreateInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateInventoryResponse>>(PrepareAsyncCreateInventoryRaw(context, request, cq));
    }
    virtual ::grpc::Status GetInventory(::grpc::ClientContext* context, const ::warehouse::GetInventoryRequest& request, ::warehouse::GetInventoryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetInventoryResponse>> AsyncGetInventory(::grpc::ClientContext* context, const ::warehouse::GetInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetInventoryResponse>>(AsyncGetInventoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetInventoryResponse>> PrepareAsyncGetInventory(::grpc::ClientContext* context, const ::warehouse::GetInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetInventoryResponse>>(PrepareAsyncGetInventoryRaw(context, request, cq));
    }
    virtual ::grpc::Status ListInventory(::grpc::ClientContext* context, const ::warehouse::ListInventoryRequest& request, ::warehouse::ListInventoryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListInventoryResponse>> AsyncListInventory(::grpc::ClientContext* context, const ::warehouse::ListInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListInventoryResponse>>(AsyncListInventoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListInventoryResponse>> PrepareAsyncListInventory(::grpc::ClientContext* context, const ::warehouse::ListInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListInventoryResponse>>(PrepareAsyncListInventoryRaw(context, request, cq));
    }
    virtual ::grpc::Status GetCountProducts(::grpc::ClientContext* context, const ::warehouse::GetCountProductsRequest& request, ::warehouse::GetCountProductsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetCountProductsResponse>> AsyncGetCountProducts(::grpc::ClientContext* context, const ::warehouse::GetCountProductsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetCountProductsResponse>>(AsyncGetCountProductsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetCountProductsResponse>> PrepareAsyncGetCountProducts(::grpc::ClientContext* context, const ::warehouse::GetCountProductsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetCountProductsResponse>>(PrepareAsyncGetCountProductsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void CreateWarehouse(::grpc::ClientContext* context, const ::warehouse::CreateWarehouseRequest* request, ::warehouse::CreateWarehouseResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateWarehouse(::grpc::ClientContext* context, const ::warehouse::CreateWarehouseRequest* request, ::warehouse::CreateWarehouseResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListWarehouses(::grpc::ClientContext* context, const ::warehouse::ListWarehousesRequest* request, ::warehouse::ListWarehousesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListWarehouses(::grpc::ClientContext* context, const ::warehouse::ListWarehousesRequest* request, ::warehouse::ListWarehousesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateWarehouse(::grpc::ClientContext* context, const ::warehouse::UpdateWarehouseRequest* request, ::warehouse::UpdateWarehouseResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateWarehouse(::grpc::ClientContext* context, const ::warehouse::UpdateWarehouseRequest* request, ::warehouse::UpdateWarehouseResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetProductsInWarehouse(::grpc::ClientContext* context, const ::warehouse::GetProductsInWarehouseRequest* request, ::warehouse::GetProductsInWarehouseResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetProductsInWarehouse(::grpc::ClientContext* context, const ::warehouse::GetProductsInWarehouseRequest* request, ::warehouse::GetProductsInWarehouseResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetWarehouseAnalytics(::grpc::ClientContext* context, const ::warehouse::GetWarehouseAnalyticsRequest* request, ::warehouse::GetWarehouseAnalyticsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetWarehouseAnalytics(::grpc::ClientContext* context, const ::warehouse::GetWarehouseAnalyticsRequest* request, ::warehouse::GetWarehouseAnalyticsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void AddProductToWarehouse(::grpc::ClientContext* context, const ::warehouse::AddProductToWarehouseRequest* request, ::warehouse::AddProductToWarehouseResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddProductToWarehouse(::grpc::ClientContext* context, const ::warehouse::AddProductToWarehouseRequest* request, ::warehouse::AddProductToWarehouseResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateAcceptance(::grpc::ClientContext* context, const ::warehouse::CreateAcceptanceRequest* request, ::warehouse::CreateAcceptanceResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateAcceptance(::grpc::ClientContext* context, const ::warehouse::CreateAcceptanceRequest* request, ::warehouse::CreateAcceptanceResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetAcceptance(::grpc::ClientContext* context, const ::warehouse::GetAcceptanceRequest* request, ::warehouse::GetAcceptanceResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAcceptance(::grpc::ClientContext* context, const ::warehouse::GetAcceptanceRequest* request, ::warehouse::GetAcceptanceResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListAcceptances(::grpc::ClientContext* context, const ::warehouse::ListAcceptancesRequest* request, ::warehouse::ListAcceptancesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListAcceptances(::grpc::ClientContext* context, const ::warehouse::ListAcceptancesRequest* request, ::warehouse::ListAcceptancesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateAcceptance(::grpc::ClientContext* context, const ::warehouse::UpdateAcceptanceRequest* request, ::warehouse::UpdateAcceptanceResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateAcceptance(::grpc::ClientContext* context, const ::warehouse::UpdateAcceptanceRequest* request, ::warehouse::UpdateAcceptanceResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteAcceptance(::grpc::ClientContext* context, const ::warehouse::DeleteAcceptanceRequest* request, ::warehouse::DeleteAcceptanceResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteAcceptance(::grpc::ClientContext* context, const ::warehouse::DeleteAcceptanceRequest* request, ::warehouse::DeleteAcceptanceResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateWriteOff(::grpc::ClientContext* context, const ::warehouse::CreateWriteOffRequest* request, ::warehouse::CreateWriteOffResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateWriteOff(::grpc::ClientContext* context, const ::warehouse::CreateWriteOffRequest* request, ::warehouse::CreateWriteOffResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetWriteOff(::grpc::ClientContext* context, const ::warehouse::GetWriteOffRequest* request, ::warehouse::GetWriteOffResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetWriteOff(::grpc::ClientContext* context, const ::warehouse::GetWriteOffRequest* request, ::warehouse::GetWriteOffResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListWriteOff(::grpc::ClientContext* context, const ::warehouse::ListWriteOffRequest* request, ::warehouse::ListWriteOffResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListWriteOff(::grpc::ClientContext* context, const ::warehouse::ListWriteOffRequest* request, ::warehouse::ListWriteOffResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateMoving(::grpc::ClientContext* context, const ::warehouse::CreateMovingRequest* request, ::warehouse::CreateMovingResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateMoving(::grpc::ClientContext* context, const ::warehouse::CreateMovingRequest* request, ::warehouse::CreateMovingResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetMoving(::grpc::ClientContext* context, const ::warehouse::GetMovingRequest* request, ::warehouse::GetMovingResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetMoving(::grpc::ClientContext* context, const ::warehouse::GetMovingRequest* request, ::warehouse::GetMovingResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListMoving(::grpc::ClientContext* context, const ::warehouse::ListMovingRequest* request, ::warehouse::ListMovingResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListMoving(::grpc::ClientContext* context, const ::warehouse::ListMovingRequest* request, ::warehouse::ListMovingResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateInventory(::grpc::ClientContext* context, const ::warehouse::CreateInventoryRequest* request, ::warehouse::CreateInventoryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateInventory(::grpc::ClientContext* context, const ::warehouse::CreateInventoryRequest* request, ::warehouse::CreateInventoryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetInventory(::grpc::ClientContext* context, const ::warehouse::GetInventoryRequest* request, ::warehouse::GetInventoryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetInventory(::grpc::ClientContext* context, const ::warehouse::GetInventoryRequest* request, ::warehouse::GetInventoryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListInventory(::grpc::ClientContext* context, const ::warehouse::ListInventoryRequest* request, ::warehouse::ListInventoryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListInventory(::grpc::ClientContext* context, const ::warehouse::ListInventoryRequest* request, ::warehouse::ListInventoryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetCountProducts(::grpc::ClientContext* context, const ::warehouse::GetCountProductsRequest* request, ::warehouse::GetCountProductsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetCountProducts(::grpc::ClientContext* context, const ::warehouse::GetCountProductsRequest* request, ::warehouse::GetCountProductsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateWarehouseResponse>* AsyncCreateWarehouseRaw(::grpc::ClientContext* context, const ::warehouse::CreateWarehouseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateWarehouseResponse>* PrepareAsyncCreateWarehouseRaw(::grpc::ClientContext* context, const ::warehouse::CreateWarehouseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListWarehousesResponse>* AsyncListWarehousesRaw(::grpc::ClientContext* context, const ::warehouse::ListWarehousesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListWarehousesResponse>* PrepareAsyncListWarehousesRaw(::grpc::ClientContext* context, const ::warehouse::ListWarehousesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::UpdateWarehouseResponse>* AsyncUpdateWarehouseRaw(::grpc::ClientContext* context, const ::warehouse::UpdateWarehouseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::UpdateWarehouseResponse>* PrepareAsyncUpdateWarehouseRaw(::grpc::ClientContext* context, const ::warehouse::UpdateWarehouseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetProductsInWarehouseResponse>* AsyncGetProductsInWarehouseRaw(::grpc::ClientContext* context, const ::warehouse::GetProductsInWarehouseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetProductsInWarehouseResponse>* PrepareAsyncGetProductsInWarehouseRaw(::grpc::ClientContext* context, const ::warehouse::GetProductsInWarehouseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetWarehouseAnalyticsResponse>* AsyncGetWarehouseAnalyticsRaw(::grpc::ClientContext* context, const ::warehouse::GetWarehouseAnalyticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetWarehouseAnalyticsResponse>* PrepareAsyncGetWarehouseAnalyticsRaw(::grpc::ClientContext* context, const ::warehouse::GetWarehouseAnalyticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::AddProductToWarehouseResponse>* AsyncAddProductToWarehouseRaw(::grpc::ClientContext* context, const ::warehouse::AddProductToWarehouseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::AddProductToWarehouseResponse>* PrepareAsyncAddProductToWarehouseRaw(::grpc::ClientContext* context, const ::warehouse::AddProductToWarehouseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateAcceptanceResponse>* AsyncCreateAcceptanceRaw(::grpc::ClientContext* context, const ::warehouse::CreateAcceptanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateAcceptanceResponse>* PrepareAsyncCreateAcceptanceRaw(::grpc::ClientContext* context, const ::warehouse::CreateAcceptanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetAcceptanceResponse>* AsyncGetAcceptanceRaw(::grpc::ClientContext* context, const ::warehouse::GetAcceptanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetAcceptanceResponse>* PrepareAsyncGetAcceptanceRaw(::grpc::ClientContext* context, const ::warehouse::GetAcceptanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListAcceptancesResponse>* AsyncListAcceptancesRaw(::grpc::ClientContext* context, const ::warehouse::ListAcceptancesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListAcceptancesResponse>* PrepareAsyncListAcceptancesRaw(::grpc::ClientContext* context, const ::warehouse::ListAcceptancesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::UpdateAcceptanceResponse>* AsyncUpdateAcceptanceRaw(::grpc::ClientContext* context, const ::warehouse::UpdateAcceptanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::UpdateAcceptanceResponse>* PrepareAsyncUpdateAcceptanceRaw(::grpc::ClientContext* context, const ::warehouse::UpdateAcceptanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::DeleteAcceptanceResponse>* AsyncDeleteAcceptanceRaw(::grpc::ClientContext* context, const ::warehouse::DeleteAcceptanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::DeleteAcceptanceResponse>* PrepareAsyncDeleteAcceptanceRaw(::grpc::ClientContext* context, const ::warehouse::DeleteAcceptanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateWriteOffResponse>* AsyncCreateWriteOffRaw(::grpc::ClientContext* context, const ::warehouse::CreateWriteOffRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateWriteOffResponse>* PrepareAsyncCreateWriteOffRaw(::grpc::ClientContext* context, const ::warehouse::CreateWriteOffRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetWriteOffResponse>* AsyncGetWriteOffRaw(::grpc::ClientContext* context, const ::warehouse::GetWriteOffRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetWriteOffResponse>* PrepareAsyncGetWriteOffRaw(::grpc::ClientContext* context, const ::warehouse::GetWriteOffRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListWriteOffResponse>* AsyncListWriteOffRaw(::grpc::ClientContext* context, const ::warehouse::ListWriteOffRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListWriteOffResponse>* PrepareAsyncListWriteOffRaw(::grpc::ClientContext* context, const ::warehouse::ListWriteOffRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateMovingResponse>* AsyncCreateMovingRaw(::grpc::ClientContext* context, const ::warehouse::CreateMovingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateMovingResponse>* PrepareAsyncCreateMovingRaw(::grpc::ClientContext* context, const ::warehouse::CreateMovingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetMovingResponse>* AsyncGetMovingRaw(::grpc::ClientContext* context, const ::warehouse::GetMovingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetMovingResponse>* PrepareAsyncGetMovingRaw(::grpc::ClientContext* context, const ::warehouse::GetMovingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListMovingResponse>* AsyncListMovingRaw(::grpc::ClientContext* context, const ::warehouse::ListMovingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListMovingResponse>* PrepareAsyncListMovingRaw(::grpc::ClientContext* context, const ::warehouse::ListMovingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateInventoryResponse>* AsyncCreateInventoryRaw(::grpc::ClientContext* context, const ::warehouse::CreateInventoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::CreateInventoryResponse>* PrepareAsyncCreateInventoryRaw(::grpc::ClientContext* context, const ::warehouse::CreateInventoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetInventoryResponse>* AsyncGetInventoryRaw(::grpc::ClientContext* context, const ::warehouse::GetInventoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetInventoryResponse>* PrepareAsyncGetInventoryRaw(::grpc::ClientContext* context, const ::warehouse::GetInventoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListInventoryResponse>* AsyncListInventoryRaw(::grpc::ClientContext* context, const ::warehouse::ListInventoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::ListInventoryResponse>* PrepareAsyncListInventoryRaw(::grpc::ClientContext* context, const ::warehouse::ListInventoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetCountProductsResponse>* AsyncGetCountProductsRaw(::grpc::ClientContext* context, const ::warehouse::GetCountProductsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::warehouse::GetCountProductsResponse>* PrepareAsyncGetCountProductsRaw(::grpc::ClientContext* context, const ::warehouse::GetCountProductsRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateWarehouse(::grpc::ClientContext* context, const ::warehouse::CreateWarehouseRequest& request, ::warehouse::CreateWarehouseResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateWarehouseResponse>> AsyncCreateWarehouse(::grpc::ClientContext* context, const ::warehouse::CreateWarehouseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateWarehouseResponse>>(AsyncCreateWarehouseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateWarehouseResponse>> PrepareAsyncCreateWarehouse(::grpc::ClientContext* context, const ::warehouse::CreateWarehouseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateWarehouseResponse>>(PrepareAsyncCreateWarehouseRaw(context, request, cq));
    }
    ::grpc::Status ListWarehouses(::grpc::ClientContext* context, const ::warehouse::ListWarehousesRequest& request, ::warehouse::ListWarehousesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListWarehousesResponse>> AsyncListWarehouses(::grpc::ClientContext* context, const ::warehouse::ListWarehousesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListWarehousesResponse>>(AsyncListWarehousesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListWarehousesResponse>> PrepareAsyncListWarehouses(::grpc::ClientContext* context, const ::warehouse::ListWarehousesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListWarehousesResponse>>(PrepareAsyncListWarehousesRaw(context, request, cq));
    }
    ::grpc::Status UpdateWarehouse(::grpc::ClientContext* context, const ::warehouse::UpdateWarehouseRequest& request, ::warehouse::UpdateWarehouseResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::UpdateWarehouseResponse>> AsyncUpdateWarehouse(::grpc::ClientContext* context, const ::warehouse::UpdateWarehouseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::UpdateWarehouseResponse>>(AsyncUpdateWarehouseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::UpdateWarehouseResponse>> PrepareAsyncUpdateWarehouse(::grpc::ClientContext* context, const ::warehouse::UpdateWarehouseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::UpdateWarehouseResponse>>(PrepareAsyncUpdateWarehouseRaw(context, request, cq));
    }
    ::grpc::Status GetProductsInWarehouse(::grpc::ClientContext* context, const ::warehouse::GetProductsInWarehouseRequest& request, ::warehouse::GetProductsInWarehouseResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetProductsInWarehouseResponse>> AsyncGetProductsInWarehouse(::grpc::ClientContext* context, const ::warehouse::GetProductsInWarehouseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetProductsInWarehouseResponse>>(AsyncGetProductsInWarehouseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetProductsInWarehouseResponse>> PrepareAsyncGetProductsInWarehouse(::grpc::ClientContext* context, const ::warehouse::GetProductsInWarehouseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetProductsInWarehouseResponse>>(PrepareAsyncGetProductsInWarehouseRaw(context, request, cq));
    }
    ::grpc::Status GetWarehouseAnalytics(::grpc::ClientContext* context, const ::warehouse::GetWarehouseAnalyticsRequest& request, ::warehouse::GetWarehouseAnalyticsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetWarehouseAnalyticsResponse>> AsyncGetWarehouseAnalytics(::grpc::ClientContext* context, const ::warehouse::GetWarehouseAnalyticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetWarehouseAnalyticsResponse>>(AsyncGetWarehouseAnalyticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetWarehouseAnalyticsResponse>> PrepareAsyncGetWarehouseAnalytics(::grpc::ClientContext* context, const ::warehouse::GetWarehouseAnalyticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetWarehouseAnalyticsResponse>>(PrepareAsyncGetWarehouseAnalyticsRaw(context, request, cq));
    }
    ::grpc::Status AddProductToWarehouse(::grpc::ClientContext* context, const ::warehouse::AddProductToWarehouseRequest& request, ::warehouse::AddProductToWarehouseResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::AddProductToWarehouseResponse>> AsyncAddProductToWarehouse(::grpc::ClientContext* context, const ::warehouse::AddProductToWarehouseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::AddProductToWarehouseResponse>>(AsyncAddProductToWarehouseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::AddProductToWarehouseResponse>> PrepareAsyncAddProductToWarehouse(::grpc::ClientContext* context, const ::warehouse::AddProductToWarehouseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::AddProductToWarehouseResponse>>(PrepareAsyncAddProductToWarehouseRaw(context, request, cq));
    }
    ::grpc::Status CreateAcceptance(::grpc::ClientContext* context, const ::warehouse::CreateAcceptanceRequest& request, ::warehouse::CreateAcceptanceResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateAcceptanceResponse>> AsyncCreateAcceptance(::grpc::ClientContext* context, const ::warehouse::CreateAcceptanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateAcceptanceResponse>>(AsyncCreateAcceptanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateAcceptanceResponse>> PrepareAsyncCreateAcceptance(::grpc::ClientContext* context, const ::warehouse::CreateAcceptanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateAcceptanceResponse>>(PrepareAsyncCreateAcceptanceRaw(context, request, cq));
    }
    ::grpc::Status GetAcceptance(::grpc::ClientContext* context, const ::warehouse::GetAcceptanceRequest& request, ::warehouse::GetAcceptanceResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetAcceptanceResponse>> AsyncGetAcceptance(::grpc::ClientContext* context, const ::warehouse::GetAcceptanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetAcceptanceResponse>>(AsyncGetAcceptanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetAcceptanceResponse>> PrepareAsyncGetAcceptance(::grpc::ClientContext* context, const ::warehouse::GetAcceptanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetAcceptanceResponse>>(PrepareAsyncGetAcceptanceRaw(context, request, cq));
    }
    ::grpc::Status ListAcceptances(::grpc::ClientContext* context, const ::warehouse::ListAcceptancesRequest& request, ::warehouse::ListAcceptancesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListAcceptancesResponse>> AsyncListAcceptances(::grpc::ClientContext* context, const ::warehouse::ListAcceptancesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListAcceptancesResponse>>(AsyncListAcceptancesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListAcceptancesResponse>> PrepareAsyncListAcceptances(::grpc::ClientContext* context, const ::warehouse::ListAcceptancesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListAcceptancesResponse>>(PrepareAsyncListAcceptancesRaw(context, request, cq));
    }
    ::grpc::Status UpdateAcceptance(::grpc::ClientContext* context, const ::warehouse::UpdateAcceptanceRequest& request, ::warehouse::UpdateAcceptanceResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::UpdateAcceptanceResponse>> AsyncUpdateAcceptance(::grpc::ClientContext* context, const ::warehouse::UpdateAcceptanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::UpdateAcceptanceResponse>>(AsyncUpdateAcceptanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::UpdateAcceptanceResponse>> PrepareAsyncUpdateAcceptance(::grpc::ClientContext* context, const ::warehouse::UpdateAcceptanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::UpdateAcceptanceResponse>>(PrepareAsyncUpdateAcceptanceRaw(context, request, cq));
    }
    ::grpc::Status DeleteAcceptance(::grpc::ClientContext* context, const ::warehouse::DeleteAcceptanceRequest& request, ::warehouse::DeleteAcceptanceResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::DeleteAcceptanceResponse>> AsyncDeleteAcceptance(::grpc::ClientContext* context, const ::warehouse::DeleteAcceptanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::DeleteAcceptanceResponse>>(AsyncDeleteAcceptanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::DeleteAcceptanceResponse>> PrepareAsyncDeleteAcceptance(::grpc::ClientContext* context, const ::warehouse::DeleteAcceptanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::DeleteAcceptanceResponse>>(PrepareAsyncDeleteAcceptanceRaw(context, request, cq));
    }
    ::grpc::Status CreateWriteOff(::grpc::ClientContext* context, const ::warehouse::CreateWriteOffRequest& request, ::warehouse::CreateWriteOffResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateWriteOffResponse>> AsyncCreateWriteOff(::grpc::ClientContext* context, const ::warehouse::CreateWriteOffRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateWriteOffResponse>>(AsyncCreateWriteOffRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateWriteOffResponse>> PrepareAsyncCreateWriteOff(::grpc::ClientContext* context, const ::warehouse::CreateWriteOffRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateWriteOffResponse>>(PrepareAsyncCreateWriteOffRaw(context, request, cq));
    }
    ::grpc::Status GetWriteOff(::grpc::ClientContext* context, const ::warehouse::GetWriteOffRequest& request, ::warehouse::GetWriteOffResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetWriteOffResponse>> AsyncGetWriteOff(::grpc::ClientContext* context, const ::warehouse::GetWriteOffRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetWriteOffResponse>>(AsyncGetWriteOffRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetWriteOffResponse>> PrepareAsyncGetWriteOff(::grpc::ClientContext* context, const ::warehouse::GetWriteOffRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetWriteOffResponse>>(PrepareAsyncGetWriteOffRaw(context, request, cq));
    }
    ::grpc::Status ListWriteOff(::grpc::ClientContext* context, const ::warehouse::ListWriteOffRequest& request, ::warehouse::ListWriteOffResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListWriteOffResponse>> AsyncListWriteOff(::grpc::ClientContext* context, const ::warehouse::ListWriteOffRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListWriteOffResponse>>(AsyncListWriteOffRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListWriteOffResponse>> PrepareAsyncListWriteOff(::grpc::ClientContext* context, const ::warehouse::ListWriteOffRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListWriteOffResponse>>(PrepareAsyncListWriteOffRaw(context, request, cq));
    }
    ::grpc::Status CreateMoving(::grpc::ClientContext* context, const ::warehouse::CreateMovingRequest& request, ::warehouse::CreateMovingResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateMovingResponse>> AsyncCreateMoving(::grpc::ClientContext* context, const ::warehouse::CreateMovingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateMovingResponse>>(AsyncCreateMovingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateMovingResponse>> PrepareAsyncCreateMoving(::grpc::ClientContext* context, const ::warehouse::CreateMovingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateMovingResponse>>(PrepareAsyncCreateMovingRaw(context, request, cq));
    }
    ::grpc::Status GetMoving(::grpc::ClientContext* context, const ::warehouse::GetMovingRequest& request, ::warehouse::GetMovingResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetMovingResponse>> AsyncGetMoving(::grpc::ClientContext* context, const ::warehouse::GetMovingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetMovingResponse>>(AsyncGetMovingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetMovingResponse>> PrepareAsyncGetMoving(::grpc::ClientContext* context, const ::warehouse::GetMovingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetMovingResponse>>(PrepareAsyncGetMovingRaw(context, request, cq));
    }
    ::grpc::Status ListMoving(::grpc::ClientContext* context, const ::warehouse::ListMovingRequest& request, ::warehouse::ListMovingResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListMovingResponse>> AsyncListMoving(::grpc::ClientContext* context, const ::warehouse::ListMovingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListMovingResponse>>(AsyncListMovingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListMovingResponse>> PrepareAsyncListMoving(::grpc::ClientContext* context, const ::warehouse::ListMovingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListMovingResponse>>(PrepareAsyncListMovingRaw(context, request, cq));
    }
    ::grpc::Status CreateInventory(::grpc::ClientContext* context, const ::warehouse::CreateInventoryRequest& request, ::warehouse::CreateInventoryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateInventoryResponse>> AsyncCreateInventory(::grpc::ClientContext* context, const ::warehouse::CreateInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateInventoryResponse>>(AsyncCreateInventoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateInventoryResponse>> PrepareAsyncCreateInventory(::grpc::ClientContext* context, const ::warehouse::CreateInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::CreateInventoryResponse>>(PrepareAsyncCreateInventoryRaw(context, request, cq));
    }
    ::grpc::Status GetInventory(::grpc::ClientContext* context, const ::warehouse::GetInventoryRequest& request, ::warehouse::GetInventoryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetInventoryResponse>> AsyncGetInventory(::grpc::ClientContext* context, const ::warehouse::GetInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetInventoryResponse>>(AsyncGetInventoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetInventoryResponse>> PrepareAsyncGetInventory(::grpc::ClientContext* context, const ::warehouse::GetInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetInventoryResponse>>(PrepareAsyncGetInventoryRaw(context, request, cq));
    }
    ::grpc::Status ListInventory(::grpc::ClientContext* context, const ::warehouse::ListInventoryRequest& request, ::warehouse::ListInventoryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListInventoryResponse>> AsyncListInventory(::grpc::ClientContext* context, const ::warehouse::ListInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListInventoryResponse>>(AsyncListInventoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListInventoryResponse>> PrepareAsyncListInventory(::grpc::ClientContext* context, const ::warehouse::ListInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::ListInventoryResponse>>(PrepareAsyncListInventoryRaw(context, request, cq));
    }
    ::grpc::Status GetCountProducts(::grpc::ClientContext* context, const ::warehouse::GetCountProductsRequest& request, ::warehouse::GetCountProductsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetCountProductsResponse>> AsyncGetCountProducts(::grpc::ClientContext* context, const ::warehouse::GetCountProductsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetCountProductsResponse>>(AsyncGetCountProductsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetCountProductsResponse>> PrepareAsyncGetCountProducts(::grpc::ClientContext* context, const ::warehouse::GetCountProductsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::warehouse::GetCountProductsResponse>>(PrepareAsyncGetCountProductsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateWarehouse(::grpc::ClientContext* context, const ::warehouse::CreateWarehouseRequest* request, ::warehouse::CreateWarehouseResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateWarehouse(::grpc::ClientContext* context, const ::warehouse::CreateWarehouseRequest* request, ::warehouse::CreateWarehouseResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListWarehouses(::grpc::ClientContext* context, const ::warehouse::ListWarehousesRequest* request, ::warehouse::ListWarehousesResponse* response, std::function<void(::grpc::Status)>) override;
      void ListWarehouses(::grpc::ClientContext* context, const ::warehouse::ListWarehousesRequest* request, ::warehouse::ListWarehousesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateWarehouse(::grpc::ClientContext* context, const ::warehouse::UpdateWarehouseRequest* request, ::warehouse::UpdateWarehouseResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateWarehouse(::grpc::ClientContext* context, const ::warehouse::UpdateWarehouseRequest* request, ::warehouse::UpdateWarehouseResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetProductsInWarehouse(::grpc::ClientContext* context, const ::warehouse::GetProductsInWarehouseRequest* request, ::warehouse::GetProductsInWarehouseResponse* response, std::function<void(::grpc::Status)>) override;
      void GetProductsInWarehouse(::grpc::ClientContext* context, const ::warehouse::GetProductsInWarehouseRequest* request, ::warehouse::GetProductsInWarehouseResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetWarehouseAnalytics(::grpc::ClientContext* context, const ::warehouse::GetWarehouseAnalyticsRequest* request, ::warehouse::GetWarehouseAnalyticsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetWarehouseAnalytics(::grpc::ClientContext* context, const ::warehouse::GetWarehouseAnalyticsRequest* request, ::warehouse::GetWarehouseAnalyticsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddProductToWarehouse(::grpc::ClientContext* context, const ::warehouse::AddProductToWarehouseRequest* request, ::warehouse::AddProductToWarehouseResponse* response, std::function<void(::grpc::Status)>) override;
      void AddProductToWarehouse(::grpc::ClientContext* context, const ::warehouse::AddProductToWarehouseRequest* request, ::warehouse::AddProductToWarehouseResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateAcceptance(::grpc::ClientContext* context, const ::warehouse::CreateAcceptanceRequest* request, ::warehouse::CreateAcceptanceResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateAcceptance(::grpc::ClientContext* context, const ::warehouse::CreateAcceptanceRequest* request, ::warehouse::CreateAcceptanceResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAcceptance(::grpc::ClientContext* context, const ::warehouse::GetAcceptanceRequest* request, ::warehouse::GetAcceptanceResponse* response, std::function<void(::grpc::Status)>) override;
      void GetAcceptance(::grpc::ClientContext* context, const ::warehouse::GetAcceptanceRequest* request, ::warehouse::GetAcceptanceResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListAcceptances(::grpc::ClientContext* context, const ::warehouse::ListAcceptancesRequest* request, ::warehouse::ListAcceptancesResponse* response, std::function<void(::grpc::Status)>) override;
      void ListAcceptances(::grpc::ClientContext* context, const ::warehouse::ListAcceptancesRequest* request, ::warehouse::ListAcceptancesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateAcceptance(::grpc::ClientContext* context, const ::warehouse::UpdateAcceptanceRequest* request, ::warehouse::UpdateAcceptanceResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateAcceptance(::grpc::ClientContext* context, const ::warehouse::UpdateAcceptanceRequest* request, ::warehouse::UpdateAcceptanceResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteAcceptance(::grpc::ClientContext* context, const ::warehouse::DeleteAcceptanceRequest* request, ::warehouse::DeleteAcceptanceResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteAcceptance(::grpc::ClientContext* context, const ::warehouse::DeleteAcceptanceRequest* request, ::warehouse::DeleteAcceptanceResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateWriteOff(::grpc::ClientContext* context, const ::warehouse::CreateWriteOffRequest* request, ::warehouse::CreateWriteOffResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateWriteOff(::grpc::ClientContext* context, const ::warehouse::CreateWriteOffRequest* request, ::warehouse::CreateWriteOffResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetWriteOff(::grpc::ClientContext* context, const ::warehouse::GetWriteOffRequest* request, ::warehouse::GetWriteOffResponse* response, std::function<void(::grpc::Status)>) override;
      void GetWriteOff(::grpc::ClientContext* context, const ::warehouse::GetWriteOffRequest* request, ::warehouse::GetWriteOffResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListWriteOff(::grpc::ClientContext* context, const ::warehouse::ListWriteOffRequest* request, ::warehouse::ListWriteOffResponse* response, std::function<void(::grpc::Status)>) override;
      void ListWriteOff(::grpc::ClientContext* context, const ::warehouse::ListWriteOffRequest* request, ::warehouse::ListWriteOffResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateMoving(::grpc::ClientContext* context, const ::warehouse::CreateMovingRequest* request, ::warehouse::CreateMovingResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateMoving(::grpc::ClientContext* context, const ::warehouse::CreateMovingRequest* request, ::warehouse::CreateMovingResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetMoving(::grpc::ClientContext* context, const ::warehouse::GetMovingRequest* request, ::warehouse::GetMovingResponse* response, std::function<void(::grpc::Status)>) override;
      void GetMoving(::grpc::ClientContext* context, const ::warehouse::GetMovingRequest* request, ::warehouse::GetMovingResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListMoving(::grpc::ClientContext* context, const ::warehouse::ListMovingRequest* request, ::warehouse::ListMovingResponse* response, std::function<void(::grpc::Status)>) override;
      void ListMoving(::grpc::ClientContext* context, const ::warehouse::ListMovingRequest* request, ::warehouse::ListMovingResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateInventory(::grpc::ClientContext* context, const ::warehouse::CreateInventoryRequest* request, ::warehouse::CreateInventoryResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateInventory(::grpc::ClientContext* context, const ::warehouse::CreateInventoryRequest* request, ::warehouse::CreateInventoryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetInventory(::grpc::ClientContext* context, const ::warehouse::GetInventoryRequest* request, ::warehouse::GetInventoryResponse* response, std::function<void(::grpc::Status)>) override;
      void GetInventory(::grpc::ClientContext* context, const ::warehouse::GetInventoryRequest* request, ::warehouse::GetInventoryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListInventory(::grpc::ClientContext* context, const ::warehouse::ListInventoryRequest* request, ::warehouse::ListInventoryResponse* response, std::function<void(::grpc::Status)>) override;
      void ListInventory(::grpc::ClientContext* context, const ::warehouse::ListInventoryRequest* request, ::warehouse::ListInventoryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetCountProducts(::grpc::ClientContext* context, const ::warehouse::GetCountProductsRequest* request, ::warehouse::GetCountProductsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetCountProducts(::grpc::ClientContext* context, const ::warehouse::GetCountProductsRequest* request, ::warehouse::GetCountProductsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::warehouse::CreateWarehouseResponse>* AsyncCreateWarehouseRaw(::grpc::ClientContext* context, const ::warehouse::CreateWarehouseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::CreateWarehouseResponse>* PrepareAsyncCreateWarehouseRaw(::grpc::ClientContext* context, const ::warehouse::CreateWarehouseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::ListWarehousesResponse>* AsyncListWarehousesRaw(::grpc::ClientContext* context, const ::warehouse::ListWarehousesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::ListWarehousesResponse>* PrepareAsyncListWarehousesRaw(::grpc::ClientContext* context, const ::warehouse::ListWarehousesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::UpdateWarehouseResponse>* AsyncUpdateWarehouseRaw(::grpc::ClientContext* context, const ::warehouse::UpdateWarehouseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::UpdateWarehouseResponse>* PrepareAsyncUpdateWarehouseRaw(::grpc::ClientContext* context, const ::warehouse::UpdateWarehouseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::GetProductsInWarehouseResponse>* AsyncGetProductsInWarehouseRaw(::grpc::ClientContext* context, const ::warehouse::GetProductsInWarehouseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::GetProductsInWarehouseResponse>* PrepareAsyncGetProductsInWarehouseRaw(::grpc::ClientContext* context, const ::warehouse::GetProductsInWarehouseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::GetWarehouseAnalyticsResponse>* AsyncGetWarehouseAnalyticsRaw(::grpc::ClientContext* context, const ::warehouse::GetWarehouseAnalyticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::GetWarehouseAnalyticsResponse>* PrepareAsyncGetWarehouseAnalyticsRaw(::grpc::ClientContext* context, const ::warehouse::GetWarehouseAnalyticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::AddProductToWarehouseResponse>* AsyncAddProductToWarehouseRaw(::grpc::ClientContext* context, const ::warehouse::AddProductToWarehouseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::AddProductToWarehouseResponse>* PrepareAsyncAddProductToWarehouseRaw(::grpc::ClientContext* context, const ::warehouse::AddProductToWarehouseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::CreateAcceptanceResponse>* AsyncCreateAcceptanceRaw(::grpc::ClientContext* context, const ::warehouse::CreateAcceptanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::CreateAcceptanceResponse>* PrepareAsyncCreateAcceptanceRaw(::grpc::ClientContext* context, const ::warehouse::CreateAcceptanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::GetAcceptanceResponse>* AsyncGetAcceptanceRaw(::grpc::ClientContext* context, const ::warehouse::GetAcceptanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::GetAcceptanceResponse>* PrepareAsyncGetAcceptanceRaw(::grpc::ClientContext* context, const ::warehouse::GetAcceptanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::ListAcceptancesResponse>* AsyncListAcceptancesRaw(::grpc::ClientContext* context, const ::warehouse::ListAcceptancesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::ListAcceptancesResponse>* PrepareAsyncListAcceptancesRaw(::grpc::ClientContext* context, const ::warehouse::ListAcceptancesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::UpdateAcceptanceResponse>* AsyncUpdateAcceptanceRaw(::grpc::ClientContext* context, const ::warehouse::UpdateAcceptanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::UpdateAcceptanceResponse>* PrepareAsyncUpdateAcceptanceRaw(::grpc::ClientContext* context, const ::warehouse::UpdateAcceptanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::DeleteAcceptanceResponse>* AsyncDeleteAcceptanceRaw(::grpc::ClientContext* context, const ::warehouse::DeleteAcceptanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::DeleteAcceptanceResponse>* PrepareAsyncDeleteAcceptanceRaw(::grpc::ClientContext* context, const ::warehouse::DeleteAcceptanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::CreateWriteOffResponse>* AsyncCreateWriteOffRaw(::grpc::ClientContext* context, const ::warehouse::CreateWriteOffRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::CreateWriteOffResponse>* PrepareAsyncCreateWriteOffRaw(::grpc::ClientContext* context, const ::warehouse::CreateWriteOffRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::GetWriteOffResponse>* AsyncGetWriteOffRaw(::grpc::ClientContext* context, const ::warehouse::GetWriteOffRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::GetWriteOffResponse>* PrepareAsyncGetWriteOffRaw(::grpc::ClientContext* context, const ::warehouse::GetWriteOffRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::ListWriteOffResponse>* AsyncListWriteOffRaw(::grpc::ClientContext* context, const ::warehouse::ListWriteOffRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::ListWriteOffResponse>* PrepareAsyncListWriteOffRaw(::grpc::ClientContext* context, const ::warehouse::ListWriteOffRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::CreateMovingResponse>* AsyncCreateMovingRaw(::grpc::ClientContext* context, const ::warehouse::CreateMovingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::CreateMovingResponse>* PrepareAsyncCreateMovingRaw(::grpc::ClientContext* context, const ::warehouse::CreateMovingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::GetMovingResponse>* AsyncGetMovingRaw(::grpc::ClientContext* context, const ::warehouse::GetMovingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::GetMovingResponse>* PrepareAsyncGetMovingRaw(::grpc::ClientContext* context, const ::warehouse::GetMovingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::ListMovingResponse>* AsyncListMovingRaw(::grpc::ClientContext* context, const ::warehouse::ListMovingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::ListMovingResponse>* PrepareAsyncListMovingRaw(::grpc::ClientContext* context, const ::warehouse::ListMovingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::CreateInventoryResponse>* AsyncCreateInventoryRaw(::grpc::ClientContext* context, const ::warehouse::CreateInventoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::CreateInventoryResponse>* PrepareAsyncCreateInventoryRaw(::grpc::ClientContext* context, const ::warehouse::CreateInventoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::GetInventoryResponse>* AsyncGetInventoryRaw(::grpc::ClientContext* context, const ::warehouse::GetInventoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::GetInventoryResponse>* PrepareAsyncGetInventoryRaw(::grpc::ClientContext* context, const ::warehouse::GetInventoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::ListInventoryResponse>* AsyncListInventoryRaw(::grpc::ClientContext* context, const ::warehouse::ListInventoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::ListInventoryResponse>* PrepareAsyncListInventoryRaw(::grpc::ClientContext* context, const ::warehouse::ListInventoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::GetCountProductsResponse>* AsyncGetCountProductsRaw(::grpc::ClientContext* context, const ::warehouse::GetCountProductsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::warehouse::GetCountProductsResponse>* PrepareAsyncGetCountProductsRaw(::grpc::ClientContext* context, const ::warehouse::GetCountProductsRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateWarehouse_;
    const ::grpc::internal::RpcMethod rpcmethod_ListWarehouses_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateWarehouse_;
    const ::grpc::internal::RpcMethod rpcmethod_GetProductsInWarehouse_;
    const ::grpc::internal::RpcMethod rpcmethod_GetWarehouseAnalytics_;
    const ::grpc::internal::RpcMethod rpcmethod_AddProductToWarehouse_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateAcceptance_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAcceptance_;
    const ::grpc::internal::RpcMethod rpcmethod_ListAcceptances_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateAcceptance_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteAcceptance_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateWriteOff_;
    const ::grpc::internal::RpcMethod rpcmethod_GetWriteOff_;
    const ::grpc::internal::RpcMethod rpcmethod_ListWriteOff_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateMoving_;
    const ::grpc::internal::RpcMethod rpcmethod_GetMoving_;
    const ::grpc::internal::RpcMethod rpcmethod_ListMoving_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateInventory_;
    const ::grpc::internal::RpcMethod rpcmethod_GetInventory_;
    const ::grpc::internal::RpcMethod rpcmethod_ListInventory_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCountProducts_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status CreateWarehouse(::grpc::ServerContext* context, const ::warehouse::CreateWarehouseRequest* request, ::warehouse::CreateWarehouseResponse* response);
    virtual ::grpc::Status ListWarehouses(::grpc::ServerContext* context, const ::warehouse::ListWarehousesRequest* request, ::warehouse::ListWarehousesResponse* response);
    virtual ::grpc::Status UpdateWarehouse(::grpc::ServerContext* context, const ::warehouse::UpdateWarehouseRequest* request, ::warehouse::UpdateWarehouseResponse* response);
    virtual ::grpc::Status GetProductsInWarehouse(::grpc::ServerContext* context, const ::warehouse::GetProductsInWarehouseRequest* request, ::warehouse::GetProductsInWarehouseResponse* response);
    virtual ::grpc::Status GetWarehouseAnalytics(::grpc::ServerContext* context, const ::warehouse::GetWarehouseAnalyticsRequest* request, ::warehouse::GetWarehouseAnalyticsResponse* response);
    virtual ::grpc::Status AddProductToWarehouse(::grpc::ServerContext* context, const ::warehouse::AddProductToWarehouseRequest* request, ::warehouse::AddProductToWarehouseResponse* response);
    virtual ::grpc::Status CreateAcceptance(::grpc::ServerContext* context, const ::warehouse::CreateAcceptanceRequest* request, ::warehouse::CreateAcceptanceResponse* response);
    virtual ::grpc::Status GetAcceptance(::grpc::ServerContext* context, const ::warehouse::GetAcceptanceRequest* request, ::warehouse::GetAcceptanceResponse* response);
    virtual ::grpc::Status ListAcceptances(::grpc::ServerContext* context, const ::warehouse::ListAcceptancesRequest* request, ::warehouse::ListAcceptancesResponse* response);
    virtual ::grpc::Status UpdateAcceptance(::grpc::ServerContext* context, const ::warehouse::UpdateAcceptanceRequest* request, ::warehouse::UpdateAcceptanceResponse* response);
    virtual ::grpc::Status DeleteAcceptance(::grpc::ServerContext* context, const ::warehouse::DeleteAcceptanceRequest* request, ::warehouse::DeleteAcceptanceResponse* response);
    virtual ::grpc::Status CreateWriteOff(::grpc::ServerContext* context, const ::warehouse::CreateWriteOffRequest* request, ::warehouse::CreateWriteOffResponse* response);
    virtual ::grpc::Status GetWriteOff(::grpc::ServerContext* context, const ::warehouse::GetWriteOffRequest* request, ::warehouse::GetWriteOffResponse* response);
    virtual ::grpc::Status ListWriteOff(::grpc::ServerContext* context, const ::warehouse::ListWriteOffRequest* request, ::warehouse::ListWriteOffResponse* response);
    virtual ::grpc::Status CreateMoving(::grpc::ServerContext* context, const ::warehouse::CreateMovingRequest* request, ::warehouse::CreateMovingResponse* response);
    virtual ::grpc::Status GetMoving(::grpc::ServerContext* context, const ::warehouse::GetMovingRequest* request, ::warehouse::GetMovingResponse* response);
    virtual ::grpc::Status ListMoving(::grpc::ServerContext* context, const ::warehouse::ListMovingRequest* request, ::warehouse::ListMovingResponse* response);
    virtual ::grpc::Status CreateInventory(::grpc::ServerContext* context, const ::warehouse::CreateInventoryRequest* request, ::warehouse::CreateInventoryResponse* response);
    virtual ::grpc::Status GetInventory(::grpc::ServerContext* context, const ::warehouse::GetInventoryRequest* request, ::warehouse::GetInventoryResponse* response);
    virtual ::grpc::Status ListInventory(::grpc::ServerContext* context, const ::warehouse::ListInventoryRequest* request, ::warehouse::ListInventoryResponse* response);
    virtual ::grpc::Status GetCountProducts(::grpc::ServerContext* context, const ::warehouse::GetCountProductsRequest* request, ::warehouse::GetCountProductsResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateWarehouse() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::CreateWarehouseRequest* /*request*/, ::warehouse::CreateWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateWarehouse(::grpc::ServerContext* context, ::warehouse::CreateWarehouseRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::CreateWarehouseResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListWarehouses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListWarehouses() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ListWarehouses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListWarehouses(::grpc::ServerContext* /*context*/, const ::warehouse::ListWarehousesRequest* /*request*/, ::warehouse::ListWarehousesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListWarehouses(::grpc::ServerContext* context, ::warehouse::ListWarehousesRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::ListWarehousesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateWarehouse() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_UpdateWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::UpdateWarehouseRequest* /*request*/, ::warehouse::UpdateWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateWarehouse(::grpc::ServerContext* context, ::warehouse::UpdateWarehouseRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::UpdateWarehouseResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetProductsInWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetProductsInWarehouse() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetProductsInWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProductsInWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::GetProductsInWarehouseRequest* /*request*/, ::warehouse::GetProductsInWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProductsInWarehouse(::grpc::ServerContext* context, ::warehouse::GetProductsInWarehouseRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::GetProductsInWarehouseResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetWarehouseAnalytics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetWarehouseAnalytics() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetWarehouseAnalytics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWarehouseAnalytics(::grpc::ServerContext* /*context*/, const ::warehouse::GetWarehouseAnalyticsRequest* /*request*/, ::warehouse::GetWarehouseAnalyticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetWarehouseAnalytics(::grpc::ServerContext* context, ::warehouse::GetWarehouseAnalyticsRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::GetWarehouseAnalyticsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddProductToWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddProductToWarehouse() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_AddProductToWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddProductToWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::AddProductToWarehouseRequest* /*request*/, ::warehouse::AddProductToWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddProductToWarehouse(::grpc::ServerContext* context, ::warehouse::AddProductToWarehouseRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::AddProductToWarehouseResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateAcceptance() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_CreateAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::CreateAcceptanceRequest* /*request*/, ::warehouse::CreateAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateAcceptance(::grpc::ServerContext* context, ::warehouse::CreateAcceptanceRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::CreateAcceptanceResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAcceptance() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::GetAcceptanceRequest* /*request*/, ::warehouse::GetAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAcceptance(::grpc::ServerContext* context, ::warehouse::GetAcceptanceRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::GetAcceptanceResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListAcceptances : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListAcceptances() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_ListAcceptances() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAcceptances(::grpc::ServerContext* /*context*/, const ::warehouse::ListAcceptancesRequest* /*request*/, ::warehouse::ListAcceptancesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAcceptances(::grpc::ServerContext* context, ::warehouse::ListAcceptancesRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::ListAcceptancesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateAcceptance() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_UpdateAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::UpdateAcceptanceRequest* /*request*/, ::warehouse::UpdateAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateAcceptance(::grpc::ServerContext* context, ::warehouse::UpdateAcceptanceRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::UpdateAcceptanceResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteAcceptance() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_DeleteAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::DeleteAcceptanceRequest* /*request*/, ::warehouse::DeleteAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteAcceptance(::grpc::ServerContext* context, ::warehouse::DeleteAcceptanceRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::DeleteAcceptanceResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateWriteOff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateWriteOff() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_CreateWriteOff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateWriteOff(::grpc::ServerContext* /*context*/, const ::warehouse::CreateWriteOffRequest* /*request*/, ::warehouse::CreateWriteOffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateWriteOff(::grpc::ServerContext* context, ::warehouse::CreateWriteOffRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::CreateWriteOffResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetWriteOff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetWriteOff() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_GetWriteOff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWriteOff(::grpc::ServerContext* /*context*/, const ::warehouse::GetWriteOffRequest* /*request*/, ::warehouse::GetWriteOffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetWriteOff(::grpc::ServerContext* context, ::warehouse::GetWriteOffRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::GetWriteOffResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListWriteOff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListWriteOff() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_ListWriteOff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListWriteOff(::grpc::ServerContext* /*context*/, const ::warehouse::ListWriteOffRequest* /*request*/, ::warehouse::ListWriteOffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListWriteOff(::grpc::ServerContext* context, ::warehouse::ListWriteOffRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::ListWriteOffResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateMoving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateMoving() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_CreateMoving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMoving(::grpc::ServerContext* /*context*/, const ::warehouse::CreateMovingRequest* /*request*/, ::warehouse::CreateMovingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateMoving(::grpc::ServerContext* context, ::warehouse::CreateMovingRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::CreateMovingResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetMoving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetMoving() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_GetMoving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMoving(::grpc::ServerContext* /*context*/, const ::warehouse::GetMovingRequest* /*request*/, ::warehouse::GetMovingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMoving(::grpc::ServerContext* context, ::warehouse::GetMovingRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::GetMovingResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListMoving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListMoving() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_ListMoving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMoving(::grpc::ServerContext* /*context*/, const ::warehouse::ListMovingRequest* /*request*/, ::warehouse::ListMovingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListMoving(::grpc::ServerContext* context, ::warehouse::ListMovingRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::ListMovingResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateInventory() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_CreateInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInventory(::grpc::ServerContext* /*context*/, const ::warehouse::CreateInventoryRequest* /*request*/, ::warehouse::CreateInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateInventory(::grpc::ServerContext* context, ::warehouse::CreateInventoryRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::CreateInventoryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetInventory() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_GetInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInventory(::grpc::ServerContext* /*context*/, const ::warehouse::GetInventoryRequest* /*request*/, ::warehouse::GetInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInventory(::grpc::ServerContext* context, ::warehouse::GetInventoryRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::GetInventoryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListInventory() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_ListInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInventory(::grpc::ServerContext* /*context*/, const ::warehouse::ListInventoryRequest* /*request*/, ::warehouse::ListInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListInventory(::grpc::ServerContext* context, ::warehouse::ListInventoryRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::ListInventoryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCountProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCountProducts() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_GetCountProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCountProducts(::grpc::ServerContext* /*context*/, const ::warehouse::GetCountProductsRequest* /*request*/, ::warehouse::GetCountProductsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCountProducts(::grpc::ServerContext* context, ::warehouse::GetCountProductsRequest* request, ::grpc::ServerAsyncResponseWriter< ::warehouse::GetCountProductsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateWarehouse<WithAsyncMethod_ListWarehouses<WithAsyncMethod_UpdateWarehouse<WithAsyncMethod_GetProductsInWarehouse<WithAsyncMethod_GetWarehouseAnalytics<WithAsyncMethod_AddProductToWarehouse<WithAsyncMethod_CreateAcceptance<WithAsyncMethod_GetAcceptance<WithAsyncMethod_ListAcceptances<WithAsyncMethod_UpdateAcceptance<WithAsyncMethod_DeleteAcceptance<WithAsyncMethod_CreateWriteOff<WithAsyncMethod_GetWriteOff<WithAsyncMethod_ListWriteOff<WithAsyncMethod_CreateMoving<WithAsyncMethod_GetMoving<WithAsyncMethod_ListMoving<WithAsyncMethod_CreateInventory<WithAsyncMethod_GetInventory<WithAsyncMethod_ListInventory<WithAsyncMethod_GetCountProducts<Service > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateWarehouse() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::CreateWarehouseRequest, ::warehouse::CreateWarehouseResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::CreateWarehouseRequest* request, ::warehouse::CreateWarehouseResponse* response) { return this->CreateWarehouse(context, request, response); }));}
    void SetMessageAllocatorFor_CreateWarehouse(
        ::grpc::MessageAllocator< ::warehouse::CreateWarehouseRequest, ::warehouse::CreateWarehouseResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::CreateWarehouseRequest, ::warehouse::CreateWarehouseResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::CreateWarehouseRequest* /*request*/, ::warehouse::CreateWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateWarehouse(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::CreateWarehouseRequest* /*request*/, ::warehouse::CreateWarehouseResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListWarehouses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListWarehouses() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::ListWarehousesRequest, ::warehouse::ListWarehousesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::ListWarehousesRequest* request, ::warehouse::ListWarehousesResponse* response) { return this->ListWarehouses(context, request, response); }));}
    void SetMessageAllocatorFor_ListWarehouses(
        ::grpc::MessageAllocator< ::warehouse::ListWarehousesRequest, ::warehouse::ListWarehousesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::ListWarehousesRequest, ::warehouse::ListWarehousesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListWarehouses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListWarehouses(::grpc::ServerContext* /*context*/, const ::warehouse::ListWarehousesRequest* /*request*/, ::warehouse::ListWarehousesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListWarehouses(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::ListWarehousesRequest* /*request*/, ::warehouse::ListWarehousesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateWarehouse() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::UpdateWarehouseRequest, ::warehouse::UpdateWarehouseResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::UpdateWarehouseRequest* request, ::warehouse::UpdateWarehouseResponse* response) { return this->UpdateWarehouse(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateWarehouse(
        ::grpc::MessageAllocator< ::warehouse::UpdateWarehouseRequest, ::warehouse::UpdateWarehouseResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::UpdateWarehouseRequest, ::warehouse::UpdateWarehouseResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::UpdateWarehouseRequest* /*request*/, ::warehouse::UpdateWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateWarehouse(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::UpdateWarehouseRequest* /*request*/, ::warehouse::UpdateWarehouseResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetProductsInWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetProductsInWarehouse() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::GetProductsInWarehouseRequest, ::warehouse::GetProductsInWarehouseResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::GetProductsInWarehouseRequest* request, ::warehouse::GetProductsInWarehouseResponse* response) { return this->GetProductsInWarehouse(context, request, response); }));}
    void SetMessageAllocatorFor_GetProductsInWarehouse(
        ::grpc::MessageAllocator< ::warehouse::GetProductsInWarehouseRequest, ::warehouse::GetProductsInWarehouseResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::GetProductsInWarehouseRequest, ::warehouse::GetProductsInWarehouseResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetProductsInWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProductsInWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::GetProductsInWarehouseRequest* /*request*/, ::warehouse::GetProductsInWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetProductsInWarehouse(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::GetProductsInWarehouseRequest* /*request*/, ::warehouse::GetProductsInWarehouseResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetWarehouseAnalytics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetWarehouseAnalytics() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::GetWarehouseAnalyticsRequest, ::warehouse::GetWarehouseAnalyticsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::GetWarehouseAnalyticsRequest* request, ::warehouse::GetWarehouseAnalyticsResponse* response) { return this->GetWarehouseAnalytics(context, request, response); }));}
    void SetMessageAllocatorFor_GetWarehouseAnalytics(
        ::grpc::MessageAllocator< ::warehouse::GetWarehouseAnalyticsRequest, ::warehouse::GetWarehouseAnalyticsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::GetWarehouseAnalyticsRequest, ::warehouse::GetWarehouseAnalyticsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetWarehouseAnalytics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWarehouseAnalytics(::grpc::ServerContext* /*context*/, const ::warehouse::GetWarehouseAnalyticsRequest* /*request*/, ::warehouse::GetWarehouseAnalyticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetWarehouseAnalytics(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::GetWarehouseAnalyticsRequest* /*request*/, ::warehouse::GetWarehouseAnalyticsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddProductToWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddProductToWarehouse() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::AddProductToWarehouseRequest, ::warehouse::AddProductToWarehouseResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::AddProductToWarehouseRequest* request, ::warehouse::AddProductToWarehouseResponse* response) { return this->AddProductToWarehouse(context, request, response); }));}
    void SetMessageAllocatorFor_AddProductToWarehouse(
        ::grpc::MessageAllocator< ::warehouse::AddProductToWarehouseRequest, ::warehouse::AddProductToWarehouseResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::AddProductToWarehouseRequest, ::warehouse::AddProductToWarehouseResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddProductToWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddProductToWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::AddProductToWarehouseRequest* /*request*/, ::warehouse::AddProductToWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddProductToWarehouse(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::AddProductToWarehouseRequest* /*request*/, ::warehouse::AddProductToWarehouseResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateAcceptance() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::CreateAcceptanceRequest, ::warehouse::CreateAcceptanceResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::CreateAcceptanceRequest* request, ::warehouse::CreateAcceptanceResponse* response) { return this->CreateAcceptance(context, request, response); }));}
    void SetMessageAllocatorFor_CreateAcceptance(
        ::grpc::MessageAllocator< ::warehouse::CreateAcceptanceRequest, ::warehouse::CreateAcceptanceResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::CreateAcceptanceRequest, ::warehouse::CreateAcceptanceResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::CreateAcceptanceRequest* /*request*/, ::warehouse::CreateAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateAcceptance(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::CreateAcceptanceRequest* /*request*/, ::warehouse::CreateAcceptanceResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAcceptance() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::GetAcceptanceRequest, ::warehouse::GetAcceptanceResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::GetAcceptanceRequest* request, ::warehouse::GetAcceptanceResponse* response) { return this->GetAcceptance(context, request, response); }));}
    void SetMessageAllocatorFor_GetAcceptance(
        ::grpc::MessageAllocator< ::warehouse::GetAcceptanceRequest, ::warehouse::GetAcceptanceResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::GetAcceptanceRequest, ::warehouse::GetAcceptanceResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::GetAcceptanceRequest* /*request*/, ::warehouse::GetAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAcceptance(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::GetAcceptanceRequest* /*request*/, ::warehouse::GetAcceptanceResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListAcceptances : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListAcceptances() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::ListAcceptancesRequest, ::warehouse::ListAcceptancesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::ListAcceptancesRequest* request, ::warehouse::ListAcceptancesResponse* response) { return this->ListAcceptances(context, request, response); }));}
    void SetMessageAllocatorFor_ListAcceptances(
        ::grpc::MessageAllocator< ::warehouse::ListAcceptancesRequest, ::warehouse::ListAcceptancesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::ListAcceptancesRequest, ::warehouse::ListAcceptancesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListAcceptances() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAcceptances(::grpc::ServerContext* /*context*/, const ::warehouse::ListAcceptancesRequest* /*request*/, ::warehouse::ListAcceptancesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListAcceptances(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::ListAcceptancesRequest* /*request*/, ::warehouse::ListAcceptancesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateAcceptance() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::UpdateAcceptanceRequest, ::warehouse::UpdateAcceptanceResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::UpdateAcceptanceRequest* request, ::warehouse::UpdateAcceptanceResponse* response) { return this->UpdateAcceptance(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateAcceptance(
        ::grpc::MessageAllocator< ::warehouse::UpdateAcceptanceRequest, ::warehouse::UpdateAcceptanceResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::UpdateAcceptanceRequest, ::warehouse::UpdateAcceptanceResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::UpdateAcceptanceRequest* /*request*/, ::warehouse::UpdateAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateAcceptance(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::UpdateAcceptanceRequest* /*request*/, ::warehouse::UpdateAcceptanceResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteAcceptance() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::DeleteAcceptanceRequest, ::warehouse::DeleteAcceptanceResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::DeleteAcceptanceRequest* request, ::warehouse::DeleteAcceptanceResponse* response) { return this->DeleteAcceptance(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteAcceptance(
        ::grpc::MessageAllocator< ::warehouse::DeleteAcceptanceRequest, ::warehouse::DeleteAcceptanceResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::DeleteAcceptanceRequest, ::warehouse::DeleteAcceptanceResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::DeleteAcceptanceRequest* /*request*/, ::warehouse::DeleteAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteAcceptance(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::DeleteAcceptanceRequest* /*request*/, ::warehouse::DeleteAcceptanceResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateWriteOff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateWriteOff() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::CreateWriteOffRequest, ::warehouse::CreateWriteOffResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::CreateWriteOffRequest* request, ::warehouse::CreateWriteOffResponse* response) { return this->CreateWriteOff(context, request, response); }));}
    void SetMessageAllocatorFor_CreateWriteOff(
        ::grpc::MessageAllocator< ::warehouse::CreateWriteOffRequest, ::warehouse::CreateWriteOffResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::CreateWriteOffRequest, ::warehouse::CreateWriteOffResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateWriteOff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateWriteOff(::grpc::ServerContext* /*context*/, const ::warehouse::CreateWriteOffRequest* /*request*/, ::warehouse::CreateWriteOffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateWriteOff(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::CreateWriteOffRequest* /*request*/, ::warehouse::CreateWriteOffResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetWriteOff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetWriteOff() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::GetWriteOffRequest, ::warehouse::GetWriteOffResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::GetWriteOffRequest* request, ::warehouse::GetWriteOffResponse* response) { return this->GetWriteOff(context, request, response); }));}
    void SetMessageAllocatorFor_GetWriteOff(
        ::grpc::MessageAllocator< ::warehouse::GetWriteOffRequest, ::warehouse::GetWriteOffResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::GetWriteOffRequest, ::warehouse::GetWriteOffResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetWriteOff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWriteOff(::grpc::ServerContext* /*context*/, const ::warehouse::GetWriteOffRequest* /*request*/, ::warehouse::GetWriteOffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetWriteOff(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::GetWriteOffRequest* /*request*/, ::warehouse::GetWriteOffResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListWriteOff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListWriteOff() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::ListWriteOffRequest, ::warehouse::ListWriteOffResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::ListWriteOffRequest* request, ::warehouse::ListWriteOffResponse* response) { return this->ListWriteOff(context, request, response); }));}
    void SetMessageAllocatorFor_ListWriteOff(
        ::grpc::MessageAllocator< ::warehouse::ListWriteOffRequest, ::warehouse::ListWriteOffResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::ListWriteOffRequest, ::warehouse::ListWriteOffResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListWriteOff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListWriteOff(::grpc::ServerContext* /*context*/, const ::warehouse::ListWriteOffRequest* /*request*/, ::warehouse::ListWriteOffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListWriteOff(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::ListWriteOffRequest* /*request*/, ::warehouse::ListWriteOffResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateMoving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateMoving() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::CreateMovingRequest, ::warehouse::CreateMovingResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::CreateMovingRequest* request, ::warehouse::CreateMovingResponse* response) { return this->CreateMoving(context, request, response); }));}
    void SetMessageAllocatorFor_CreateMoving(
        ::grpc::MessageAllocator< ::warehouse::CreateMovingRequest, ::warehouse::CreateMovingResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::CreateMovingRequest, ::warehouse::CreateMovingResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateMoving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMoving(::grpc::ServerContext* /*context*/, const ::warehouse::CreateMovingRequest* /*request*/, ::warehouse::CreateMovingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateMoving(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::CreateMovingRequest* /*request*/, ::warehouse::CreateMovingResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetMoving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetMoving() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::GetMovingRequest, ::warehouse::GetMovingResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::GetMovingRequest* request, ::warehouse::GetMovingResponse* response) { return this->GetMoving(context, request, response); }));}
    void SetMessageAllocatorFor_GetMoving(
        ::grpc::MessageAllocator< ::warehouse::GetMovingRequest, ::warehouse::GetMovingResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::GetMovingRequest, ::warehouse::GetMovingResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetMoving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMoving(::grpc::ServerContext* /*context*/, const ::warehouse::GetMovingRequest* /*request*/, ::warehouse::GetMovingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMoving(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::GetMovingRequest* /*request*/, ::warehouse::GetMovingResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListMoving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListMoving() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::ListMovingRequest, ::warehouse::ListMovingResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::ListMovingRequest* request, ::warehouse::ListMovingResponse* response) { return this->ListMoving(context, request, response); }));}
    void SetMessageAllocatorFor_ListMoving(
        ::grpc::MessageAllocator< ::warehouse::ListMovingRequest, ::warehouse::ListMovingResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::ListMovingRequest, ::warehouse::ListMovingResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListMoving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMoving(::grpc::ServerContext* /*context*/, const ::warehouse::ListMovingRequest* /*request*/, ::warehouse::ListMovingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListMoving(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::ListMovingRequest* /*request*/, ::warehouse::ListMovingResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateInventory() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::CreateInventoryRequest, ::warehouse::CreateInventoryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::CreateInventoryRequest* request, ::warehouse::CreateInventoryResponse* response) { return this->CreateInventory(context, request, response); }));}
    void SetMessageAllocatorFor_CreateInventory(
        ::grpc::MessageAllocator< ::warehouse::CreateInventoryRequest, ::warehouse::CreateInventoryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::CreateInventoryRequest, ::warehouse::CreateInventoryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInventory(::grpc::ServerContext* /*context*/, const ::warehouse::CreateInventoryRequest* /*request*/, ::warehouse::CreateInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateInventory(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::CreateInventoryRequest* /*request*/, ::warehouse::CreateInventoryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetInventory() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::GetInventoryRequest, ::warehouse::GetInventoryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::GetInventoryRequest* request, ::warehouse::GetInventoryResponse* response) { return this->GetInventory(context, request, response); }));}
    void SetMessageAllocatorFor_GetInventory(
        ::grpc::MessageAllocator< ::warehouse::GetInventoryRequest, ::warehouse::GetInventoryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::GetInventoryRequest, ::warehouse::GetInventoryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInventory(::grpc::ServerContext* /*context*/, const ::warehouse::GetInventoryRequest* /*request*/, ::warehouse::GetInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetInventory(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::GetInventoryRequest* /*request*/, ::warehouse::GetInventoryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListInventory() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::ListInventoryRequest, ::warehouse::ListInventoryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::ListInventoryRequest* request, ::warehouse::ListInventoryResponse* response) { return this->ListInventory(context, request, response); }));}
    void SetMessageAllocatorFor_ListInventory(
        ::grpc::MessageAllocator< ::warehouse::ListInventoryRequest, ::warehouse::ListInventoryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::ListInventoryRequest, ::warehouse::ListInventoryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInventory(::grpc::ServerContext* /*context*/, const ::warehouse::ListInventoryRequest* /*request*/, ::warehouse::ListInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListInventory(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::ListInventoryRequest* /*request*/, ::warehouse::ListInventoryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetCountProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetCountProducts() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::warehouse::GetCountProductsRequest, ::warehouse::GetCountProductsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::warehouse::GetCountProductsRequest* request, ::warehouse::GetCountProductsResponse* response) { return this->GetCountProducts(context, request, response); }));}
    void SetMessageAllocatorFor_GetCountProducts(
        ::grpc::MessageAllocator< ::warehouse::GetCountProductsRequest, ::warehouse::GetCountProductsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::warehouse::GetCountProductsRequest, ::warehouse::GetCountProductsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetCountProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCountProducts(::grpc::ServerContext* /*context*/, const ::warehouse::GetCountProductsRequest* /*request*/, ::warehouse::GetCountProductsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCountProducts(
      ::grpc::CallbackServerContext* /*context*/, const ::warehouse::GetCountProductsRequest* /*request*/, ::warehouse::GetCountProductsResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateWarehouse<WithCallbackMethod_ListWarehouses<WithCallbackMethod_UpdateWarehouse<WithCallbackMethod_GetProductsInWarehouse<WithCallbackMethod_GetWarehouseAnalytics<WithCallbackMethod_AddProductToWarehouse<WithCallbackMethod_CreateAcceptance<WithCallbackMethod_GetAcceptance<WithCallbackMethod_ListAcceptances<WithCallbackMethod_UpdateAcceptance<WithCallbackMethod_DeleteAcceptance<WithCallbackMethod_CreateWriteOff<WithCallbackMethod_GetWriteOff<WithCallbackMethod_ListWriteOff<WithCallbackMethod_CreateMoving<WithCallbackMethod_GetMoving<WithCallbackMethod_ListMoving<WithCallbackMethod_CreateInventory<WithCallbackMethod_GetInventory<WithCallbackMethod_ListInventory<WithCallbackMethod_GetCountProducts<Service > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateWarehouse() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::CreateWarehouseRequest* /*request*/, ::warehouse::CreateWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListWarehouses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListWarehouses() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ListWarehouses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListWarehouses(::grpc::ServerContext* /*context*/, const ::warehouse::ListWarehousesRequest* /*request*/, ::warehouse::ListWarehousesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateWarehouse() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_UpdateWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::UpdateWarehouseRequest* /*request*/, ::warehouse::UpdateWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetProductsInWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetProductsInWarehouse() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetProductsInWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProductsInWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::GetProductsInWarehouseRequest* /*request*/, ::warehouse::GetProductsInWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetWarehouseAnalytics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetWarehouseAnalytics() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetWarehouseAnalytics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWarehouseAnalytics(::grpc::ServerContext* /*context*/, const ::warehouse::GetWarehouseAnalyticsRequest* /*request*/, ::warehouse::GetWarehouseAnalyticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddProductToWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddProductToWarehouse() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_AddProductToWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddProductToWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::AddProductToWarehouseRequest* /*request*/, ::warehouse::AddProductToWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateAcceptance() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_CreateAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::CreateAcceptanceRequest* /*request*/, ::warehouse::CreateAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAcceptance() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::GetAcceptanceRequest* /*request*/, ::warehouse::GetAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListAcceptances : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListAcceptances() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_ListAcceptances() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAcceptances(::grpc::ServerContext* /*context*/, const ::warehouse::ListAcceptancesRequest* /*request*/, ::warehouse::ListAcceptancesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateAcceptance() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_UpdateAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::UpdateAcceptanceRequest* /*request*/, ::warehouse::UpdateAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteAcceptance() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_DeleteAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::DeleteAcceptanceRequest* /*request*/, ::warehouse::DeleteAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateWriteOff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateWriteOff() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_CreateWriteOff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateWriteOff(::grpc::ServerContext* /*context*/, const ::warehouse::CreateWriteOffRequest* /*request*/, ::warehouse::CreateWriteOffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetWriteOff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetWriteOff() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_GetWriteOff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWriteOff(::grpc::ServerContext* /*context*/, const ::warehouse::GetWriteOffRequest* /*request*/, ::warehouse::GetWriteOffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListWriteOff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListWriteOff() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_ListWriteOff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListWriteOff(::grpc::ServerContext* /*context*/, const ::warehouse::ListWriteOffRequest* /*request*/, ::warehouse::ListWriteOffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateMoving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateMoving() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_CreateMoving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMoving(::grpc::ServerContext* /*context*/, const ::warehouse::CreateMovingRequest* /*request*/, ::warehouse::CreateMovingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetMoving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetMoving() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_GetMoving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMoving(::grpc::ServerContext* /*context*/, const ::warehouse::GetMovingRequest* /*request*/, ::warehouse::GetMovingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListMoving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListMoving() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_ListMoving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMoving(::grpc::ServerContext* /*context*/, const ::warehouse::ListMovingRequest* /*request*/, ::warehouse::ListMovingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateInventory() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_CreateInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInventory(::grpc::ServerContext* /*context*/, const ::warehouse::CreateInventoryRequest* /*request*/, ::warehouse::CreateInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetInventory() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_GetInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInventory(::grpc::ServerContext* /*context*/, const ::warehouse::GetInventoryRequest* /*request*/, ::warehouse::GetInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListInventory() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_ListInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInventory(::grpc::ServerContext* /*context*/, const ::warehouse::ListInventoryRequest* /*request*/, ::warehouse::ListInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCountProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCountProducts() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_GetCountProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCountProducts(::grpc::ServerContext* /*context*/, const ::warehouse::GetCountProductsRequest* /*request*/, ::warehouse::GetCountProductsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateWarehouse() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::CreateWarehouseRequest* /*request*/, ::warehouse::CreateWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateWarehouse(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListWarehouses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListWarehouses() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ListWarehouses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListWarehouses(::grpc::ServerContext* /*context*/, const ::warehouse::ListWarehousesRequest* /*request*/, ::warehouse::ListWarehousesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListWarehouses(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateWarehouse() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_UpdateWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::UpdateWarehouseRequest* /*request*/, ::warehouse::UpdateWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateWarehouse(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetProductsInWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetProductsInWarehouse() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetProductsInWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProductsInWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::GetProductsInWarehouseRequest* /*request*/, ::warehouse::GetProductsInWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProductsInWarehouse(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetWarehouseAnalytics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetWarehouseAnalytics() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetWarehouseAnalytics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWarehouseAnalytics(::grpc::ServerContext* /*context*/, const ::warehouse::GetWarehouseAnalyticsRequest* /*request*/, ::warehouse::GetWarehouseAnalyticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetWarehouseAnalytics(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddProductToWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddProductToWarehouse() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_AddProductToWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddProductToWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::AddProductToWarehouseRequest* /*request*/, ::warehouse::AddProductToWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddProductToWarehouse(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateAcceptance() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_CreateAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::CreateAcceptanceRequest* /*request*/, ::warehouse::CreateAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateAcceptance(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAcceptance() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::GetAcceptanceRequest* /*request*/, ::warehouse::GetAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAcceptance(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListAcceptances : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListAcceptances() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_ListAcceptances() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAcceptances(::grpc::ServerContext* /*context*/, const ::warehouse::ListAcceptancesRequest* /*request*/, ::warehouse::ListAcceptancesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAcceptances(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateAcceptance() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_UpdateAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::UpdateAcceptanceRequest* /*request*/, ::warehouse::UpdateAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateAcceptance(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteAcceptance() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_DeleteAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::DeleteAcceptanceRequest* /*request*/, ::warehouse::DeleteAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteAcceptance(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateWriteOff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateWriteOff() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_CreateWriteOff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateWriteOff(::grpc::ServerContext* /*context*/, const ::warehouse::CreateWriteOffRequest* /*request*/, ::warehouse::CreateWriteOffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateWriteOff(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetWriteOff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetWriteOff() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_GetWriteOff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWriteOff(::grpc::ServerContext* /*context*/, const ::warehouse::GetWriteOffRequest* /*request*/, ::warehouse::GetWriteOffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetWriteOff(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListWriteOff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListWriteOff() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_ListWriteOff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListWriteOff(::grpc::ServerContext* /*context*/, const ::warehouse::ListWriteOffRequest* /*request*/, ::warehouse::ListWriteOffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListWriteOff(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateMoving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateMoving() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_CreateMoving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMoving(::grpc::ServerContext* /*context*/, const ::warehouse::CreateMovingRequest* /*request*/, ::warehouse::CreateMovingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateMoving(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetMoving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetMoving() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_GetMoving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMoving(::grpc::ServerContext* /*context*/, const ::warehouse::GetMovingRequest* /*request*/, ::warehouse::GetMovingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMoving(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListMoving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListMoving() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_ListMoving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMoving(::grpc::ServerContext* /*context*/, const ::warehouse::ListMovingRequest* /*request*/, ::warehouse::ListMovingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListMoving(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateInventory() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_CreateInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInventory(::grpc::ServerContext* /*context*/, const ::warehouse::CreateInventoryRequest* /*request*/, ::warehouse::CreateInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateInventory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetInventory() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_GetInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInventory(::grpc::ServerContext* /*context*/, const ::warehouse::GetInventoryRequest* /*request*/, ::warehouse::GetInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInventory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListInventory() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_ListInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInventory(::grpc::ServerContext* /*context*/, const ::warehouse::ListInventoryRequest* /*request*/, ::warehouse::ListInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListInventory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCountProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCountProducts() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_GetCountProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCountProducts(::grpc::ServerContext* /*context*/, const ::warehouse::GetCountProductsRequest* /*request*/, ::warehouse::GetCountProductsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCountProducts(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateWarehouse() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateWarehouse(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::CreateWarehouseRequest* /*request*/, ::warehouse::CreateWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateWarehouse(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListWarehouses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListWarehouses() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListWarehouses(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListWarehouses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListWarehouses(::grpc::ServerContext* /*context*/, const ::warehouse::ListWarehousesRequest* /*request*/, ::warehouse::ListWarehousesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListWarehouses(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateWarehouse() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateWarehouse(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::UpdateWarehouseRequest* /*request*/, ::warehouse::UpdateWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateWarehouse(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetProductsInWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetProductsInWarehouse() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetProductsInWarehouse(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetProductsInWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProductsInWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::GetProductsInWarehouseRequest* /*request*/, ::warehouse::GetProductsInWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetProductsInWarehouse(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetWarehouseAnalytics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetWarehouseAnalytics() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetWarehouseAnalytics(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetWarehouseAnalytics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWarehouseAnalytics(::grpc::ServerContext* /*context*/, const ::warehouse::GetWarehouseAnalyticsRequest* /*request*/, ::warehouse::GetWarehouseAnalyticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetWarehouseAnalytics(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddProductToWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddProductToWarehouse() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddProductToWarehouse(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddProductToWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddProductToWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::AddProductToWarehouseRequest* /*request*/, ::warehouse::AddProductToWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddProductToWarehouse(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateAcceptance() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateAcceptance(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::CreateAcceptanceRequest* /*request*/, ::warehouse::CreateAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateAcceptance(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAcceptance() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAcceptance(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::GetAcceptanceRequest* /*request*/, ::warehouse::GetAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAcceptance(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListAcceptances : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListAcceptances() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListAcceptances(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListAcceptances() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAcceptances(::grpc::ServerContext* /*context*/, const ::warehouse::ListAcceptancesRequest* /*request*/, ::warehouse::ListAcceptancesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListAcceptances(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateAcceptance() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateAcceptance(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::UpdateAcceptanceRequest* /*request*/, ::warehouse::UpdateAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateAcceptance(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteAcceptance() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteAcceptance(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::DeleteAcceptanceRequest* /*request*/, ::warehouse::DeleteAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteAcceptance(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateWriteOff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateWriteOff() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateWriteOff(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateWriteOff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateWriteOff(::grpc::ServerContext* /*context*/, const ::warehouse::CreateWriteOffRequest* /*request*/, ::warehouse::CreateWriteOffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateWriteOff(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetWriteOff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetWriteOff() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetWriteOff(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetWriteOff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWriteOff(::grpc::ServerContext* /*context*/, const ::warehouse::GetWriteOffRequest* /*request*/, ::warehouse::GetWriteOffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetWriteOff(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListWriteOff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListWriteOff() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListWriteOff(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListWriteOff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListWriteOff(::grpc::ServerContext* /*context*/, const ::warehouse::ListWriteOffRequest* /*request*/, ::warehouse::ListWriteOffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListWriteOff(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateMoving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateMoving() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateMoving(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateMoving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateMoving(::grpc::ServerContext* /*context*/, const ::warehouse::CreateMovingRequest* /*request*/, ::warehouse::CreateMovingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateMoving(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetMoving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetMoving() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetMoving(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetMoving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMoving(::grpc::ServerContext* /*context*/, const ::warehouse::GetMovingRequest* /*request*/, ::warehouse::GetMovingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMoving(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListMoving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListMoving() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListMoving(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListMoving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListMoving(::grpc::ServerContext* /*context*/, const ::warehouse::ListMovingRequest* /*request*/, ::warehouse::ListMovingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListMoving(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateInventory() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateInventory(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInventory(::grpc::ServerContext* /*context*/, const ::warehouse::CreateInventoryRequest* /*request*/, ::warehouse::CreateInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateInventory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetInventory() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetInventory(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInventory(::grpc::ServerContext* /*context*/, const ::warehouse::GetInventoryRequest* /*request*/, ::warehouse::GetInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetInventory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListInventory() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListInventory(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListInventory(::grpc::ServerContext* /*context*/, const ::warehouse::ListInventoryRequest* /*request*/, ::warehouse::ListInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListInventory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetCountProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetCountProducts() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetCountProducts(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetCountProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCountProducts(::grpc::ServerContext* /*context*/, const ::warehouse::GetCountProductsRequest* /*request*/, ::warehouse::GetCountProductsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCountProducts(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateWarehouse() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::CreateWarehouseRequest, ::warehouse::CreateWarehouseResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::CreateWarehouseRequest, ::warehouse::CreateWarehouseResponse>* streamer) {
                       return this->StreamedCreateWarehouse(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::CreateWarehouseRequest* /*request*/, ::warehouse::CreateWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateWarehouse(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::CreateWarehouseRequest,::warehouse::CreateWarehouseResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListWarehouses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListWarehouses() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::ListWarehousesRequest, ::warehouse::ListWarehousesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::ListWarehousesRequest, ::warehouse::ListWarehousesResponse>* streamer) {
                       return this->StreamedListWarehouses(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListWarehouses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListWarehouses(::grpc::ServerContext* /*context*/, const ::warehouse::ListWarehousesRequest* /*request*/, ::warehouse::ListWarehousesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListWarehouses(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::ListWarehousesRequest,::warehouse::ListWarehousesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateWarehouse() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::UpdateWarehouseRequest, ::warehouse::UpdateWarehouseResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::UpdateWarehouseRequest, ::warehouse::UpdateWarehouseResponse>* streamer) {
                       return this->StreamedUpdateWarehouse(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::UpdateWarehouseRequest* /*request*/, ::warehouse::UpdateWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateWarehouse(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::UpdateWarehouseRequest,::warehouse::UpdateWarehouseResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetProductsInWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetProductsInWarehouse() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::GetProductsInWarehouseRequest, ::warehouse::GetProductsInWarehouseResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::GetProductsInWarehouseRequest, ::warehouse::GetProductsInWarehouseResponse>* streamer) {
                       return this->StreamedGetProductsInWarehouse(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetProductsInWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetProductsInWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::GetProductsInWarehouseRequest* /*request*/, ::warehouse::GetProductsInWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetProductsInWarehouse(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::GetProductsInWarehouseRequest,::warehouse::GetProductsInWarehouseResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetWarehouseAnalytics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetWarehouseAnalytics() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::GetWarehouseAnalyticsRequest, ::warehouse::GetWarehouseAnalyticsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::GetWarehouseAnalyticsRequest, ::warehouse::GetWarehouseAnalyticsResponse>* streamer) {
                       return this->StreamedGetWarehouseAnalytics(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetWarehouseAnalytics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetWarehouseAnalytics(::grpc::ServerContext* /*context*/, const ::warehouse::GetWarehouseAnalyticsRequest* /*request*/, ::warehouse::GetWarehouseAnalyticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetWarehouseAnalytics(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::GetWarehouseAnalyticsRequest,::warehouse::GetWarehouseAnalyticsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddProductToWarehouse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddProductToWarehouse() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::AddProductToWarehouseRequest, ::warehouse::AddProductToWarehouseResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::AddProductToWarehouseRequest, ::warehouse::AddProductToWarehouseResponse>* streamer) {
                       return this->StreamedAddProductToWarehouse(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddProductToWarehouse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddProductToWarehouse(::grpc::ServerContext* /*context*/, const ::warehouse::AddProductToWarehouseRequest* /*request*/, ::warehouse::AddProductToWarehouseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddProductToWarehouse(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::AddProductToWarehouseRequest,::warehouse::AddProductToWarehouseResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateAcceptance() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::CreateAcceptanceRequest, ::warehouse::CreateAcceptanceResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::CreateAcceptanceRequest, ::warehouse::CreateAcceptanceResponse>* streamer) {
                       return this->StreamedCreateAcceptance(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::CreateAcceptanceRequest* /*request*/, ::warehouse::CreateAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateAcceptance(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::CreateAcceptanceRequest,::warehouse::CreateAcceptanceResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAcceptance() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::GetAcceptanceRequest, ::warehouse::GetAcceptanceResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::GetAcceptanceRequest, ::warehouse::GetAcceptanceResponse>* streamer) {
                       return this->StreamedGetAcceptance(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::GetAcceptanceRequest* /*request*/, ::warehouse::GetAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAcceptance(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::GetAcceptanceRequest,::warehouse::GetAcceptanceResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListAcceptances : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListAcceptances() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::ListAcceptancesRequest, ::warehouse::ListAcceptancesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::ListAcceptancesRequest, ::warehouse::ListAcceptancesResponse>* streamer) {
                       return this->StreamedListAcceptances(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListAcceptances() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListAcceptances(::grpc::ServerContext* /*context*/, const ::warehouse::ListAcceptancesRequest* /*request*/, ::warehouse::ListAcceptancesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListAcceptances(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::ListAcceptancesRequest,::warehouse::ListAcceptancesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateAcceptance() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::UpdateAcceptanceRequest, ::warehouse::UpdateAcceptanceResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::UpdateAcceptanceRequest, ::warehouse::UpdateAcceptanceResponse>* streamer) {
                       return this->StreamedUpdateAcceptance(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::UpdateAcceptanceRequest* /*request*/, ::warehouse::UpdateAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateAcceptance(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::UpdateAcceptanceRequest,::warehouse::UpdateAcceptanceResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteAcceptance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteAcceptance() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::DeleteAcceptanceRequest, ::warehouse::DeleteAcceptanceResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::DeleteAcceptanceRequest, ::warehouse::DeleteAcceptanceResponse>* streamer) {
                       return this->StreamedDeleteAcceptance(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteAcceptance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteAcceptance(::grpc::ServerContext* /*context*/, const ::warehouse::DeleteAcceptanceRequest* /*request*/, ::warehouse::DeleteAcceptanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteAcceptance(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::DeleteAcceptanceRequest,::warehouse::DeleteAcceptanceResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateWriteOff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateWriteOff() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::CreateWriteOffRequest, ::warehouse::CreateWriteOffResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::CreateWriteOffRequest, ::warehouse::CreateWriteOffResponse>* streamer) {
                       return this->StreamedCreateWriteOff(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateWriteOff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateWriteOff(::grpc::ServerContext* /*context*/, const ::warehouse::CreateWriteOffRequest* /*request*/, ::warehouse::CreateWriteOffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateWriteOff(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::CreateWriteOffRequest,::warehouse::CreateWriteOffResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetWriteOff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetWriteOff() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::GetWriteOffRequest, ::warehouse::GetWriteOffResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::GetWriteOffRequest, ::warehouse::GetWriteOffResponse>* streamer) {
                       return this->StreamedGetWriteOff(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetWriteOff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetWriteOff(::grpc::ServerContext* /*context*/, const ::warehouse::GetWriteOffRequest* /*request*/, ::warehouse::GetWriteOffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetWriteOff(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::GetWriteOffRequest,::warehouse::GetWriteOffResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListWriteOff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListWriteOff() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::ListWriteOffRequest, ::warehouse::ListWriteOffResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::ListWriteOffRequest, ::warehouse::ListWriteOffResponse>* streamer) {
                       return this->StreamedListWriteOff(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListWriteOff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListWriteOff(::grpc::ServerContext* /*context*/, const ::warehouse::ListWriteOffRequest* /*request*/, ::warehouse::ListWriteOffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListWriteOff(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::ListWriteOffRequest,::warehouse::ListWriteOffResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateMoving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateMoving() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::CreateMovingRequest, ::warehouse::CreateMovingResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::CreateMovingRequest, ::warehouse::CreateMovingResponse>* streamer) {
                       return this->StreamedCreateMoving(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateMoving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateMoving(::grpc::ServerContext* /*context*/, const ::warehouse::CreateMovingRequest* /*request*/, ::warehouse::CreateMovingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateMoving(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::CreateMovingRequest,::warehouse::CreateMovingResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetMoving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetMoving() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::GetMovingRequest, ::warehouse::GetMovingResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::GetMovingRequest, ::warehouse::GetMovingResponse>* streamer) {
                       return this->StreamedGetMoving(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetMoving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetMoving(::grpc::ServerContext* /*context*/, const ::warehouse::GetMovingRequest* /*request*/, ::warehouse::GetMovingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetMoving(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::GetMovingRequest,::warehouse::GetMovingResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListMoving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListMoving() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::ListMovingRequest, ::warehouse::ListMovingResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::ListMovingRequest, ::warehouse::ListMovingResponse>* streamer) {
                       return this->StreamedListMoving(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListMoving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListMoving(::grpc::ServerContext* /*context*/, const ::warehouse::ListMovingRequest* /*request*/, ::warehouse::ListMovingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListMoving(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::ListMovingRequest,::warehouse::ListMovingResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateInventory() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::CreateInventoryRequest, ::warehouse::CreateInventoryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::CreateInventoryRequest, ::warehouse::CreateInventoryResponse>* streamer) {
                       return this->StreamedCreateInventory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateInventory(::grpc::ServerContext* /*context*/, const ::warehouse::CreateInventoryRequest* /*request*/, ::warehouse::CreateInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateInventory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::CreateInventoryRequest,::warehouse::CreateInventoryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetInventory() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::GetInventoryRequest, ::warehouse::GetInventoryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::GetInventoryRequest, ::warehouse::GetInventoryResponse>* streamer) {
                       return this->StreamedGetInventory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetInventory(::grpc::ServerContext* /*context*/, const ::warehouse::GetInventoryRequest* /*request*/, ::warehouse::GetInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetInventory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::GetInventoryRequest,::warehouse::GetInventoryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListInventory() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::ListInventoryRequest, ::warehouse::ListInventoryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::ListInventoryRequest, ::warehouse::ListInventoryResponse>* streamer) {
                       return this->StreamedListInventory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListInventory(::grpc::ServerContext* /*context*/, const ::warehouse::ListInventoryRequest* /*request*/, ::warehouse::ListInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListInventory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::ListInventoryRequest,::warehouse::ListInventoryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCountProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetCountProducts() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::warehouse::GetCountProductsRequest, ::warehouse::GetCountProductsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::warehouse::GetCountProductsRequest, ::warehouse::GetCountProductsResponse>* streamer) {
                       return this->StreamedGetCountProducts(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetCountProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCountProducts(::grpc::ServerContext* /*context*/, const ::warehouse::GetCountProductsRequest* /*request*/, ::warehouse::GetCountProductsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCountProducts(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::warehouse::GetCountProductsRequest,::warehouse::GetCountProductsResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateWarehouse<WithStreamedUnaryMethod_ListWarehouses<WithStreamedUnaryMethod_UpdateWarehouse<WithStreamedUnaryMethod_GetProductsInWarehouse<WithStreamedUnaryMethod_GetWarehouseAnalytics<WithStreamedUnaryMethod_AddProductToWarehouse<WithStreamedUnaryMethod_CreateAcceptance<WithStreamedUnaryMethod_GetAcceptance<WithStreamedUnaryMethod_ListAcceptances<WithStreamedUnaryMethod_UpdateAcceptance<WithStreamedUnaryMethod_DeleteAcceptance<WithStreamedUnaryMethod_CreateWriteOff<WithStreamedUnaryMethod_GetWriteOff<WithStreamedUnaryMethod_ListWriteOff<WithStreamedUnaryMethod_CreateMoving<WithStreamedUnaryMethod_GetMoving<WithStreamedUnaryMethod_ListMoving<WithStreamedUnaryMethod_CreateInventory<WithStreamedUnaryMethod_GetInventory<WithStreamedUnaryMethod_ListInventory<WithStreamedUnaryMethod_GetCountProducts<Service > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateWarehouse<WithStreamedUnaryMethod_ListWarehouses<WithStreamedUnaryMethod_UpdateWarehouse<WithStreamedUnaryMethod_GetProductsInWarehouse<WithStreamedUnaryMethod_GetWarehouseAnalytics<WithStreamedUnaryMethod_AddProductToWarehouse<WithStreamedUnaryMethod_CreateAcceptance<WithStreamedUnaryMethod_GetAcceptance<WithStreamedUnaryMethod_ListAcceptances<WithStreamedUnaryMethod_UpdateAcceptance<WithStreamedUnaryMethod_DeleteAcceptance<WithStreamedUnaryMethod_CreateWriteOff<WithStreamedUnaryMethod_GetWriteOff<WithStreamedUnaryMethod_ListWriteOff<WithStreamedUnaryMethod_CreateMoving<WithStreamedUnaryMethod_GetMoving<WithStreamedUnaryMethod_ListMoving<WithStreamedUnaryMethod_CreateInventory<WithStreamedUnaryMethod_GetInventory<WithStreamedUnaryMethod_ListInventory<WithStreamedUnaryMethod_GetCountProducts<Service > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace warehouse


#endif  // GRPC_warehouse_2fwarehouse_2eproto__INCLUDED

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: warehouse/warehouse.proto
// Protobuf C++ Version: 5.29.3

#ifndef warehouse_2fwarehouse_2eproto_2epb_2eh
#define warehouse_2fwarehouse_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "organization/organization.pb.h"
#include "product/product.pb.h"
#include "user/user.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_warehouse_2fwarehouse_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_warehouse_2fwarehouse_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_warehouse_2fwarehouse_2eproto;
namespace warehouse {
class Acceptance;
struct AcceptanceDefaultTypeInternal;
extern AcceptanceDefaultTypeInternal _Acceptance_default_instance_;
class AcceptanceModel;
struct AcceptanceModelDefaultTypeInternal;
extern AcceptanceModelDefaultTypeInternal _AcceptanceModel_default_instance_;
class AcceptanceProduct;
struct AcceptanceProductDefaultTypeInternal;
extern AcceptanceProductDefaultTypeInternal _AcceptanceProduct_default_instance_;
class AcceptanceProductModel;
struct AcceptanceProductModelDefaultTypeInternal;
extern AcceptanceProductModelDefaultTypeInternal _AcceptanceProductModel_default_instance_;
class AddProductToWarehouseRequest;
struct AddProductToWarehouseRequestDefaultTypeInternal;
extern AddProductToWarehouseRequestDefaultTypeInternal _AddProductToWarehouseRequest_default_instance_;
class AddProductToWarehouseResponse;
struct AddProductToWarehouseResponseDefaultTypeInternal;
extern AddProductToWarehouseResponseDefaultTypeInternal _AddProductToWarehouseResponse_default_instance_;
class CountProducts;
struct CountProductsDefaultTypeInternal;
extern CountProductsDefaultTypeInternal _CountProducts_default_instance_;
class CreateAcceptanceRequest;
struct CreateAcceptanceRequestDefaultTypeInternal;
extern CreateAcceptanceRequestDefaultTypeInternal _CreateAcceptanceRequest_default_instance_;
class CreateAcceptanceResponse;
struct CreateAcceptanceResponseDefaultTypeInternal;
extern CreateAcceptanceResponseDefaultTypeInternal _CreateAcceptanceResponse_default_instance_;
class CreateInventoryRequest;
struct CreateInventoryRequestDefaultTypeInternal;
extern CreateInventoryRequestDefaultTypeInternal _CreateInventoryRequest_default_instance_;
class CreateInventoryResponse;
struct CreateInventoryResponseDefaultTypeInternal;
extern CreateInventoryResponseDefaultTypeInternal _CreateInventoryResponse_default_instance_;
class CreateMovingRequest;
struct CreateMovingRequestDefaultTypeInternal;
extern CreateMovingRequestDefaultTypeInternal _CreateMovingRequest_default_instance_;
class CreateMovingResponse;
struct CreateMovingResponseDefaultTypeInternal;
extern CreateMovingResponseDefaultTypeInternal _CreateMovingResponse_default_instance_;
class CreateWarehouseRequest;
struct CreateWarehouseRequestDefaultTypeInternal;
extern CreateWarehouseRequestDefaultTypeInternal _CreateWarehouseRequest_default_instance_;
class CreateWarehouseResponse;
struct CreateWarehouseResponseDefaultTypeInternal;
extern CreateWarehouseResponseDefaultTypeInternal _CreateWarehouseResponse_default_instance_;
class CreateWriteOffRequest;
struct CreateWriteOffRequestDefaultTypeInternal;
extern CreateWriteOffRequestDefaultTypeInternal _CreateWriteOffRequest_default_instance_;
class CreateWriteOffResponse;
struct CreateWriteOffResponseDefaultTypeInternal;
extern CreateWriteOffResponseDefaultTypeInternal _CreateWriteOffResponse_default_instance_;
class DeleteAcceptanceRequest;
struct DeleteAcceptanceRequestDefaultTypeInternal;
extern DeleteAcceptanceRequestDefaultTypeInternal _DeleteAcceptanceRequest_default_instance_;
class DeleteAcceptanceResponse;
struct DeleteAcceptanceResponseDefaultTypeInternal;
extern DeleteAcceptanceResponseDefaultTypeInternal _DeleteAcceptanceResponse_default_instance_;
class GetAcceptanceRequest;
struct GetAcceptanceRequestDefaultTypeInternal;
extern GetAcceptanceRequestDefaultTypeInternal _GetAcceptanceRequest_default_instance_;
class GetAcceptanceResponse;
struct GetAcceptanceResponseDefaultTypeInternal;
extern GetAcceptanceResponseDefaultTypeInternal _GetAcceptanceResponse_default_instance_;
class GetCountProductsRequest;
struct GetCountProductsRequestDefaultTypeInternal;
extern GetCountProductsRequestDefaultTypeInternal _GetCountProductsRequest_default_instance_;
class GetCountProductsResponse;
struct GetCountProductsResponseDefaultTypeInternal;
extern GetCountProductsResponseDefaultTypeInternal _GetCountProductsResponse_default_instance_;
class GetInventoryRequest;
struct GetInventoryRequestDefaultTypeInternal;
extern GetInventoryRequestDefaultTypeInternal _GetInventoryRequest_default_instance_;
class GetInventoryResponse;
struct GetInventoryResponseDefaultTypeInternal;
extern GetInventoryResponseDefaultTypeInternal _GetInventoryResponse_default_instance_;
class GetMovingRequest;
struct GetMovingRequestDefaultTypeInternal;
extern GetMovingRequestDefaultTypeInternal _GetMovingRequest_default_instance_;
class GetMovingResponse;
struct GetMovingResponseDefaultTypeInternal;
extern GetMovingResponseDefaultTypeInternal _GetMovingResponse_default_instance_;
class GetProductsInWarehouseRequest;
struct GetProductsInWarehouseRequestDefaultTypeInternal;
extern GetProductsInWarehouseRequestDefaultTypeInternal _GetProductsInWarehouseRequest_default_instance_;
class GetProductsInWarehouseResponse;
struct GetProductsInWarehouseResponseDefaultTypeInternal;
extern GetProductsInWarehouseResponseDefaultTypeInternal _GetProductsInWarehouseResponse_default_instance_;
class GetWarehouseAnalyticsRequest;
struct GetWarehouseAnalyticsRequestDefaultTypeInternal;
extern GetWarehouseAnalyticsRequestDefaultTypeInternal _GetWarehouseAnalyticsRequest_default_instance_;
class GetWarehouseAnalyticsResponse;
struct GetWarehouseAnalyticsResponseDefaultTypeInternal;
extern GetWarehouseAnalyticsResponseDefaultTypeInternal _GetWarehouseAnalyticsResponse_default_instance_;
class GetWriteOffRequest;
struct GetWriteOffRequestDefaultTypeInternal;
extern GetWriteOffRequestDefaultTypeInternal _GetWriteOffRequest_default_instance_;
class GetWriteOffResponse;
struct GetWriteOffResponseDefaultTypeInternal;
extern GetWriteOffResponseDefaultTypeInternal _GetWriteOffResponse_default_instance_;
class Inventory;
struct InventoryDefaultTypeInternal;
extern InventoryDefaultTypeInternal _Inventory_default_instance_;
class InventoryModel;
struct InventoryModelDefaultTypeInternal;
extern InventoryModelDefaultTypeInternal _InventoryModel_default_instance_;
class InventoryProduct;
struct InventoryProductDefaultTypeInternal;
extern InventoryProductDefaultTypeInternal _InventoryProduct_default_instance_;
class InventoryProductModel;
struct InventoryProductModelDefaultTypeInternal;
extern InventoryProductModelDefaultTypeInternal _InventoryProductModel_default_instance_;
class ListAcceptancesRequest;
struct ListAcceptancesRequestDefaultTypeInternal;
extern ListAcceptancesRequestDefaultTypeInternal _ListAcceptancesRequest_default_instance_;
class ListAcceptancesResponse;
struct ListAcceptancesResponseDefaultTypeInternal;
extern ListAcceptancesResponseDefaultTypeInternal _ListAcceptancesResponse_default_instance_;
class ListInventoryRequest;
struct ListInventoryRequestDefaultTypeInternal;
extern ListInventoryRequestDefaultTypeInternal _ListInventoryRequest_default_instance_;
class ListInventoryResponse;
struct ListInventoryResponseDefaultTypeInternal;
extern ListInventoryResponseDefaultTypeInternal _ListInventoryResponse_default_instance_;
class ListMovingRequest;
struct ListMovingRequestDefaultTypeInternal;
extern ListMovingRequestDefaultTypeInternal _ListMovingRequest_default_instance_;
class ListMovingResponse;
struct ListMovingResponseDefaultTypeInternal;
extern ListMovingResponseDefaultTypeInternal _ListMovingResponse_default_instance_;
class ListWarehousesRequest;
struct ListWarehousesRequestDefaultTypeInternal;
extern ListWarehousesRequestDefaultTypeInternal _ListWarehousesRequest_default_instance_;
class ListWarehousesResponse;
struct ListWarehousesResponseDefaultTypeInternal;
extern ListWarehousesResponseDefaultTypeInternal _ListWarehousesResponse_default_instance_;
class ListWriteOffRequest;
struct ListWriteOffRequestDefaultTypeInternal;
extern ListWriteOffRequestDefaultTypeInternal _ListWriteOffRequest_default_instance_;
class ListWriteOffResponse;
struct ListWriteOffResponseDefaultTypeInternal;
extern ListWriteOffResponseDefaultTypeInternal _ListWriteOffResponse_default_instance_;
class Moving;
struct MovingDefaultTypeInternal;
extern MovingDefaultTypeInternal _Moving_default_instance_;
class MovingModel;
struct MovingModelDefaultTypeInternal;
extern MovingModelDefaultTypeInternal _MovingModel_default_instance_;
class MovingProduct;
struct MovingProductDefaultTypeInternal;
extern MovingProductDefaultTypeInternal _MovingProduct_default_instance_;
class MovingProductModel;
struct MovingProductModelDefaultTypeInternal;
extern MovingProductModelDefaultTypeInternal _MovingProductModel_default_instance_;
class UpdateAcceptanceRequest;
struct UpdateAcceptanceRequestDefaultTypeInternal;
extern UpdateAcceptanceRequestDefaultTypeInternal _UpdateAcceptanceRequest_default_instance_;
class UpdateAcceptanceResponse;
struct UpdateAcceptanceResponseDefaultTypeInternal;
extern UpdateAcceptanceResponseDefaultTypeInternal _UpdateAcceptanceResponse_default_instance_;
class UpdateWarehouseRequest;
struct UpdateWarehouseRequestDefaultTypeInternal;
extern UpdateWarehouseRequestDefaultTypeInternal _UpdateWarehouseRequest_default_instance_;
class UpdateWarehouseResponse;
struct UpdateWarehouseResponseDefaultTypeInternal;
extern UpdateWarehouseResponseDefaultTypeInternal _UpdateWarehouseResponse_default_instance_;
class Warehouse;
struct WarehouseDefaultTypeInternal;
extern WarehouseDefaultTypeInternal _Warehouse_default_instance_;
class WarehouseAnalytics;
struct WarehouseAnalyticsDefaultTypeInternal;
extern WarehouseAnalyticsDefaultTypeInternal _WarehouseAnalytics_default_instance_;
class WarehouseModel;
struct WarehouseModelDefaultTypeInternal;
extern WarehouseModelDefaultTypeInternal _WarehouseModel_default_instance_;
class WarehouseProducts;
struct WarehouseProductsDefaultTypeInternal;
extern WarehouseProductsDefaultTypeInternal _WarehouseProducts_default_instance_;
class WriteOff;
struct WriteOffDefaultTypeInternal;
extern WriteOffDefaultTypeInternal _WriteOff_default_instance_;
class WriteOffModel;
struct WriteOffModelDefaultTypeInternal;
extern WriteOffModelDefaultTypeInternal _WriteOffModel_default_instance_;
class WriteOffProduct;
struct WriteOffProductDefaultTypeInternal;
extern WriteOffProductDefaultTypeInternal _WriteOffProduct_default_instance_;
class WriteOffProductModel;
struct WriteOffProductModelDefaultTypeInternal;
extern WriteOffProductModelDefaultTypeInternal _WriteOffProductModel_default_instance_;
}  // namespace warehouse
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace warehouse {

// ===================================================================


// -------------------------------------------------------------------

class WriteOffProductModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.WriteOffProductModel) */ {
 public:
  inline WriteOffProductModel() : WriteOffProductModel(nullptr) {}
  ~WriteOffProductModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WriteOffProductModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WriteOffProductModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WriteOffProductModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline WriteOffProductModel(const WriteOffProductModel& from) : WriteOffProductModel(nullptr, from) {}
  inline WriteOffProductModel(WriteOffProductModel&& from) noexcept
      : WriteOffProductModel(nullptr, std::move(from)) {}
  inline WriteOffProductModel& operator=(const WriteOffProductModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline WriteOffProductModel& operator=(WriteOffProductModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WriteOffProductModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const WriteOffProductModel* internal_default_instance() {
    return reinterpret_cast<const WriteOffProductModel*>(
        &_WriteOffProductModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(WriteOffProductModel& a, WriteOffProductModel& b) { a.Swap(&b); }
  inline void Swap(WriteOffProductModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WriteOffProductModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WriteOffProductModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<WriteOffProductModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WriteOffProductModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WriteOffProductModel& from) { WriteOffProductModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(WriteOffProductModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.WriteOffProductModel"; }

 protected:
  explicit WriteOffProductModel(::google::protobuf::Arena* arena);
  WriteOffProductModel(::google::protobuf::Arena* arena, const WriteOffProductModel& from);
  WriteOffProductModel(::google::protobuf::Arena* arena, WriteOffProductModel&& from) noexcept
      : WriteOffProductModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReasonFieldNumber = 5,
    kIdFieldNumber = 1,
    kProductIdFieldNumber = 2,
    kQuantityFieldNumber = 3,
    kPriceFieldNumber = 4,
  };
  // string reason = 5;
  void clear_reason() ;
  const std::string& reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* value);

  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(
      const std::string& value);
  std::string* _internal_mutable_reason();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 product_id = 2;
  void clear_product_id() ;
  ::int64_t product_id() const;
  void set_product_id(::int64_t value);

  private:
  ::int64_t _internal_product_id() const;
  void _internal_set_product_id(::int64_t value);

  public:
  // int64 quantity = 3;
  void clear_quantity() ;
  ::int64_t quantity() const;
  void set_quantity(::int64_t value);

  private:
  ::int64_t _internal_quantity() const;
  void _internal_set_quantity(::int64_t value);

  public:
  // float price = 4;
  void clear_price() ;
  float price() const;
  void set_price(float value);

  private:
  float _internal_price() const;
  void _internal_set_price(float value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.WriteOffProductModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      45, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WriteOffProductModel& from_msg);
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::int64_t id_;
    ::int64_t product_id_;
    ::int64_t quantity_;
    float price_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class WarehouseAnalytics final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.WarehouseAnalytics) */ {
 public:
  inline WarehouseAnalytics() : WarehouseAnalytics(nullptr) {}
  ~WarehouseAnalytics() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WarehouseAnalytics* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WarehouseAnalytics));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WarehouseAnalytics(
      ::google::protobuf::internal::ConstantInitialized);

  inline WarehouseAnalytics(const WarehouseAnalytics& from) : WarehouseAnalytics(nullptr, from) {}
  inline WarehouseAnalytics(WarehouseAnalytics&& from) noexcept
      : WarehouseAnalytics(nullptr, std::move(from)) {}
  inline WarehouseAnalytics& operator=(const WarehouseAnalytics& from) {
    CopyFrom(from);
    return *this;
  }
  inline WarehouseAnalytics& operator=(WarehouseAnalytics&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WarehouseAnalytics& default_instance() {
    return *internal_default_instance();
  }
  static inline const WarehouseAnalytics* internal_default_instance() {
    return reinterpret_cast<const WarehouseAnalytics*>(
        &_WarehouseAnalytics_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(WarehouseAnalytics& a, WarehouseAnalytics& b) { a.Swap(&b); }
  inline void Swap(WarehouseAnalytics* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WarehouseAnalytics* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WarehouseAnalytics* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<WarehouseAnalytics>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WarehouseAnalytics& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WarehouseAnalytics& from) { WarehouseAnalytics::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(WarehouseAnalytics* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.WarehouseAnalytics"; }

 protected:
  explicit WarehouseAnalytics(::google::protobuf::Arena* arena);
  WarehouseAnalytics(::google::protobuf::Arena* arena, const WarehouseAnalytics& from);
  WarehouseAnalytics(::google::protobuf::Arena* arena, WarehouseAnalytics&& from) noexcept
      : WarehouseAnalytics(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductCountFieldNumber = 1,
    kOccupancyFieldNumber = 2,
    kDefectRateFieldNumber = 3,
  };
  // int64 product_count = 1;
  void clear_product_count() ;
  ::int64_t product_count() const;
  void set_product_count(::int64_t value);

  private:
  ::int64_t _internal_product_count() const;
  void _internal_set_product_count(::int64_t value);

  public:
  // float occupancy = 2;
  void clear_occupancy() ;
  float occupancy() const;
  void set_occupancy(float value);

  private:
  float _internal_occupancy() const;
  void _internal_set_occupancy(float value);

  public:
  // float defect_rate = 3;
  void clear_defect_rate() ;
  float defect_rate() const;
  void set_defect_rate(float value);

  private:
  float _internal_defect_rate() const;
  void _internal_set_defect_rate(float value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.WarehouseAnalytics)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WarehouseAnalytics& from_msg);
    ::int64_t product_count_;
    float occupancy_;
    float defect_rate_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class MovingProductModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.MovingProductModel) */ {
 public:
  inline MovingProductModel() : MovingProductModel(nullptr) {}
  ~MovingProductModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MovingProductModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MovingProductModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MovingProductModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline MovingProductModel(const MovingProductModel& from) : MovingProductModel(nullptr, from) {}
  inline MovingProductModel(MovingProductModel&& from) noexcept
      : MovingProductModel(nullptr, std::move(from)) {}
  inline MovingProductModel& operator=(const MovingProductModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline MovingProductModel& operator=(MovingProductModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MovingProductModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const MovingProductModel* internal_default_instance() {
    return reinterpret_cast<const MovingProductModel*>(
        &_MovingProductModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(MovingProductModel& a, MovingProductModel& b) { a.Swap(&b); }
  inline void Swap(MovingProductModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MovingProductModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MovingProductModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MovingProductModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MovingProductModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MovingProductModel& from) { MovingProductModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MovingProductModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.MovingProductModel"; }

 protected:
  explicit MovingProductModel(::google::protobuf::Arena* arena);
  MovingProductModel(::google::protobuf::Arena* arena, const MovingProductModel& from);
  MovingProductModel(::google::protobuf::Arena* arena, MovingProductModel&& from) noexcept
      : MovingProductModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kProductIdFieldNumber = 2,
    kQuantityFieldNumber = 3,
    kPriceFieldNumber = 4,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 product_id = 2;
  void clear_product_id() ;
  ::int64_t product_id() const;
  void set_product_id(::int64_t value);

  private:
  ::int64_t _internal_product_id() const;
  void _internal_set_product_id(::int64_t value);

  public:
  // int64 quantity = 3;
  void clear_quantity() ;
  ::int64_t quantity() const;
  void set_quantity(::int64_t value);

  private:
  ::int64_t _internal_quantity() const;
  void _internal_set_quantity(::int64_t value);

  public:
  // float price = 4;
  void clear_price() ;
  float price() const;
  void set_price(float value);

  private:
  float _internal_price() const;
  void _internal_set_price(float value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.MovingProductModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MovingProductModel& from_msg);
    ::int64_t id_;
    ::int64_t product_id_;
    ::int64_t quantity_;
    float price_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class ListWriteOffRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.ListWriteOffRequest) */ {
 public:
  inline ListWriteOffRequest() : ListWriteOffRequest(nullptr) {}
  ~ListWriteOffRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListWriteOffRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListWriteOffRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListWriteOffRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListWriteOffRequest(const ListWriteOffRequest& from) : ListWriteOffRequest(nullptr, from) {}
  inline ListWriteOffRequest(ListWriteOffRequest&& from) noexcept
      : ListWriteOffRequest(nullptr, std::move(from)) {}
  inline ListWriteOffRequest& operator=(const ListWriteOffRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListWriteOffRequest& operator=(ListWriteOffRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListWriteOffRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListWriteOffRequest* internal_default_instance() {
    return reinterpret_cast<const ListWriteOffRequest*>(
        &_ListWriteOffRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 47;
  friend void swap(ListWriteOffRequest& a, ListWriteOffRequest& b) { a.Swap(&b); }
  inline void Swap(ListWriteOffRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListWriteOffRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListWriteOffRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListWriteOffRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListWriteOffRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListWriteOffRequest& from) { ListWriteOffRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListWriteOffRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.ListWriteOffRequest"; }

 protected:
  explicit ListWriteOffRequest(::google::protobuf::Arena* arena);
  ListWriteOffRequest(::google::protobuf::Arena* arena, const ListWriteOffRequest& from);
  ListWriteOffRequest(::google::protobuf::Arena* arena, ListWriteOffRequest&& from) noexcept
      : ListWriteOffRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPageFieldNumber = 1,
    kPageSizeFieldNumber = 2,
    kOrganizationIdFieldNumber = 3,
  };
  // int64 page = 1;
  void clear_page() ;
  ::int64_t page() const;
  void set_page(::int64_t value);

  private:
  ::int64_t _internal_page() const;
  void _internal_set_page(::int64_t value);

  public:
  // int64 page_size = 2;
  void clear_page_size() ;
  ::int64_t page_size() const;
  void set_page_size(::int64_t value);

  private:
  ::int64_t _internal_page_size() const;
  void _internal_set_page_size(::int64_t value);

  public:
  // int64 organization_id = 3;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.ListWriteOffRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListWriteOffRequest& from_msg);
    ::int64_t page_;
    ::int64_t page_size_;
    ::int64_t organization_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class ListWarehousesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.ListWarehousesRequest) */ {
 public:
  inline ListWarehousesRequest() : ListWarehousesRequest(nullptr) {}
  ~ListWarehousesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListWarehousesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListWarehousesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListWarehousesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListWarehousesRequest(const ListWarehousesRequest& from) : ListWarehousesRequest(nullptr, from) {}
  inline ListWarehousesRequest(ListWarehousesRequest&& from) noexcept
      : ListWarehousesRequest(nullptr, std::move(from)) {}
  inline ListWarehousesRequest& operator=(const ListWarehousesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListWarehousesRequest& operator=(ListWarehousesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListWarehousesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListWarehousesRequest* internal_default_instance() {
    return reinterpret_cast<const ListWarehousesRequest*>(
        &_ListWarehousesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(ListWarehousesRequest& a, ListWarehousesRequest& b) { a.Swap(&b); }
  inline void Swap(ListWarehousesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListWarehousesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListWarehousesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListWarehousesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListWarehousesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListWarehousesRequest& from) { ListWarehousesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListWarehousesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.ListWarehousesRequest"; }

 protected:
  explicit ListWarehousesRequest(::google::protobuf::Arena* arena);
  ListWarehousesRequest(::google::protobuf::Arena* arena, const ListWarehousesRequest& from);
  ListWarehousesRequest(::google::protobuf::Arena* arena, ListWarehousesRequest&& from) noexcept
      : ListWarehousesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrganizationIdFieldNumber = 1,
    kIncludeAddressFieldNumber = 2,
  };
  // int64 organization_id = 1;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // bool include_address = 2;
  void clear_include_address() ;
  bool include_address() const;
  void set_include_address(bool value);

  private:
  bool _internal_include_address() const;
  void _internal_set_include_address(bool value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.ListWarehousesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListWarehousesRequest& from_msg);
    ::int64_t organization_id_;
    bool include_address_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class ListMovingRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.ListMovingRequest) */ {
 public:
  inline ListMovingRequest() : ListMovingRequest(nullptr) {}
  ~ListMovingRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListMovingRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListMovingRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListMovingRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListMovingRequest(const ListMovingRequest& from) : ListMovingRequest(nullptr, from) {}
  inline ListMovingRequest(ListMovingRequest&& from) noexcept
      : ListMovingRequest(nullptr, std::move(from)) {}
  inline ListMovingRequest& operator=(const ListMovingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListMovingRequest& operator=(ListMovingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListMovingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListMovingRequest* internal_default_instance() {
    return reinterpret_cast<const ListMovingRequest*>(
        &_ListMovingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 53;
  friend void swap(ListMovingRequest& a, ListMovingRequest& b) { a.Swap(&b); }
  inline void Swap(ListMovingRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListMovingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListMovingRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListMovingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListMovingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListMovingRequest& from) { ListMovingRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListMovingRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.ListMovingRequest"; }

 protected:
  explicit ListMovingRequest(::google::protobuf::Arena* arena);
  ListMovingRequest(::google::protobuf::Arena* arena, const ListMovingRequest& from);
  ListMovingRequest(::google::protobuf::Arena* arena, ListMovingRequest&& from) noexcept
      : ListMovingRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPageFieldNumber = 1,
    kPageSizeFieldNumber = 2,
    kOrganizationIdFieldNumber = 3,
  };
  // int64 page = 1;
  void clear_page() ;
  ::int64_t page() const;
  void set_page(::int64_t value);

  private:
  ::int64_t _internal_page() const;
  void _internal_set_page(::int64_t value);

  public:
  // int64 page_size = 2;
  void clear_page_size() ;
  ::int64_t page_size() const;
  void set_page_size(::int64_t value);

  private:
  ::int64_t _internal_page_size() const;
  void _internal_set_page_size(::int64_t value);

  public:
  // int64 organization_id = 3;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.ListMovingRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListMovingRequest& from_msg);
    ::int64_t page_;
    ::int64_t page_size_;
    ::int64_t organization_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class ListInventoryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.ListInventoryRequest) */ {
 public:
  inline ListInventoryRequest() : ListInventoryRequest(nullptr) {}
  ~ListInventoryRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListInventoryRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListInventoryRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListInventoryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListInventoryRequest(const ListInventoryRequest& from) : ListInventoryRequest(nullptr, from) {}
  inline ListInventoryRequest(ListInventoryRequest&& from) noexcept
      : ListInventoryRequest(nullptr, std::move(from)) {}
  inline ListInventoryRequest& operator=(const ListInventoryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListInventoryRequest& operator=(ListInventoryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListInventoryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListInventoryRequest* internal_default_instance() {
    return reinterpret_cast<const ListInventoryRequest*>(
        &_ListInventoryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 59;
  friend void swap(ListInventoryRequest& a, ListInventoryRequest& b) { a.Swap(&b); }
  inline void Swap(ListInventoryRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListInventoryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListInventoryRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListInventoryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListInventoryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListInventoryRequest& from) { ListInventoryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListInventoryRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.ListInventoryRequest"; }

 protected:
  explicit ListInventoryRequest(::google::protobuf::Arena* arena);
  ListInventoryRequest(::google::protobuf::Arena* arena, const ListInventoryRequest& from);
  ListInventoryRequest(::google::protobuf::Arena* arena, ListInventoryRequest&& from) noexcept
      : ListInventoryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPageFieldNumber = 1,
    kPageSizeFieldNumber = 2,
    kOrganizationIdFieldNumber = 3,
  };
  // int64 page = 1;
  void clear_page() ;
  ::int64_t page() const;
  void set_page(::int64_t value);

  private:
  ::int64_t _internal_page() const;
  void _internal_set_page(::int64_t value);

  public:
  // int64 page_size = 2;
  void clear_page_size() ;
  ::int64_t page_size() const;
  void set_page_size(::int64_t value);

  private:
  ::int64_t _internal_page_size() const;
  void _internal_set_page_size(::int64_t value);

  public:
  // int64 organization_id = 3;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.ListInventoryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListInventoryRequest& from_msg);
    ::int64_t page_;
    ::int64_t page_size_;
    ::int64_t organization_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class ListAcceptancesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.ListAcceptancesRequest) */ {
 public:
  inline ListAcceptancesRequest() : ListAcceptancesRequest(nullptr) {}
  ~ListAcceptancesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListAcceptancesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListAcceptancesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListAcceptancesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListAcceptancesRequest(const ListAcceptancesRequest& from) : ListAcceptancesRequest(nullptr, from) {}
  inline ListAcceptancesRequest(ListAcceptancesRequest&& from) noexcept
      : ListAcceptancesRequest(nullptr, std::move(from)) {}
  inline ListAcceptancesRequest& operator=(const ListAcceptancesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListAcceptancesRequest& operator=(ListAcceptancesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListAcceptancesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListAcceptancesRequest* internal_default_instance() {
    return reinterpret_cast<const ListAcceptancesRequest*>(
        &_ListAcceptancesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(ListAcceptancesRequest& a, ListAcceptancesRequest& b) { a.Swap(&b); }
  inline void Swap(ListAcceptancesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListAcceptancesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListAcceptancesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListAcceptancesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListAcceptancesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListAcceptancesRequest& from) { ListAcceptancesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListAcceptancesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.ListAcceptancesRequest"; }

 protected:
  explicit ListAcceptancesRequest(::google::protobuf::Arena* arena);
  ListAcceptancesRequest(::google::protobuf::Arena* arena, const ListAcceptancesRequest& from);
  ListAcceptancesRequest(::google::protobuf::Arena* arena, ListAcceptancesRequest&& from) noexcept
      : ListAcceptancesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPageFieldNumber = 1,
    kPageSizeFieldNumber = 2,
    kOrganizationIdFieldNumber = 3,
  };
  // int64 page = 1;
  void clear_page() ;
  ::int64_t page() const;
  void set_page(::int64_t value);

  private:
  ::int64_t _internal_page() const;
  void _internal_set_page(::int64_t value);

  public:
  // int64 page_size = 2;
  void clear_page_size() ;
  ::int64_t page_size() const;
  void set_page_size(::int64_t value);

  private:
  ::int64_t _internal_page_size() const;
  void _internal_set_page_size(::int64_t value);

  public:
  // int64 organization_id = 3;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.ListAcceptancesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListAcceptancesRequest& from_msg);
    ::int64_t page_;
    ::int64_t page_size_;
    ::int64_t organization_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class InventoryProductModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.InventoryProductModel) */ {
 public:
  inline InventoryProductModel() : InventoryProductModel(nullptr) {}
  ~InventoryProductModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InventoryProductModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InventoryProductModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InventoryProductModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline InventoryProductModel(const InventoryProductModel& from) : InventoryProductModel(nullptr, from) {}
  inline InventoryProductModel(InventoryProductModel&& from) noexcept
      : InventoryProductModel(nullptr, std::move(from)) {}
  inline InventoryProductModel& operator=(const InventoryProductModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline InventoryProductModel& operator=(InventoryProductModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InventoryProductModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const InventoryProductModel* internal_default_instance() {
    return reinterpret_cast<const InventoryProductModel*>(
        &_InventoryProductModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(InventoryProductModel& a, InventoryProductModel& b) { a.Swap(&b); }
  inline void Swap(InventoryProductModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InventoryProductModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InventoryProductModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InventoryProductModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InventoryProductModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InventoryProductModel& from) { InventoryProductModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InventoryProductModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.InventoryProductModel"; }

 protected:
  explicit InventoryProductModel(::google::protobuf::Arena* arena);
  InventoryProductModel(::google::protobuf::Arena* arena, const InventoryProductModel& from);
  InventoryProductModel(::google::protobuf::Arena* arena, InventoryProductModel&& from) noexcept
      : InventoryProductModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kProductIdFieldNumber = 2,
    kExceptedQuantityFieldNumber = 3,
    kFactualQuantityFieldNumber = 4,
    kDifferenceQuantityFieldNumber = 5,
    kPriceFieldNumber = 6,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 product_id = 2;
  void clear_product_id() ;
  ::int64_t product_id() const;
  void set_product_id(::int64_t value);

  private:
  ::int64_t _internal_product_id() const;
  void _internal_set_product_id(::int64_t value);

  public:
  // int64 excepted_quantity = 3;
  void clear_excepted_quantity() ;
  ::int64_t excepted_quantity() const;
  void set_excepted_quantity(::int64_t value);

  private:
  ::int64_t _internal_excepted_quantity() const;
  void _internal_set_excepted_quantity(::int64_t value);

  public:
  // int64 factual_quantity = 4;
  void clear_factual_quantity() ;
  ::int64_t factual_quantity() const;
  void set_factual_quantity(::int64_t value);

  private:
  ::int64_t _internal_factual_quantity() const;
  void _internal_set_factual_quantity(::int64_t value);

  public:
  // int64 difference_quantity = 5;
  void clear_difference_quantity() ;
  ::int64_t difference_quantity() const;
  void set_difference_quantity(::int64_t value);

  private:
  ::int64_t _internal_difference_quantity() const;
  void _internal_set_difference_quantity(::int64_t value);

  public:
  // float price = 6;
  void clear_price() ;
  float price() const;
  void set_price(float value);

  private:
  float _internal_price() const;
  void _internal_set_price(float value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.InventoryProductModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InventoryProductModel& from_msg);
    ::int64_t id_;
    ::int64_t product_id_;
    ::int64_t excepted_quantity_;
    ::int64_t factual_quantity_;
    ::int64_t difference_quantity_;
    float price_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class GetWriteOffRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.GetWriteOffRequest) */ {
 public:
  inline GetWriteOffRequest() : GetWriteOffRequest(nullptr) {}
  ~GetWriteOffRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetWriteOffRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetWriteOffRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetWriteOffRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetWriteOffRequest(const GetWriteOffRequest& from) : GetWriteOffRequest(nullptr, from) {}
  inline GetWriteOffRequest(GetWriteOffRequest&& from) noexcept
      : GetWriteOffRequest(nullptr, std::move(from)) {}
  inline GetWriteOffRequest& operator=(const GetWriteOffRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetWriteOffRequest& operator=(GetWriteOffRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetWriteOffRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetWriteOffRequest* internal_default_instance() {
    return reinterpret_cast<const GetWriteOffRequest*>(
        &_GetWriteOffRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 45;
  friend void swap(GetWriteOffRequest& a, GetWriteOffRequest& b) { a.Swap(&b); }
  inline void Swap(GetWriteOffRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetWriteOffRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetWriteOffRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetWriteOffRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetWriteOffRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetWriteOffRequest& from) { GetWriteOffRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetWriteOffRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.GetWriteOffRequest"; }

 protected:
  explicit GetWriteOffRequest(::google::protobuf::Arena* arena);
  GetWriteOffRequest(::google::protobuf::Arena* arena, const GetWriteOffRequest& from);
  GetWriteOffRequest(::google::protobuf::Arena* arena, GetWriteOffRequest&& from) noexcept
      : GetWriteOffRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWriteOffIdFieldNumber = 1,
  };
  // int64 write_off_id = 1;
  void clear_write_off_id() ;
  ::int64_t write_off_id() const;
  void set_write_off_id(::int64_t value);

  private:
  ::int64_t _internal_write_off_id() const;
  void _internal_set_write_off_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.GetWriteOffRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetWriteOffRequest& from_msg);
    ::int64_t write_off_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class GetWarehouseAnalyticsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.GetWarehouseAnalyticsRequest) */ {
 public:
  inline GetWarehouseAnalyticsRequest() : GetWarehouseAnalyticsRequest(nullptr) {}
  ~GetWarehouseAnalyticsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetWarehouseAnalyticsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetWarehouseAnalyticsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetWarehouseAnalyticsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetWarehouseAnalyticsRequest(const GetWarehouseAnalyticsRequest& from) : GetWarehouseAnalyticsRequest(nullptr, from) {}
  inline GetWarehouseAnalyticsRequest(GetWarehouseAnalyticsRequest&& from) noexcept
      : GetWarehouseAnalyticsRequest(nullptr, std::move(from)) {}
  inline GetWarehouseAnalyticsRequest& operator=(const GetWarehouseAnalyticsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetWarehouseAnalyticsRequest& operator=(GetWarehouseAnalyticsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetWarehouseAnalyticsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetWarehouseAnalyticsRequest* internal_default_instance() {
    return reinterpret_cast<const GetWarehouseAnalyticsRequest*>(
        &_GetWarehouseAnalyticsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(GetWarehouseAnalyticsRequest& a, GetWarehouseAnalyticsRequest& b) { a.Swap(&b); }
  inline void Swap(GetWarehouseAnalyticsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetWarehouseAnalyticsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetWarehouseAnalyticsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetWarehouseAnalyticsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetWarehouseAnalyticsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetWarehouseAnalyticsRequest& from) { GetWarehouseAnalyticsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetWarehouseAnalyticsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.GetWarehouseAnalyticsRequest"; }

 protected:
  explicit GetWarehouseAnalyticsRequest(::google::protobuf::Arena* arena);
  GetWarehouseAnalyticsRequest(::google::protobuf::Arena* arena, const GetWarehouseAnalyticsRequest& from);
  GetWarehouseAnalyticsRequest(::google::protobuf::Arena* arena, GetWarehouseAnalyticsRequest&& from) noexcept
      : GetWarehouseAnalyticsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWarehouseIdFieldNumber = 1,
  };
  // int64 warehouse_id = 1;
  void clear_warehouse_id() ;
  ::int64_t warehouse_id() const;
  void set_warehouse_id(::int64_t value);

  private:
  ::int64_t _internal_warehouse_id() const;
  void _internal_set_warehouse_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.GetWarehouseAnalyticsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetWarehouseAnalyticsRequest& from_msg);
    ::int64_t warehouse_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class GetProductsInWarehouseRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.GetProductsInWarehouseRequest) */ {
 public:
  inline GetProductsInWarehouseRequest() : GetProductsInWarehouseRequest(nullptr) {}
  ~GetProductsInWarehouseRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetProductsInWarehouseRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetProductsInWarehouseRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetProductsInWarehouseRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetProductsInWarehouseRequest(const GetProductsInWarehouseRequest& from) : GetProductsInWarehouseRequest(nullptr, from) {}
  inline GetProductsInWarehouseRequest(GetProductsInWarehouseRequest&& from) noexcept
      : GetProductsInWarehouseRequest(nullptr, std::move(from)) {}
  inline GetProductsInWarehouseRequest& operator=(const GetProductsInWarehouseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetProductsInWarehouseRequest& operator=(GetProductsInWarehouseRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetProductsInWarehouseRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetProductsInWarehouseRequest* internal_default_instance() {
    return reinterpret_cast<const GetProductsInWarehouseRequest*>(
        &_GetProductsInWarehouseRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(GetProductsInWarehouseRequest& a, GetProductsInWarehouseRequest& b) { a.Swap(&b); }
  inline void Swap(GetProductsInWarehouseRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetProductsInWarehouseRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetProductsInWarehouseRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetProductsInWarehouseRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetProductsInWarehouseRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetProductsInWarehouseRequest& from) { GetProductsInWarehouseRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetProductsInWarehouseRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.GetProductsInWarehouseRequest"; }

 protected:
  explicit GetProductsInWarehouseRequest(::google::protobuf::Arena* arena);
  GetProductsInWarehouseRequest(::google::protobuf::Arena* arena, const GetProductsInWarehouseRequest& from);
  GetProductsInWarehouseRequest(::google::protobuf::Arena* arena, GetProductsInWarehouseRequest&& from) noexcept
      : GetProductsInWarehouseRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 4,
    kSortByFieldNumber = 5,
    kWarehouseIdFieldNumber = 1,
    kPageFieldNumber = 2,
    kPageSizeFieldNumber = 3,
    kOrganizationIdFieldNumber = 8,
    kIsAscendingFieldNumber = 6,
    kIsAllFieldNumber = 7,
  };
  // string name = 4;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string sort_by = 5;
  void clear_sort_by() ;
  const std::string& sort_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sort_by(Arg_&& arg, Args_... args);
  std::string* mutable_sort_by();
  PROTOBUF_NODISCARD std::string* release_sort_by();
  void set_allocated_sort_by(std::string* value);

  private:
  const std::string& _internal_sort_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sort_by(
      const std::string& value);
  std::string* _internal_mutable_sort_by();

  public:
  // int64 warehouse_id = 1;
  void clear_warehouse_id() ;
  ::int64_t warehouse_id() const;
  void set_warehouse_id(::int64_t value);

  private:
  ::int64_t _internal_warehouse_id() const;
  void _internal_set_warehouse_id(::int64_t value);

  public:
  // int64 page = 2;
  void clear_page() ;
  ::int64_t page() const;
  void set_page(::int64_t value);

  private:
  ::int64_t _internal_page() const;
  void _internal_set_page(::int64_t value);

  public:
  // int64 page_size = 3;
  void clear_page_size() ;
  ::int64_t page_size() const;
  void set_page_size(::int64_t value);

  private:
  ::int64_t _internal_page_size() const;
  void _internal_set_page_size(::int64_t value);

  public:
  // int64 organization_id = 8;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // bool is_ascending = 6;
  void clear_is_ascending() ;
  bool is_ascending() const;
  void set_is_ascending(bool value);

  private:
  bool _internal_is_ascending() const;
  void _internal_set_is_ascending(bool value);

  public:
  // bool is_all = 7;
  void clear_is_all() ;
  bool is_all() const;
  void set_is_all(bool value);

  private:
  bool _internal_is_all() const;
  void _internal_set_is_all(bool value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.GetProductsInWarehouseRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      67, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetProductsInWarehouseRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr sort_by_;
    ::int64_t warehouse_id_;
    ::int64_t page_;
    ::int64_t page_size_;
    ::int64_t organization_id_;
    bool is_ascending_;
    bool is_all_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class GetMovingRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.GetMovingRequest) */ {
 public:
  inline GetMovingRequest() : GetMovingRequest(nullptr) {}
  ~GetMovingRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetMovingRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetMovingRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMovingRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetMovingRequest(const GetMovingRequest& from) : GetMovingRequest(nullptr, from) {}
  inline GetMovingRequest(GetMovingRequest&& from) noexcept
      : GetMovingRequest(nullptr, std::move(from)) {}
  inline GetMovingRequest& operator=(const GetMovingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMovingRequest& operator=(GetMovingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMovingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMovingRequest* internal_default_instance() {
    return reinterpret_cast<const GetMovingRequest*>(
        &_GetMovingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 51;
  friend void swap(GetMovingRequest& a, GetMovingRequest& b) { a.Swap(&b); }
  inline void Swap(GetMovingRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMovingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMovingRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetMovingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMovingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetMovingRequest& from) { GetMovingRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetMovingRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.GetMovingRequest"; }

 protected:
  explicit GetMovingRequest(::google::protobuf::Arena* arena);
  GetMovingRequest(::google::protobuf::Arena* arena, const GetMovingRequest& from);
  GetMovingRequest(::google::protobuf::Arena* arena, GetMovingRequest&& from) noexcept
      : GetMovingRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.GetMovingRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetMovingRequest& from_msg);
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class GetInventoryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.GetInventoryRequest) */ {
 public:
  inline GetInventoryRequest() : GetInventoryRequest(nullptr) {}
  ~GetInventoryRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetInventoryRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetInventoryRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetInventoryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetInventoryRequest(const GetInventoryRequest& from) : GetInventoryRequest(nullptr, from) {}
  inline GetInventoryRequest(GetInventoryRequest&& from) noexcept
      : GetInventoryRequest(nullptr, std::move(from)) {}
  inline GetInventoryRequest& operator=(const GetInventoryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetInventoryRequest& operator=(GetInventoryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetInventoryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetInventoryRequest* internal_default_instance() {
    return reinterpret_cast<const GetInventoryRequest*>(
        &_GetInventoryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 57;
  friend void swap(GetInventoryRequest& a, GetInventoryRequest& b) { a.Swap(&b); }
  inline void Swap(GetInventoryRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetInventoryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetInventoryRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetInventoryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetInventoryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetInventoryRequest& from) { GetInventoryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetInventoryRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.GetInventoryRequest"; }

 protected:
  explicit GetInventoryRequest(::google::protobuf::Arena* arena);
  GetInventoryRequest(::google::protobuf::Arena* arena, const GetInventoryRequest& from);
  GetInventoryRequest(::google::protobuf::Arena* arena, GetInventoryRequest&& from) noexcept
      : GetInventoryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.GetInventoryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetInventoryRequest& from_msg);
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class GetCountProductsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.GetCountProductsRequest) */ {
 public:
  inline GetCountProductsRequest() : GetCountProductsRequest(nullptr) {}
  ~GetCountProductsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetCountProductsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetCountProductsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCountProductsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetCountProductsRequest(const GetCountProductsRequest& from) : GetCountProductsRequest(nullptr, from) {}
  inline GetCountProductsRequest(GetCountProductsRequest&& from) noexcept
      : GetCountProductsRequest(nullptr, std::move(from)) {}
  inline GetCountProductsRequest& operator=(const GetCountProductsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCountProductsRequest& operator=(GetCountProductsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCountProductsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCountProductsRequest* internal_default_instance() {
    return reinterpret_cast<const GetCountProductsRequest*>(
        &_GetCountProductsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 61;
  friend void swap(GetCountProductsRequest& a, GetCountProductsRequest& b) { a.Swap(&b); }
  inline void Swap(GetCountProductsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCountProductsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCountProductsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetCountProductsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCountProductsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCountProductsRequest& from) { GetCountProductsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetCountProductsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.GetCountProductsRequest"; }

 protected:
  explicit GetCountProductsRequest(::google::protobuf::Arena* arena);
  GetCountProductsRequest(::google::protobuf::Arena* arena, const GetCountProductsRequest& from);
  GetCountProductsRequest(::google::protobuf::Arena* arena, GetCountProductsRequest&& from) noexcept
      : GetCountProductsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductIdsFieldNumber = 1,
    kWarehouseIdFieldNumber = 2,
  };
  // repeated int64 product_ids = 1;
  int product_ids_size() const;
  private:
  int _internal_product_ids_size() const;

  public:
  void clear_product_ids() ;
  ::int64_t product_ids(int index) const;
  void set_product_ids(int index, ::int64_t value);
  void add_product_ids(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& product_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_product_ids();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_product_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_product_ids();

  public:
  // int64 warehouse_id = 2;
  void clear_warehouse_id() ;
  ::int64_t warehouse_id() const;
  void set_warehouse_id(::int64_t value);

  private:
  ::int64_t _internal_warehouse_id() const;
  void _internal_set_warehouse_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.GetCountProductsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetCountProductsRequest& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> product_ids_;
    ::google::protobuf::internal::CachedSize _product_ids_cached_byte_size_;
    ::int64_t warehouse_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class GetAcceptanceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.GetAcceptanceRequest) */ {
 public:
  inline GetAcceptanceRequest() : GetAcceptanceRequest(nullptr) {}
  ~GetAcceptanceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetAcceptanceRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetAcceptanceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetAcceptanceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetAcceptanceRequest(const GetAcceptanceRequest& from) : GetAcceptanceRequest(nullptr, from) {}
  inline GetAcceptanceRequest(GetAcceptanceRequest&& from) noexcept
      : GetAcceptanceRequest(nullptr, std::move(from)) {}
  inline GetAcceptanceRequest& operator=(const GetAcceptanceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAcceptanceRequest& operator=(GetAcceptanceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAcceptanceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAcceptanceRequest* internal_default_instance() {
    return reinterpret_cast<const GetAcceptanceRequest*>(
        &_GetAcceptanceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(GetAcceptanceRequest& a, GetAcceptanceRequest& b) { a.Swap(&b); }
  inline void Swap(GetAcceptanceRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAcceptanceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAcceptanceRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetAcceptanceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAcceptanceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetAcceptanceRequest& from) { GetAcceptanceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetAcceptanceRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.GetAcceptanceRequest"; }

 protected:
  explicit GetAcceptanceRequest(::google::protobuf::Arena* arena);
  GetAcceptanceRequest(::google::protobuf::Arena* arena, const GetAcceptanceRequest& from);
  GetAcceptanceRequest(::google::protobuf::Arena* arena, GetAcceptanceRequest&& from) noexcept
      : GetAcceptanceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.GetAcceptanceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetAcceptanceRequest& from_msg);
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class DeleteAcceptanceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.DeleteAcceptanceResponse) */ {
 public:
  inline DeleteAcceptanceResponse() : DeleteAcceptanceResponse(nullptr) {}
  ~DeleteAcceptanceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteAcceptanceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteAcceptanceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteAcceptanceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteAcceptanceResponse(const DeleteAcceptanceResponse& from) : DeleteAcceptanceResponse(nullptr, from) {}
  inline DeleteAcceptanceResponse(DeleteAcceptanceResponse&& from) noexcept
      : DeleteAcceptanceResponse(nullptr, std::move(from)) {}
  inline DeleteAcceptanceResponse& operator=(const DeleteAcceptanceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteAcceptanceResponse& operator=(DeleteAcceptanceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteAcceptanceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteAcceptanceResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteAcceptanceResponse*>(
        &_DeleteAcceptanceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 42;
  friend void swap(DeleteAcceptanceResponse& a, DeleteAcceptanceResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteAcceptanceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteAcceptanceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteAcceptanceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteAcceptanceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteAcceptanceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteAcceptanceResponse& from) { DeleteAcceptanceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteAcceptanceResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.DeleteAcceptanceResponse"; }

 protected:
  explicit DeleteAcceptanceResponse(::google::protobuf::Arena* arena);
  DeleteAcceptanceResponse(::google::protobuf::Arena* arena, const DeleteAcceptanceResponse& from);
  DeleteAcceptanceResponse(::google::protobuf::Arena* arena, DeleteAcceptanceResponse&& from) noexcept
      : DeleteAcceptanceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.DeleteAcceptanceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteAcceptanceResponse& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class DeleteAcceptanceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.DeleteAcceptanceRequest) */ {
 public:
  inline DeleteAcceptanceRequest() : DeleteAcceptanceRequest(nullptr) {}
  ~DeleteAcceptanceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteAcceptanceRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteAcceptanceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteAcceptanceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteAcceptanceRequest(const DeleteAcceptanceRequest& from) : DeleteAcceptanceRequest(nullptr, from) {}
  inline DeleteAcceptanceRequest(DeleteAcceptanceRequest&& from) noexcept
      : DeleteAcceptanceRequest(nullptr, std::move(from)) {}
  inline DeleteAcceptanceRequest& operator=(const DeleteAcceptanceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteAcceptanceRequest& operator=(DeleteAcceptanceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteAcceptanceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteAcceptanceRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteAcceptanceRequest*>(
        &_DeleteAcceptanceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(DeleteAcceptanceRequest& a, DeleteAcceptanceRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteAcceptanceRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteAcceptanceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteAcceptanceRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteAcceptanceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteAcceptanceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteAcceptanceRequest& from) { DeleteAcceptanceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteAcceptanceRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.DeleteAcceptanceRequest"; }

 protected:
  explicit DeleteAcceptanceRequest(::google::protobuf::Arena* arena);
  DeleteAcceptanceRequest(::google::protobuf::Arena* arena, const DeleteAcceptanceRequest& from);
  DeleteAcceptanceRequest(::google::protobuf::Arena* arena, DeleteAcceptanceRequest&& from) noexcept
      : DeleteAcceptanceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.DeleteAcceptanceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteAcceptanceRequest& from_msg);
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class CountProducts final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.CountProducts) */ {
 public:
  inline CountProducts() : CountProducts(nullptr) {}
  ~CountProducts() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CountProducts* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CountProducts));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CountProducts(
      ::google::protobuf::internal::ConstantInitialized);

  inline CountProducts(const CountProducts& from) : CountProducts(nullptr, from) {}
  inline CountProducts(CountProducts&& from) noexcept
      : CountProducts(nullptr, std::move(from)) {}
  inline CountProducts& operator=(const CountProducts& from) {
    CopyFrom(from);
    return *this;
  }
  inline CountProducts& operator=(CountProducts&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CountProducts& default_instance() {
    return *internal_default_instance();
  }
  static inline const CountProducts* internal_default_instance() {
    return reinterpret_cast<const CountProducts*>(
        &_CountProducts_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(CountProducts& a, CountProducts& b) { a.Swap(&b); }
  inline void Swap(CountProducts* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CountProducts* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CountProducts* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CountProducts>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CountProducts& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CountProducts& from) { CountProducts::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CountProducts* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.CountProducts"; }

 protected:
  explicit CountProducts(::google::protobuf::Arena* arena);
  CountProducts(::google::protobuf::Arena* arena, const CountProducts& from);
  CountProducts(::google::protobuf::Arena* arena, CountProducts&& from) noexcept
      : CountProducts(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductIdFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // int64 product_id = 1;
  void clear_product_id() ;
  ::int64_t product_id() const;
  void set_product_id(::int64_t value);

  private:
  ::int64_t _internal_product_id() const;
  void _internal_set_product_id(::int64_t value);

  public:
  // int64 count = 2;
  void clear_count() ;
  ::int64_t count() const;
  void set_count(::int64_t value);

  private:
  ::int64_t _internal_count() const;
  void _internal_set_count(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.CountProducts)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CountProducts& from_msg);
    ::int64_t product_id_;
    ::int64_t count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class AddProductToWarehouseRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.AddProductToWarehouseRequest) */ {
 public:
  inline AddProductToWarehouseRequest() : AddProductToWarehouseRequest(nullptr) {}
  ~AddProductToWarehouseRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddProductToWarehouseRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddProductToWarehouseRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddProductToWarehouseRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddProductToWarehouseRequest(const AddProductToWarehouseRequest& from) : AddProductToWarehouseRequest(nullptr, from) {}
  inline AddProductToWarehouseRequest(AddProductToWarehouseRequest&& from) noexcept
      : AddProductToWarehouseRequest(nullptr, std::move(from)) {}
  inline AddProductToWarehouseRequest& operator=(const AddProductToWarehouseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddProductToWarehouseRequest& operator=(AddProductToWarehouseRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddProductToWarehouseRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddProductToWarehouseRequest* internal_default_instance() {
    return reinterpret_cast<const AddProductToWarehouseRequest*>(
        &_AddProductToWarehouseRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(AddProductToWarehouseRequest& a, AddProductToWarehouseRequest& b) { a.Swap(&b); }
  inline void Swap(AddProductToWarehouseRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddProductToWarehouseRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddProductToWarehouseRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddProductToWarehouseRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddProductToWarehouseRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddProductToWarehouseRequest& from) { AddProductToWarehouseRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddProductToWarehouseRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.AddProductToWarehouseRequest"; }

 protected:
  explicit AddProductToWarehouseRequest(::google::protobuf::Arena* arena);
  AddProductToWarehouseRequest(::google::protobuf::Arena* arena, const AddProductToWarehouseRequest& from);
  AddProductToWarehouseRequest(::google::protobuf::Arena* arena, AddProductToWarehouseRequest&& from) noexcept
      : AddProductToWarehouseRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWarehouseIdFieldNumber = 1,
    kProductIdFieldNumber = 2,
    kQuantityFieldNumber = 3,
  };
  // int64 warehouse_id = 1;
  void clear_warehouse_id() ;
  ::int64_t warehouse_id() const;
  void set_warehouse_id(::int64_t value);

  private:
  ::int64_t _internal_warehouse_id() const;
  void _internal_set_warehouse_id(::int64_t value);

  public:
  // int64 product_id = 2;
  void clear_product_id() ;
  ::int64_t product_id() const;
  void set_product_id(::int64_t value);

  private:
  ::int64_t _internal_product_id() const;
  void _internal_set_product_id(::int64_t value);

  public:
  // int64 quantity = 3;
  void clear_quantity() ;
  ::int64_t quantity() const;
  void set_quantity(::int64_t value);

  private:
  ::int64_t _internal_quantity() const;
  void _internal_set_quantity(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.AddProductToWarehouseRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddProductToWarehouseRequest& from_msg);
    ::int64_t warehouse_id_;
    ::int64_t product_id_;
    ::int64_t quantity_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class AcceptanceProductModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.AcceptanceProductModel) */ {
 public:
  inline AcceptanceProductModel() : AcceptanceProductModel(nullptr) {}
  ~AcceptanceProductModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AcceptanceProductModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AcceptanceProductModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AcceptanceProductModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline AcceptanceProductModel(const AcceptanceProductModel& from) : AcceptanceProductModel(nullptr, from) {}
  inline AcceptanceProductModel(AcceptanceProductModel&& from) noexcept
      : AcceptanceProductModel(nullptr, std::move(from)) {}
  inline AcceptanceProductModel& operator=(const AcceptanceProductModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline AcceptanceProductModel& operator=(AcceptanceProductModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AcceptanceProductModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const AcceptanceProductModel* internal_default_instance() {
    return reinterpret_cast<const AcceptanceProductModel*>(
        &_AcceptanceProductModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(AcceptanceProductModel& a, AcceptanceProductModel& b) { a.Swap(&b); }
  inline void Swap(AcceptanceProductModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AcceptanceProductModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AcceptanceProductModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AcceptanceProductModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AcceptanceProductModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AcceptanceProductModel& from) { AcceptanceProductModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AcceptanceProductModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.AcceptanceProductModel"; }

 protected:
  explicit AcceptanceProductModel(::google::protobuf::Arena* arena);
  AcceptanceProductModel(::google::protobuf::Arena* arena, const AcceptanceProductModel& from);
  AcceptanceProductModel(::google::protobuf::Arena* arena, AcceptanceProductModel&& from) noexcept
      : AcceptanceProductModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kProductIdFieldNumber = 2,
    kQuantityFieldNumber = 3,
    kPriceFieldNumber = 4,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 product_id = 2;
  void clear_product_id() ;
  ::int64_t product_id() const;
  void set_product_id(::int64_t value);

  private:
  ::int64_t _internal_product_id() const;
  void _internal_set_product_id(::int64_t value);

  public:
  // int64 quantity = 3;
  void clear_quantity() ;
  ::int64_t quantity() const;
  void set_quantity(::int64_t value);

  private:
  ::int64_t _internal_quantity() const;
  void _internal_set_quantity(::int64_t value);

  public:
  // float price = 4;
  void clear_price() ;
  float price() const;
  void set_price(float value);

  private:
  float _internal_price() const;
  void _internal_set_price(float value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.AcceptanceProductModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AcceptanceProductModel& from_msg);
    ::int64_t id_;
    ::int64_t product_id_;
    ::int64_t quantity_;
    float price_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class AcceptanceModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.AcceptanceModel) */ {
 public:
  inline AcceptanceModel() : AcceptanceModel(nullptr) {}
  ~AcceptanceModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AcceptanceModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AcceptanceModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AcceptanceModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline AcceptanceModel(const AcceptanceModel& from) : AcceptanceModel(nullptr, from) {}
  inline AcceptanceModel(AcceptanceModel&& from) noexcept
      : AcceptanceModel(nullptr, std::move(from)) {}
  inline AcceptanceModel& operator=(const AcceptanceModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline AcceptanceModel& operator=(AcceptanceModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AcceptanceModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const AcceptanceModel* internal_default_instance() {
    return reinterpret_cast<const AcceptanceModel*>(
        &_AcceptanceModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(AcceptanceModel& a, AcceptanceModel& b) { a.Swap(&b); }
  inline void Swap(AcceptanceModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AcceptanceModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AcceptanceModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AcceptanceModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AcceptanceModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AcceptanceModel& from) { AcceptanceModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AcceptanceModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.AcceptanceModel"; }

 protected:
  explicit AcceptanceModel(::google::protobuf::Arena* arena);
  AcceptanceModel(::google::protobuf::Arena* arena, const AcceptanceModel& from);
  AcceptanceModel(::google::protobuf::Arena* arena, AcceptanceModel&& from) noexcept
      : AcceptanceModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDocumentUrlFieldNumber = 5,
    kCreatedAtFieldNumber = 7,
    kIdFieldNumber = 1,
    kOrganizationIdFieldNumber = 2,
    kCounterpartyIdFieldNumber = 3,
    kWarehouseIdFieldNumber = 4,
    kUserIdFieldNumber = 6,
  };
  // optional string document_url = 5;
  bool has_document_url() const;
  void clear_document_url() ;
  const std::string& document_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_document_url(Arg_&& arg, Args_... args);
  std::string* mutable_document_url();
  PROTOBUF_NODISCARD std::string* release_document_url();
  void set_allocated_document_url(std::string* value);

  private:
  const std::string& _internal_document_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_document_url(
      const std::string& value);
  std::string* _internal_mutable_document_url();

  public:
  // string created_at = 7;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 organization_id = 2;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // int64 counterparty_id = 3;
  void clear_counterparty_id() ;
  ::int64_t counterparty_id() const;
  void set_counterparty_id(::int64_t value);

  private:
  ::int64_t _internal_counterparty_id() const;
  void _internal_set_counterparty_id(::int64_t value);

  public:
  // int64 warehouse_id = 4;
  void clear_warehouse_id() ;
  ::int64_t warehouse_id() const;
  void set_warehouse_id(::int64_t value);

  private:
  ::int64_t _internal_warehouse_id() const;
  void _internal_set_warehouse_id(::int64_t value);

  public:
  // int64 user_id = 6;
  void clear_user_id() ;
  ::int64_t user_id() const;
  void set_user_id(::int64_t value);

  private:
  ::int64_t _internal_user_id() const;
  void _internal_set_user_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.AcceptanceModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AcceptanceModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr document_url_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::int64_t id_;
    ::int64_t organization_id_;
    ::int64_t counterparty_id_;
    ::int64_t warehouse_id_;
    ::int64_t user_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class WriteOffModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.WriteOffModel) */ {
 public:
  inline WriteOffModel() : WriteOffModel(nullptr) {}
  ~WriteOffModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WriteOffModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WriteOffModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WriteOffModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline WriteOffModel(const WriteOffModel& from) : WriteOffModel(nullptr, from) {}
  inline WriteOffModel(WriteOffModel&& from) noexcept
      : WriteOffModel(nullptr, std::move(from)) {}
  inline WriteOffModel& operator=(const WriteOffModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline WriteOffModel& operator=(WriteOffModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WriteOffModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const WriteOffModel* internal_default_instance() {
    return reinterpret_cast<const WriteOffModel*>(
        &_WriteOffModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(WriteOffModel& a, WriteOffModel& b) { a.Swap(&b); }
  inline void Swap(WriteOffModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WriteOffModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WriteOffModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<WriteOffModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WriteOffModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WriteOffModel& from) { WriteOffModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(WriteOffModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.WriteOffModel"; }

 protected:
  explicit WriteOffModel(::google::protobuf::Arena* arena);
  WriteOffModel(::google::protobuf::Arena* arena, const WriteOffModel& from);
  WriteOffModel(::google::protobuf::Arena* arena, WriteOffModel&& from) noexcept
      : WriteOffModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWriteOffFieldNumber = 8,
    kDocumentUrlFieldNumber = 5,
    kCreatedAtFieldNumber = 7,
    kIdFieldNumber = 1,
    kOrganizationIdFieldNumber = 2,
    kWarehouseIdFieldNumber = 4,
    kUserIdFieldNumber = 6,
  };
  // repeated .warehouse.WriteOffProductModel write_off = 8;
  int write_off_size() const;
  private:
  int _internal_write_off_size() const;

  public:
  void clear_write_off() ;
  ::warehouse::WriteOffProductModel* mutable_write_off(int index);
  ::google::protobuf::RepeatedPtrField<::warehouse::WriteOffProductModel>* mutable_write_off();

  private:
  const ::google::protobuf::RepeatedPtrField<::warehouse::WriteOffProductModel>& _internal_write_off() const;
  ::google::protobuf::RepeatedPtrField<::warehouse::WriteOffProductModel>* _internal_mutable_write_off();
  public:
  const ::warehouse::WriteOffProductModel& write_off(int index) const;
  ::warehouse::WriteOffProductModel* add_write_off();
  const ::google::protobuf::RepeatedPtrField<::warehouse::WriteOffProductModel>& write_off() const;
  // optional string document_url = 5;
  bool has_document_url() const;
  void clear_document_url() ;
  const std::string& document_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_document_url(Arg_&& arg, Args_... args);
  std::string* mutable_document_url();
  PROTOBUF_NODISCARD std::string* release_document_url();
  void set_allocated_document_url(std::string* value);

  private:
  const std::string& _internal_document_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_document_url(
      const std::string& value);
  std::string* _internal_mutable_document_url();

  public:
  // string created_at = 7;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 organization_id = 2;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // int64 warehouse_id = 4;
  void clear_warehouse_id() ;
  ::int64_t warehouse_id() const;
  void set_warehouse_id(::int64_t value);

  private:
  ::int64_t _internal_warehouse_id() const;
  void _internal_set_warehouse_id(::int64_t value);

  public:
  // int64 user_id = 6;
  void clear_user_id() ;
  ::int64_t user_id() const;
  void set_user_id(::int64_t value);

  private:
  ::int64_t _internal_user_id() const;
  void _internal_set_user_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.WriteOffModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      54, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WriteOffModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::warehouse::WriteOffProductModel > write_off_;
    ::google::protobuf::internal::ArenaStringPtr document_url_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::int64_t id_;
    ::int64_t organization_id_;
    ::int64_t warehouse_id_;
    ::int64_t user_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class UpdateWarehouseRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.UpdateWarehouseRequest) */ {
 public:
  inline UpdateWarehouseRequest() : UpdateWarehouseRequest(nullptr) {}
  ~UpdateWarehouseRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateWarehouseRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateWarehouseRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateWarehouseRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateWarehouseRequest(const UpdateWarehouseRequest& from) : UpdateWarehouseRequest(nullptr, from) {}
  inline UpdateWarehouseRequest(UpdateWarehouseRequest&& from) noexcept
      : UpdateWarehouseRequest(nullptr, std::move(from)) {}
  inline UpdateWarehouseRequest& operator=(const UpdateWarehouseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateWarehouseRequest& operator=(UpdateWarehouseRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateWarehouseRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateWarehouseRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateWarehouseRequest*>(
        &_UpdateWarehouseRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(UpdateWarehouseRequest& a, UpdateWarehouseRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateWarehouseRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateWarehouseRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateWarehouseRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateWarehouseRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateWarehouseRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateWarehouseRequest& from) { UpdateWarehouseRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateWarehouseRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.UpdateWarehouseRequest"; }

 protected:
  explicit UpdateWarehouseRequest(::google::protobuf::Arena* arena);
  UpdateWarehouseRequest(::google::protobuf::Arena* arena, const UpdateWarehouseRequest& from);
  UpdateWarehouseRequest(::google::protobuf::Arena* arena, UpdateWarehouseRequest&& from) noexcept
      : UpdateWarehouseRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kAddressFieldNumber = 3,
    kIdFieldNumber = 1,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .organization.AddressModel address = 3;
  bool has_address() const;
  void clear_address() ;
  const ::organization::AddressModel& address() const;
  PROTOBUF_NODISCARD ::organization::AddressModel* release_address();
  ::organization::AddressModel* mutable_address();
  void set_allocated_address(::organization::AddressModel* value);
  void unsafe_arena_set_allocated_address(::organization::AddressModel* value);
  ::organization::AddressModel* unsafe_arena_release_address();

  private:
  const ::organization::AddressModel& _internal_address() const;
  ::organization::AddressModel* _internal_mutable_address();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.UpdateWarehouseRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      45, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateWarehouseRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::organization::AddressModel* address_;
    ::int64_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class UpdateAcceptanceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.UpdateAcceptanceRequest) */ {
 public:
  inline UpdateAcceptanceRequest() : UpdateAcceptanceRequest(nullptr) {}
  ~UpdateAcceptanceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateAcceptanceRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateAcceptanceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateAcceptanceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateAcceptanceRequest(const UpdateAcceptanceRequest& from) : UpdateAcceptanceRequest(nullptr, from) {}
  inline UpdateAcceptanceRequest(UpdateAcceptanceRequest&& from) noexcept
      : UpdateAcceptanceRequest(nullptr, std::move(from)) {}
  inline UpdateAcceptanceRequest& operator=(const UpdateAcceptanceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateAcceptanceRequest& operator=(UpdateAcceptanceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateAcceptanceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateAcceptanceRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateAcceptanceRequest*>(
        &_UpdateAcceptanceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(UpdateAcceptanceRequest& a, UpdateAcceptanceRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateAcceptanceRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateAcceptanceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateAcceptanceRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateAcceptanceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateAcceptanceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateAcceptanceRequest& from) { UpdateAcceptanceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateAcceptanceRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.UpdateAcceptanceRequest"; }

 protected:
  explicit UpdateAcceptanceRequest(::google::protobuf::Arena* arena);
  UpdateAcceptanceRequest(::google::protobuf::Arena* arena, const UpdateAcceptanceRequest& from);
  UpdateAcceptanceRequest(::google::protobuf::Arena* arena, UpdateAcceptanceRequest&& from) noexcept
      : UpdateAcceptanceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductsFieldNumber = 7,
    kDocumentUrlFieldNumber = 5,
    kIdFieldNumber = 1,
    kOrganizationIdFieldNumber = 2,
    kCounterpartyIdFieldNumber = 3,
    kWarehouseIdFieldNumber = 4,
    kUserIdFieldNumber = 6,
  };
  // repeated .warehouse.AcceptanceProductModel products = 7;
  int products_size() const;
  private:
  int _internal_products_size() const;

  public:
  void clear_products() ;
  ::warehouse::AcceptanceProductModel* mutable_products(int index);
  ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProductModel>* mutable_products();

  private:
  const ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProductModel>& _internal_products() const;
  ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProductModel>* _internal_mutable_products();
  public:
  const ::warehouse::AcceptanceProductModel& products(int index) const;
  ::warehouse::AcceptanceProductModel* add_products();
  const ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProductModel>& products() const;
  // optional string document_url = 5;
  bool has_document_url() const;
  void clear_document_url() ;
  const std::string& document_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_document_url(Arg_&& arg, Args_... args);
  std::string* mutable_document_url();
  PROTOBUF_NODISCARD std::string* release_document_url();
  void set_allocated_document_url(std::string* value);

  private:
  const std::string& _internal_document_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_document_url(
      const std::string& value);
  std::string* _internal_mutable_document_url();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // optional int64 organization_id = 2;
  bool has_organization_id() const;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // optional int64 counterparty_id = 3;
  bool has_counterparty_id() const;
  void clear_counterparty_id() ;
  ::int64_t counterparty_id() const;
  void set_counterparty_id(::int64_t value);

  private:
  ::int64_t _internal_counterparty_id() const;
  void _internal_set_counterparty_id(::int64_t value);

  public:
  // optional int64 warehouse_id = 4;
  bool has_warehouse_id() const;
  void clear_warehouse_id() ;
  ::int64_t warehouse_id() const;
  void set_warehouse_id(::int64_t value);

  private:
  ::int64_t _internal_warehouse_id() const;
  void _internal_set_warehouse_id(::int64_t value);

  public:
  // optional int64 user_id = 6;
  bool has_user_id() const;
  void clear_user_id() ;
  ::int64_t user_id() const;
  void set_user_id(::int64_t value);

  private:
  ::int64_t _internal_user_id() const;
  void _internal_set_user_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.UpdateAcceptanceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      54, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateAcceptanceRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::warehouse::AcceptanceProductModel > products_;
    ::google::protobuf::internal::ArenaStringPtr document_url_;
    ::int64_t id_;
    ::int64_t organization_id_;
    ::int64_t counterparty_id_;
    ::int64_t warehouse_id_;
    ::int64_t user_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class MovingModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.MovingModel) */ {
 public:
  inline MovingModel() : MovingModel(nullptr) {}
  ~MovingModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MovingModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MovingModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MovingModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline MovingModel(const MovingModel& from) : MovingModel(nullptr, from) {}
  inline MovingModel(MovingModel&& from) noexcept
      : MovingModel(nullptr, std::move(from)) {}
  inline MovingModel& operator=(const MovingModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline MovingModel& operator=(MovingModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MovingModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const MovingModel* internal_default_instance() {
    return reinterpret_cast<const MovingModel*>(
        &_MovingModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(MovingModel& a, MovingModel& b) { a.Swap(&b); }
  inline void Swap(MovingModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MovingModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MovingModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MovingModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MovingModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MovingModel& from) { MovingModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MovingModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.MovingModel"; }

 protected:
  explicit MovingModel(::google::protobuf::Arena* arena);
  MovingModel(::google::protobuf::Arena* arena, const MovingModel& from);
  MovingModel(::google::protobuf::Arena* arena, MovingModel&& from) noexcept
      : MovingModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMovingProductIdsFieldNumber = 6,
    kDocumentUrlFieldNumber = 5,
    kCreatedAtFieldNumber = 7,
    kIdFieldNumber = 1,
    kOrganizationIdFieldNumber = 2,
    kToWarehouseIdFieldNumber = 3,
    kFromWarehouseIdFieldNumber = 4,
  };
  // repeated .warehouse.MovingProductModel moving_product_ids = 6;
  int moving_product_ids_size() const;
  private:
  int _internal_moving_product_ids_size() const;

  public:
  void clear_moving_product_ids() ;
  ::warehouse::MovingProductModel* mutable_moving_product_ids(int index);
  ::google::protobuf::RepeatedPtrField<::warehouse::MovingProductModel>* mutable_moving_product_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<::warehouse::MovingProductModel>& _internal_moving_product_ids() const;
  ::google::protobuf::RepeatedPtrField<::warehouse::MovingProductModel>* _internal_mutable_moving_product_ids();
  public:
  const ::warehouse::MovingProductModel& moving_product_ids(int index) const;
  ::warehouse::MovingProductModel* add_moving_product_ids();
  const ::google::protobuf::RepeatedPtrField<::warehouse::MovingProductModel>& moving_product_ids() const;
  // optional string document_url = 5;
  bool has_document_url() const;
  void clear_document_url() ;
  const std::string& document_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_document_url(Arg_&& arg, Args_... args);
  std::string* mutable_document_url();
  PROTOBUF_NODISCARD std::string* release_document_url();
  void set_allocated_document_url(std::string* value);

  private:
  const std::string& _internal_document_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_document_url(
      const std::string& value);
  std::string* _internal_mutable_document_url();

  public:
  // string created_at = 7;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 organization_id = 2;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // int64 to_warehouse_id = 3;
  void clear_to_warehouse_id() ;
  ::int64_t to_warehouse_id() const;
  void set_to_warehouse_id(::int64_t value);

  private:
  ::int64_t _internal_to_warehouse_id() const;
  void _internal_set_to_warehouse_id(::int64_t value);

  public:
  // int64 from_warehouse_id = 4;
  void clear_from_warehouse_id() ;
  ::int64_t from_warehouse_id() const;
  void set_from_warehouse_id(::int64_t value);

  private:
  ::int64_t _internal_from_warehouse_id() const;
  void _internal_set_from_warehouse_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.MovingModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      52, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MovingModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::warehouse::MovingProductModel > moving_product_ids_;
    ::google::protobuf::internal::ArenaStringPtr document_url_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::int64_t id_;
    ::int64_t organization_id_;
    ::int64_t to_warehouse_id_;
    ::int64_t from_warehouse_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class InventoryModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.InventoryModel) */ {
 public:
  inline InventoryModel() : InventoryModel(nullptr) {}
  ~InventoryModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InventoryModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InventoryModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InventoryModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline InventoryModel(const InventoryModel& from) : InventoryModel(nullptr, from) {}
  inline InventoryModel(InventoryModel&& from) noexcept
      : InventoryModel(nullptr, std::move(from)) {}
  inline InventoryModel& operator=(const InventoryModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline InventoryModel& operator=(InventoryModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InventoryModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const InventoryModel* internal_default_instance() {
    return reinterpret_cast<const InventoryModel*>(
        &_InventoryModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(InventoryModel& a, InventoryModel& b) { a.Swap(&b); }
  inline void Swap(InventoryModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InventoryModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InventoryModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InventoryModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InventoryModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InventoryModel& from) { InventoryModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InventoryModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.InventoryModel"; }

 protected:
  explicit InventoryModel(::google::protobuf::Arena* arena);
  InventoryModel(::google::protobuf::Arena* arena, const InventoryModel& from);
  InventoryModel(::google::protobuf::Arena* arena, InventoryModel&& from) noexcept
      : InventoryModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductsFieldNumber = 6,
    kDocumentUrlFieldNumber = 4,
    kCreatedAtFieldNumber = 5,
    kIdFieldNumber = 1,
    kOrganizationIdFieldNumber = 2,
    kWarehouseIdFieldNumber = 3,
  };
  // repeated .warehouse.InventoryProductModel products = 6;
  int products_size() const;
  private:
  int _internal_products_size() const;

  public:
  void clear_products() ;
  ::warehouse::InventoryProductModel* mutable_products(int index);
  ::google::protobuf::RepeatedPtrField<::warehouse::InventoryProductModel>* mutable_products();

  private:
  const ::google::protobuf::RepeatedPtrField<::warehouse::InventoryProductModel>& _internal_products() const;
  ::google::protobuf::RepeatedPtrField<::warehouse::InventoryProductModel>* _internal_mutable_products();
  public:
  const ::warehouse::InventoryProductModel& products(int index) const;
  ::warehouse::InventoryProductModel* add_products();
  const ::google::protobuf::RepeatedPtrField<::warehouse::InventoryProductModel>& products() const;
  // optional string document_url = 4;
  bool has_document_url() const;
  void clear_document_url() ;
  const std::string& document_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_document_url(Arg_&& arg, Args_... args);
  std::string* mutable_document_url();
  PROTOBUF_NODISCARD std::string* release_document_url();
  void set_allocated_document_url(std::string* value);

  private:
  const std::string& _internal_document_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_document_url(
      const std::string& value);
  std::string* _internal_mutable_document_url();

  public:
  // string created_at = 5;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 organization_id = 2;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // int64 warehouse_id = 3;
  void clear_warehouse_id() ;
  ::int64_t warehouse_id() const;
  void set_warehouse_id(::int64_t value);

  private:
  ::int64_t _internal_warehouse_id() const;
  void _internal_set_warehouse_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.InventoryModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      55, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InventoryModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::warehouse::InventoryProductModel > products_;
    ::google::protobuf::internal::ArenaStringPtr document_url_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::int64_t id_;
    ::int64_t organization_id_;
    ::int64_t warehouse_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class GetWarehouseAnalyticsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.GetWarehouseAnalyticsResponse) */ {
 public:
  inline GetWarehouseAnalyticsResponse() : GetWarehouseAnalyticsResponse(nullptr) {}
  ~GetWarehouseAnalyticsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetWarehouseAnalyticsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetWarehouseAnalyticsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetWarehouseAnalyticsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetWarehouseAnalyticsResponse(const GetWarehouseAnalyticsResponse& from) : GetWarehouseAnalyticsResponse(nullptr, from) {}
  inline GetWarehouseAnalyticsResponse(GetWarehouseAnalyticsResponse&& from) noexcept
      : GetWarehouseAnalyticsResponse(nullptr, std::move(from)) {}
  inline GetWarehouseAnalyticsResponse& operator=(const GetWarehouseAnalyticsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetWarehouseAnalyticsResponse& operator=(GetWarehouseAnalyticsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetWarehouseAnalyticsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetWarehouseAnalyticsResponse* internal_default_instance() {
    return reinterpret_cast<const GetWarehouseAnalyticsResponse*>(
        &_GetWarehouseAnalyticsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(GetWarehouseAnalyticsResponse& a, GetWarehouseAnalyticsResponse& b) { a.Swap(&b); }
  inline void Swap(GetWarehouseAnalyticsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetWarehouseAnalyticsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetWarehouseAnalyticsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetWarehouseAnalyticsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetWarehouseAnalyticsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetWarehouseAnalyticsResponse& from) { GetWarehouseAnalyticsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetWarehouseAnalyticsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.GetWarehouseAnalyticsResponse"; }

 protected:
  explicit GetWarehouseAnalyticsResponse(::google::protobuf::Arena* arena);
  GetWarehouseAnalyticsResponse(::google::protobuf::Arena* arena, const GetWarehouseAnalyticsResponse& from);
  GetWarehouseAnalyticsResponse(::google::protobuf::Arena* arena, GetWarehouseAnalyticsResponse&& from) noexcept
      : GetWarehouseAnalyticsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAnalyticsFieldNumber = 1,
  };
  // .warehouse.WarehouseAnalytics analytics = 1;
  bool has_analytics() const;
  void clear_analytics() ;
  const ::warehouse::WarehouseAnalytics& analytics() const;
  PROTOBUF_NODISCARD ::warehouse::WarehouseAnalytics* release_analytics();
  ::warehouse::WarehouseAnalytics* mutable_analytics();
  void set_allocated_analytics(::warehouse::WarehouseAnalytics* value);
  void unsafe_arena_set_allocated_analytics(::warehouse::WarehouseAnalytics* value);
  ::warehouse::WarehouseAnalytics* unsafe_arena_release_analytics();

  private:
  const ::warehouse::WarehouseAnalytics& _internal_analytics() const;
  ::warehouse::WarehouseAnalytics* _internal_mutable_analytics();

  public:
  // @@protoc_insertion_point(class_scope:warehouse.GetWarehouseAnalyticsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetWarehouseAnalyticsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::warehouse::WarehouseAnalytics* analytics_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class GetCountProductsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.GetCountProductsResponse) */ {
 public:
  inline GetCountProductsResponse() : GetCountProductsResponse(nullptr) {}
  ~GetCountProductsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetCountProductsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetCountProductsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCountProductsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetCountProductsResponse(const GetCountProductsResponse& from) : GetCountProductsResponse(nullptr, from) {}
  inline GetCountProductsResponse(GetCountProductsResponse&& from) noexcept
      : GetCountProductsResponse(nullptr, std::move(from)) {}
  inline GetCountProductsResponse& operator=(const GetCountProductsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCountProductsResponse& operator=(GetCountProductsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCountProductsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCountProductsResponse* internal_default_instance() {
    return reinterpret_cast<const GetCountProductsResponse*>(
        &_GetCountProductsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 62;
  friend void swap(GetCountProductsResponse& a, GetCountProductsResponse& b) { a.Swap(&b); }
  inline void Swap(GetCountProductsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCountProductsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCountProductsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetCountProductsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCountProductsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCountProductsResponse& from) { GetCountProductsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetCountProductsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.GetCountProductsResponse"; }

 protected:
  explicit GetCountProductsResponse(::google::protobuf::Arena* arena);
  GetCountProductsResponse(::google::protobuf::Arena* arena, const GetCountProductsResponse& from);
  GetCountProductsResponse(::google::protobuf::Arena* arena, GetCountProductsResponse&& from) noexcept
      : GetCountProductsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCountProductsFieldNumber = 1,
  };
  // repeated .warehouse.CountProducts count_products = 1;
  int count_products_size() const;
  private:
  int _internal_count_products_size() const;

  public:
  void clear_count_products() ;
  ::warehouse::CountProducts* mutable_count_products(int index);
  ::google::protobuf::RepeatedPtrField<::warehouse::CountProducts>* mutable_count_products();

  private:
  const ::google::protobuf::RepeatedPtrField<::warehouse::CountProducts>& _internal_count_products() const;
  ::google::protobuf::RepeatedPtrField<::warehouse::CountProducts>* _internal_mutable_count_products();
  public:
  const ::warehouse::CountProducts& count_products(int index) const;
  ::warehouse::CountProducts* add_count_products();
  const ::google::protobuf::RepeatedPtrField<::warehouse::CountProducts>& count_products() const;
  // @@protoc_insertion_point(class_scope:warehouse.GetCountProductsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetCountProductsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::warehouse::CountProducts > count_products_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class CreateWarehouseRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.CreateWarehouseRequest) */ {
 public:
  inline CreateWarehouseRequest() : CreateWarehouseRequest(nullptr) {}
  ~CreateWarehouseRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateWarehouseRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateWarehouseRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateWarehouseRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateWarehouseRequest(const CreateWarehouseRequest& from) : CreateWarehouseRequest(nullptr, from) {}
  inline CreateWarehouseRequest(CreateWarehouseRequest&& from) noexcept
      : CreateWarehouseRequest(nullptr, std::move(from)) {}
  inline CreateWarehouseRequest& operator=(const CreateWarehouseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateWarehouseRequest& operator=(CreateWarehouseRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateWarehouseRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateWarehouseRequest* internal_default_instance() {
    return reinterpret_cast<const CreateWarehouseRequest*>(
        &_CreateWarehouseRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(CreateWarehouseRequest& a, CreateWarehouseRequest& b) { a.Swap(&b); }
  inline void Swap(CreateWarehouseRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateWarehouseRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateWarehouseRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateWarehouseRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateWarehouseRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateWarehouseRequest& from) { CreateWarehouseRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateWarehouseRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.CreateWarehouseRequest"; }

 protected:
  explicit CreateWarehouseRequest(::google::protobuf::Arena* arena);
  CreateWarehouseRequest(::google::protobuf::Arena* arena, const CreateWarehouseRequest& from);
  CreateWarehouseRequest(::google::protobuf::Arena* arena, CreateWarehouseRequest&& from) noexcept
      : CreateWarehouseRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kAddressFieldNumber = 3,
    kOrganizationIdFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .organization.AddressModel address = 3;
  bool has_address() const;
  void clear_address() ;
  const ::organization::AddressModel& address() const;
  PROTOBUF_NODISCARD ::organization::AddressModel* release_address();
  ::organization::AddressModel* mutable_address();
  void set_allocated_address(::organization::AddressModel* value);
  void unsafe_arena_set_allocated_address(::organization::AddressModel* value);
  ::organization::AddressModel* unsafe_arena_release_address();

  private:
  const ::organization::AddressModel& _internal_address() const;
  ::organization::AddressModel* _internal_mutable_address();

  public:
  // int64 organization_id = 2;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.CreateWarehouseRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      45, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateWarehouseRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::organization::AddressModel* address_;
    ::int64_t organization_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class CreateAcceptanceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.CreateAcceptanceRequest) */ {
 public:
  inline CreateAcceptanceRequest() : CreateAcceptanceRequest(nullptr) {}
  ~CreateAcceptanceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateAcceptanceRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateAcceptanceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateAcceptanceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateAcceptanceRequest(const CreateAcceptanceRequest& from) : CreateAcceptanceRequest(nullptr, from) {}
  inline CreateAcceptanceRequest(CreateAcceptanceRequest&& from) noexcept
      : CreateAcceptanceRequest(nullptr, std::move(from)) {}
  inline CreateAcceptanceRequest& operator=(const CreateAcceptanceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateAcceptanceRequest& operator=(CreateAcceptanceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateAcceptanceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateAcceptanceRequest* internal_default_instance() {
    return reinterpret_cast<const CreateAcceptanceRequest*>(
        &_CreateAcceptanceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(CreateAcceptanceRequest& a, CreateAcceptanceRequest& b) { a.Swap(&b); }
  inline void Swap(CreateAcceptanceRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateAcceptanceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateAcceptanceRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateAcceptanceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateAcceptanceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateAcceptanceRequest& from) { CreateAcceptanceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateAcceptanceRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.CreateAcceptanceRequest"; }

 protected:
  explicit CreateAcceptanceRequest(::google::protobuf::Arena* arena);
  CreateAcceptanceRequest(::google::protobuf::Arena* arena, const CreateAcceptanceRequest& from);
  CreateAcceptanceRequest(::google::protobuf::Arena* arena, CreateAcceptanceRequest&& from) noexcept
      : CreateAcceptanceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductsFieldNumber = 6,
    kOrganizationIdFieldNumber = 1,
    kCounterpartyIdFieldNumber = 2,
    kWarehouseIdFieldNumber = 3,
    kUserIdFieldNumber = 5,
  };
  // repeated .warehouse.AcceptanceProductModel products = 6;
  int products_size() const;
  private:
  int _internal_products_size() const;

  public:
  void clear_products() ;
  ::warehouse::AcceptanceProductModel* mutable_products(int index);
  ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProductModel>* mutable_products();

  private:
  const ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProductModel>& _internal_products() const;
  ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProductModel>* _internal_mutable_products();
  public:
  const ::warehouse::AcceptanceProductModel& products(int index) const;
  ::warehouse::AcceptanceProductModel* add_products();
  const ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProductModel>& products() const;
  // int64 organization_id = 1;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // int64 counterparty_id = 2;
  void clear_counterparty_id() ;
  ::int64_t counterparty_id() const;
  void set_counterparty_id(::int64_t value);

  private:
  ::int64_t _internal_counterparty_id() const;
  void _internal_set_counterparty_id(::int64_t value);

  public:
  // int64 warehouse_id = 3;
  void clear_warehouse_id() ;
  ::int64_t warehouse_id() const;
  void set_warehouse_id(::int64_t value);

  private:
  ::int64_t _internal_warehouse_id() const;
  void _internal_set_warehouse_id(::int64_t value);

  public:
  // int64 user_id = 5;
  void clear_user_id() ;
  ::int64_t user_id() const;
  void set_user_id(::int64_t value);

  private:
  ::int64_t _internal_user_id() const;
  void _internal_set_user_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.CreateAcceptanceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateAcceptanceRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::warehouse::AcceptanceProductModel > products_;
    ::int64_t organization_id_;
    ::int64_t counterparty_id_;
    ::int64_t warehouse_id_;
    ::int64_t user_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class CreateWriteOffRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.CreateWriteOffRequest) */ {
 public:
  inline CreateWriteOffRequest() : CreateWriteOffRequest(nullptr) {}
  ~CreateWriteOffRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateWriteOffRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateWriteOffRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateWriteOffRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateWriteOffRequest(const CreateWriteOffRequest& from) : CreateWriteOffRequest(nullptr, from) {}
  inline CreateWriteOffRequest(CreateWriteOffRequest&& from) noexcept
      : CreateWriteOffRequest(nullptr, std::move(from)) {}
  inline CreateWriteOffRequest& operator=(const CreateWriteOffRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateWriteOffRequest& operator=(CreateWriteOffRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateWriteOffRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateWriteOffRequest* internal_default_instance() {
    return reinterpret_cast<const CreateWriteOffRequest*>(
        &_CreateWriteOffRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 43;
  friend void swap(CreateWriteOffRequest& a, CreateWriteOffRequest& b) { a.Swap(&b); }
  inline void Swap(CreateWriteOffRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateWriteOffRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateWriteOffRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateWriteOffRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateWriteOffRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateWriteOffRequest& from) { CreateWriteOffRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateWriteOffRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.CreateWriteOffRequest"; }

 protected:
  explicit CreateWriteOffRequest(::google::protobuf::Arena* arena);
  CreateWriteOffRequest(::google::protobuf::Arena* arena, const CreateWriteOffRequest& from);
  CreateWriteOffRequest(::google::protobuf::Arena* arena, CreateWriteOffRequest&& from) noexcept
      : CreateWriteOffRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWriteOffFieldNumber = 1,
  };
  // .warehouse.WriteOffModel write_off = 1;
  bool has_write_off() const;
  void clear_write_off() ;
  const ::warehouse::WriteOffModel& write_off() const;
  PROTOBUF_NODISCARD ::warehouse::WriteOffModel* release_write_off();
  ::warehouse::WriteOffModel* mutable_write_off();
  void set_allocated_write_off(::warehouse::WriteOffModel* value);
  void unsafe_arena_set_allocated_write_off(::warehouse::WriteOffModel* value);
  ::warehouse::WriteOffModel* unsafe_arena_release_write_off();

  private:
  const ::warehouse::WriteOffModel& _internal_write_off() const;
  ::warehouse::WriteOffModel* _internal_mutable_write_off();

  public:
  // @@protoc_insertion_point(class_scope:warehouse.CreateWriteOffRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateWriteOffRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::warehouse::WriteOffModel* write_off_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class CreateMovingRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.CreateMovingRequest) */ {
 public:
  inline CreateMovingRequest() : CreateMovingRequest(nullptr) {}
  ~CreateMovingRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateMovingRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateMovingRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateMovingRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateMovingRequest(const CreateMovingRequest& from) : CreateMovingRequest(nullptr, from) {}
  inline CreateMovingRequest(CreateMovingRequest&& from) noexcept
      : CreateMovingRequest(nullptr, std::move(from)) {}
  inline CreateMovingRequest& operator=(const CreateMovingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateMovingRequest& operator=(CreateMovingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateMovingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateMovingRequest* internal_default_instance() {
    return reinterpret_cast<const CreateMovingRequest*>(
        &_CreateMovingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 49;
  friend void swap(CreateMovingRequest& a, CreateMovingRequest& b) { a.Swap(&b); }
  inline void Swap(CreateMovingRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateMovingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateMovingRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateMovingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateMovingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateMovingRequest& from) { CreateMovingRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateMovingRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.CreateMovingRequest"; }

 protected:
  explicit CreateMovingRequest(::google::protobuf::Arena* arena);
  CreateMovingRequest(::google::protobuf::Arena* arena, const CreateMovingRequest& from);
  CreateMovingRequest(::google::protobuf::Arena* arena, CreateMovingRequest&& from) noexcept
      : CreateMovingRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMovingFieldNumber = 1,
  };
  // .warehouse.MovingModel moving = 1;
  bool has_moving() const;
  void clear_moving() ;
  const ::warehouse::MovingModel& moving() const;
  PROTOBUF_NODISCARD ::warehouse::MovingModel* release_moving();
  ::warehouse::MovingModel* mutable_moving();
  void set_allocated_moving(::warehouse::MovingModel* value);
  void unsafe_arena_set_allocated_moving(::warehouse::MovingModel* value);
  ::warehouse::MovingModel* unsafe_arena_release_moving();

  private:
  const ::warehouse::MovingModel& _internal_moving() const;
  ::warehouse::MovingModel* _internal_mutable_moving();

  public:
  // @@protoc_insertion_point(class_scope:warehouse.CreateMovingRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateMovingRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::warehouse::MovingModel* moving_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class CreateInventoryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.CreateInventoryRequest) */ {
 public:
  inline CreateInventoryRequest() : CreateInventoryRequest(nullptr) {}
  ~CreateInventoryRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateInventoryRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateInventoryRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateInventoryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateInventoryRequest(const CreateInventoryRequest& from) : CreateInventoryRequest(nullptr, from) {}
  inline CreateInventoryRequest(CreateInventoryRequest&& from) noexcept
      : CreateInventoryRequest(nullptr, std::move(from)) {}
  inline CreateInventoryRequest& operator=(const CreateInventoryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateInventoryRequest& operator=(CreateInventoryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateInventoryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateInventoryRequest* internal_default_instance() {
    return reinterpret_cast<const CreateInventoryRequest*>(
        &_CreateInventoryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 55;
  friend void swap(CreateInventoryRequest& a, CreateInventoryRequest& b) { a.Swap(&b); }
  inline void Swap(CreateInventoryRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateInventoryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateInventoryRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateInventoryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateInventoryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateInventoryRequest& from) { CreateInventoryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateInventoryRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.CreateInventoryRequest"; }

 protected:
  explicit CreateInventoryRequest(::google::protobuf::Arena* arena);
  CreateInventoryRequest(::google::protobuf::Arena* arena, const CreateInventoryRequest& from);
  CreateInventoryRequest(::google::protobuf::Arena* arena, CreateInventoryRequest&& from) noexcept
      : CreateInventoryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInventoryFieldNumber = 1,
  };
  // .warehouse.InventoryModel inventory = 1;
  bool has_inventory() const;
  void clear_inventory() ;
  const ::warehouse::InventoryModel& inventory() const;
  PROTOBUF_NODISCARD ::warehouse::InventoryModel* release_inventory();
  ::warehouse::InventoryModel* mutable_inventory();
  void set_allocated_inventory(::warehouse::InventoryModel* value);
  void unsafe_arena_set_allocated_inventory(::warehouse::InventoryModel* value);
  ::warehouse::InventoryModel* unsafe_arena_release_inventory();

  private:
  const ::warehouse::InventoryModel& _internal_inventory() const;
  ::warehouse::InventoryModel* _internal_mutable_inventory();

  public:
  // @@protoc_insertion_point(class_scope:warehouse.CreateInventoryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateInventoryRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::warehouse::InventoryModel* inventory_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class WriteOffProduct final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.WriteOffProduct) */ {
 public:
  inline WriteOffProduct() : WriteOffProduct(nullptr) {}
  ~WriteOffProduct() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WriteOffProduct* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WriteOffProduct));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WriteOffProduct(
      ::google::protobuf::internal::ConstantInitialized);

  inline WriteOffProduct(const WriteOffProduct& from) : WriteOffProduct(nullptr, from) {}
  inline WriteOffProduct(WriteOffProduct&& from) noexcept
      : WriteOffProduct(nullptr, std::move(from)) {}
  inline WriteOffProduct& operator=(const WriteOffProduct& from) {
    CopyFrom(from);
    return *this;
  }
  inline WriteOffProduct& operator=(WriteOffProduct&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WriteOffProduct& default_instance() {
    return *internal_default_instance();
  }
  static inline const WriteOffProduct* internal_default_instance() {
    return reinterpret_cast<const WriteOffProduct*>(
        &_WriteOffProduct_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(WriteOffProduct& a, WriteOffProduct& b) { a.Swap(&b); }
  inline void Swap(WriteOffProduct* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WriteOffProduct* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WriteOffProduct* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<WriteOffProduct>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WriteOffProduct& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WriteOffProduct& from) { WriteOffProduct::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(WriteOffProduct* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.WriteOffProduct"; }

 protected:
  explicit WriteOffProduct(::google::protobuf::Arena* arena);
  WriteOffProduct(::google::protobuf::Arena* arena, const WriteOffProduct& from);
  WriteOffProduct(::google::protobuf::Arena* arena, WriteOffProduct&& from) noexcept
      : WriteOffProduct(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReasonFieldNumber = 5,
    kProductFieldNumber = 2,
    kIdFieldNumber = 1,
    kQuantityFieldNumber = 3,
    kPriceFieldNumber = 4,
  };
  // string reason = 5;
  void clear_reason() ;
  const std::string& reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* value);

  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(
      const std::string& value);
  std::string* _internal_mutable_reason();

  public:
  // .product.Product product = 2;
  bool has_product() const;
  void clear_product() ;
  const ::product::Product& product() const;
  PROTOBUF_NODISCARD ::product::Product* release_product();
  ::product::Product* mutable_product();
  void set_allocated_product(::product::Product* value);
  void unsafe_arena_set_allocated_product(::product::Product* value);
  ::product::Product* unsafe_arena_release_product();

  private:
  const ::product::Product& _internal_product() const;
  ::product::Product* _internal_mutable_product();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 quantity = 3;
  void clear_quantity() ;
  ::int64_t quantity() const;
  void set_quantity(::int64_t value);

  private:
  ::int64_t _internal_quantity() const;
  void _internal_set_quantity(::int64_t value);

  public:
  // float price = 4;
  void clear_price() ;
  float price() const;
  void set_price(float value);

  private:
  float _internal_price() const;
  void _internal_set_price(float value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.WriteOffProduct)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      40, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WriteOffProduct& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::product::Product* product_;
    ::int64_t id_;
    ::int64_t quantity_;
    float price_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class WarehouseProducts final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.WarehouseProducts) */ {
 public:
  inline WarehouseProducts() : WarehouseProducts(nullptr) {}
  ~WarehouseProducts() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WarehouseProducts* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WarehouseProducts));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WarehouseProducts(
      ::google::protobuf::internal::ConstantInitialized);

  inline WarehouseProducts(const WarehouseProducts& from) : WarehouseProducts(nullptr, from) {}
  inline WarehouseProducts(WarehouseProducts&& from) noexcept
      : WarehouseProducts(nullptr, std::move(from)) {}
  inline WarehouseProducts& operator=(const WarehouseProducts& from) {
    CopyFrom(from);
    return *this;
  }
  inline WarehouseProducts& operator=(WarehouseProducts&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WarehouseProducts& default_instance() {
    return *internal_default_instance();
  }
  static inline const WarehouseProducts* internal_default_instance() {
    return reinterpret_cast<const WarehouseProducts*>(
        &_WarehouseProducts_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(WarehouseProducts& a, WarehouseProducts& b) { a.Swap(&b); }
  inline void Swap(WarehouseProducts* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WarehouseProducts* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WarehouseProducts* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<WarehouseProducts>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WarehouseProducts& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WarehouseProducts& from) { WarehouseProducts::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(WarehouseProducts* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.WarehouseProducts"; }

 protected:
  explicit WarehouseProducts(::google::protobuf::Arena* arena);
  WarehouseProducts(::google::protobuf::Arena* arena, const WarehouseProducts& from);
  WarehouseProducts(::google::protobuf::Arena* arena, WarehouseProducts&& from) noexcept
      : WarehouseProducts(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductFieldNumber = 4,
    kIdFieldNumber = 1,
    kProductIdFieldNumber = 2,
    kQuantityFieldNumber = 3,
  };
  // .product.Product product = 4;
  bool has_product() const;
  void clear_product() ;
  const ::product::Product& product() const;
  PROTOBUF_NODISCARD ::product::Product* release_product();
  ::product::Product* mutable_product();
  void set_allocated_product(::product::Product* value);
  void unsafe_arena_set_allocated_product(::product::Product* value);
  ::product::Product* unsafe_arena_release_product();

  private:
  const ::product::Product& _internal_product() const;
  ::product::Product* _internal_mutable_product();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 product_id = 2;
  void clear_product_id() ;
  ::int64_t product_id() const;
  void set_product_id(::int64_t value);

  private:
  ::int64_t _internal_product_id() const;
  void _internal_set_product_id(::int64_t value);

  public:
  // int64 quantity = 3;
  void clear_quantity() ;
  ::int64_t quantity() const;
  void set_quantity(::int64_t value);

  private:
  ::int64_t _internal_quantity() const;
  void _internal_set_quantity(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.WarehouseProducts)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WarehouseProducts& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::product::Product* product_;
    ::int64_t id_;
    ::int64_t product_id_;
    ::int64_t quantity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class MovingProduct final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.MovingProduct) */ {
 public:
  inline MovingProduct() : MovingProduct(nullptr) {}
  ~MovingProduct() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MovingProduct* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MovingProduct));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MovingProduct(
      ::google::protobuf::internal::ConstantInitialized);

  inline MovingProduct(const MovingProduct& from) : MovingProduct(nullptr, from) {}
  inline MovingProduct(MovingProduct&& from) noexcept
      : MovingProduct(nullptr, std::move(from)) {}
  inline MovingProduct& operator=(const MovingProduct& from) {
    CopyFrom(from);
    return *this;
  }
  inline MovingProduct& operator=(MovingProduct&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MovingProduct& default_instance() {
    return *internal_default_instance();
  }
  static inline const MovingProduct* internal_default_instance() {
    return reinterpret_cast<const MovingProduct*>(
        &_MovingProduct_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(MovingProduct& a, MovingProduct& b) { a.Swap(&b); }
  inline void Swap(MovingProduct* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MovingProduct* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MovingProduct* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MovingProduct>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MovingProduct& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MovingProduct& from) { MovingProduct::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MovingProduct* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.MovingProduct"; }

 protected:
  explicit MovingProduct(::google::protobuf::Arena* arena);
  MovingProduct(::google::protobuf::Arena* arena, const MovingProduct& from);
  MovingProduct(::google::protobuf::Arena* arena, MovingProduct&& from) noexcept
      : MovingProduct(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductFieldNumber = 2,
    kIdFieldNumber = 1,
    kQuantityFieldNumber = 3,
    kPriceFieldNumber = 4,
  };
  // .product.Product product = 2;
  bool has_product() const;
  void clear_product() ;
  const ::product::Product& product() const;
  PROTOBUF_NODISCARD ::product::Product* release_product();
  ::product::Product* mutable_product();
  void set_allocated_product(::product::Product* value);
  void unsafe_arena_set_allocated_product(::product::Product* value);
  ::product::Product* unsafe_arena_release_product();

  private:
  const ::product::Product& _internal_product() const;
  ::product::Product* _internal_mutable_product();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 quantity = 3;
  void clear_quantity() ;
  ::int64_t quantity() const;
  void set_quantity(::int64_t value);

  private:
  ::int64_t _internal_quantity() const;
  void _internal_set_quantity(::int64_t value);

  public:
  // float price = 4;
  void clear_price() ;
  float price() const;
  void set_price(float value);

  private:
  float _internal_price() const;
  void _internal_set_price(float value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.MovingProduct)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MovingProduct& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::product::Product* product_;
    ::int64_t id_;
    ::int64_t quantity_;
    float price_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class InventoryProduct final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.InventoryProduct) */ {
 public:
  inline InventoryProduct() : InventoryProduct(nullptr) {}
  ~InventoryProduct() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InventoryProduct* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InventoryProduct));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InventoryProduct(
      ::google::protobuf::internal::ConstantInitialized);

  inline InventoryProduct(const InventoryProduct& from) : InventoryProduct(nullptr, from) {}
  inline InventoryProduct(InventoryProduct&& from) noexcept
      : InventoryProduct(nullptr, std::move(from)) {}
  inline InventoryProduct& operator=(const InventoryProduct& from) {
    CopyFrom(from);
    return *this;
  }
  inline InventoryProduct& operator=(InventoryProduct&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InventoryProduct& default_instance() {
    return *internal_default_instance();
  }
  static inline const InventoryProduct* internal_default_instance() {
    return reinterpret_cast<const InventoryProduct*>(
        &_InventoryProduct_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(InventoryProduct& a, InventoryProduct& b) { a.Swap(&b); }
  inline void Swap(InventoryProduct* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InventoryProduct* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InventoryProduct* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InventoryProduct>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InventoryProduct& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InventoryProduct& from) { InventoryProduct::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InventoryProduct* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.InventoryProduct"; }

 protected:
  explicit InventoryProduct(::google::protobuf::Arena* arena);
  InventoryProduct(::google::protobuf::Arena* arena, const InventoryProduct& from);
  InventoryProduct(::google::protobuf::Arena* arena, InventoryProduct&& from) noexcept
      : InventoryProduct(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductFieldNumber = 2,
    kIdFieldNumber = 1,
    kExceptedQuantityFieldNumber = 3,
    kFactualQuantityFieldNumber = 4,
    kDifferenceQuantityFieldNumber = 5,
    kPriceFieldNumber = 6,
  };
  // .product.Product product = 2;
  bool has_product() const;
  void clear_product() ;
  const ::product::Product& product() const;
  PROTOBUF_NODISCARD ::product::Product* release_product();
  ::product::Product* mutable_product();
  void set_allocated_product(::product::Product* value);
  void unsafe_arena_set_allocated_product(::product::Product* value);
  ::product::Product* unsafe_arena_release_product();

  private:
  const ::product::Product& _internal_product() const;
  ::product::Product* _internal_mutable_product();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 excepted_quantity = 3;
  void clear_excepted_quantity() ;
  ::int64_t excepted_quantity() const;
  void set_excepted_quantity(::int64_t value);

  private:
  ::int64_t _internal_excepted_quantity() const;
  void _internal_set_excepted_quantity(::int64_t value);

  public:
  // int64 factual_quantity = 4;
  void clear_factual_quantity() ;
  ::int64_t factual_quantity() const;
  void set_factual_quantity(::int64_t value);

  private:
  ::int64_t _internal_factual_quantity() const;
  void _internal_set_factual_quantity(::int64_t value);

  public:
  // int64 difference_quantity = 5;
  void clear_difference_quantity() ;
  ::int64_t difference_quantity() const;
  void set_difference_quantity(::int64_t value);

  private:
  ::int64_t _internal_difference_quantity() const;
  void _internal_set_difference_quantity(::int64_t value);

  public:
  // float price = 6;
  void clear_price() ;
  float price() const;
  void set_price(float value);

  private:
  float _internal_price() const;
  void _internal_set_price(float value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.InventoryProduct)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InventoryProduct& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::product::Product* product_;
    ::int64_t id_;
    ::int64_t excepted_quantity_;
    ::int64_t factual_quantity_;
    ::int64_t difference_quantity_;
    float price_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class AcceptanceProduct final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.AcceptanceProduct) */ {
 public:
  inline AcceptanceProduct() : AcceptanceProduct(nullptr) {}
  ~AcceptanceProduct() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AcceptanceProduct* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AcceptanceProduct));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AcceptanceProduct(
      ::google::protobuf::internal::ConstantInitialized);

  inline AcceptanceProduct(const AcceptanceProduct& from) : AcceptanceProduct(nullptr, from) {}
  inline AcceptanceProduct(AcceptanceProduct&& from) noexcept
      : AcceptanceProduct(nullptr, std::move(from)) {}
  inline AcceptanceProduct& operator=(const AcceptanceProduct& from) {
    CopyFrom(from);
    return *this;
  }
  inline AcceptanceProduct& operator=(AcceptanceProduct&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AcceptanceProduct& default_instance() {
    return *internal_default_instance();
  }
  static inline const AcceptanceProduct* internal_default_instance() {
    return reinterpret_cast<const AcceptanceProduct*>(
        &_AcceptanceProduct_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(AcceptanceProduct& a, AcceptanceProduct& b) { a.Swap(&b); }
  inline void Swap(AcceptanceProduct* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AcceptanceProduct* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AcceptanceProduct* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AcceptanceProduct>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AcceptanceProduct& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AcceptanceProduct& from) { AcceptanceProduct::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AcceptanceProduct* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.AcceptanceProduct"; }

 protected:
  explicit AcceptanceProduct(::google::protobuf::Arena* arena);
  AcceptanceProduct(::google::protobuf::Arena* arena, const AcceptanceProduct& from);
  AcceptanceProduct(::google::protobuf::Arena* arena, AcceptanceProduct&& from) noexcept
      : AcceptanceProduct(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductFieldNumber = 2,
    kIdFieldNumber = 1,
    kQuantityFieldNumber = 3,
    kPriceFieldNumber = 4,
  };
  // .product.Product product = 2;
  bool has_product() const;
  void clear_product() ;
  const ::product::Product& product() const;
  PROTOBUF_NODISCARD ::product::Product* release_product();
  ::product::Product* mutable_product();
  void set_allocated_product(::product::Product* value);
  void unsafe_arena_set_allocated_product(::product::Product* value);
  ::product::Product* unsafe_arena_release_product();

  private:
  const ::product::Product& _internal_product() const;
  ::product::Product* _internal_mutable_product();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 quantity = 3;
  void clear_quantity() ;
  ::int64_t quantity() const;
  void set_quantity(::int64_t value);

  private:
  ::int64_t _internal_quantity() const;
  void _internal_set_quantity(::int64_t value);

  public:
  // float price = 4;
  void clear_price() ;
  float price() const;
  void set_price(float value);

  private:
  float _internal_price() const;
  void _internal_set_price(float value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.AcceptanceProduct)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AcceptanceProduct& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::product::Product* product_;
    ::int64_t id_;
    ::int64_t quantity_;
    float price_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class WarehouseModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.WarehouseModel) */ {
 public:
  inline WarehouseModel() : WarehouseModel(nullptr) {}
  ~WarehouseModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WarehouseModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WarehouseModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WarehouseModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline WarehouseModel(const WarehouseModel& from) : WarehouseModel(nullptr, from) {}
  inline WarehouseModel(WarehouseModel&& from) noexcept
      : WarehouseModel(nullptr, std::move(from)) {}
  inline WarehouseModel& operator=(const WarehouseModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline WarehouseModel& operator=(WarehouseModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WarehouseModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const WarehouseModel* internal_default_instance() {
    return reinterpret_cast<const WarehouseModel*>(
        &_WarehouseModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(WarehouseModel& a, WarehouseModel& b) { a.Swap(&b); }
  inline void Swap(WarehouseModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WarehouseModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WarehouseModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<WarehouseModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WarehouseModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WarehouseModel& from) { WarehouseModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(WarehouseModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.WarehouseModel"; }

 protected:
  explicit WarehouseModel(::google::protobuf::Arena* arena);
  WarehouseModel(::google::protobuf::Arena* arena, const WarehouseModel& from);
  WarehouseModel(::google::protobuf::Arena* arena, WarehouseModel&& from) noexcept
      : WarehouseModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductsFieldNumber = 6,
    kNameFieldNumber = 3,
    kAddressFieldNumber = 4,
    kIdFieldNumber = 1,
    kOrganizationIdFieldNumber = 2,
    kCountFieldNumber = 5,
  };
  // repeated .warehouse.WarehouseProducts products = 6;
  int products_size() const;
  private:
  int _internal_products_size() const;

  public:
  void clear_products() ;
  ::warehouse::WarehouseProducts* mutable_products(int index);
  ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>* mutable_products();

  private:
  const ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>& _internal_products() const;
  ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>* _internal_mutable_products();
  public:
  const ::warehouse::WarehouseProducts& products(int index) const;
  ::warehouse::WarehouseProducts* add_products();
  const ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>& products() const;
  // string name = 3;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .organization.AddressModel address = 4;
  bool has_address() const;
  void clear_address() ;
  const ::organization::AddressModel& address() const;
  PROTOBUF_NODISCARD ::organization::AddressModel* release_address();
  ::organization::AddressModel* mutable_address();
  void set_allocated_address(::organization::AddressModel* value);
  void unsafe_arena_set_allocated_address(::organization::AddressModel* value);
  ::organization::AddressModel* unsafe_arena_release_address();

  private:
  const ::organization::AddressModel& _internal_address() const;
  ::organization::AddressModel* _internal_mutable_address();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 organization_id = 2;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // int64 count = 5;
  void clear_count() ;
  ::int64_t count() const;
  void set_count(::int64_t value);

  private:
  ::int64_t _internal_count() const;
  void _internal_set_count(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.WarehouseModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      37, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WarehouseModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::warehouse::WarehouseProducts > products_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::organization::AddressModel* address_;
    ::int64_t id_;
    ::int64_t organization_id_;
    ::int64_t count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class Warehouse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.Warehouse) */ {
 public:
  inline Warehouse() : Warehouse(nullptr) {}
  ~Warehouse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Warehouse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Warehouse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Warehouse(
      ::google::protobuf::internal::ConstantInitialized);

  inline Warehouse(const Warehouse& from) : Warehouse(nullptr, from) {}
  inline Warehouse(Warehouse&& from) noexcept
      : Warehouse(nullptr, std::move(from)) {}
  inline Warehouse& operator=(const Warehouse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Warehouse& operator=(Warehouse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Warehouse& default_instance() {
    return *internal_default_instance();
  }
  static inline const Warehouse* internal_default_instance() {
    return reinterpret_cast<const Warehouse*>(
        &_Warehouse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Warehouse& a, Warehouse& b) { a.Swap(&b); }
  inline void Swap(Warehouse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Warehouse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Warehouse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Warehouse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Warehouse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Warehouse& from) { Warehouse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Warehouse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.Warehouse"; }

 protected:
  explicit Warehouse(::google::protobuf::Arena* arena);
  Warehouse(::google::protobuf::Arena* arena, const Warehouse& from);
  Warehouse(::google::protobuf::Arena* arena, Warehouse&& from) noexcept
      : Warehouse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductsFieldNumber = 6,
    kNameFieldNumber = 3,
    kAddressFieldNumber = 4,
    kIdFieldNumber = 1,
    kOrganizationIdFieldNumber = 2,
    kCountFieldNumber = 5,
  };
  // repeated .warehouse.WarehouseProducts products = 6;
  int products_size() const;
  private:
  int _internal_products_size() const;

  public:
  void clear_products() ;
  ::warehouse::WarehouseProducts* mutable_products(int index);
  ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>* mutable_products();

  private:
  const ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>& _internal_products() const;
  ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>* _internal_mutable_products();
  public:
  const ::warehouse::WarehouseProducts& products(int index) const;
  ::warehouse::WarehouseProducts* add_products();
  const ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>& products() const;
  // string name = 3;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .organization.AddressModel address = 4;
  bool has_address() const;
  void clear_address() ;
  const ::organization::AddressModel& address() const;
  PROTOBUF_NODISCARD ::organization::AddressModel* release_address();
  ::organization::AddressModel* mutable_address();
  void set_allocated_address(::organization::AddressModel* value);
  void unsafe_arena_set_allocated_address(::organization::AddressModel* value);
  ::organization::AddressModel* unsafe_arena_release_address();

  private:
  const ::organization::AddressModel& _internal_address() const;
  ::organization::AddressModel* _internal_mutable_address();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 organization_id = 2;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // int64 count = 5;
  void clear_count() ;
  ::int64_t count() const;
  void set_count(::int64_t value);

  private:
  ::int64_t _internal_count() const;
  void _internal_set_count(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.Warehouse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      32, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Warehouse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::warehouse::WarehouseProducts > products_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::organization::AddressModel* address_;
    ::int64_t id_;
    ::int64_t organization_id_;
    ::int64_t count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class GetProductsInWarehouseResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.GetProductsInWarehouseResponse) */ {
 public:
  inline GetProductsInWarehouseResponse() : GetProductsInWarehouseResponse(nullptr) {}
  ~GetProductsInWarehouseResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetProductsInWarehouseResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetProductsInWarehouseResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetProductsInWarehouseResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetProductsInWarehouseResponse(const GetProductsInWarehouseResponse& from) : GetProductsInWarehouseResponse(nullptr, from) {}
  inline GetProductsInWarehouseResponse(GetProductsInWarehouseResponse&& from) noexcept
      : GetProductsInWarehouseResponse(nullptr, std::move(from)) {}
  inline GetProductsInWarehouseResponse& operator=(const GetProductsInWarehouseResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetProductsInWarehouseResponse& operator=(GetProductsInWarehouseResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetProductsInWarehouseResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetProductsInWarehouseResponse* internal_default_instance() {
    return reinterpret_cast<const GetProductsInWarehouseResponse*>(
        &_GetProductsInWarehouseResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(GetProductsInWarehouseResponse& a, GetProductsInWarehouseResponse& b) { a.Swap(&b); }
  inline void Swap(GetProductsInWarehouseResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetProductsInWarehouseResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetProductsInWarehouseResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetProductsInWarehouseResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetProductsInWarehouseResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetProductsInWarehouseResponse& from) { GetProductsInWarehouseResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetProductsInWarehouseResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.GetProductsInWarehouseResponse"; }

 protected:
  explicit GetProductsInWarehouseResponse(::google::protobuf::Arena* arena);
  GetProductsInWarehouseResponse(::google::protobuf::Arena* arena, const GetProductsInWarehouseResponse& from);
  GetProductsInWarehouseResponse(::google::protobuf::Arena* arena, GetProductsInWarehouseResponse&& from) noexcept
      : GetProductsInWarehouseResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductsFieldNumber = 1,
    kTotalCountFieldNumber = 2,
  };
  // repeated .warehouse.WarehouseProducts products = 1;
  int products_size() const;
  private:
  int _internal_products_size() const;

  public:
  void clear_products() ;
  ::warehouse::WarehouseProducts* mutable_products(int index);
  ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>* mutable_products();

  private:
  const ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>& _internal_products() const;
  ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>* _internal_mutable_products();
  public:
  const ::warehouse::WarehouseProducts& products(int index) const;
  ::warehouse::WarehouseProducts* add_products();
  const ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>& products() const;
  // int64 total_count = 2;
  void clear_total_count() ;
  ::int64_t total_count() const;
  void set_total_count(::int64_t value);

  private:
  ::int64_t _internal_total_count() const;
  void _internal_set_total_count(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.GetProductsInWarehouseResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetProductsInWarehouseResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::warehouse::WarehouseProducts > products_;
    ::int64_t total_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class AddProductToWarehouseResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.AddProductToWarehouseResponse) */ {
 public:
  inline AddProductToWarehouseResponse() : AddProductToWarehouseResponse(nullptr) {}
  ~AddProductToWarehouseResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddProductToWarehouseResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddProductToWarehouseResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddProductToWarehouseResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddProductToWarehouseResponse(const AddProductToWarehouseResponse& from) : AddProductToWarehouseResponse(nullptr, from) {}
  inline AddProductToWarehouseResponse(AddProductToWarehouseResponse&& from) noexcept
      : AddProductToWarehouseResponse(nullptr, std::move(from)) {}
  inline AddProductToWarehouseResponse& operator=(const AddProductToWarehouseResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddProductToWarehouseResponse& operator=(AddProductToWarehouseResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddProductToWarehouseResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddProductToWarehouseResponse* internal_default_instance() {
    return reinterpret_cast<const AddProductToWarehouseResponse*>(
        &_AddProductToWarehouseResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(AddProductToWarehouseResponse& a, AddProductToWarehouseResponse& b) { a.Swap(&b); }
  inline void Swap(AddProductToWarehouseResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddProductToWarehouseResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddProductToWarehouseResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddProductToWarehouseResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddProductToWarehouseResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddProductToWarehouseResponse& from) { AddProductToWarehouseResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddProductToWarehouseResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.AddProductToWarehouseResponse"; }

 protected:
  explicit AddProductToWarehouseResponse(::google::protobuf::Arena* arena);
  AddProductToWarehouseResponse(::google::protobuf::Arena* arena, const AddProductToWarehouseResponse& from);
  AddProductToWarehouseResponse(::google::protobuf::Arena* arena, AddProductToWarehouseResponse&& from) noexcept
      : AddProductToWarehouseResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductFieldNumber = 1,
  };
  // .warehouse.WarehouseProducts product = 1;
  bool has_product() const;
  void clear_product() ;
  const ::warehouse::WarehouseProducts& product() const;
  PROTOBUF_NODISCARD ::warehouse::WarehouseProducts* release_product();
  ::warehouse::WarehouseProducts* mutable_product();
  void set_allocated_product(::warehouse::WarehouseProducts* value);
  void unsafe_arena_set_allocated_product(::warehouse::WarehouseProducts* value);
  ::warehouse::WarehouseProducts* unsafe_arena_release_product();

  private:
  const ::warehouse::WarehouseProducts& _internal_product() const;
  ::warehouse::WarehouseProducts* _internal_mutable_product();

  public:
  // @@protoc_insertion_point(class_scope:warehouse.AddProductToWarehouseResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddProductToWarehouseResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::warehouse::WarehouseProducts* product_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class WriteOff final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.WriteOff) */ {
 public:
  inline WriteOff() : WriteOff(nullptr) {}
  ~WriteOff() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WriteOff* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WriteOff));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WriteOff(
      ::google::protobuf::internal::ConstantInitialized);

  inline WriteOff(const WriteOff& from) : WriteOff(nullptr, from) {}
  inline WriteOff(WriteOff&& from) noexcept
      : WriteOff(nullptr, std::move(from)) {}
  inline WriteOff& operator=(const WriteOff& from) {
    CopyFrom(from);
    return *this;
  }
  inline WriteOff& operator=(WriteOff&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WriteOff& default_instance() {
    return *internal_default_instance();
  }
  static inline const WriteOff* internal_default_instance() {
    return reinterpret_cast<const WriteOff*>(
        &_WriteOff_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(WriteOff& a, WriteOff& b) { a.Swap(&b); }
  inline void Swap(WriteOff* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WriteOff* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WriteOff* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<WriteOff>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WriteOff& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WriteOff& from) { WriteOff::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(WriteOff* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.WriteOff"; }

 protected:
  explicit WriteOff(::google::protobuf::Arena* arena);
  WriteOff(::google::protobuf::Arena* arena, const WriteOff& from);
  WriteOff(::google::protobuf::Arena* arena, WriteOff&& from) noexcept
      : WriteOff(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductsFieldNumber = 6,
    kDocumentUrlFieldNumber = 4,
    kCreatedAtFieldNumber = 7,
    kOrganizationFieldNumber = 2,
    kWarehouseFieldNumber = 3,
    kUserFieldNumber = 5,
    kIdFieldNumber = 1,
    kAmountFieldNumber = 8,
  };
  // repeated .warehouse.WriteOffProduct products = 6;
  int products_size() const;
  private:
  int _internal_products_size() const;

  public:
  void clear_products() ;
  ::warehouse::WriteOffProduct* mutable_products(int index);
  ::google::protobuf::RepeatedPtrField<::warehouse::WriteOffProduct>* mutable_products();

  private:
  const ::google::protobuf::RepeatedPtrField<::warehouse::WriteOffProduct>& _internal_products() const;
  ::google::protobuf::RepeatedPtrField<::warehouse::WriteOffProduct>* _internal_mutable_products();
  public:
  const ::warehouse::WriteOffProduct& products(int index) const;
  ::warehouse::WriteOffProduct* add_products();
  const ::google::protobuf::RepeatedPtrField<::warehouse::WriteOffProduct>& products() const;
  // optional string document_url = 4;
  bool has_document_url() const;
  void clear_document_url() ;
  const std::string& document_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_document_url(Arg_&& arg, Args_... args);
  std::string* mutable_document_url();
  PROTOBUF_NODISCARD std::string* release_document_url();
  void set_allocated_document_url(std::string* value);

  private:
  const std::string& _internal_document_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_document_url(
      const std::string& value);
  std::string* _internal_mutable_document_url();

  public:
  // string created_at = 7;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // .organization.Organization organization = 2;
  bool has_organization() const;
  void clear_organization() ;
  const ::organization::Organization& organization() const;
  PROTOBUF_NODISCARD ::organization::Organization* release_organization();
  ::organization::Organization* mutable_organization();
  void set_allocated_organization(::organization::Organization* value);
  void unsafe_arena_set_allocated_organization(::organization::Organization* value);
  ::organization::Organization* unsafe_arena_release_organization();

  private:
  const ::organization::Organization& _internal_organization() const;
  ::organization::Organization* _internal_mutable_organization();

  public:
  // .warehouse.Warehouse warehouse = 3;
  bool has_warehouse() const;
  void clear_warehouse() ;
  const ::warehouse::Warehouse& warehouse() const;
  PROTOBUF_NODISCARD ::warehouse::Warehouse* release_warehouse();
  ::warehouse::Warehouse* mutable_warehouse();
  void set_allocated_warehouse(::warehouse::Warehouse* value);
  void unsafe_arena_set_allocated_warehouse(::warehouse::Warehouse* value);
  ::warehouse::Warehouse* unsafe_arena_release_warehouse();

  private:
  const ::warehouse::Warehouse& _internal_warehouse() const;
  ::warehouse::Warehouse* _internal_mutable_warehouse();

  public:
  // .user.User user = 5;
  bool has_user() const;
  void clear_user() ;
  const ::user::User& user() const;
  PROTOBUF_NODISCARD ::user::User* release_user();
  ::user::User* mutable_user();
  void set_allocated_user(::user::User* value);
  void unsafe_arena_set_allocated_user(::user::User* value);
  ::user::User* unsafe_arena_release_user();

  private:
  const ::user::User& _internal_user() const;
  ::user::User* _internal_mutable_user();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 amount = 8;
  void clear_amount() ;
  ::int64_t amount() const;
  void set_amount(::int64_t value);

  private:
  ::int64_t _internal_amount() const;
  void _internal_set_amount(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.WriteOff)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 4,
      57, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WriteOff& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::warehouse::WriteOffProduct > products_;
    ::google::protobuf::internal::ArenaStringPtr document_url_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::organization::Organization* organization_;
    ::warehouse::Warehouse* warehouse_;
    ::user::User* user_;
    ::int64_t id_;
    ::int64_t amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class UpdateWarehouseResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.UpdateWarehouseResponse) */ {
 public:
  inline UpdateWarehouseResponse() : UpdateWarehouseResponse(nullptr) {}
  ~UpdateWarehouseResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateWarehouseResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateWarehouseResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateWarehouseResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateWarehouseResponse(const UpdateWarehouseResponse& from) : UpdateWarehouseResponse(nullptr, from) {}
  inline UpdateWarehouseResponse(UpdateWarehouseResponse&& from) noexcept
      : UpdateWarehouseResponse(nullptr, std::move(from)) {}
  inline UpdateWarehouseResponse& operator=(const UpdateWarehouseResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateWarehouseResponse& operator=(UpdateWarehouseResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateWarehouseResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateWarehouseResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateWarehouseResponse*>(
        &_UpdateWarehouseResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(UpdateWarehouseResponse& a, UpdateWarehouseResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateWarehouseResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateWarehouseResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateWarehouseResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateWarehouseResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateWarehouseResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateWarehouseResponse& from) { UpdateWarehouseResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateWarehouseResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.UpdateWarehouseResponse"; }

 protected:
  explicit UpdateWarehouseResponse(::google::protobuf::Arena* arena);
  UpdateWarehouseResponse(::google::protobuf::Arena* arena, const UpdateWarehouseResponse& from);
  UpdateWarehouseResponse(::google::protobuf::Arena* arena, UpdateWarehouseResponse&& from) noexcept
      : UpdateWarehouseResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWarehouseFieldNumber = 1,
  };
  // .warehouse.WarehouseModel warehouse = 1;
  bool has_warehouse() const;
  void clear_warehouse() ;
  const ::warehouse::WarehouseModel& warehouse() const;
  PROTOBUF_NODISCARD ::warehouse::WarehouseModel* release_warehouse();
  ::warehouse::WarehouseModel* mutable_warehouse();
  void set_allocated_warehouse(::warehouse::WarehouseModel* value);
  void unsafe_arena_set_allocated_warehouse(::warehouse::WarehouseModel* value);
  ::warehouse::WarehouseModel* unsafe_arena_release_warehouse();

  private:
  const ::warehouse::WarehouseModel& _internal_warehouse() const;
  ::warehouse::WarehouseModel* _internal_mutable_warehouse();

  public:
  // @@protoc_insertion_point(class_scope:warehouse.UpdateWarehouseResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateWarehouseResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::warehouse::WarehouseModel* warehouse_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class Moving final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.Moving) */ {
 public:
  inline Moving() : Moving(nullptr) {}
  ~Moving() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Moving* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Moving));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Moving(
      ::google::protobuf::internal::ConstantInitialized);

  inline Moving(const Moving& from) : Moving(nullptr, from) {}
  inline Moving(Moving&& from) noexcept
      : Moving(nullptr, std::move(from)) {}
  inline Moving& operator=(const Moving& from) {
    CopyFrom(from);
    return *this;
  }
  inline Moving& operator=(Moving&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Moving& default_instance() {
    return *internal_default_instance();
  }
  static inline const Moving* internal_default_instance() {
    return reinterpret_cast<const Moving*>(
        &_Moving_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(Moving& a, Moving& b) { a.Swap(&b); }
  inline void Swap(Moving* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Moving* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Moving* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Moving>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Moving& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Moving& from) { Moving::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Moving* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.Moving"; }

 protected:
  explicit Moving(::google::protobuf::Arena* arena);
  Moving(::google::protobuf::Arena* arena, const Moving& from);
  Moving(::google::protobuf::Arena* arena, Moving&& from) noexcept
      : Moving(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMovingProductsFieldNumber = 6,
    kDocumentUrlFieldNumber = 5,
    kCreatedAtFieldNumber = 7,
    kOrganizationFieldNumber = 2,
    kToWarehouseFieldNumber = 3,
    kFromWarehouseFieldNumber = 4,
    kIdFieldNumber = 1,
    kAmountFieldNumber = 8,
  };
  // repeated .warehouse.MovingProduct moving_products = 6;
  int moving_products_size() const;
  private:
  int _internal_moving_products_size() const;

  public:
  void clear_moving_products() ;
  ::warehouse::MovingProduct* mutable_moving_products(int index);
  ::google::protobuf::RepeatedPtrField<::warehouse::MovingProduct>* mutable_moving_products();

  private:
  const ::google::protobuf::RepeatedPtrField<::warehouse::MovingProduct>& _internal_moving_products() const;
  ::google::protobuf::RepeatedPtrField<::warehouse::MovingProduct>* _internal_mutable_moving_products();
  public:
  const ::warehouse::MovingProduct& moving_products(int index) const;
  ::warehouse::MovingProduct* add_moving_products();
  const ::google::protobuf::RepeatedPtrField<::warehouse::MovingProduct>& moving_products() const;
  // optional string document_url = 5;
  bool has_document_url() const;
  void clear_document_url() ;
  const std::string& document_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_document_url(Arg_&& arg, Args_... args);
  std::string* mutable_document_url();
  PROTOBUF_NODISCARD std::string* release_document_url();
  void set_allocated_document_url(std::string* value);

  private:
  const std::string& _internal_document_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_document_url(
      const std::string& value);
  std::string* _internal_mutable_document_url();

  public:
  // string created_at = 7;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // .organization.Organization organization = 2;
  bool has_organization() const;
  void clear_organization() ;
  const ::organization::Organization& organization() const;
  PROTOBUF_NODISCARD ::organization::Organization* release_organization();
  ::organization::Organization* mutable_organization();
  void set_allocated_organization(::organization::Organization* value);
  void unsafe_arena_set_allocated_organization(::organization::Organization* value);
  ::organization::Organization* unsafe_arena_release_organization();

  private:
  const ::organization::Organization& _internal_organization() const;
  ::organization::Organization* _internal_mutable_organization();

  public:
  // .warehouse.Warehouse to_warehouse = 3;
  bool has_to_warehouse() const;
  void clear_to_warehouse() ;
  const ::warehouse::Warehouse& to_warehouse() const;
  PROTOBUF_NODISCARD ::warehouse::Warehouse* release_to_warehouse();
  ::warehouse::Warehouse* mutable_to_warehouse();
  void set_allocated_to_warehouse(::warehouse::Warehouse* value);
  void unsafe_arena_set_allocated_to_warehouse(::warehouse::Warehouse* value);
  ::warehouse::Warehouse* unsafe_arena_release_to_warehouse();

  private:
  const ::warehouse::Warehouse& _internal_to_warehouse() const;
  ::warehouse::Warehouse* _internal_mutable_to_warehouse();

  public:
  // .warehouse.Warehouse from_warehouse = 4;
  bool has_from_warehouse() const;
  void clear_from_warehouse() ;
  const ::warehouse::Warehouse& from_warehouse() const;
  PROTOBUF_NODISCARD ::warehouse::Warehouse* release_from_warehouse();
  ::warehouse::Warehouse* mutable_from_warehouse();
  void set_allocated_from_warehouse(::warehouse::Warehouse* value);
  void unsafe_arena_set_allocated_from_warehouse(::warehouse::Warehouse* value);
  ::warehouse::Warehouse* unsafe_arena_release_from_warehouse();

  private:
  const ::warehouse::Warehouse& _internal_from_warehouse() const;
  ::warehouse::Warehouse* _internal_mutable_from_warehouse();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 amount = 8;
  void clear_amount() ;
  ::int64_t amount() const;
  void set_amount(::int64_t value);

  private:
  ::int64_t _internal_amount() const;
  void _internal_set_amount(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.Moving)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 4,
      55, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Moving& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::warehouse::MovingProduct > moving_products_;
    ::google::protobuf::internal::ArenaStringPtr document_url_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::organization::Organization* organization_;
    ::warehouse::Warehouse* to_warehouse_;
    ::warehouse::Warehouse* from_warehouse_;
    ::int64_t id_;
    ::int64_t amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class ListWarehousesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.ListWarehousesResponse) */ {
 public:
  inline ListWarehousesResponse() : ListWarehousesResponse(nullptr) {}
  ~ListWarehousesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListWarehousesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListWarehousesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListWarehousesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListWarehousesResponse(const ListWarehousesResponse& from) : ListWarehousesResponse(nullptr, from) {}
  inline ListWarehousesResponse(ListWarehousesResponse&& from) noexcept
      : ListWarehousesResponse(nullptr, std::move(from)) {}
  inline ListWarehousesResponse& operator=(const ListWarehousesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListWarehousesResponse& operator=(ListWarehousesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListWarehousesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListWarehousesResponse* internal_default_instance() {
    return reinterpret_cast<const ListWarehousesResponse*>(
        &_ListWarehousesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(ListWarehousesResponse& a, ListWarehousesResponse& b) { a.Swap(&b); }
  inline void Swap(ListWarehousesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListWarehousesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListWarehousesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListWarehousesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListWarehousesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListWarehousesResponse& from) { ListWarehousesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListWarehousesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.ListWarehousesResponse"; }

 protected:
  explicit ListWarehousesResponse(::google::protobuf::Arena* arena);
  ListWarehousesResponse(::google::protobuf::Arena* arena, const ListWarehousesResponse& from);
  ListWarehousesResponse(::google::protobuf::Arena* arena, ListWarehousesResponse&& from) noexcept
      : ListWarehousesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWarehousesFieldNumber = 1,
  };
  // repeated .warehouse.WarehouseModel warehouses = 1;
  int warehouses_size() const;
  private:
  int _internal_warehouses_size() const;

  public:
  void clear_warehouses() ;
  ::warehouse::WarehouseModel* mutable_warehouses(int index);
  ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseModel>* mutable_warehouses();

  private:
  const ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseModel>& _internal_warehouses() const;
  ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseModel>* _internal_mutable_warehouses();
  public:
  const ::warehouse::WarehouseModel& warehouses(int index) const;
  ::warehouse::WarehouseModel* add_warehouses();
  const ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseModel>& warehouses() const;
  // @@protoc_insertion_point(class_scope:warehouse.ListWarehousesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListWarehousesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::warehouse::WarehouseModel > warehouses_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class Inventory final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.Inventory) */ {
 public:
  inline Inventory() : Inventory(nullptr) {}
  ~Inventory() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Inventory* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Inventory));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Inventory(
      ::google::protobuf::internal::ConstantInitialized);

  inline Inventory(const Inventory& from) : Inventory(nullptr, from) {}
  inline Inventory(Inventory&& from) noexcept
      : Inventory(nullptr, std::move(from)) {}
  inline Inventory& operator=(const Inventory& from) {
    CopyFrom(from);
    return *this;
  }
  inline Inventory& operator=(Inventory&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Inventory& default_instance() {
    return *internal_default_instance();
  }
  static inline const Inventory* internal_default_instance() {
    return reinterpret_cast<const Inventory*>(
        &_Inventory_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(Inventory& a, Inventory& b) { a.Swap(&b); }
  inline void Swap(Inventory* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Inventory* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Inventory* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Inventory>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Inventory& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Inventory& from) { Inventory::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Inventory* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.Inventory"; }

 protected:
  explicit Inventory(::google::protobuf::Arena* arena);
  Inventory(::google::protobuf::Arena* arena, const Inventory& from);
  Inventory(::google::protobuf::Arena* arena, Inventory&& from) noexcept
      : Inventory(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductsFieldNumber = 6,
    kDocumentUrlFieldNumber = 4,
    kCreatedAtFieldNumber = 5,
    kOrganizationFieldNumber = 2,
    kWarehouseFieldNumber = 3,
    kIdFieldNumber = 1,
    kAmountFieldNumber = 7,
  };
  // repeated .warehouse.InventoryProduct products = 6;
  int products_size() const;
  private:
  int _internal_products_size() const;

  public:
  void clear_products() ;
  ::warehouse::InventoryProduct* mutable_products(int index);
  ::google::protobuf::RepeatedPtrField<::warehouse::InventoryProduct>* mutable_products();

  private:
  const ::google::protobuf::RepeatedPtrField<::warehouse::InventoryProduct>& _internal_products() const;
  ::google::protobuf::RepeatedPtrField<::warehouse::InventoryProduct>* _internal_mutable_products();
  public:
  const ::warehouse::InventoryProduct& products(int index) const;
  ::warehouse::InventoryProduct* add_products();
  const ::google::protobuf::RepeatedPtrField<::warehouse::InventoryProduct>& products() const;
  // optional string document_url = 4;
  bool has_document_url() const;
  void clear_document_url() ;
  const std::string& document_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_document_url(Arg_&& arg, Args_... args);
  std::string* mutable_document_url();
  PROTOBUF_NODISCARD std::string* release_document_url();
  void set_allocated_document_url(std::string* value);

  private:
  const std::string& _internal_document_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_document_url(
      const std::string& value);
  std::string* _internal_mutable_document_url();

  public:
  // string created_at = 5;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // .organization.Organization organization = 2;
  bool has_organization() const;
  void clear_organization() ;
  const ::organization::Organization& organization() const;
  PROTOBUF_NODISCARD ::organization::Organization* release_organization();
  ::organization::Organization* mutable_organization();
  void set_allocated_organization(::organization::Organization* value);
  void unsafe_arena_set_allocated_organization(::organization::Organization* value);
  ::organization::Organization* unsafe_arena_release_organization();

  private:
  const ::organization::Organization& _internal_organization() const;
  ::organization::Organization* _internal_mutable_organization();

  public:
  // .warehouse.Warehouse warehouse = 3;
  bool has_warehouse() const;
  void clear_warehouse() ;
  const ::warehouse::Warehouse& warehouse() const;
  PROTOBUF_NODISCARD ::warehouse::Warehouse* release_warehouse();
  ::warehouse::Warehouse* mutable_warehouse();
  void set_allocated_warehouse(::warehouse::Warehouse* value);
  void unsafe_arena_set_allocated_warehouse(::warehouse::Warehouse* value);
  ::warehouse::Warehouse* unsafe_arena_release_warehouse();

  private:
  const ::warehouse::Warehouse& _internal_warehouse() const;
  ::warehouse::Warehouse* _internal_mutable_warehouse();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 amount = 7;
  void clear_amount() ;
  ::int64_t amount() const;
  void set_amount(::int64_t value);

  private:
  ::int64_t _internal_amount() const;
  void _internal_set_amount(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.Inventory)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 3,
      50, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Inventory& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::warehouse::InventoryProduct > products_;
    ::google::protobuf::internal::ArenaStringPtr document_url_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::organization::Organization* organization_;
    ::warehouse::Warehouse* warehouse_;
    ::int64_t id_;
    ::int64_t amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class CreateWarehouseResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.CreateWarehouseResponse) */ {
 public:
  inline CreateWarehouseResponse() : CreateWarehouseResponse(nullptr) {}
  ~CreateWarehouseResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateWarehouseResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateWarehouseResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateWarehouseResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateWarehouseResponse(const CreateWarehouseResponse& from) : CreateWarehouseResponse(nullptr, from) {}
  inline CreateWarehouseResponse(CreateWarehouseResponse&& from) noexcept
      : CreateWarehouseResponse(nullptr, std::move(from)) {}
  inline CreateWarehouseResponse& operator=(const CreateWarehouseResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateWarehouseResponse& operator=(CreateWarehouseResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateWarehouseResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateWarehouseResponse* internal_default_instance() {
    return reinterpret_cast<const CreateWarehouseResponse*>(
        &_CreateWarehouseResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(CreateWarehouseResponse& a, CreateWarehouseResponse& b) { a.Swap(&b); }
  inline void Swap(CreateWarehouseResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateWarehouseResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateWarehouseResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateWarehouseResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateWarehouseResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateWarehouseResponse& from) { CreateWarehouseResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateWarehouseResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.CreateWarehouseResponse"; }

 protected:
  explicit CreateWarehouseResponse(::google::protobuf::Arena* arena);
  CreateWarehouseResponse(::google::protobuf::Arena* arena, const CreateWarehouseResponse& from);
  CreateWarehouseResponse(::google::protobuf::Arena* arena, CreateWarehouseResponse&& from) noexcept
      : CreateWarehouseResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWarehouseFieldNumber = 1,
  };
  // .warehouse.WarehouseModel warehouse = 1;
  bool has_warehouse() const;
  void clear_warehouse() ;
  const ::warehouse::WarehouseModel& warehouse() const;
  PROTOBUF_NODISCARD ::warehouse::WarehouseModel* release_warehouse();
  ::warehouse::WarehouseModel* mutable_warehouse();
  void set_allocated_warehouse(::warehouse::WarehouseModel* value);
  void unsafe_arena_set_allocated_warehouse(::warehouse::WarehouseModel* value);
  ::warehouse::WarehouseModel* unsafe_arena_release_warehouse();

  private:
  const ::warehouse::WarehouseModel& _internal_warehouse() const;
  ::warehouse::WarehouseModel* _internal_mutable_warehouse();

  public:
  // @@protoc_insertion_point(class_scope:warehouse.CreateWarehouseResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateWarehouseResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::warehouse::WarehouseModel* warehouse_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class Acceptance final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.Acceptance) */ {
 public:
  inline Acceptance() : Acceptance(nullptr) {}
  ~Acceptance() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Acceptance* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Acceptance));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Acceptance(
      ::google::protobuf::internal::ConstantInitialized);

  inline Acceptance(const Acceptance& from) : Acceptance(nullptr, from) {}
  inline Acceptance(Acceptance&& from) noexcept
      : Acceptance(nullptr, std::move(from)) {}
  inline Acceptance& operator=(const Acceptance& from) {
    CopyFrom(from);
    return *this;
  }
  inline Acceptance& operator=(Acceptance&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Acceptance& default_instance() {
    return *internal_default_instance();
  }
  static inline const Acceptance* internal_default_instance() {
    return reinterpret_cast<const Acceptance*>(
        &_Acceptance_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Acceptance& a, Acceptance& b) { a.Swap(&b); }
  inline void Swap(Acceptance* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Acceptance* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Acceptance* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Acceptance>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Acceptance& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Acceptance& from) { Acceptance::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Acceptance* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.Acceptance"; }

 protected:
  explicit Acceptance(::google::protobuf::Arena* arena);
  Acceptance(::google::protobuf::Arena* arena, const Acceptance& from);
  Acceptance(::google::protobuf::Arena* arena, Acceptance&& from) noexcept
      : Acceptance(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductsFieldNumber = 7,
    kDocumentUrlFieldNumber = 5,
    kCreatedAtFieldNumber = 8,
    kOrganizationFieldNumber = 2,
    kCounterpartyFieldNumber = 3,
    kWarehouseFieldNumber = 4,
    kUserFieldNumber = 6,
    kIdFieldNumber = 1,
    kAmountFieldNumber = 9,
  };
  // repeated .warehouse.AcceptanceProduct products = 7;
  int products_size() const;
  private:
  int _internal_products_size() const;

  public:
  void clear_products() ;
  ::warehouse::AcceptanceProduct* mutable_products(int index);
  ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProduct>* mutable_products();

  private:
  const ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProduct>& _internal_products() const;
  ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProduct>* _internal_mutable_products();
  public:
  const ::warehouse::AcceptanceProduct& products(int index) const;
  ::warehouse::AcceptanceProduct* add_products();
  const ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProduct>& products() const;
  // optional string document_url = 5;
  bool has_document_url() const;
  void clear_document_url() ;
  const std::string& document_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_document_url(Arg_&& arg, Args_... args);
  std::string* mutable_document_url();
  PROTOBUF_NODISCARD std::string* release_document_url();
  void set_allocated_document_url(std::string* value);

  private:
  const std::string& _internal_document_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_document_url(
      const std::string& value);
  std::string* _internal_mutable_document_url();

  public:
  // string created_at = 8;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // .organization.Organization organization = 2;
  bool has_organization() const;
  void clear_organization() ;
  const ::organization::Organization& organization() const;
  PROTOBUF_NODISCARD ::organization::Organization* release_organization();
  ::organization::Organization* mutable_organization();
  void set_allocated_organization(::organization::Organization* value);
  void unsafe_arena_set_allocated_organization(::organization::Organization* value);
  ::organization::Organization* unsafe_arena_release_organization();

  private:
  const ::organization::Organization& _internal_organization() const;
  ::organization::Organization* _internal_mutable_organization();

  public:
  // .organization.Organization counterparty = 3;
  bool has_counterparty() const;
  void clear_counterparty() ;
  const ::organization::Organization& counterparty() const;
  PROTOBUF_NODISCARD ::organization::Organization* release_counterparty();
  ::organization::Organization* mutable_counterparty();
  void set_allocated_counterparty(::organization::Organization* value);
  void unsafe_arena_set_allocated_counterparty(::organization::Organization* value);
  ::organization::Organization* unsafe_arena_release_counterparty();

  private:
  const ::organization::Organization& _internal_counterparty() const;
  ::organization::Organization* _internal_mutable_counterparty();

  public:
  // .warehouse.Warehouse warehouse = 4;
  bool has_warehouse() const;
  void clear_warehouse() ;
  const ::warehouse::Warehouse& warehouse() const;
  PROTOBUF_NODISCARD ::warehouse::Warehouse* release_warehouse();
  ::warehouse::Warehouse* mutable_warehouse();
  void set_allocated_warehouse(::warehouse::Warehouse* value);
  void unsafe_arena_set_allocated_warehouse(::warehouse::Warehouse* value);
  ::warehouse::Warehouse* unsafe_arena_release_warehouse();

  private:
  const ::warehouse::Warehouse& _internal_warehouse() const;
  ::warehouse::Warehouse* _internal_mutable_warehouse();

  public:
  // .user.User user = 6;
  bool has_user() const;
  void clear_user() ;
  const ::user::User& user() const;
  PROTOBUF_NODISCARD ::user::User* release_user();
  ::user::User* mutable_user();
  void set_allocated_user(::user::User* value);
  void unsafe_arena_set_allocated_user(::user::User* value);
  ::user::User* unsafe_arena_release_user();

  private:
  const ::user::User& _internal_user() const;
  ::user::User* _internal_mutable_user();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 amount = 9;
  void clear_amount() ;
  ::int64_t amount() const;
  void set_amount(::int64_t value);

  private:
  ::int64_t _internal_amount() const;
  void _internal_set_amount(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.Acceptance)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 5,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Acceptance& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::warehouse::AcceptanceProduct > products_;
    ::google::protobuf::internal::ArenaStringPtr document_url_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::organization::Organization* organization_;
    ::organization::Organization* counterparty_;
    ::warehouse::Warehouse* warehouse_;
    ::user::User* user_;
    ::int64_t id_;
    ::int64_t amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class UpdateAcceptanceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.UpdateAcceptanceResponse) */ {
 public:
  inline UpdateAcceptanceResponse() : UpdateAcceptanceResponse(nullptr) {}
  ~UpdateAcceptanceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateAcceptanceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateAcceptanceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateAcceptanceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateAcceptanceResponse(const UpdateAcceptanceResponse& from) : UpdateAcceptanceResponse(nullptr, from) {}
  inline UpdateAcceptanceResponse(UpdateAcceptanceResponse&& from) noexcept
      : UpdateAcceptanceResponse(nullptr, std::move(from)) {}
  inline UpdateAcceptanceResponse& operator=(const UpdateAcceptanceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateAcceptanceResponse& operator=(UpdateAcceptanceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateAcceptanceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateAcceptanceResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateAcceptanceResponse*>(
        &_UpdateAcceptanceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(UpdateAcceptanceResponse& a, UpdateAcceptanceResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateAcceptanceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateAcceptanceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateAcceptanceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateAcceptanceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateAcceptanceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateAcceptanceResponse& from) { UpdateAcceptanceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateAcceptanceResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.UpdateAcceptanceResponse"; }

 protected:
  explicit UpdateAcceptanceResponse(::google::protobuf::Arena* arena);
  UpdateAcceptanceResponse(::google::protobuf::Arena* arena, const UpdateAcceptanceResponse& from);
  UpdateAcceptanceResponse(::google::protobuf::Arena* arena, UpdateAcceptanceResponse&& from) noexcept
      : UpdateAcceptanceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAcceptanceFieldNumber = 1,
  };
  // .warehouse.Acceptance acceptance = 1;
  bool has_acceptance() const;
  void clear_acceptance() ;
  const ::warehouse::Acceptance& acceptance() const;
  PROTOBUF_NODISCARD ::warehouse::Acceptance* release_acceptance();
  ::warehouse::Acceptance* mutable_acceptance();
  void set_allocated_acceptance(::warehouse::Acceptance* value);
  void unsafe_arena_set_allocated_acceptance(::warehouse::Acceptance* value);
  ::warehouse::Acceptance* unsafe_arena_release_acceptance();

  private:
  const ::warehouse::Acceptance& _internal_acceptance() const;
  ::warehouse::Acceptance* _internal_mutable_acceptance();

  public:
  // @@protoc_insertion_point(class_scope:warehouse.UpdateAcceptanceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateAcceptanceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::warehouse::Acceptance* acceptance_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class ListWriteOffResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.ListWriteOffResponse) */ {
 public:
  inline ListWriteOffResponse() : ListWriteOffResponse(nullptr) {}
  ~ListWriteOffResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListWriteOffResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListWriteOffResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListWriteOffResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListWriteOffResponse(const ListWriteOffResponse& from) : ListWriteOffResponse(nullptr, from) {}
  inline ListWriteOffResponse(ListWriteOffResponse&& from) noexcept
      : ListWriteOffResponse(nullptr, std::move(from)) {}
  inline ListWriteOffResponse& operator=(const ListWriteOffResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListWriteOffResponse& operator=(ListWriteOffResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListWriteOffResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListWriteOffResponse* internal_default_instance() {
    return reinterpret_cast<const ListWriteOffResponse*>(
        &_ListWriteOffResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 48;
  friend void swap(ListWriteOffResponse& a, ListWriteOffResponse& b) { a.Swap(&b); }
  inline void Swap(ListWriteOffResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListWriteOffResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListWriteOffResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListWriteOffResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListWriteOffResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListWriteOffResponse& from) { ListWriteOffResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListWriteOffResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.ListWriteOffResponse"; }

 protected:
  explicit ListWriteOffResponse(::google::protobuf::Arena* arena);
  ListWriteOffResponse(::google::protobuf::Arena* arena, const ListWriteOffResponse& from);
  ListWriteOffResponse(::google::protobuf::Arena* arena, ListWriteOffResponse&& from) noexcept
      : ListWriteOffResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWriteOffsFieldNumber = 1,
    kTotalCountFieldNumber = 2,
  };
  // repeated .warehouse.WriteOff write_offs = 1;
  int write_offs_size() const;
  private:
  int _internal_write_offs_size() const;

  public:
  void clear_write_offs() ;
  ::warehouse::WriteOff* mutable_write_offs(int index);
  ::google::protobuf::RepeatedPtrField<::warehouse::WriteOff>* mutable_write_offs();

  private:
  const ::google::protobuf::RepeatedPtrField<::warehouse::WriteOff>& _internal_write_offs() const;
  ::google::protobuf::RepeatedPtrField<::warehouse::WriteOff>* _internal_mutable_write_offs();
  public:
  const ::warehouse::WriteOff& write_offs(int index) const;
  ::warehouse::WriteOff* add_write_offs();
  const ::google::protobuf::RepeatedPtrField<::warehouse::WriteOff>& write_offs() const;
  // int64 total_count = 2;
  void clear_total_count() ;
  ::int64_t total_count() const;
  void set_total_count(::int64_t value);

  private:
  ::int64_t _internal_total_count() const;
  void _internal_set_total_count(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.ListWriteOffResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListWriteOffResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::warehouse::WriteOff > write_offs_;
    ::int64_t total_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class ListMovingResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.ListMovingResponse) */ {
 public:
  inline ListMovingResponse() : ListMovingResponse(nullptr) {}
  ~ListMovingResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListMovingResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListMovingResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListMovingResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListMovingResponse(const ListMovingResponse& from) : ListMovingResponse(nullptr, from) {}
  inline ListMovingResponse(ListMovingResponse&& from) noexcept
      : ListMovingResponse(nullptr, std::move(from)) {}
  inline ListMovingResponse& operator=(const ListMovingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListMovingResponse& operator=(ListMovingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListMovingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListMovingResponse* internal_default_instance() {
    return reinterpret_cast<const ListMovingResponse*>(
        &_ListMovingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 54;
  friend void swap(ListMovingResponse& a, ListMovingResponse& b) { a.Swap(&b); }
  inline void Swap(ListMovingResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListMovingResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListMovingResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListMovingResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListMovingResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListMovingResponse& from) { ListMovingResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListMovingResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.ListMovingResponse"; }

 protected:
  explicit ListMovingResponse(::google::protobuf::Arena* arena);
  ListMovingResponse(::google::protobuf::Arena* arena, const ListMovingResponse& from);
  ListMovingResponse(::google::protobuf::Arena* arena, ListMovingResponse&& from) noexcept
      : ListMovingResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMovingsFieldNumber = 1,
    kTotalCountFieldNumber = 2,
  };
  // repeated .warehouse.Moving movings = 1;
  int movings_size() const;
  private:
  int _internal_movings_size() const;

  public:
  void clear_movings() ;
  ::warehouse::Moving* mutable_movings(int index);
  ::google::protobuf::RepeatedPtrField<::warehouse::Moving>* mutable_movings();

  private:
  const ::google::protobuf::RepeatedPtrField<::warehouse::Moving>& _internal_movings() const;
  ::google::protobuf::RepeatedPtrField<::warehouse::Moving>* _internal_mutable_movings();
  public:
  const ::warehouse::Moving& movings(int index) const;
  ::warehouse::Moving* add_movings();
  const ::google::protobuf::RepeatedPtrField<::warehouse::Moving>& movings() const;
  // int64 total_count = 2;
  void clear_total_count() ;
  ::int64_t total_count() const;
  void set_total_count(::int64_t value);

  private:
  ::int64_t _internal_total_count() const;
  void _internal_set_total_count(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.ListMovingResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListMovingResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::warehouse::Moving > movings_;
    ::int64_t total_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class ListInventoryResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.ListInventoryResponse) */ {
 public:
  inline ListInventoryResponse() : ListInventoryResponse(nullptr) {}
  ~ListInventoryResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListInventoryResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListInventoryResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListInventoryResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListInventoryResponse(const ListInventoryResponse& from) : ListInventoryResponse(nullptr, from) {}
  inline ListInventoryResponse(ListInventoryResponse&& from) noexcept
      : ListInventoryResponse(nullptr, std::move(from)) {}
  inline ListInventoryResponse& operator=(const ListInventoryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListInventoryResponse& operator=(ListInventoryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListInventoryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListInventoryResponse* internal_default_instance() {
    return reinterpret_cast<const ListInventoryResponse*>(
        &_ListInventoryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 60;
  friend void swap(ListInventoryResponse& a, ListInventoryResponse& b) { a.Swap(&b); }
  inline void Swap(ListInventoryResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListInventoryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListInventoryResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListInventoryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListInventoryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListInventoryResponse& from) { ListInventoryResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListInventoryResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.ListInventoryResponse"; }

 protected:
  explicit ListInventoryResponse(::google::protobuf::Arena* arena);
  ListInventoryResponse(::google::protobuf::Arena* arena, const ListInventoryResponse& from);
  ListInventoryResponse(::google::protobuf::Arena* arena, ListInventoryResponse&& from) noexcept
      : ListInventoryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInventoriesFieldNumber = 1,
    kTotalCountFieldNumber = 2,
  };
  // repeated .warehouse.Inventory inventories = 1;
  int inventories_size() const;
  private:
  int _internal_inventories_size() const;

  public:
  void clear_inventories() ;
  ::warehouse::Inventory* mutable_inventories(int index);
  ::google::protobuf::RepeatedPtrField<::warehouse::Inventory>* mutable_inventories();

  private:
  const ::google::protobuf::RepeatedPtrField<::warehouse::Inventory>& _internal_inventories() const;
  ::google::protobuf::RepeatedPtrField<::warehouse::Inventory>* _internal_mutable_inventories();
  public:
  const ::warehouse::Inventory& inventories(int index) const;
  ::warehouse::Inventory* add_inventories();
  const ::google::protobuf::RepeatedPtrField<::warehouse::Inventory>& inventories() const;
  // int64 total_count = 2;
  void clear_total_count() ;
  ::int64_t total_count() const;
  void set_total_count(::int64_t value);

  private:
  ::int64_t _internal_total_count() const;
  void _internal_set_total_count(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.ListInventoryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListInventoryResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::warehouse::Inventory > inventories_;
    ::int64_t total_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class ListAcceptancesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.ListAcceptancesResponse) */ {
 public:
  inline ListAcceptancesResponse() : ListAcceptancesResponse(nullptr) {}
  ~ListAcceptancesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListAcceptancesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListAcceptancesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListAcceptancesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListAcceptancesResponse(const ListAcceptancesResponse& from) : ListAcceptancesResponse(nullptr, from) {}
  inline ListAcceptancesResponse(ListAcceptancesResponse&& from) noexcept
      : ListAcceptancesResponse(nullptr, std::move(from)) {}
  inline ListAcceptancesResponse& operator=(const ListAcceptancesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListAcceptancesResponse& operator=(ListAcceptancesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListAcceptancesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListAcceptancesResponse* internal_default_instance() {
    return reinterpret_cast<const ListAcceptancesResponse*>(
        &_ListAcceptancesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(ListAcceptancesResponse& a, ListAcceptancesResponse& b) { a.Swap(&b); }
  inline void Swap(ListAcceptancesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListAcceptancesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListAcceptancesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListAcceptancesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListAcceptancesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListAcceptancesResponse& from) { ListAcceptancesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListAcceptancesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.ListAcceptancesResponse"; }

 protected:
  explicit ListAcceptancesResponse(::google::protobuf::Arena* arena);
  ListAcceptancesResponse(::google::protobuf::Arena* arena, const ListAcceptancesResponse& from);
  ListAcceptancesResponse(::google::protobuf::Arena* arena, ListAcceptancesResponse&& from) noexcept
      : ListAcceptancesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAcceptancesFieldNumber = 1,
    kTotalCountFieldNumber = 2,
  };
  // repeated .warehouse.Acceptance acceptances = 1;
  int acceptances_size() const;
  private:
  int _internal_acceptances_size() const;

  public:
  void clear_acceptances() ;
  ::warehouse::Acceptance* mutable_acceptances(int index);
  ::google::protobuf::RepeatedPtrField<::warehouse::Acceptance>* mutable_acceptances();

  private:
  const ::google::protobuf::RepeatedPtrField<::warehouse::Acceptance>& _internal_acceptances() const;
  ::google::protobuf::RepeatedPtrField<::warehouse::Acceptance>* _internal_mutable_acceptances();
  public:
  const ::warehouse::Acceptance& acceptances(int index) const;
  ::warehouse::Acceptance* add_acceptances();
  const ::google::protobuf::RepeatedPtrField<::warehouse::Acceptance>& acceptances() const;
  // int64 total_count = 2;
  void clear_total_count() ;
  ::int64_t total_count() const;
  void set_total_count(::int64_t value);

  private:
  ::int64_t _internal_total_count() const;
  void _internal_set_total_count(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:warehouse.ListAcceptancesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListAcceptancesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::warehouse::Acceptance > acceptances_;
    ::int64_t total_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class GetWriteOffResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.GetWriteOffResponse) */ {
 public:
  inline GetWriteOffResponse() : GetWriteOffResponse(nullptr) {}
  ~GetWriteOffResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetWriteOffResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetWriteOffResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetWriteOffResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetWriteOffResponse(const GetWriteOffResponse& from) : GetWriteOffResponse(nullptr, from) {}
  inline GetWriteOffResponse(GetWriteOffResponse&& from) noexcept
      : GetWriteOffResponse(nullptr, std::move(from)) {}
  inline GetWriteOffResponse& operator=(const GetWriteOffResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetWriteOffResponse& operator=(GetWriteOffResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetWriteOffResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetWriteOffResponse* internal_default_instance() {
    return reinterpret_cast<const GetWriteOffResponse*>(
        &_GetWriteOffResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 46;
  friend void swap(GetWriteOffResponse& a, GetWriteOffResponse& b) { a.Swap(&b); }
  inline void Swap(GetWriteOffResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetWriteOffResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetWriteOffResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetWriteOffResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetWriteOffResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetWriteOffResponse& from) { GetWriteOffResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetWriteOffResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.GetWriteOffResponse"; }

 protected:
  explicit GetWriteOffResponse(::google::protobuf::Arena* arena);
  GetWriteOffResponse(::google::protobuf::Arena* arena, const GetWriteOffResponse& from);
  GetWriteOffResponse(::google::protobuf::Arena* arena, GetWriteOffResponse&& from) noexcept
      : GetWriteOffResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWriteOffFieldNumber = 1,
  };
  // .warehouse.WriteOff write_off = 1;
  bool has_write_off() const;
  void clear_write_off() ;
  const ::warehouse::WriteOff& write_off() const;
  PROTOBUF_NODISCARD ::warehouse::WriteOff* release_write_off();
  ::warehouse::WriteOff* mutable_write_off();
  void set_allocated_write_off(::warehouse::WriteOff* value);
  void unsafe_arena_set_allocated_write_off(::warehouse::WriteOff* value);
  ::warehouse::WriteOff* unsafe_arena_release_write_off();

  private:
  const ::warehouse::WriteOff& _internal_write_off() const;
  ::warehouse::WriteOff* _internal_mutable_write_off();

  public:
  // @@protoc_insertion_point(class_scope:warehouse.GetWriteOffResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetWriteOffResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::warehouse::WriteOff* write_off_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class GetMovingResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.GetMovingResponse) */ {
 public:
  inline GetMovingResponse() : GetMovingResponse(nullptr) {}
  ~GetMovingResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetMovingResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetMovingResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMovingResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetMovingResponse(const GetMovingResponse& from) : GetMovingResponse(nullptr, from) {}
  inline GetMovingResponse(GetMovingResponse&& from) noexcept
      : GetMovingResponse(nullptr, std::move(from)) {}
  inline GetMovingResponse& operator=(const GetMovingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMovingResponse& operator=(GetMovingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMovingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMovingResponse* internal_default_instance() {
    return reinterpret_cast<const GetMovingResponse*>(
        &_GetMovingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 52;
  friend void swap(GetMovingResponse& a, GetMovingResponse& b) { a.Swap(&b); }
  inline void Swap(GetMovingResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMovingResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMovingResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetMovingResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMovingResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetMovingResponse& from) { GetMovingResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetMovingResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.GetMovingResponse"; }

 protected:
  explicit GetMovingResponse(::google::protobuf::Arena* arena);
  GetMovingResponse(::google::protobuf::Arena* arena, const GetMovingResponse& from);
  GetMovingResponse(::google::protobuf::Arena* arena, GetMovingResponse&& from) noexcept
      : GetMovingResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMovingFieldNumber = 1,
  };
  // .warehouse.Moving moving = 1;
  bool has_moving() const;
  void clear_moving() ;
  const ::warehouse::Moving& moving() const;
  PROTOBUF_NODISCARD ::warehouse::Moving* release_moving();
  ::warehouse::Moving* mutable_moving();
  void set_allocated_moving(::warehouse::Moving* value);
  void unsafe_arena_set_allocated_moving(::warehouse::Moving* value);
  ::warehouse::Moving* unsafe_arena_release_moving();

  private:
  const ::warehouse::Moving& _internal_moving() const;
  ::warehouse::Moving* _internal_mutable_moving();

  public:
  // @@protoc_insertion_point(class_scope:warehouse.GetMovingResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetMovingResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::warehouse::Moving* moving_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class GetInventoryResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.GetInventoryResponse) */ {
 public:
  inline GetInventoryResponse() : GetInventoryResponse(nullptr) {}
  ~GetInventoryResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetInventoryResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetInventoryResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetInventoryResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetInventoryResponse(const GetInventoryResponse& from) : GetInventoryResponse(nullptr, from) {}
  inline GetInventoryResponse(GetInventoryResponse&& from) noexcept
      : GetInventoryResponse(nullptr, std::move(from)) {}
  inline GetInventoryResponse& operator=(const GetInventoryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetInventoryResponse& operator=(GetInventoryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetInventoryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetInventoryResponse* internal_default_instance() {
    return reinterpret_cast<const GetInventoryResponse*>(
        &_GetInventoryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 58;
  friend void swap(GetInventoryResponse& a, GetInventoryResponse& b) { a.Swap(&b); }
  inline void Swap(GetInventoryResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetInventoryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetInventoryResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetInventoryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetInventoryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetInventoryResponse& from) { GetInventoryResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetInventoryResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.GetInventoryResponse"; }

 protected:
  explicit GetInventoryResponse(::google::protobuf::Arena* arena);
  GetInventoryResponse(::google::protobuf::Arena* arena, const GetInventoryResponse& from);
  GetInventoryResponse(::google::protobuf::Arena* arena, GetInventoryResponse&& from) noexcept
      : GetInventoryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInvetoryFieldNumber = 1,
  };
  // .warehouse.Inventory invetory = 1;
  bool has_invetory() const;
  void clear_invetory() ;
  const ::warehouse::Inventory& invetory() const;
  PROTOBUF_NODISCARD ::warehouse::Inventory* release_invetory();
  ::warehouse::Inventory* mutable_invetory();
  void set_allocated_invetory(::warehouse::Inventory* value);
  void unsafe_arena_set_allocated_invetory(::warehouse::Inventory* value);
  ::warehouse::Inventory* unsafe_arena_release_invetory();

  private:
  const ::warehouse::Inventory& _internal_invetory() const;
  ::warehouse::Inventory* _internal_mutable_invetory();

  public:
  // @@protoc_insertion_point(class_scope:warehouse.GetInventoryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetInventoryResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::warehouse::Inventory* invetory_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class GetAcceptanceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.GetAcceptanceResponse) */ {
 public:
  inline GetAcceptanceResponse() : GetAcceptanceResponse(nullptr) {}
  ~GetAcceptanceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetAcceptanceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetAcceptanceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetAcceptanceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetAcceptanceResponse(const GetAcceptanceResponse& from) : GetAcceptanceResponse(nullptr, from) {}
  inline GetAcceptanceResponse(GetAcceptanceResponse&& from) noexcept
      : GetAcceptanceResponse(nullptr, std::move(from)) {}
  inline GetAcceptanceResponse& operator=(const GetAcceptanceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAcceptanceResponse& operator=(GetAcceptanceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAcceptanceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAcceptanceResponse* internal_default_instance() {
    return reinterpret_cast<const GetAcceptanceResponse*>(
        &_GetAcceptanceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(GetAcceptanceResponse& a, GetAcceptanceResponse& b) { a.Swap(&b); }
  inline void Swap(GetAcceptanceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAcceptanceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAcceptanceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetAcceptanceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAcceptanceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetAcceptanceResponse& from) { GetAcceptanceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetAcceptanceResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.GetAcceptanceResponse"; }

 protected:
  explicit GetAcceptanceResponse(::google::protobuf::Arena* arena);
  GetAcceptanceResponse(::google::protobuf::Arena* arena, const GetAcceptanceResponse& from);
  GetAcceptanceResponse(::google::protobuf::Arena* arena, GetAcceptanceResponse&& from) noexcept
      : GetAcceptanceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAcceptanceFieldNumber = 1,
  };
  // .warehouse.Acceptance acceptance = 1;
  bool has_acceptance() const;
  void clear_acceptance() ;
  const ::warehouse::Acceptance& acceptance() const;
  PROTOBUF_NODISCARD ::warehouse::Acceptance* release_acceptance();
  ::warehouse::Acceptance* mutable_acceptance();
  void set_allocated_acceptance(::warehouse::Acceptance* value);
  void unsafe_arena_set_allocated_acceptance(::warehouse::Acceptance* value);
  ::warehouse::Acceptance* unsafe_arena_release_acceptance();

  private:
  const ::warehouse::Acceptance& _internal_acceptance() const;
  ::warehouse::Acceptance* _internal_mutable_acceptance();

  public:
  // @@protoc_insertion_point(class_scope:warehouse.GetAcceptanceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetAcceptanceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::warehouse::Acceptance* acceptance_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class CreateWriteOffResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.CreateWriteOffResponse) */ {
 public:
  inline CreateWriteOffResponse() : CreateWriteOffResponse(nullptr) {}
  ~CreateWriteOffResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateWriteOffResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateWriteOffResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateWriteOffResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateWriteOffResponse(const CreateWriteOffResponse& from) : CreateWriteOffResponse(nullptr, from) {}
  inline CreateWriteOffResponse(CreateWriteOffResponse&& from) noexcept
      : CreateWriteOffResponse(nullptr, std::move(from)) {}
  inline CreateWriteOffResponse& operator=(const CreateWriteOffResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateWriteOffResponse& operator=(CreateWriteOffResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateWriteOffResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateWriteOffResponse* internal_default_instance() {
    return reinterpret_cast<const CreateWriteOffResponse*>(
        &_CreateWriteOffResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(CreateWriteOffResponse& a, CreateWriteOffResponse& b) { a.Swap(&b); }
  inline void Swap(CreateWriteOffResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateWriteOffResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateWriteOffResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateWriteOffResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateWriteOffResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateWriteOffResponse& from) { CreateWriteOffResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateWriteOffResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.CreateWriteOffResponse"; }

 protected:
  explicit CreateWriteOffResponse(::google::protobuf::Arena* arena);
  CreateWriteOffResponse(::google::protobuf::Arena* arena, const CreateWriteOffResponse& from);
  CreateWriteOffResponse(::google::protobuf::Arena* arena, CreateWriteOffResponse&& from) noexcept
      : CreateWriteOffResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWriteOffFieldNumber = 1,
  };
  // .warehouse.WriteOff write_off = 1;
  bool has_write_off() const;
  void clear_write_off() ;
  const ::warehouse::WriteOff& write_off() const;
  PROTOBUF_NODISCARD ::warehouse::WriteOff* release_write_off();
  ::warehouse::WriteOff* mutable_write_off();
  void set_allocated_write_off(::warehouse::WriteOff* value);
  void unsafe_arena_set_allocated_write_off(::warehouse::WriteOff* value);
  ::warehouse::WriteOff* unsafe_arena_release_write_off();

  private:
  const ::warehouse::WriteOff& _internal_write_off() const;
  ::warehouse::WriteOff* _internal_mutable_write_off();

  public:
  // @@protoc_insertion_point(class_scope:warehouse.CreateWriteOffResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateWriteOffResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::warehouse::WriteOff* write_off_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class CreateMovingResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.CreateMovingResponse) */ {
 public:
  inline CreateMovingResponse() : CreateMovingResponse(nullptr) {}
  ~CreateMovingResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateMovingResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateMovingResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateMovingResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateMovingResponse(const CreateMovingResponse& from) : CreateMovingResponse(nullptr, from) {}
  inline CreateMovingResponse(CreateMovingResponse&& from) noexcept
      : CreateMovingResponse(nullptr, std::move(from)) {}
  inline CreateMovingResponse& operator=(const CreateMovingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateMovingResponse& operator=(CreateMovingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateMovingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateMovingResponse* internal_default_instance() {
    return reinterpret_cast<const CreateMovingResponse*>(
        &_CreateMovingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 50;
  friend void swap(CreateMovingResponse& a, CreateMovingResponse& b) { a.Swap(&b); }
  inline void Swap(CreateMovingResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateMovingResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateMovingResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateMovingResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateMovingResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateMovingResponse& from) { CreateMovingResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateMovingResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.CreateMovingResponse"; }

 protected:
  explicit CreateMovingResponse(::google::protobuf::Arena* arena);
  CreateMovingResponse(::google::protobuf::Arena* arena, const CreateMovingResponse& from);
  CreateMovingResponse(::google::protobuf::Arena* arena, CreateMovingResponse&& from) noexcept
      : CreateMovingResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMovingFieldNumber = 1,
  };
  // .warehouse.Moving moving = 1;
  bool has_moving() const;
  void clear_moving() ;
  const ::warehouse::Moving& moving() const;
  PROTOBUF_NODISCARD ::warehouse::Moving* release_moving();
  ::warehouse::Moving* mutable_moving();
  void set_allocated_moving(::warehouse::Moving* value);
  void unsafe_arena_set_allocated_moving(::warehouse::Moving* value);
  ::warehouse::Moving* unsafe_arena_release_moving();

  private:
  const ::warehouse::Moving& _internal_moving() const;
  ::warehouse::Moving* _internal_mutable_moving();

  public:
  // @@protoc_insertion_point(class_scope:warehouse.CreateMovingResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateMovingResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::warehouse::Moving* moving_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class CreateInventoryResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.CreateInventoryResponse) */ {
 public:
  inline CreateInventoryResponse() : CreateInventoryResponse(nullptr) {}
  ~CreateInventoryResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateInventoryResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateInventoryResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateInventoryResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateInventoryResponse(const CreateInventoryResponse& from) : CreateInventoryResponse(nullptr, from) {}
  inline CreateInventoryResponse(CreateInventoryResponse&& from) noexcept
      : CreateInventoryResponse(nullptr, std::move(from)) {}
  inline CreateInventoryResponse& operator=(const CreateInventoryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateInventoryResponse& operator=(CreateInventoryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateInventoryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateInventoryResponse* internal_default_instance() {
    return reinterpret_cast<const CreateInventoryResponse*>(
        &_CreateInventoryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 56;
  friend void swap(CreateInventoryResponse& a, CreateInventoryResponse& b) { a.Swap(&b); }
  inline void Swap(CreateInventoryResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateInventoryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateInventoryResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateInventoryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateInventoryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateInventoryResponse& from) { CreateInventoryResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateInventoryResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.CreateInventoryResponse"; }

 protected:
  explicit CreateInventoryResponse(::google::protobuf::Arena* arena);
  CreateInventoryResponse(::google::protobuf::Arena* arena, const CreateInventoryResponse& from);
  CreateInventoryResponse(::google::protobuf::Arena* arena, CreateInventoryResponse&& from) noexcept
      : CreateInventoryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInventoryFieldNumber = 2,
  };
  // .warehouse.Inventory inventory = 2;
  bool has_inventory() const;
  void clear_inventory() ;
  const ::warehouse::Inventory& inventory() const;
  PROTOBUF_NODISCARD ::warehouse::Inventory* release_inventory();
  ::warehouse::Inventory* mutable_inventory();
  void set_allocated_inventory(::warehouse::Inventory* value);
  void unsafe_arena_set_allocated_inventory(::warehouse::Inventory* value);
  ::warehouse::Inventory* unsafe_arena_release_inventory();

  private:
  const ::warehouse::Inventory& _internal_inventory() const;
  ::warehouse::Inventory* _internal_mutable_inventory();

  public:
  // @@protoc_insertion_point(class_scope:warehouse.CreateInventoryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateInventoryResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::warehouse::Inventory* inventory_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};
// -------------------------------------------------------------------

class CreateAcceptanceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:warehouse.CreateAcceptanceResponse) */ {
 public:
  inline CreateAcceptanceResponse() : CreateAcceptanceResponse(nullptr) {}
  ~CreateAcceptanceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateAcceptanceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateAcceptanceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateAcceptanceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateAcceptanceResponse(const CreateAcceptanceResponse& from) : CreateAcceptanceResponse(nullptr, from) {}
  inline CreateAcceptanceResponse(CreateAcceptanceResponse&& from) noexcept
      : CreateAcceptanceResponse(nullptr, std::move(from)) {}
  inline CreateAcceptanceResponse& operator=(const CreateAcceptanceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateAcceptanceResponse& operator=(CreateAcceptanceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateAcceptanceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateAcceptanceResponse* internal_default_instance() {
    return reinterpret_cast<const CreateAcceptanceResponse*>(
        &_CreateAcceptanceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(CreateAcceptanceResponse& a, CreateAcceptanceResponse& b) { a.Swap(&b); }
  inline void Swap(CreateAcceptanceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateAcceptanceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateAcceptanceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateAcceptanceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateAcceptanceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateAcceptanceResponse& from) { CreateAcceptanceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateAcceptanceResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "warehouse.CreateAcceptanceResponse"; }

 protected:
  explicit CreateAcceptanceResponse(::google::protobuf::Arena* arena);
  CreateAcceptanceResponse(::google::protobuf::Arena* arena, const CreateAcceptanceResponse& from);
  CreateAcceptanceResponse(::google::protobuf::Arena* arena, CreateAcceptanceResponse&& from) noexcept
      : CreateAcceptanceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAcceptanceFieldNumber = 1,
  };
  // .warehouse.Acceptance acceptance = 1;
  bool has_acceptance() const;
  void clear_acceptance() ;
  const ::warehouse::Acceptance& acceptance() const;
  PROTOBUF_NODISCARD ::warehouse::Acceptance* release_acceptance();
  ::warehouse::Acceptance* mutable_acceptance();
  void set_allocated_acceptance(::warehouse::Acceptance* value);
  void unsafe_arena_set_allocated_acceptance(::warehouse::Acceptance* value);
  ::warehouse::Acceptance* unsafe_arena_release_acceptance();

  private:
  const ::warehouse::Acceptance& _internal_acceptance() const;
  ::warehouse::Acceptance* _internal_mutable_acceptance();

  public:
  // @@protoc_insertion_point(class_scope:warehouse.CreateAcceptanceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateAcceptanceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::warehouse::Acceptance* acceptance_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_warehouse_2fwarehouse_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// WarehouseModel

// int64 id = 1;
inline void WarehouseModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t WarehouseModel::id() const {
  // @@protoc_insertion_point(field_get:warehouse.WarehouseModel.id)
  return _internal_id();
}
inline void WarehouseModel::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.WarehouseModel.id)
}
inline ::int64_t WarehouseModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void WarehouseModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 organization_id = 2;
inline void WarehouseModel::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t WarehouseModel::organization_id() const {
  // @@protoc_insertion_point(field_get:warehouse.WarehouseModel.organization_id)
  return _internal_organization_id();
}
inline void WarehouseModel::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:warehouse.WarehouseModel.organization_id)
}
inline ::int64_t WarehouseModel::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void WarehouseModel::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// string name = 3;
inline void WarehouseModel::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& WarehouseModel::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.WarehouseModel.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WarehouseModel::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.WarehouseModel.name)
}
inline std::string* WarehouseModel::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:warehouse.WarehouseModel.name)
  return _s;
}
inline const std::string& WarehouseModel::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void WarehouseModel::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* WarehouseModel::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* WarehouseModel::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.WarehouseModel.name)
  return _impl_.name_.Release();
}
inline void WarehouseModel::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.WarehouseModel.name)
}

// .organization.AddressModel address = 4;
inline bool WarehouseModel::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline const ::organization::AddressModel& WarehouseModel::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::AddressModel* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::AddressModel&>(::organization::_AddressModel_default_instance_);
}
inline const ::organization::AddressModel& WarehouseModel::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.WarehouseModel.address)
  return _internal_address();
}
inline void WarehouseModel::unsafe_arena_set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.WarehouseModel.address)
}
inline ::organization::AddressModel* WarehouseModel::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* released = _impl_.address_;
  _impl_.address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::AddressModel* WarehouseModel::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.WarehouseModel.address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::organization::AddressModel* WarehouseModel::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::AddressModel>(GetArena());
    _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(p);
  }
  return _impl_.address_;
}
inline ::organization::AddressModel* WarehouseModel::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::AddressModel* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:warehouse.WarehouseModel.address)
  return _msg;
}
inline void WarehouseModel::set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.WarehouseModel.address)
}

// int64 count = 5;
inline void WarehouseModel::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = ::int64_t{0};
}
inline ::int64_t WarehouseModel::count() const {
  // @@protoc_insertion_point(field_get:warehouse.WarehouseModel.count)
  return _internal_count();
}
inline void WarehouseModel::set_count(::int64_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:warehouse.WarehouseModel.count)
}
inline ::int64_t WarehouseModel::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void WarehouseModel::_internal_set_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// repeated .warehouse.WarehouseProducts products = 6;
inline int WarehouseModel::_internal_products_size() const {
  return _internal_products().size();
}
inline int WarehouseModel::products_size() const {
  return _internal_products_size();
}
inline void WarehouseModel::clear_products() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.products_.Clear();
}
inline ::warehouse::WarehouseProducts* WarehouseModel::mutable_products(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:warehouse.WarehouseModel.products)
  return _internal_mutable_products()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>* WarehouseModel::mutable_products()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:warehouse.WarehouseModel.products)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_products();
}
inline const ::warehouse::WarehouseProducts& WarehouseModel::products(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.WarehouseModel.products)
  return _internal_products().Get(index);
}
inline ::warehouse::WarehouseProducts* WarehouseModel::add_products() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::warehouse::WarehouseProducts* _add = _internal_mutable_products()->Add();
  // @@protoc_insertion_point(field_add:warehouse.WarehouseModel.products)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>& WarehouseModel::products() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:warehouse.WarehouseModel.products)
  return _internal_products();
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>&
WarehouseModel::_internal_products() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.products_;
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>*
WarehouseModel::_internal_mutable_products() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.products_;
}

// -------------------------------------------------------------------

// Warehouse

// int64 id = 1;
inline void Warehouse::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t Warehouse::id() const {
  // @@protoc_insertion_point(field_get:warehouse.Warehouse.id)
  return _internal_id();
}
inline void Warehouse::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.Warehouse.id)
}
inline ::int64_t Warehouse::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Warehouse::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 organization_id = 2;
inline void Warehouse::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t Warehouse::organization_id() const {
  // @@protoc_insertion_point(field_get:warehouse.Warehouse.organization_id)
  return _internal_organization_id();
}
inline void Warehouse::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:warehouse.Warehouse.organization_id)
}
inline ::int64_t Warehouse::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void Warehouse::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// string name = 3;
inline void Warehouse::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Warehouse::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Warehouse.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Warehouse::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.Warehouse.name)
}
inline std::string* Warehouse::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:warehouse.Warehouse.name)
  return _s;
}
inline const std::string& Warehouse::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Warehouse::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Warehouse::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Warehouse::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.Warehouse.name)
  return _impl_.name_.Release();
}
inline void Warehouse::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.Warehouse.name)
}

// .organization.AddressModel address = 4;
inline bool Warehouse::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline const ::organization::AddressModel& Warehouse::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::AddressModel* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::AddressModel&>(::organization::_AddressModel_default_instance_);
}
inline const ::organization::AddressModel& Warehouse::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Warehouse.address)
  return _internal_address();
}
inline void Warehouse::unsafe_arena_set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.Warehouse.address)
}
inline ::organization::AddressModel* Warehouse::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* released = _impl_.address_;
  _impl_.address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::AddressModel* Warehouse::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.Warehouse.address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::organization::AddressModel* Warehouse::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::AddressModel>(GetArena());
    _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(p);
  }
  return _impl_.address_;
}
inline ::organization::AddressModel* Warehouse::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::AddressModel* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:warehouse.Warehouse.address)
  return _msg;
}
inline void Warehouse::set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.Warehouse.address)
}

// int64 count = 5;
inline void Warehouse::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = ::int64_t{0};
}
inline ::int64_t Warehouse::count() const {
  // @@protoc_insertion_point(field_get:warehouse.Warehouse.count)
  return _internal_count();
}
inline void Warehouse::set_count(::int64_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:warehouse.Warehouse.count)
}
inline ::int64_t Warehouse::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void Warehouse::_internal_set_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// repeated .warehouse.WarehouseProducts products = 6;
inline int Warehouse::_internal_products_size() const {
  return _internal_products().size();
}
inline int Warehouse::products_size() const {
  return _internal_products_size();
}
inline void Warehouse::clear_products() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.products_.Clear();
}
inline ::warehouse::WarehouseProducts* Warehouse::mutable_products(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:warehouse.Warehouse.products)
  return _internal_mutable_products()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>* Warehouse::mutable_products()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:warehouse.Warehouse.products)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_products();
}
inline const ::warehouse::WarehouseProducts& Warehouse::products(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Warehouse.products)
  return _internal_products().Get(index);
}
inline ::warehouse::WarehouseProducts* Warehouse::add_products() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::warehouse::WarehouseProducts* _add = _internal_mutable_products()->Add();
  // @@protoc_insertion_point(field_add:warehouse.Warehouse.products)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>& Warehouse::products() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:warehouse.Warehouse.products)
  return _internal_products();
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>&
Warehouse::_internal_products() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.products_;
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>*
Warehouse::_internal_mutable_products() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.products_;
}

// -------------------------------------------------------------------

// WarehouseAnalytics

// int64 product_count = 1;
inline void WarehouseAnalytics::clear_product_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_count_ = ::int64_t{0};
}
inline ::int64_t WarehouseAnalytics::product_count() const {
  // @@protoc_insertion_point(field_get:warehouse.WarehouseAnalytics.product_count)
  return _internal_product_count();
}
inline void WarehouseAnalytics::set_product_count(::int64_t value) {
  _internal_set_product_count(value);
  // @@protoc_insertion_point(field_set:warehouse.WarehouseAnalytics.product_count)
}
inline ::int64_t WarehouseAnalytics::_internal_product_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_count_;
}
inline void WarehouseAnalytics::_internal_set_product_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_count_ = value;
}

// float occupancy = 2;
inline void WarehouseAnalytics::clear_occupancy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.occupancy_ = 0;
}
inline float WarehouseAnalytics::occupancy() const {
  // @@protoc_insertion_point(field_get:warehouse.WarehouseAnalytics.occupancy)
  return _internal_occupancy();
}
inline void WarehouseAnalytics::set_occupancy(float value) {
  _internal_set_occupancy(value);
  // @@protoc_insertion_point(field_set:warehouse.WarehouseAnalytics.occupancy)
}
inline float WarehouseAnalytics::_internal_occupancy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.occupancy_;
}
inline void WarehouseAnalytics::_internal_set_occupancy(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.occupancy_ = value;
}

// float defect_rate = 3;
inline void WarehouseAnalytics::clear_defect_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.defect_rate_ = 0;
}
inline float WarehouseAnalytics::defect_rate() const {
  // @@protoc_insertion_point(field_get:warehouse.WarehouseAnalytics.defect_rate)
  return _internal_defect_rate();
}
inline void WarehouseAnalytics::set_defect_rate(float value) {
  _internal_set_defect_rate(value);
  // @@protoc_insertion_point(field_set:warehouse.WarehouseAnalytics.defect_rate)
}
inline float WarehouseAnalytics::_internal_defect_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.defect_rate_;
}
inline void WarehouseAnalytics::_internal_set_defect_rate(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.defect_rate_ = value;
}

// -------------------------------------------------------------------

// WarehouseProducts

// int64 id = 1;
inline void WarehouseProducts::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t WarehouseProducts::id() const {
  // @@protoc_insertion_point(field_get:warehouse.WarehouseProducts.id)
  return _internal_id();
}
inline void WarehouseProducts::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.WarehouseProducts.id)
}
inline ::int64_t WarehouseProducts::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void WarehouseProducts::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 product_id = 2;
inline void WarehouseProducts::clear_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = ::int64_t{0};
}
inline ::int64_t WarehouseProducts::product_id() const {
  // @@protoc_insertion_point(field_get:warehouse.WarehouseProducts.product_id)
  return _internal_product_id();
}
inline void WarehouseProducts::set_product_id(::int64_t value) {
  _internal_set_product_id(value);
  // @@protoc_insertion_point(field_set:warehouse.WarehouseProducts.product_id)
}
inline ::int64_t WarehouseProducts::_internal_product_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_id_;
}
inline void WarehouseProducts::_internal_set_product_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = value;
}

// int64 quantity = 3;
inline void WarehouseProducts::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = ::int64_t{0};
}
inline ::int64_t WarehouseProducts::quantity() const {
  // @@protoc_insertion_point(field_get:warehouse.WarehouseProducts.quantity)
  return _internal_quantity();
}
inline void WarehouseProducts::set_quantity(::int64_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:warehouse.WarehouseProducts.quantity)
}
inline ::int64_t WarehouseProducts::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void WarehouseProducts::_internal_set_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// .product.Product product = 4;
inline bool WarehouseProducts::has_product() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_ != nullptr);
  return value;
}
inline const ::product::Product& WarehouseProducts::_internal_product() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::Product* p = _impl_.product_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::Product&>(::product::_Product_default_instance_);
}
inline const ::product::Product& WarehouseProducts::product() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.WarehouseProducts.product)
  return _internal_product();
}
inline void WarehouseProducts::unsafe_arena_set_allocated_product(::product::Product* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }
  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.WarehouseProducts.product)
}
inline ::product::Product* WarehouseProducts::release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* released = _impl_.product_;
  _impl_.product_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::Product* WarehouseProducts::unsafe_arena_release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.WarehouseProducts.product)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* temp = _impl_.product_;
  _impl_.product_ = nullptr;
  return temp;
}
inline ::product::Product* WarehouseProducts::_internal_mutable_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::Product>(GetArena());
    _impl_.product_ = reinterpret_cast<::product::Product*>(p);
  }
  return _impl_.product_;
}
inline ::product::Product* WarehouseProducts::mutable_product() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::product::Product* _msg = _internal_mutable_product();
  // @@protoc_insertion_point(field_mutable:warehouse.WarehouseProducts.product)
  return _msg;
}
inline void WarehouseProducts::set_allocated_product(::product::Product* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.WarehouseProducts.product)
}

// -------------------------------------------------------------------

// Acceptance

// int64 id = 1;
inline void Acceptance::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t Acceptance::id() const {
  // @@protoc_insertion_point(field_get:warehouse.Acceptance.id)
  return _internal_id();
}
inline void Acceptance::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.Acceptance.id)
}
inline ::int64_t Acceptance::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Acceptance::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .organization.Organization organization = 2;
inline bool Acceptance::has_organization() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.organization_ != nullptr);
  return value;
}
inline const ::organization::Organization& Acceptance::_internal_organization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Organization* p = _impl_.organization_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Organization&>(::organization::_Organization_default_instance_);
}
inline const ::organization::Organization& Acceptance::organization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Acceptance.organization)
  return _internal_organization();
}
inline void Acceptance::unsafe_arena_set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.organization_);
  }
  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.Acceptance.organization)
}
inline ::organization::Organization* Acceptance::release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::organization::Organization* released = _impl_.organization_;
  _impl_.organization_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Organization* Acceptance::unsafe_arena_release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.Acceptance.organization)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::organization::Organization* temp = _impl_.organization_;
  _impl_.organization_ = nullptr;
  return temp;
}
inline ::organization::Organization* Acceptance::_internal_mutable_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.organization_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Organization>(GetArena());
    _impl_.organization_ = reinterpret_cast<::organization::Organization*>(p);
  }
  return _impl_.organization_;
}
inline ::organization::Organization* Acceptance::mutable_organization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::organization::Organization* _msg = _internal_mutable_organization();
  // @@protoc_insertion_point(field_mutable:warehouse.Acceptance.organization)
  return _msg;
}
inline void Acceptance::set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.organization_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.Acceptance.organization)
}

// .organization.Organization counterparty = 3;
inline bool Acceptance::has_counterparty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.counterparty_ != nullptr);
  return value;
}
inline const ::organization::Organization& Acceptance::_internal_counterparty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Organization* p = _impl_.counterparty_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Organization&>(::organization::_Organization_default_instance_);
}
inline const ::organization::Organization& Acceptance::counterparty() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Acceptance.counterparty)
  return _internal_counterparty();
}
inline void Acceptance::unsafe_arena_set_allocated_counterparty(::organization::Organization* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.counterparty_);
  }
  _impl_.counterparty_ = reinterpret_cast<::organization::Organization*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.Acceptance.counterparty)
}
inline ::organization::Organization* Acceptance::release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::organization::Organization* released = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Organization* Acceptance::unsafe_arena_release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.Acceptance.counterparty)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::organization::Organization* temp = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  return temp;
}
inline ::organization::Organization* Acceptance::_internal_mutable_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counterparty_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Organization>(GetArena());
    _impl_.counterparty_ = reinterpret_cast<::organization::Organization*>(p);
  }
  return _impl_.counterparty_;
}
inline ::organization::Organization* Acceptance::mutable_counterparty() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::organization::Organization* _msg = _internal_mutable_counterparty();
  // @@protoc_insertion_point(field_mutable:warehouse.Acceptance.counterparty)
  return _msg;
}
inline void Acceptance::set_allocated_counterparty(::organization::Organization* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.counterparty_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.counterparty_ = reinterpret_cast<::organization::Organization*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.Acceptance.counterparty)
}

// .warehouse.Warehouse warehouse = 4;
inline bool Acceptance::has_warehouse() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.warehouse_ != nullptr);
  return value;
}
inline void Acceptance::clear_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.warehouse_ != nullptr) _impl_.warehouse_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::warehouse::Warehouse& Acceptance::_internal_warehouse() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::Warehouse* p = _impl_.warehouse_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::Warehouse&>(::warehouse::_Warehouse_default_instance_);
}
inline const ::warehouse::Warehouse& Acceptance::warehouse() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Acceptance.warehouse)
  return _internal_warehouse();
}
inline void Acceptance::unsafe_arena_set_allocated_warehouse(::warehouse::Warehouse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.warehouse_);
  }
  _impl_.warehouse_ = reinterpret_cast<::warehouse::Warehouse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.Acceptance.warehouse)
}
inline ::warehouse::Warehouse* Acceptance::release_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::warehouse::Warehouse* released = _impl_.warehouse_;
  _impl_.warehouse_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::Warehouse* Acceptance::unsafe_arena_release_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.Acceptance.warehouse)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::warehouse::Warehouse* temp = _impl_.warehouse_;
  _impl_.warehouse_ = nullptr;
  return temp;
}
inline ::warehouse::Warehouse* Acceptance::_internal_mutable_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.warehouse_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::Warehouse>(GetArena());
    _impl_.warehouse_ = reinterpret_cast<::warehouse::Warehouse*>(p);
  }
  return _impl_.warehouse_;
}
inline ::warehouse::Warehouse* Acceptance::mutable_warehouse() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::warehouse::Warehouse* _msg = _internal_mutable_warehouse();
  // @@protoc_insertion_point(field_mutable:warehouse.Acceptance.warehouse)
  return _msg;
}
inline void Acceptance::set_allocated_warehouse(::warehouse::Warehouse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.warehouse_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.warehouse_ = reinterpret_cast<::warehouse::Warehouse*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.Acceptance.warehouse)
}

// optional string document_url = 5;
inline bool Acceptance::has_document_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Acceptance::clear_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Acceptance::document_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Acceptance.document_url)
  return _internal_document_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Acceptance::set_document_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.document_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.Acceptance.document_url)
}
inline std::string* Acceptance::mutable_document_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_document_url();
  // @@protoc_insertion_point(field_mutable:warehouse.Acceptance.document_url)
  return _s;
}
inline const std::string& Acceptance::_internal_document_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.document_url_.Get();
}
inline void Acceptance::_internal_set_document_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.document_url_.Set(value, GetArena());
}
inline std::string* Acceptance::_internal_mutable_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.document_url_.Mutable( GetArena());
}
inline std::string* Acceptance::release_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.Acceptance.document_url)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.document_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.document_url_.Set("", GetArena());
  }
  return released;
}
inline void Acceptance::set_allocated_document_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.document_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.document_url_.IsDefault()) {
    _impl_.document_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.Acceptance.document_url)
}

// .user.User user = 6;
inline bool Acceptance::has_user() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.user_ != nullptr);
  return value;
}
inline const ::user::User& Acceptance::_internal_user() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::user::User* p = _impl_.user_;
  return p != nullptr ? *p : reinterpret_cast<const ::user::User&>(::user::_User_default_instance_);
}
inline const ::user::User& Acceptance::user() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Acceptance.user)
  return _internal_user();
}
inline void Acceptance::unsafe_arena_set_allocated_user(::user::User* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.user_);
  }
  _impl_.user_ = reinterpret_cast<::user::User*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.Acceptance.user)
}
inline ::user::User* Acceptance::release_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::user::User* released = _impl_.user_;
  _impl_.user_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::user::User* Acceptance::unsafe_arena_release_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.Acceptance.user)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::user::User* temp = _impl_.user_;
  _impl_.user_ = nullptr;
  return temp;
}
inline ::user::User* Acceptance::_internal_mutable_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.user_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::user::User>(GetArena());
    _impl_.user_ = reinterpret_cast<::user::User*>(p);
  }
  return _impl_.user_;
}
inline ::user::User* Acceptance::mutable_user() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::user::User* _msg = _internal_mutable_user();
  // @@protoc_insertion_point(field_mutable:warehouse.Acceptance.user)
  return _msg;
}
inline void Acceptance::set_allocated_user(::user::User* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.user_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.user_ = reinterpret_cast<::user::User*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.Acceptance.user)
}

// repeated .warehouse.AcceptanceProduct products = 7;
inline int Acceptance::_internal_products_size() const {
  return _internal_products().size();
}
inline int Acceptance::products_size() const {
  return _internal_products_size();
}
inline void Acceptance::clear_products() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.products_.Clear();
}
inline ::warehouse::AcceptanceProduct* Acceptance::mutable_products(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:warehouse.Acceptance.products)
  return _internal_mutable_products()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProduct>* Acceptance::mutable_products()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:warehouse.Acceptance.products)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_products();
}
inline const ::warehouse::AcceptanceProduct& Acceptance::products(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Acceptance.products)
  return _internal_products().Get(index);
}
inline ::warehouse::AcceptanceProduct* Acceptance::add_products() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::warehouse::AcceptanceProduct* _add = _internal_mutable_products()->Add();
  // @@protoc_insertion_point(field_add:warehouse.Acceptance.products)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProduct>& Acceptance::products() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:warehouse.Acceptance.products)
  return _internal_products();
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProduct>&
Acceptance::_internal_products() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.products_;
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProduct>*
Acceptance::_internal_mutable_products() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.products_;
}

// string created_at = 8;
inline void Acceptance::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& Acceptance::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Acceptance.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Acceptance::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.Acceptance.created_at)
}
inline std::string* Acceptance::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:warehouse.Acceptance.created_at)
  return _s;
}
inline const std::string& Acceptance::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void Acceptance::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* Acceptance::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* Acceptance::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.Acceptance.created_at)
  return _impl_.created_at_.Release();
}
inline void Acceptance::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.Acceptance.created_at)
}

// int64 amount = 9;
inline void Acceptance::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = ::int64_t{0};
}
inline ::int64_t Acceptance::amount() const {
  // @@protoc_insertion_point(field_get:warehouse.Acceptance.amount)
  return _internal_amount();
}
inline void Acceptance::set_amount(::int64_t value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:warehouse.Acceptance.amount)
}
inline ::int64_t Acceptance::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_;
}
inline void Acceptance::_internal_set_amount(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = value;
}

// -------------------------------------------------------------------

// AcceptanceModel

// int64 id = 1;
inline void AcceptanceModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t AcceptanceModel::id() const {
  // @@protoc_insertion_point(field_get:warehouse.AcceptanceModel.id)
  return _internal_id();
}
inline void AcceptanceModel::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.AcceptanceModel.id)
}
inline ::int64_t AcceptanceModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void AcceptanceModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 organization_id = 2;
inline void AcceptanceModel::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t AcceptanceModel::organization_id() const {
  // @@protoc_insertion_point(field_get:warehouse.AcceptanceModel.organization_id)
  return _internal_organization_id();
}
inline void AcceptanceModel::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:warehouse.AcceptanceModel.organization_id)
}
inline ::int64_t AcceptanceModel::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void AcceptanceModel::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// int64 counterparty_id = 3;
inline void AcceptanceModel::clear_counterparty_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counterparty_id_ = ::int64_t{0};
}
inline ::int64_t AcceptanceModel::counterparty_id() const {
  // @@protoc_insertion_point(field_get:warehouse.AcceptanceModel.counterparty_id)
  return _internal_counterparty_id();
}
inline void AcceptanceModel::set_counterparty_id(::int64_t value) {
  _internal_set_counterparty_id(value);
  // @@protoc_insertion_point(field_set:warehouse.AcceptanceModel.counterparty_id)
}
inline ::int64_t AcceptanceModel::_internal_counterparty_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.counterparty_id_;
}
inline void AcceptanceModel::_internal_set_counterparty_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counterparty_id_ = value;
}

// int64 warehouse_id = 4;
inline void AcceptanceModel::clear_warehouse_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warehouse_id_ = ::int64_t{0};
}
inline ::int64_t AcceptanceModel::warehouse_id() const {
  // @@protoc_insertion_point(field_get:warehouse.AcceptanceModel.warehouse_id)
  return _internal_warehouse_id();
}
inline void AcceptanceModel::set_warehouse_id(::int64_t value) {
  _internal_set_warehouse_id(value);
  // @@protoc_insertion_point(field_set:warehouse.AcceptanceModel.warehouse_id)
}
inline ::int64_t AcceptanceModel::_internal_warehouse_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.warehouse_id_;
}
inline void AcceptanceModel::_internal_set_warehouse_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warehouse_id_ = value;
}

// optional string document_url = 5;
inline bool AcceptanceModel::has_document_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AcceptanceModel::clear_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AcceptanceModel::document_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.AcceptanceModel.document_url)
  return _internal_document_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AcceptanceModel::set_document_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.document_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.AcceptanceModel.document_url)
}
inline std::string* AcceptanceModel::mutable_document_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_document_url();
  // @@protoc_insertion_point(field_mutable:warehouse.AcceptanceModel.document_url)
  return _s;
}
inline const std::string& AcceptanceModel::_internal_document_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.document_url_.Get();
}
inline void AcceptanceModel::_internal_set_document_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.document_url_.Set(value, GetArena());
}
inline std::string* AcceptanceModel::_internal_mutable_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.document_url_.Mutable( GetArena());
}
inline std::string* AcceptanceModel::release_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.AcceptanceModel.document_url)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.document_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.document_url_.Set("", GetArena());
  }
  return released;
}
inline void AcceptanceModel::set_allocated_document_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.document_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.document_url_.IsDefault()) {
    _impl_.document_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.AcceptanceModel.document_url)
}

// int64 user_id = 6;
inline void AcceptanceModel::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = ::int64_t{0};
}
inline ::int64_t AcceptanceModel::user_id() const {
  // @@protoc_insertion_point(field_get:warehouse.AcceptanceModel.user_id)
  return _internal_user_id();
}
inline void AcceptanceModel::set_user_id(::int64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:warehouse.AcceptanceModel.user_id)
}
inline ::int64_t AcceptanceModel::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_;
}
inline void AcceptanceModel::_internal_set_user_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = value;
}

// string created_at = 7;
inline void AcceptanceModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& AcceptanceModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.AcceptanceModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AcceptanceModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.AcceptanceModel.created_at)
}
inline std::string* AcceptanceModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:warehouse.AcceptanceModel.created_at)
  return _s;
}
inline const std::string& AcceptanceModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void AcceptanceModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* AcceptanceModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* AcceptanceModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.AcceptanceModel.created_at)
  return _impl_.created_at_.Release();
}
inline void AcceptanceModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.AcceptanceModel.created_at)
}

// -------------------------------------------------------------------

// AcceptanceProduct

// int64 id = 1;
inline void AcceptanceProduct::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t AcceptanceProduct::id() const {
  // @@protoc_insertion_point(field_get:warehouse.AcceptanceProduct.id)
  return _internal_id();
}
inline void AcceptanceProduct::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.AcceptanceProduct.id)
}
inline ::int64_t AcceptanceProduct::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void AcceptanceProduct::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .product.Product product = 2;
inline bool AcceptanceProduct::has_product() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_ != nullptr);
  return value;
}
inline const ::product::Product& AcceptanceProduct::_internal_product() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::Product* p = _impl_.product_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::Product&>(::product::_Product_default_instance_);
}
inline const ::product::Product& AcceptanceProduct::product() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.AcceptanceProduct.product)
  return _internal_product();
}
inline void AcceptanceProduct::unsafe_arena_set_allocated_product(::product::Product* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }
  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.AcceptanceProduct.product)
}
inline ::product::Product* AcceptanceProduct::release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* released = _impl_.product_;
  _impl_.product_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::Product* AcceptanceProduct::unsafe_arena_release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.AcceptanceProduct.product)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* temp = _impl_.product_;
  _impl_.product_ = nullptr;
  return temp;
}
inline ::product::Product* AcceptanceProduct::_internal_mutable_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::Product>(GetArena());
    _impl_.product_ = reinterpret_cast<::product::Product*>(p);
  }
  return _impl_.product_;
}
inline ::product::Product* AcceptanceProduct::mutable_product() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::product::Product* _msg = _internal_mutable_product();
  // @@protoc_insertion_point(field_mutable:warehouse.AcceptanceProduct.product)
  return _msg;
}
inline void AcceptanceProduct::set_allocated_product(::product::Product* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.AcceptanceProduct.product)
}

// int64 quantity = 3;
inline void AcceptanceProduct::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = ::int64_t{0};
}
inline ::int64_t AcceptanceProduct::quantity() const {
  // @@protoc_insertion_point(field_get:warehouse.AcceptanceProduct.quantity)
  return _internal_quantity();
}
inline void AcceptanceProduct::set_quantity(::int64_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:warehouse.AcceptanceProduct.quantity)
}
inline ::int64_t AcceptanceProduct::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void AcceptanceProduct::_internal_set_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// float price = 4;
inline void AcceptanceProduct::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0;
}
inline float AcceptanceProduct::price() const {
  // @@protoc_insertion_point(field_get:warehouse.AcceptanceProduct.price)
  return _internal_price();
}
inline void AcceptanceProduct::set_price(float value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:warehouse.AcceptanceProduct.price)
}
inline float AcceptanceProduct::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void AcceptanceProduct::_internal_set_price(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// -------------------------------------------------------------------

// AcceptanceProductModel

// int64 id = 1;
inline void AcceptanceProductModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t AcceptanceProductModel::id() const {
  // @@protoc_insertion_point(field_get:warehouse.AcceptanceProductModel.id)
  return _internal_id();
}
inline void AcceptanceProductModel::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.AcceptanceProductModel.id)
}
inline ::int64_t AcceptanceProductModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void AcceptanceProductModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 product_id = 2;
inline void AcceptanceProductModel::clear_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = ::int64_t{0};
}
inline ::int64_t AcceptanceProductModel::product_id() const {
  // @@protoc_insertion_point(field_get:warehouse.AcceptanceProductModel.product_id)
  return _internal_product_id();
}
inline void AcceptanceProductModel::set_product_id(::int64_t value) {
  _internal_set_product_id(value);
  // @@protoc_insertion_point(field_set:warehouse.AcceptanceProductModel.product_id)
}
inline ::int64_t AcceptanceProductModel::_internal_product_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_id_;
}
inline void AcceptanceProductModel::_internal_set_product_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = value;
}

// int64 quantity = 3;
inline void AcceptanceProductModel::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = ::int64_t{0};
}
inline ::int64_t AcceptanceProductModel::quantity() const {
  // @@protoc_insertion_point(field_get:warehouse.AcceptanceProductModel.quantity)
  return _internal_quantity();
}
inline void AcceptanceProductModel::set_quantity(::int64_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:warehouse.AcceptanceProductModel.quantity)
}
inline ::int64_t AcceptanceProductModel::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void AcceptanceProductModel::_internal_set_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// float price = 4;
inline void AcceptanceProductModel::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0;
}
inline float AcceptanceProductModel::price() const {
  // @@protoc_insertion_point(field_get:warehouse.AcceptanceProductModel.price)
  return _internal_price();
}
inline void AcceptanceProductModel::set_price(float value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:warehouse.AcceptanceProductModel.price)
}
inline float AcceptanceProductModel::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void AcceptanceProductModel::_internal_set_price(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// -------------------------------------------------------------------

// WriteOff

// int64 id = 1;
inline void WriteOff::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t WriteOff::id() const {
  // @@protoc_insertion_point(field_get:warehouse.WriteOff.id)
  return _internal_id();
}
inline void WriteOff::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.WriteOff.id)
}
inline ::int64_t WriteOff::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void WriteOff::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .organization.Organization organization = 2;
inline bool WriteOff::has_organization() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.organization_ != nullptr);
  return value;
}
inline const ::organization::Organization& WriteOff::_internal_organization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Organization* p = _impl_.organization_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Organization&>(::organization::_Organization_default_instance_);
}
inline const ::organization::Organization& WriteOff::organization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.WriteOff.organization)
  return _internal_organization();
}
inline void WriteOff::unsafe_arena_set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.organization_);
  }
  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.WriteOff.organization)
}
inline ::organization::Organization* WriteOff::release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::organization::Organization* released = _impl_.organization_;
  _impl_.organization_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Organization* WriteOff::unsafe_arena_release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.WriteOff.organization)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::organization::Organization* temp = _impl_.organization_;
  _impl_.organization_ = nullptr;
  return temp;
}
inline ::organization::Organization* WriteOff::_internal_mutable_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.organization_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Organization>(GetArena());
    _impl_.organization_ = reinterpret_cast<::organization::Organization*>(p);
  }
  return _impl_.organization_;
}
inline ::organization::Organization* WriteOff::mutable_organization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::organization::Organization* _msg = _internal_mutable_organization();
  // @@protoc_insertion_point(field_mutable:warehouse.WriteOff.organization)
  return _msg;
}
inline void WriteOff::set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.organization_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.WriteOff.organization)
}

// .warehouse.Warehouse warehouse = 3;
inline bool WriteOff::has_warehouse() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.warehouse_ != nullptr);
  return value;
}
inline void WriteOff::clear_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.warehouse_ != nullptr) _impl_.warehouse_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::warehouse::Warehouse& WriteOff::_internal_warehouse() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::Warehouse* p = _impl_.warehouse_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::Warehouse&>(::warehouse::_Warehouse_default_instance_);
}
inline const ::warehouse::Warehouse& WriteOff::warehouse() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.WriteOff.warehouse)
  return _internal_warehouse();
}
inline void WriteOff::unsafe_arena_set_allocated_warehouse(::warehouse::Warehouse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.warehouse_);
  }
  _impl_.warehouse_ = reinterpret_cast<::warehouse::Warehouse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.WriteOff.warehouse)
}
inline ::warehouse::Warehouse* WriteOff::release_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::warehouse::Warehouse* released = _impl_.warehouse_;
  _impl_.warehouse_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::Warehouse* WriteOff::unsafe_arena_release_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.WriteOff.warehouse)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::warehouse::Warehouse* temp = _impl_.warehouse_;
  _impl_.warehouse_ = nullptr;
  return temp;
}
inline ::warehouse::Warehouse* WriteOff::_internal_mutable_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.warehouse_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::Warehouse>(GetArena());
    _impl_.warehouse_ = reinterpret_cast<::warehouse::Warehouse*>(p);
  }
  return _impl_.warehouse_;
}
inline ::warehouse::Warehouse* WriteOff::mutable_warehouse() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::warehouse::Warehouse* _msg = _internal_mutable_warehouse();
  // @@protoc_insertion_point(field_mutable:warehouse.WriteOff.warehouse)
  return _msg;
}
inline void WriteOff::set_allocated_warehouse(::warehouse::Warehouse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.warehouse_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.warehouse_ = reinterpret_cast<::warehouse::Warehouse*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.WriteOff.warehouse)
}

// optional string document_url = 4;
inline bool WriteOff::has_document_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void WriteOff::clear_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& WriteOff::document_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.WriteOff.document_url)
  return _internal_document_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WriteOff::set_document_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.document_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.WriteOff.document_url)
}
inline std::string* WriteOff::mutable_document_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_document_url();
  // @@protoc_insertion_point(field_mutable:warehouse.WriteOff.document_url)
  return _s;
}
inline const std::string& WriteOff::_internal_document_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.document_url_.Get();
}
inline void WriteOff::_internal_set_document_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.document_url_.Set(value, GetArena());
}
inline std::string* WriteOff::_internal_mutable_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.document_url_.Mutable( GetArena());
}
inline std::string* WriteOff::release_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.WriteOff.document_url)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.document_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.document_url_.Set("", GetArena());
  }
  return released;
}
inline void WriteOff::set_allocated_document_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.document_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.document_url_.IsDefault()) {
    _impl_.document_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.WriteOff.document_url)
}

// .user.User user = 5;
inline bool WriteOff::has_user() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.user_ != nullptr);
  return value;
}
inline const ::user::User& WriteOff::_internal_user() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::user::User* p = _impl_.user_;
  return p != nullptr ? *p : reinterpret_cast<const ::user::User&>(::user::_User_default_instance_);
}
inline const ::user::User& WriteOff::user() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.WriteOff.user)
  return _internal_user();
}
inline void WriteOff::unsafe_arena_set_allocated_user(::user::User* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.user_);
  }
  _impl_.user_ = reinterpret_cast<::user::User*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.WriteOff.user)
}
inline ::user::User* WriteOff::release_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::user::User* released = _impl_.user_;
  _impl_.user_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::user::User* WriteOff::unsafe_arena_release_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.WriteOff.user)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::user::User* temp = _impl_.user_;
  _impl_.user_ = nullptr;
  return temp;
}
inline ::user::User* WriteOff::_internal_mutable_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.user_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::user::User>(GetArena());
    _impl_.user_ = reinterpret_cast<::user::User*>(p);
  }
  return _impl_.user_;
}
inline ::user::User* WriteOff::mutable_user() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::user::User* _msg = _internal_mutable_user();
  // @@protoc_insertion_point(field_mutable:warehouse.WriteOff.user)
  return _msg;
}
inline void WriteOff::set_allocated_user(::user::User* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.user_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.user_ = reinterpret_cast<::user::User*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.WriteOff.user)
}

// repeated .warehouse.WriteOffProduct products = 6;
inline int WriteOff::_internal_products_size() const {
  return _internal_products().size();
}
inline int WriteOff::products_size() const {
  return _internal_products_size();
}
inline void WriteOff::clear_products() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.products_.Clear();
}
inline ::warehouse::WriteOffProduct* WriteOff::mutable_products(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:warehouse.WriteOff.products)
  return _internal_mutable_products()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::WriteOffProduct>* WriteOff::mutable_products()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:warehouse.WriteOff.products)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_products();
}
inline const ::warehouse::WriteOffProduct& WriteOff::products(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.WriteOff.products)
  return _internal_products().Get(index);
}
inline ::warehouse::WriteOffProduct* WriteOff::add_products() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::warehouse::WriteOffProduct* _add = _internal_mutable_products()->Add();
  // @@protoc_insertion_point(field_add:warehouse.WriteOff.products)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::WriteOffProduct>& WriteOff::products() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:warehouse.WriteOff.products)
  return _internal_products();
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::WriteOffProduct>&
WriteOff::_internal_products() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.products_;
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::WriteOffProduct>*
WriteOff::_internal_mutable_products() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.products_;
}

// string created_at = 7;
inline void WriteOff::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& WriteOff::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.WriteOff.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WriteOff::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.WriteOff.created_at)
}
inline std::string* WriteOff::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:warehouse.WriteOff.created_at)
  return _s;
}
inline const std::string& WriteOff::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void WriteOff::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* WriteOff::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* WriteOff::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.WriteOff.created_at)
  return _impl_.created_at_.Release();
}
inline void WriteOff::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.WriteOff.created_at)
}

// int64 amount = 8;
inline void WriteOff::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = ::int64_t{0};
}
inline ::int64_t WriteOff::amount() const {
  // @@protoc_insertion_point(field_get:warehouse.WriteOff.amount)
  return _internal_amount();
}
inline void WriteOff::set_amount(::int64_t value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:warehouse.WriteOff.amount)
}
inline ::int64_t WriteOff::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_;
}
inline void WriteOff::_internal_set_amount(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = value;
}

// -------------------------------------------------------------------

// WriteOffModel

// int64 id = 1;
inline void WriteOffModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t WriteOffModel::id() const {
  // @@protoc_insertion_point(field_get:warehouse.WriteOffModel.id)
  return _internal_id();
}
inline void WriteOffModel::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.WriteOffModel.id)
}
inline ::int64_t WriteOffModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void WriteOffModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 organization_id = 2;
inline void WriteOffModel::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t WriteOffModel::organization_id() const {
  // @@protoc_insertion_point(field_get:warehouse.WriteOffModel.organization_id)
  return _internal_organization_id();
}
inline void WriteOffModel::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:warehouse.WriteOffModel.organization_id)
}
inline ::int64_t WriteOffModel::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void WriteOffModel::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// int64 warehouse_id = 4;
inline void WriteOffModel::clear_warehouse_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warehouse_id_ = ::int64_t{0};
}
inline ::int64_t WriteOffModel::warehouse_id() const {
  // @@protoc_insertion_point(field_get:warehouse.WriteOffModel.warehouse_id)
  return _internal_warehouse_id();
}
inline void WriteOffModel::set_warehouse_id(::int64_t value) {
  _internal_set_warehouse_id(value);
  // @@protoc_insertion_point(field_set:warehouse.WriteOffModel.warehouse_id)
}
inline ::int64_t WriteOffModel::_internal_warehouse_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.warehouse_id_;
}
inline void WriteOffModel::_internal_set_warehouse_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warehouse_id_ = value;
}

// optional string document_url = 5;
inline bool WriteOffModel::has_document_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void WriteOffModel::clear_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& WriteOffModel::document_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.WriteOffModel.document_url)
  return _internal_document_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WriteOffModel::set_document_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.document_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.WriteOffModel.document_url)
}
inline std::string* WriteOffModel::mutable_document_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_document_url();
  // @@protoc_insertion_point(field_mutable:warehouse.WriteOffModel.document_url)
  return _s;
}
inline const std::string& WriteOffModel::_internal_document_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.document_url_.Get();
}
inline void WriteOffModel::_internal_set_document_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.document_url_.Set(value, GetArena());
}
inline std::string* WriteOffModel::_internal_mutable_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.document_url_.Mutable( GetArena());
}
inline std::string* WriteOffModel::release_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.WriteOffModel.document_url)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.document_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.document_url_.Set("", GetArena());
  }
  return released;
}
inline void WriteOffModel::set_allocated_document_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.document_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.document_url_.IsDefault()) {
    _impl_.document_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.WriteOffModel.document_url)
}

// int64 user_id = 6;
inline void WriteOffModel::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = ::int64_t{0};
}
inline ::int64_t WriteOffModel::user_id() const {
  // @@protoc_insertion_point(field_get:warehouse.WriteOffModel.user_id)
  return _internal_user_id();
}
inline void WriteOffModel::set_user_id(::int64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:warehouse.WriteOffModel.user_id)
}
inline ::int64_t WriteOffModel::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_;
}
inline void WriteOffModel::_internal_set_user_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = value;
}

// string created_at = 7;
inline void WriteOffModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& WriteOffModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.WriteOffModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WriteOffModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.WriteOffModel.created_at)
}
inline std::string* WriteOffModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:warehouse.WriteOffModel.created_at)
  return _s;
}
inline const std::string& WriteOffModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void WriteOffModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* WriteOffModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* WriteOffModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.WriteOffModel.created_at)
  return _impl_.created_at_.Release();
}
inline void WriteOffModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.WriteOffModel.created_at)
}

// repeated .warehouse.WriteOffProductModel write_off = 8;
inline int WriteOffModel::_internal_write_off_size() const {
  return _internal_write_off().size();
}
inline int WriteOffModel::write_off_size() const {
  return _internal_write_off_size();
}
inline void WriteOffModel::clear_write_off() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.write_off_.Clear();
}
inline ::warehouse::WriteOffProductModel* WriteOffModel::mutable_write_off(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:warehouse.WriteOffModel.write_off)
  return _internal_mutable_write_off()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::WriteOffProductModel>* WriteOffModel::mutable_write_off()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:warehouse.WriteOffModel.write_off)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_write_off();
}
inline const ::warehouse::WriteOffProductModel& WriteOffModel::write_off(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.WriteOffModel.write_off)
  return _internal_write_off().Get(index);
}
inline ::warehouse::WriteOffProductModel* WriteOffModel::add_write_off() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::warehouse::WriteOffProductModel* _add = _internal_mutable_write_off()->Add();
  // @@protoc_insertion_point(field_add:warehouse.WriteOffModel.write_off)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::WriteOffProductModel>& WriteOffModel::write_off() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:warehouse.WriteOffModel.write_off)
  return _internal_write_off();
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::WriteOffProductModel>&
WriteOffModel::_internal_write_off() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.write_off_;
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::WriteOffProductModel>*
WriteOffModel::_internal_mutable_write_off() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.write_off_;
}

// -------------------------------------------------------------------

// WriteOffProduct

// int64 id = 1;
inline void WriteOffProduct::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t WriteOffProduct::id() const {
  // @@protoc_insertion_point(field_get:warehouse.WriteOffProduct.id)
  return _internal_id();
}
inline void WriteOffProduct::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.WriteOffProduct.id)
}
inline ::int64_t WriteOffProduct::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void WriteOffProduct::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .product.Product product = 2;
inline bool WriteOffProduct::has_product() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_ != nullptr);
  return value;
}
inline const ::product::Product& WriteOffProduct::_internal_product() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::Product* p = _impl_.product_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::Product&>(::product::_Product_default_instance_);
}
inline const ::product::Product& WriteOffProduct::product() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.WriteOffProduct.product)
  return _internal_product();
}
inline void WriteOffProduct::unsafe_arena_set_allocated_product(::product::Product* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }
  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.WriteOffProduct.product)
}
inline ::product::Product* WriteOffProduct::release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* released = _impl_.product_;
  _impl_.product_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::Product* WriteOffProduct::unsafe_arena_release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.WriteOffProduct.product)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* temp = _impl_.product_;
  _impl_.product_ = nullptr;
  return temp;
}
inline ::product::Product* WriteOffProduct::_internal_mutable_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::Product>(GetArena());
    _impl_.product_ = reinterpret_cast<::product::Product*>(p);
  }
  return _impl_.product_;
}
inline ::product::Product* WriteOffProduct::mutable_product() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::product::Product* _msg = _internal_mutable_product();
  // @@protoc_insertion_point(field_mutable:warehouse.WriteOffProduct.product)
  return _msg;
}
inline void WriteOffProduct::set_allocated_product(::product::Product* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.WriteOffProduct.product)
}

// int64 quantity = 3;
inline void WriteOffProduct::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = ::int64_t{0};
}
inline ::int64_t WriteOffProduct::quantity() const {
  // @@protoc_insertion_point(field_get:warehouse.WriteOffProduct.quantity)
  return _internal_quantity();
}
inline void WriteOffProduct::set_quantity(::int64_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:warehouse.WriteOffProduct.quantity)
}
inline ::int64_t WriteOffProduct::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void WriteOffProduct::_internal_set_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// float price = 4;
inline void WriteOffProduct::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0;
}
inline float WriteOffProduct::price() const {
  // @@protoc_insertion_point(field_get:warehouse.WriteOffProduct.price)
  return _internal_price();
}
inline void WriteOffProduct::set_price(float value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:warehouse.WriteOffProduct.price)
}
inline float WriteOffProduct::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void WriteOffProduct::_internal_set_price(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// string reason = 5;
inline void WriteOffProduct::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
}
inline const std::string& WriteOffProduct::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.WriteOffProduct.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WriteOffProduct::set_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.WriteOffProduct.reason)
}
inline std::string* WriteOffProduct::mutable_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:warehouse.WriteOffProduct.reason)
  return _s;
}
inline const std::string& WriteOffProduct::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void WriteOffProduct::_internal_set_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(value, GetArena());
}
inline std::string* WriteOffProduct::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reason_.Mutable( GetArena());
}
inline std::string* WriteOffProduct::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.WriteOffProduct.reason)
  return _impl_.reason_.Release();
}
inline void WriteOffProduct::set_allocated_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.reason_.IsDefault()) {
    _impl_.reason_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.WriteOffProduct.reason)
}

// -------------------------------------------------------------------

// WriteOffProductModel

// int64 id = 1;
inline void WriteOffProductModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t WriteOffProductModel::id() const {
  // @@protoc_insertion_point(field_get:warehouse.WriteOffProductModel.id)
  return _internal_id();
}
inline void WriteOffProductModel::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.WriteOffProductModel.id)
}
inline ::int64_t WriteOffProductModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void WriteOffProductModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 product_id = 2;
inline void WriteOffProductModel::clear_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = ::int64_t{0};
}
inline ::int64_t WriteOffProductModel::product_id() const {
  // @@protoc_insertion_point(field_get:warehouse.WriteOffProductModel.product_id)
  return _internal_product_id();
}
inline void WriteOffProductModel::set_product_id(::int64_t value) {
  _internal_set_product_id(value);
  // @@protoc_insertion_point(field_set:warehouse.WriteOffProductModel.product_id)
}
inline ::int64_t WriteOffProductModel::_internal_product_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_id_;
}
inline void WriteOffProductModel::_internal_set_product_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = value;
}

// int64 quantity = 3;
inline void WriteOffProductModel::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = ::int64_t{0};
}
inline ::int64_t WriteOffProductModel::quantity() const {
  // @@protoc_insertion_point(field_get:warehouse.WriteOffProductModel.quantity)
  return _internal_quantity();
}
inline void WriteOffProductModel::set_quantity(::int64_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:warehouse.WriteOffProductModel.quantity)
}
inline ::int64_t WriteOffProductModel::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void WriteOffProductModel::_internal_set_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// float price = 4;
inline void WriteOffProductModel::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0;
}
inline float WriteOffProductModel::price() const {
  // @@protoc_insertion_point(field_get:warehouse.WriteOffProductModel.price)
  return _internal_price();
}
inline void WriteOffProductModel::set_price(float value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:warehouse.WriteOffProductModel.price)
}
inline float WriteOffProductModel::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void WriteOffProductModel::_internal_set_price(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// string reason = 5;
inline void WriteOffProductModel::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
}
inline const std::string& WriteOffProductModel::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.WriteOffProductModel.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WriteOffProductModel::set_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.WriteOffProductModel.reason)
}
inline std::string* WriteOffProductModel::mutable_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:warehouse.WriteOffProductModel.reason)
  return _s;
}
inline const std::string& WriteOffProductModel::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void WriteOffProductModel::_internal_set_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(value, GetArena());
}
inline std::string* WriteOffProductModel::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reason_.Mutable( GetArena());
}
inline std::string* WriteOffProductModel::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.WriteOffProductModel.reason)
  return _impl_.reason_.Release();
}
inline void WriteOffProductModel::set_allocated_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.reason_.IsDefault()) {
    _impl_.reason_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.WriteOffProductModel.reason)
}

// -------------------------------------------------------------------

// MovingModel

// int64 id = 1;
inline void MovingModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t MovingModel::id() const {
  // @@protoc_insertion_point(field_get:warehouse.MovingModel.id)
  return _internal_id();
}
inline void MovingModel::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.MovingModel.id)
}
inline ::int64_t MovingModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void MovingModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 organization_id = 2;
inline void MovingModel::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t MovingModel::organization_id() const {
  // @@protoc_insertion_point(field_get:warehouse.MovingModel.organization_id)
  return _internal_organization_id();
}
inline void MovingModel::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:warehouse.MovingModel.organization_id)
}
inline ::int64_t MovingModel::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void MovingModel::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// int64 to_warehouse_id = 3;
inline void MovingModel::clear_to_warehouse_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_warehouse_id_ = ::int64_t{0};
}
inline ::int64_t MovingModel::to_warehouse_id() const {
  // @@protoc_insertion_point(field_get:warehouse.MovingModel.to_warehouse_id)
  return _internal_to_warehouse_id();
}
inline void MovingModel::set_to_warehouse_id(::int64_t value) {
  _internal_set_to_warehouse_id(value);
  // @@protoc_insertion_point(field_set:warehouse.MovingModel.to_warehouse_id)
}
inline ::int64_t MovingModel::_internal_to_warehouse_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_warehouse_id_;
}
inline void MovingModel::_internal_set_to_warehouse_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_warehouse_id_ = value;
}

// int64 from_warehouse_id = 4;
inline void MovingModel::clear_from_warehouse_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_warehouse_id_ = ::int64_t{0};
}
inline ::int64_t MovingModel::from_warehouse_id() const {
  // @@protoc_insertion_point(field_get:warehouse.MovingModel.from_warehouse_id)
  return _internal_from_warehouse_id();
}
inline void MovingModel::set_from_warehouse_id(::int64_t value) {
  _internal_set_from_warehouse_id(value);
  // @@protoc_insertion_point(field_set:warehouse.MovingModel.from_warehouse_id)
}
inline ::int64_t MovingModel::_internal_from_warehouse_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_warehouse_id_;
}
inline void MovingModel::_internal_set_from_warehouse_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_warehouse_id_ = value;
}

// optional string document_url = 5;
inline bool MovingModel::has_document_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MovingModel::clear_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MovingModel::document_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.MovingModel.document_url)
  return _internal_document_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MovingModel::set_document_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.document_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.MovingModel.document_url)
}
inline std::string* MovingModel::mutable_document_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_document_url();
  // @@protoc_insertion_point(field_mutable:warehouse.MovingModel.document_url)
  return _s;
}
inline const std::string& MovingModel::_internal_document_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.document_url_.Get();
}
inline void MovingModel::_internal_set_document_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.document_url_.Set(value, GetArena());
}
inline std::string* MovingModel::_internal_mutable_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.document_url_.Mutable( GetArena());
}
inline std::string* MovingModel::release_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.MovingModel.document_url)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.document_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.document_url_.Set("", GetArena());
  }
  return released;
}
inline void MovingModel::set_allocated_document_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.document_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.document_url_.IsDefault()) {
    _impl_.document_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.MovingModel.document_url)
}

// repeated .warehouse.MovingProductModel moving_product_ids = 6;
inline int MovingModel::_internal_moving_product_ids_size() const {
  return _internal_moving_product_ids().size();
}
inline int MovingModel::moving_product_ids_size() const {
  return _internal_moving_product_ids_size();
}
inline void MovingModel::clear_moving_product_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.moving_product_ids_.Clear();
}
inline ::warehouse::MovingProductModel* MovingModel::mutable_moving_product_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:warehouse.MovingModel.moving_product_ids)
  return _internal_mutable_moving_product_ids()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::MovingProductModel>* MovingModel::mutable_moving_product_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:warehouse.MovingModel.moving_product_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_moving_product_ids();
}
inline const ::warehouse::MovingProductModel& MovingModel::moving_product_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.MovingModel.moving_product_ids)
  return _internal_moving_product_ids().Get(index);
}
inline ::warehouse::MovingProductModel* MovingModel::add_moving_product_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::warehouse::MovingProductModel* _add = _internal_mutable_moving_product_ids()->Add();
  // @@protoc_insertion_point(field_add:warehouse.MovingModel.moving_product_ids)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::MovingProductModel>& MovingModel::moving_product_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:warehouse.MovingModel.moving_product_ids)
  return _internal_moving_product_ids();
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::MovingProductModel>&
MovingModel::_internal_moving_product_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.moving_product_ids_;
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::MovingProductModel>*
MovingModel::_internal_mutable_moving_product_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.moving_product_ids_;
}

// string created_at = 7;
inline void MovingModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& MovingModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.MovingModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MovingModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.MovingModel.created_at)
}
inline std::string* MovingModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:warehouse.MovingModel.created_at)
  return _s;
}
inline const std::string& MovingModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void MovingModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* MovingModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* MovingModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.MovingModel.created_at)
  return _impl_.created_at_.Release();
}
inline void MovingModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.MovingModel.created_at)
}

// -------------------------------------------------------------------

// MovingProductModel

// int64 id = 1;
inline void MovingProductModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t MovingProductModel::id() const {
  // @@protoc_insertion_point(field_get:warehouse.MovingProductModel.id)
  return _internal_id();
}
inline void MovingProductModel::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.MovingProductModel.id)
}
inline ::int64_t MovingProductModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void MovingProductModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 product_id = 2;
inline void MovingProductModel::clear_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = ::int64_t{0};
}
inline ::int64_t MovingProductModel::product_id() const {
  // @@protoc_insertion_point(field_get:warehouse.MovingProductModel.product_id)
  return _internal_product_id();
}
inline void MovingProductModel::set_product_id(::int64_t value) {
  _internal_set_product_id(value);
  // @@protoc_insertion_point(field_set:warehouse.MovingProductModel.product_id)
}
inline ::int64_t MovingProductModel::_internal_product_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_id_;
}
inline void MovingProductModel::_internal_set_product_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = value;
}

// int64 quantity = 3;
inline void MovingProductModel::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = ::int64_t{0};
}
inline ::int64_t MovingProductModel::quantity() const {
  // @@protoc_insertion_point(field_get:warehouse.MovingProductModel.quantity)
  return _internal_quantity();
}
inline void MovingProductModel::set_quantity(::int64_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:warehouse.MovingProductModel.quantity)
}
inline ::int64_t MovingProductModel::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void MovingProductModel::_internal_set_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// float price = 4;
inline void MovingProductModel::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0;
}
inline float MovingProductModel::price() const {
  // @@protoc_insertion_point(field_get:warehouse.MovingProductModel.price)
  return _internal_price();
}
inline void MovingProductModel::set_price(float value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:warehouse.MovingProductModel.price)
}
inline float MovingProductModel::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void MovingProductModel::_internal_set_price(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// -------------------------------------------------------------------

// Moving

// int64 id = 1;
inline void Moving::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t Moving::id() const {
  // @@protoc_insertion_point(field_get:warehouse.Moving.id)
  return _internal_id();
}
inline void Moving::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.Moving.id)
}
inline ::int64_t Moving::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Moving::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .organization.Organization organization = 2;
inline bool Moving::has_organization() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.organization_ != nullptr);
  return value;
}
inline const ::organization::Organization& Moving::_internal_organization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Organization* p = _impl_.organization_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Organization&>(::organization::_Organization_default_instance_);
}
inline const ::organization::Organization& Moving::organization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Moving.organization)
  return _internal_organization();
}
inline void Moving::unsafe_arena_set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.organization_);
  }
  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.Moving.organization)
}
inline ::organization::Organization* Moving::release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::organization::Organization* released = _impl_.organization_;
  _impl_.organization_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Organization* Moving::unsafe_arena_release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.Moving.organization)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::organization::Organization* temp = _impl_.organization_;
  _impl_.organization_ = nullptr;
  return temp;
}
inline ::organization::Organization* Moving::_internal_mutable_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.organization_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Organization>(GetArena());
    _impl_.organization_ = reinterpret_cast<::organization::Organization*>(p);
  }
  return _impl_.organization_;
}
inline ::organization::Organization* Moving::mutable_organization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::organization::Organization* _msg = _internal_mutable_organization();
  // @@protoc_insertion_point(field_mutable:warehouse.Moving.organization)
  return _msg;
}
inline void Moving::set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.organization_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.Moving.organization)
}

// .warehouse.Warehouse to_warehouse = 3;
inline bool Moving::has_to_warehouse() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.to_warehouse_ != nullptr);
  return value;
}
inline void Moving::clear_to_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_warehouse_ != nullptr) _impl_.to_warehouse_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::warehouse::Warehouse& Moving::_internal_to_warehouse() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::Warehouse* p = _impl_.to_warehouse_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::Warehouse&>(::warehouse::_Warehouse_default_instance_);
}
inline const ::warehouse::Warehouse& Moving::to_warehouse() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Moving.to_warehouse)
  return _internal_to_warehouse();
}
inline void Moving::unsafe_arena_set_allocated_to_warehouse(::warehouse::Warehouse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.to_warehouse_);
  }
  _impl_.to_warehouse_ = reinterpret_cast<::warehouse::Warehouse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.Moving.to_warehouse)
}
inline ::warehouse::Warehouse* Moving::release_to_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::warehouse::Warehouse* released = _impl_.to_warehouse_;
  _impl_.to_warehouse_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::Warehouse* Moving::unsafe_arena_release_to_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.Moving.to_warehouse)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::warehouse::Warehouse* temp = _impl_.to_warehouse_;
  _impl_.to_warehouse_ = nullptr;
  return temp;
}
inline ::warehouse::Warehouse* Moving::_internal_mutable_to_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_warehouse_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::Warehouse>(GetArena());
    _impl_.to_warehouse_ = reinterpret_cast<::warehouse::Warehouse*>(p);
  }
  return _impl_.to_warehouse_;
}
inline ::warehouse::Warehouse* Moving::mutable_to_warehouse() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::warehouse::Warehouse* _msg = _internal_mutable_to_warehouse();
  // @@protoc_insertion_point(field_mutable:warehouse.Moving.to_warehouse)
  return _msg;
}
inline void Moving::set_allocated_to_warehouse(::warehouse::Warehouse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.to_warehouse_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.to_warehouse_ = reinterpret_cast<::warehouse::Warehouse*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.Moving.to_warehouse)
}

// .warehouse.Warehouse from_warehouse = 4;
inline bool Moving::has_from_warehouse() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.from_warehouse_ != nullptr);
  return value;
}
inline void Moving::clear_from_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_warehouse_ != nullptr) _impl_.from_warehouse_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::warehouse::Warehouse& Moving::_internal_from_warehouse() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::Warehouse* p = _impl_.from_warehouse_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::Warehouse&>(::warehouse::_Warehouse_default_instance_);
}
inline const ::warehouse::Warehouse& Moving::from_warehouse() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Moving.from_warehouse)
  return _internal_from_warehouse();
}
inline void Moving::unsafe_arena_set_allocated_from_warehouse(::warehouse::Warehouse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.from_warehouse_);
  }
  _impl_.from_warehouse_ = reinterpret_cast<::warehouse::Warehouse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.Moving.from_warehouse)
}
inline ::warehouse::Warehouse* Moving::release_from_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::warehouse::Warehouse* released = _impl_.from_warehouse_;
  _impl_.from_warehouse_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::Warehouse* Moving::unsafe_arena_release_from_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.Moving.from_warehouse)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::warehouse::Warehouse* temp = _impl_.from_warehouse_;
  _impl_.from_warehouse_ = nullptr;
  return temp;
}
inline ::warehouse::Warehouse* Moving::_internal_mutable_from_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_warehouse_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::Warehouse>(GetArena());
    _impl_.from_warehouse_ = reinterpret_cast<::warehouse::Warehouse*>(p);
  }
  return _impl_.from_warehouse_;
}
inline ::warehouse::Warehouse* Moving::mutable_from_warehouse() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::warehouse::Warehouse* _msg = _internal_mutable_from_warehouse();
  // @@protoc_insertion_point(field_mutable:warehouse.Moving.from_warehouse)
  return _msg;
}
inline void Moving::set_allocated_from_warehouse(::warehouse::Warehouse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.from_warehouse_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.from_warehouse_ = reinterpret_cast<::warehouse::Warehouse*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.Moving.from_warehouse)
}

// optional string document_url = 5;
inline bool Moving::has_document_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Moving::clear_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Moving::document_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Moving.document_url)
  return _internal_document_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Moving::set_document_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.document_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.Moving.document_url)
}
inline std::string* Moving::mutable_document_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_document_url();
  // @@protoc_insertion_point(field_mutable:warehouse.Moving.document_url)
  return _s;
}
inline const std::string& Moving::_internal_document_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.document_url_.Get();
}
inline void Moving::_internal_set_document_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.document_url_.Set(value, GetArena());
}
inline std::string* Moving::_internal_mutable_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.document_url_.Mutable( GetArena());
}
inline std::string* Moving::release_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.Moving.document_url)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.document_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.document_url_.Set("", GetArena());
  }
  return released;
}
inline void Moving::set_allocated_document_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.document_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.document_url_.IsDefault()) {
    _impl_.document_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.Moving.document_url)
}

// repeated .warehouse.MovingProduct moving_products = 6;
inline int Moving::_internal_moving_products_size() const {
  return _internal_moving_products().size();
}
inline int Moving::moving_products_size() const {
  return _internal_moving_products_size();
}
inline void Moving::clear_moving_products() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.moving_products_.Clear();
}
inline ::warehouse::MovingProduct* Moving::mutable_moving_products(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:warehouse.Moving.moving_products)
  return _internal_mutable_moving_products()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::MovingProduct>* Moving::mutable_moving_products()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:warehouse.Moving.moving_products)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_moving_products();
}
inline const ::warehouse::MovingProduct& Moving::moving_products(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Moving.moving_products)
  return _internal_moving_products().Get(index);
}
inline ::warehouse::MovingProduct* Moving::add_moving_products() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::warehouse::MovingProduct* _add = _internal_mutable_moving_products()->Add();
  // @@protoc_insertion_point(field_add:warehouse.Moving.moving_products)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::MovingProduct>& Moving::moving_products() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:warehouse.Moving.moving_products)
  return _internal_moving_products();
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::MovingProduct>&
Moving::_internal_moving_products() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.moving_products_;
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::MovingProduct>*
Moving::_internal_mutable_moving_products() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.moving_products_;
}

// string created_at = 7;
inline void Moving::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& Moving::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Moving.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Moving::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.Moving.created_at)
}
inline std::string* Moving::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:warehouse.Moving.created_at)
  return _s;
}
inline const std::string& Moving::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void Moving::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* Moving::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* Moving::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.Moving.created_at)
  return _impl_.created_at_.Release();
}
inline void Moving::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.Moving.created_at)
}

// int64 amount = 8;
inline void Moving::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = ::int64_t{0};
}
inline ::int64_t Moving::amount() const {
  // @@protoc_insertion_point(field_get:warehouse.Moving.amount)
  return _internal_amount();
}
inline void Moving::set_amount(::int64_t value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:warehouse.Moving.amount)
}
inline ::int64_t Moving::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_;
}
inline void Moving::_internal_set_amount(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = value;
}

// -------------------------------------------------------------------

// MovingProduct

// int64 id = 1;
inline void MovingProduct::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t MovingProduct::id() const {
  // @@protoc_insertion_point(field_get:warehouse.MovingProduct.id)
  return _internal_id();
}
inline void MovingProduct::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.MovingProduct.id)
}
inline ::int64_t MovingProduct::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void MovingProduct::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .product.Product product = 2;
inline bool MovingProduct::has_product() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_ != nullptr);
  return value;
}
inline const ::product::Product& MovingProduct::_internal_product() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::Product* p = _impl_.product_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::Product&>(::product::_Product_default_instance_);
}
inline const ::product::Product& MovingProduct::product() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.MovingProduct.product)
  return _internal_product();
}
inline void MovingProduct::unsafe_arena_set_allocated_product(::product::Product* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }
  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.MovingProduct.product)
}
inline ::product::Product* MovingProduct::release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* released = _impl_.product_;
  _impl_.product_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::Product* MovingProduct::unsafe_arena_release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.MovingProduct.product)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* temp = _impl_.product_;
  _impl_.product_ = nullptr;
  return temp;
}
inline ::product::Product* MovingProduct::_internal_mutable_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::Product>(GetArena());
    _impl_.product_ = reinterpret_cast<::product::Product*>(p);
  }
  return _impl_.product_;
}
inline ::product::Product* MovingProduct::mutable_product() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::product::Product* _msg = _internal_mutable_product();
  // @@protoc_insertion_point(field_mutable:warehouse.MovingProduct.product)
  return _msg;
}
inline void MovingProduct::set_allocated_product(::product::Product* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.MovingProduct.product)
}

// int64 quantity = 3;
inline void MovingProduct::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = ::int64_t{0};
}
inline ::int64_t MovingProduct::quantity() const {
  // @@protoc_insertion_point(field_get:warehouse.MovingProduct.quantity)
  return _internal_quantity();
}
inline void MovingProduct::set_quantity(::int64_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:warehouse.MovingProduct.quantity)
}
inline ::int64_t MovingProduct::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void MovingProduct::_internal_set_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// float price = 4;
inline void MovingProduct::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0;
}
inline float MovingProduct::price() const {
  // @@protoc_insertion_point(field_get:warehouse.MovingProduct.price)
  return _internal_price();
}
inline void MovingProduct::set_price(float value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:warehouse.MovingProduct.price)
}
inline float MovingProduct::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void MovingProduct::_internal_set_price(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// -------------------------------------------------------------------

// InventoryModel

// int64 id = 1;
inline void InventoryModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t InventoryModel::id() const {
  // @@protoc_insertion_point(field_get:warehouse.InventoryModel.id)
  return _internal_id();
}
inline void InventoryModel::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.InventoryModel.id)
}
inline ::int64_t InventoryModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void InventoryModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 organization_id = 2;
inline void InventoryModel::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t InventoryModel::organization_id() const {
  // @@protoc_insertion_point(field_get:warehouse.InventoryModel.organization_id)
  return _internal_organization_id();
}
inline void InventoryModel::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:warehouse.InventoryModel.organization_id)
}
inline ::int64_t InventoryModel::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void InventoryModel::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// int64 warehouse_id = 3;
inline void InventoryModel::clear_warehouse_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warehouse_id_ = ::int64_t{0};
}
inline ::int64_t InventoryModel::warehouse_id() const {
  // @@protoc_insertion_point(field_get:warehouse.InventoryModel.warehouse_id)
  return _internal_warehouse_id();
}
inline void InventoryModel::set_warehouse_id(::int64_t value) {
  _internal_set_warehouse_id(value);
  // @@protoc_insertion_point(field_set:warehouse.InventoryModel.warehouse_id)
}
inline ::int64_t InventoryModel::_internal_warehouse_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.warehouse_id_;
}
inline void InventoryModel::_internal_set_warehouse_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warehouse_id_ = value;
}

// optional string document_url = 4;
inline bool InventoryModel::has_document_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void InventoryModel::clear_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& InventoryModel::document_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.InventoryModel.document_url)
  return _internal_document_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InventoryModel::set_document_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.document_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.InventoryModel.document_url)
}
inline std::string* InventoryModel::mutable_document_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_document_url();
  // @@protoc_insertion_point(field_mutable:warehouse.InventoryModel.document_url)
  return _s;
}
inline const std::string& InventoryModel::_internal_document_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.document_url_.Get();
}
inline void InventoryModel::_internal_set_document_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.document_url_.Set(value, GetArena());
}
inline std::string* InventoryModel::_internal_mutable_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.document_url_.Mutable( GetArena());
}
inline std::string* InventoryModel::release_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.InventoryModel.document_url)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.document_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.document_url_.Set("", GetArena());
  }
  return released;
}
inline void InventoryModel::set_allocated_document_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.document_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.document_url_.IsDefault()) {
    _impl_.document_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.InventoryModel.document_url)
}

// string created_at = 5;
inline void InventoryModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& InventoryModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.InventoryModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InventoryModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.InventoryModel.created_at)
}
inline std::string* InventoryModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:warehouse.InventoryModel.created_at)
  return _s;
}
inline const std::string& InventoryModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void InventoryModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* InventoryModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* InventoryModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.InventoryModel.created_at)
  return _impl_.created_at_.Release();
}
inline void InventoryModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.InventoryModel.created_at)
}

// repeated .warehouse.InventoryProductModel products = 6;
inline int InventoryModel::_internal_products_size() const {
  return _internal_products().size();
}
inline int InventoryModel::products_size() const {
  return _internal_products_size();
}
inline void InventoryModel::clear_products() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.products_.Clear();
}
inline ::warehouse::InventoryProductModel* InventoryModel::mutable_products(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:warehouse.InventoryModel.products)
  return _internal_mutable_products()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::InventoryProductModel>* InventoryModel::mutable_products()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:warehouse.InventoryModel.products)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_products();
}
inline const ::warehouse::InventoryProductModel& InventoryModel::products(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.InventoryModel.products)
  return _internal_products().Get(index);
}
inline ::warehouse::InventoryProductModel* InventoryModel::add_products() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::warehouse::InventoryProductModel* _add = _internal_mutable_products()->Add();
  // @@protoc_insertion_point(field_add:warehouse.InventoryModel.products)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::InventoryProductModel>& InventoryModel::products() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:warehouse.InventoryModel.products)
  return _internal_products();
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::InventoryProductModel>&
InventoryModel::_internal_products() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.products_;
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::InventoryProductModel>*
InventoryModel::_internal_mutable_products() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.products_;
}

// -------------------------------------------------------------------

// InventoryProductModel

// int64 id = 1;
inline void InventoryProductModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t InventoryProductModel::id() const {
  // @@protoc_insertion_point(field_get:warehouse.InventoryProductModel.id)
  return _internal_id();
}
inline void InventoryProductModel::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.InventoryProductModel.id)
}
inline ::int64_t InventoryProductModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void InventoryProductModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 product_id = 2;
inline void InventoryProductModel::clear_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = ::int64_t{0};
}
inline ::int64_t InventoryProductModel::product_id() const {
  // @@protoc_insertion_point(field_get:warehouse.InventoryProductModel.product_id)
  return _internal_product_id();
}
inline void InventoryProductModel::set_product_id(::int64_t value) {
  _internal_set_product_id(value);
  // @@protoc_insertion_point(field_set:warehouse.InventoryProductModel.product_id)
}
inline ::int64_t InventoryProductModel::_internal_product_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_id_;
}
inline void InventoryProductModel::_internal_set_product_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = value;
}

// int64 excepted_quantity = 3;
inline void InventoryProductModel::clear_excepted_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.excepted_quantity_ = ::int64_t{0};
}
inline ::int64_t InventoryProductModel::excepted_quantity() const {
  // @@protoc_insertion_point(field_get:warehouse.InventoryProductModel.excepted_quantity)
  return _internal_excepted_quantity();
}
inline void InventoryProductModel::set_excepted_quantity(::int64_t value) {
  _internal_set_excepted_quantity(value);
  // @@protoc_insertion_point(field_set:warehouse.InventoryProductModel.excepted_quantity)
}
inline ::int64_t InventoryProductModel::_internal_excepted_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.excepted_quantity_;
}
inline void InventoryProductModel::_internal_set_excepted_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.excepted_quantity_ = value;
}

// int64 factual_quantity = 4;
inline void InventoryProductModel::clear_factual_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.factual_quantity_ = ::int64_t{0};
}
inline ::int64_t InventoryProductModel::factual_quantity() const {
  // @@protoc_insertion_point(field_get:warehouse.InventoryProductModel.factual_quantity)
  return _internal_factual_quantity();
}
inline void InventoryProductModel::set_factual_quantity(::int64_t value) {
  _internal_set_factual_quantity(value);
  // @@protoc_insertion_point(field_set:warehouse.InventoryProductModel.factual_quantity)
}
inline ::int64_t InventoryProductModel::_internal_factual_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.factual_quantity_;
}
inline void InventoryProductModel::_internal_set_factual_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.factual_quantity_ = value;
}

// int64 difference_quantity = 5;
inline void InventoryProductModel::clear_difference_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.difference_quantity_ = ::int64_t{0};
}
inline ::int64_t InventoryProductModel::difference_quantity() const {
  // @@protoc_insertion_point(field_get:warehouse.InventoryProductModel.difference_quantity)
  return _internal_difference_quantity();
}
inline void InventoryProductModel::set_difference_quantity(::int64_t value) {
  _internal_set_difference_quantity(value);
  // @@protoc_insertion_point(field_set:warehouse.InventoryProductModel.difference_quantity)
}
inline ::int64_t InventoryProductModel::_internal_difference_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.difference_quantity_;
}
inline void InventoryProductModel::_internal_set_difference_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.difference_quantity_ = value;
}

// float price = 6;
inline void InventoryProductModel::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0;
}
inline float InventoryProductModel::price() const {
  // @@protoc_insertion_point(field_get:warehouse.InventoryProductModel.price)
  return _internal_price();
}
inline void InventoryProductModel::set_price(float value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:warehouse.InventoryProductModel.price)
}
inline float InventoryProductModel::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void InventoryProductModel::_internal_set_price(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// -------------------------------------------------------------------

// Inventory

// int64 id = 1;
inline void Inventory::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t Inventory::id() const {
  // @@protoc_insertion_point(field_get:warehouse.Inventory.id)
  return _internal_id();
}
inline void Inventory::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.Inventory.id)
}
inline ::int64_t Inventory::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Inventory::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .organization.Organization organization = 2;
inline bool Inventory::has_organization() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.organization_ != nullptr);
  return value;
}
inline const ::organization::Organization& Inventory::_internal_organization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Organization* p = _impl_.organization_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Organization&>(::organization::_Organization_default_instance_);
}
inline const ::organization::Organization& Inventory::organization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Inventory.organization)
  return _internal_organization();
}
inline void Inventory::unsafe_arena_set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.organization_);
  }
  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.Inventory.organization)
}
inline ::organization::Organization* Inventory::release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::organization::Organization* released = _impl_.organization_;
  _impl_.organization_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Organization* Inventory::unsafe_arena_release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.Inventory.organization)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::organization::Organization* temp = _impl_.organization_;
  _impl_.organization_ = nullptr;
  return temp;
}
inline ::organization::Organization* Inventory::_internal_mutable_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.organization_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Organization>(GetArena());
    _impl_.organization_ = reinterpret_cast<::organization::Organization*>(p);
  }
  return _impl_.organization_;
}
inline ::organization::Organization* Inventory::mutable_organization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::organization::Organization* _msg = _internal_mutable_organization();
  // @@protoc_insertion_point(field_mutable:warehouse.Inventory.organization)
  return _msg;
}
inline void Inventory::set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.organization_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.Inventory.organization)
}

// .warehouse.Warehouse warehouse = 3;
inline bool Inventory::has_warehouse() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.warehouse_ != nullptr);
  return value;
}
inline void Inventory::clear_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.warehouse_ != nullptr) _impl_.warehouse_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::warehouse::Warehouse& Inventory::_internal_warehouse() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::Warehouse* p = _impl_.warehouse_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::Warehouse&>(::warehouse::_Warehouse_default_instance_);
}
inline const ::warehouse::Warehouse& Inventory::warehouse() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Inventory.warehouse)
  return _internal_warehouse();
}
inline void Inventory::unsafe_arena_set_allocated_warehouse(::warehouse::Warehouse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.warehouse_);
  }
  _impl_.warehouse_ = reinterpret_cast<::warehouse::Warehouse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.Inventory.warehouse)
}
inline ::warehouse::Warehouse* Inventory::release_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::warehouse::Warehouse* released = _impl_.warehouse_;
  _impl_.warehouse_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::Warehouse* Inventory::unsafe_arena_release_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.Inventory.warehouse)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::warehouse::Warehouse* temp = _impl_.warehouse_;
  _impl_.warehouse_ = nullptr;
  return temp;
}
inline ::warehouse::Warehouse* Inventory::_internal_mutable_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.warehouse_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::Warehouse>(GetArena());
    _impl_.warehouse_ = reinterpret_cast<::warehouse::Warehouse*>(p);
  }
  return _impl_.warehouse_;
}
inline ::warehouse::Warehouse* Inventory::mutable_warehouse() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::warehouse::Warehouse* _msg = _internal_mutable_warehouse();
  // @@protoc_insertion_point(field_mutable:warehouse.Inventory.warehouse)
  return _msg;
}
inline void Inventory::set_allocated_warehouse(::warehouse::Warehouse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.warehouse_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.warehouse_ = reinterpret_cast<::warehouse::Warehouse*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.Inventory.warehouse)
}

// optional string document_url = 4;
inline bool Inventory::has_document_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Inventory::clear_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Inventory::document_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Inventory.document_url)
  return _internal_document_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Inventory::set_document_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.document_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.Inventory.document_url)
}
inline std::string* Inventory::mutable_document_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_document_url();
  // @@protoc_insertion_point(field_mutable:warehouse.Inventory.document_url)
  return _s;
}
inline const std::string& Inventory::_internal_document_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.document_url_.Get();
}
inline void Inventory::_internal_set_document_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.document_url_.Set(value, GetArena());
}
inline std::string* Inventory::_internal_mutable_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.document_url_.Mutable( GetArena());
}
inline std::string* Inventory::release_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.Inventory.document_url)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.document_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.document_url_.Set("", GetArena());
  }
  return released;
}
inline void Inventory::set_allocated_document_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.document_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.document_url_.IsDefault()) {
    _impl_.document_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.Inventory.document_url)
}

// string created_at = 5;
inline void Inventory::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& Inventory::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Inventory.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Inventory::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.Inventory.created_at)
}
inline std::string* Inventory::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:warehouse.Inventory.created_at)
  return _s;
}
inline const std::string& Inventory::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void Inventory::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* Inventory::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* Inventory::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.Inventory.created_at)
  return _impl_.created_at_.Release();
}
inline void Inventory::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.Inventory.created_at)
}

// repeated .warehouse.InventoryProduct products = 6;
inline int Inventory::_internal_products_size() const {
  return _internal_products().size();
}
inline int Inventory::products_size() const {
  return _internal_products_size();
}
inline void Inventory::clear_products() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.products_.Clear();
}
inline ::warehouse::InventoryProduct* Inventory::mutable_products(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:warehouse.Inventory.products)
  return _internal_mutable_products()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::InventoryProduct>* Inventory::mutable_products()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:warehouse.Inventory.products)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_products();
}
inline const ::warehouse::InventoryProduct& Inventory::products(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.Inventory.products)
  return _internal_products().Get(index);
}
inline ::warehouse::InventoryProduct* Inventory::add_products() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::warehouse::InventoryProduct* _add = _internal_mutable_products()->Add();
  // @@protoc_insertion_point(field_add:warehouse.Inventory.products)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::InventoryProduct>& Inventory::products() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:warehouse.Inventory.products)
  return _internal_products();
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::InventoryProduct>&
Inventory::_internal_products() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.products_;
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::InventoryProduct>*
Inventory::_internal_mutable_products() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.products_;
}

// int64 amount = 7;
inline void Inventory::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = ::int64_t{0};
}
inline ::int64_t Inventory::amount() const {
  // @@protoc_insertion_point(field_get:warehouse.Inventory.amount)
  return _internal_amount();
}
inline void Inventory::set_amount(::int64_t value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:warehouse.Inventory.amount)
}
inline ::int64_t Inventory::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_;
}
inline void Inventory::_internal_set_amount(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = value;
}

// -------------------------------------------------------------------

// InventoryProduct

// int64 id = 1;
inline void InventoryProduct::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t InventoryProduct::id() const {
  // @@protoc_insertion_point(field_get:warehouse.InventoryProduct.id)
  return _internal_id();
}
inline void InventoryProduct::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.InventoryProduct.id)
}
inline ::int64_t InventoryProduct::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void InventoryProduct::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .product.Product product = 2;
inline bool InventoryProduct::has_product() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_ != nullptr);
  return value;
}
inline const ::product::Product& InventoryProduct::_internal_product() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::Product* p = _impl_.product_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::Product&>(::product::_Product_default_instance_);
}
inline const ::product::Product& InventoryProduct::product() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.InventoryProduct.product)
  return _internal_product();
}
inline void InventoryProduct::unsafe_arena_set_allocated_product(::product::Product* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }
  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.InventoryProduct.product)
}
inline ::product::Product* InventoryProduct::release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* released = _impl_.product_;
  _impl_.product_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::Product* InventoryProduct::unsafe_arena_release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.InventoryProduct.product)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* temp = _impl_.product_;
  _impl_.product_ = nullptr;
  return temp;
}
inline ::product::Product* InventoryProduct::_internal_mutable_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::Product>(GetArena());
    _impl_.product_ = reinterpret_cast<::product::Product*>(p);
  }
  return _impl_.product_;
}
inline ::product::Product* InventoryProduct::mutable_product() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::product::Product* _msg = _internal_mutable_product();
  // @@protoc_insertion_point(field_mutable:warehouse.InventoryProduct.product)
  return _msg;
}
inline void InventoryProduct::set_allocated_product(::product::Product* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.InventoryProduct.product)
}

// int64 excepted_quantity = 3;
inline void InventoryProduct::clear_excepted_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.excepted_quantity_ = ::int64_t{0};
}
inline ::int64_t InventoryProduct::excepted_quantity() const {
  // @@protoc_insertion_point(field_get:warehouse.InventoryProduct.excepted_quantity)
  return _internal_excepted_quantity();
}
inline void InventoryProduct::set_excepted_quantity(::int64_t value) {
  _internal_set_excepted_quantity(value);
  // @@protoc_insertion_point(field_set:warehouse.InventoryProduct.excepted_quantity)
}
inline ::int64_t InventoryProduct::_internal_excepted_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.excepted_quantity_;
}
inline void InventoryProduct::_internal_set_excepted_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.excepted_quantity_ = value;
}

// int64 factual_quantity = 4;
inline void InventoryProduct::clear_factual_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.factual_quantity_ = ::int64_t{0};
}
inline ::int64_t InventoryProduct::factual_quantity() const {
  // @@protoc_insertion_point(field_get:warehouse.InventoryProduct.factual_quantity)
  return _internal_factual_quantity();
}
inline void InventoryProduct::set_factual_quantity(::int64_t value) {
  _internal_set_factual_quantity(value);
  // @@protoc_insertion_point(field_set:warehouse.InventoryProduct.factual_quantity)
}
inline ::int64_t InventoryProduct::_internal_factual_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.factual_quantity_;
}
inline void InventoryProduct::_internal_set_factual_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.factual_quantity_ = value;
}

// int64 difference_quantity = 5;
inline void InventoryProduct::clear_difference_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.difference_quantity_ = ::int64_t{0};
}
inline ::int64_t InventoryProduct::difference_quantity() const {
  // @@protoc_insertion_point(field_get:warehouse.InventoryProduct.difference_quantity)
  return _internal_difference_quantity();
}
inline void InventoryProduct::set_difference_quantity(::int64_t value) {
  _internal_set_difference_quantity(value);
  // @@protoc_insertion_point(field_set:warehouse.InventoryProduct.difference_quantity)
}
inline ::int64_t InventoryProduct::_internal_difference_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.difference_quantity_;
}
inline void InventoryProduct::_internal_set_difference_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.difference_quantity_ = value;
}

// float price = 6;
inline void InventoryProduct::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0;
}
inline float InventoryProduct::price() const {
  // @@protoc_insertion_point(field_get:warehouse.InventoryProduct.price)
  return _internal_price();
}
inline void InventoryProduct::set_price(float value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:warehouse.InventoryProduct.price)
}
inline float InventoryProduct::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void InventoryProduct::_internal_set_price(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// -------------------------------------------------------------------

// CountProducts

// int64 product_id = 1;
inline void CountProducts::clear_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = ::int64_t{0};
}
inline ::int64_t CountProducts::product_id() const {
  // @@protoc_insertion_point(field_get:warehouse.CountProducts.product_id)
  return _internal_product_id();
}
inline void CountProducts::set_product_id(::int64_t value) {
  _internal_set_product_id(value);
  // @@protoc_insertion_point(field_set:warehouse.CountProducts.product_id)
}
inline ::int64_t CountProducts::_internal_product_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_id_;
}
inline void CountProducts::_internal_set_product_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = value;
}

// int64 count = 2;
inline void CountProducts::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = ::int64_t{0};
}
inline ::int64_t CountProducts::count() const {
  // @@protoc_insertion_point(field_get:warehouse.CountProducts.count)
  return _internal_count();
}
inline void CountProducts::set_count(::int64_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:warehouse.CountProducts.count)
}
inline ::int64_t CountProducts::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void CountProducts::_internal_set_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// -------------------------------------------------------------------

// CreateWarehouseRequest

// string name = 1;
inline void CreateWarehouseRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& CreateWarehouseRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.CreateWarehouseRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateWarehouseRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.CreateWarehouseRequest.name)
}
inline std::string* CreateWarehouseRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:warehouse.CreateWarehouseRequest.name)
  return _s;
}
inline const std::string& CreateWarehouseRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void CreateWarehouseRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* CreateWarehouseRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* CreateWarehouseRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.CreateWarehouseRequest.name)
  return _impl_.name_.Release();
}
inline void CreateWarehouseRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.CreateWarehouseRequest.name)
}

// int64 organization_id = 2;
inline void CreateWarehouseRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t CreateWarehouseRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:warehouse.CreateWarehouseRequest.organization_id)
  return _internal_organization_id();
}
inline void CreateWarehouseRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:warehouse.CreateWarehouseRequest.organization_id)
}
inline ::int64_t CreateWarehouseRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void CreateWarehouseRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// .organization.AddressModel address = 3;
inline bool CreateWarehouseRequest::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline const ::organization::AddressModel& CreateWarehouseRequest::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::AddressModel* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::AddressModel&>(::organization::_AddressModel_default_instance_);
}
inline const ::organization::AddressModel& CreateWarehouseRequest::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.CreateWarehouseRequest.address)
  return _internal_address();
}
inline void CreateWarehouseRequest::unsafe_arena_set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.CreateWarehouseRequest.address)
}
inline ::organization::AddressModel* CreateWarehouseRequest::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* released = _impl_.address_;
  _impl_.address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::AddressModel* CreateWarehouseRequest::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.CreateWarehouseRequest.address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::organization::AddressModel* CreateWarehouseRequest::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::AddressModel>(GetArena());
    _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(p);
  }
  return _impl_.address_;
}
inline ::organization::AddressModel* CreateWarehouseRequest::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::AddressModel* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:warehouse.CreateWarehouseRequest.address)
  return _msg;
}
inline void CreateWarehouseRequest::set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.CreateWarehouseRequest.address)
}

// -------------------------------------------------------------------

// CreateWarehouseResponse

// .warehouse.WarehouseModel warehouse = 1;
inline bool CreateWarehouseResponse::has_warehouse() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.warehouse_ != nullptr);
  return value;
}
inline void CreateWarehouseResponse::clear_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.warehouse_ != nullptr) _impl_.warehouse_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::warehouse::WarehouseModel& CreateWarehouseResponse::_internal_warehouse() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::WarehouseModel* p = _impl_.warehouse_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::WarehouseModel&>(::warehouse::_WarehouseModel_default_instance_);
}
inline const ::warehouse::WarehouseModel& CreateWarehouseResponse::warehouse() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.CreateWarehouseResponse.warehouse)
  return _internal_warehouse();
}
inline void CreateWarehouseResponse::unsafe_arena_set_allocated_warehouse(::warehouse::WarehouseModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.warehouse_);
  }
  _impl_.warehouse_ = reinterpret_cast<::warehouse::WarehouseModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.CreateWarehouseResponse.warehouse)
}
inline ::warehouse::WarehouseModel* CreateWarehouseResponse::release_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::WarehouseModel* released = _impl_.warehouse_;
  _impl_.warehouse_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::WarehouseModel* CreateWarehouseResponse::unsafe_arena_release_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.CreateWarehouseResponse.warehouse)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::WarehouseModel* temp = _impl_.warehouse_;
  _impl_.warehouse_ = nullptr;
  return temp;
}
inline ::warehouse::WarehouseModel* CreateWarehouseResponse::_internal_mutable_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.warehouse_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::WarehouseModel>(GetArena());
    _impl_.warehouse_ = reinterpret_cast<::warehouse::WarehouseModel*>(p);
  }
  return _impl_.warehouse_;
}
inline ::warehouse::WarehouseModel* CreateWarehouseResponse::mutable_warehouse() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::warehouse::WarehouseModel* _msg = _internal_mutable_warehouse();
  // @@protoc_insertion_point(field_mutable:warehouse.CreateWarehouseResponse.warehouse)
  return _msg;
}
inline void CreateWarehouseResponse::set_allocated_warehouse(::warehouse::WarehouseModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.warehouse_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.warehouse_ = reinterpret_cast<::warehouse::WarehouseModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.CreateWarehouseResponse.warehouse)
}

// -------------------------------------------------------------------

// ListWarehousesRequest

// int64 organization_id = 1;
inline void ListWarehousesRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t ListWarehousesRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:warehouse.ListWarehousesRequest.organization_id)
  return _internal_organization_id();
}
inline void ListWarehousesRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:warehouse.ListWarehousesRequest.organization_id)
}
inline ::int64_t ListWarehousesRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void ListWarehousesRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// bool include_address = 2;
inline void ListWarehousesRequest::clear_include_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_address_ = false;
}
inline bool ListWarehousesRequest::include_address() const {
  // @@protoc_insertion_point(field_get:warehouse.ListWarehousesRequest.include_address)
  return _internal_include_address();
}
inline void ListWarehousesRequest::set_include_address(bool value) {
  _internal_set_include_address(value);
  // @@protoc_insertion_point(field_set:warehouse.ListWarehousesRequest.include_address)
}
inline bool ListWarehousesRequest::_internal_include_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_address_;
}
inline void ListWarehousesRequest::_internal_set_include_address(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_address_ = value;
}

// -------------------------------------------------------------------

// ListWarehousesResponse

// repeated .warehouse.WarehouseModel warehouses = 1;
inline int ListWarehousesResponse::_internal_warehouses_size() const {
  return _internal_warehouses().size();
}
inline int ListWarehousesResponse::warehouses_size() const {
  return _internal_warehouses_size();
}
inline void ListWarehousesResponse::clear_warehouses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warehouses_.Clear();
}
inline ::warehouse::WarehouseModel* ListWarehousesResponse::mutable_warehouses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:warehouse.ListWarehousesResponse.warehouses)
  return _internal_mutable_warehouses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseModel>* ListWarehousesResponse::mutable_warehouses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:warehouse.ListWarehousesResponse.warehouses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_warehouses();
}
inline const ::warehouse::WarehouseModel& ListWarehousesResponse::warehouses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.ListWarehousesResponse.warehouses)
  return _internal_warehouses().Get(index);
}
inline ::warehouse::WarehouseModel* ListWarehousesResponse::add_warehouses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::warehouse::WarehouseModel* _add = _internal_mutable_warehouses()->Add();
  // @@protoc_insertion_point(field_add:warehouse.ListWarehousesResponse.warehouses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseModel>& ListWarehousesResponse::warehouses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:warehouse.ListWarehousesResponse.warehouses)
  return _internal_warehouses();
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseModel>&
ListWarehousesResponse::_internal_warehouses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.warehouses_;
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseModel>*
ListWarehousesResponse::_internal_mutable_warehouses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.warehouses_;
}

// -------------------------------------------------------------------

// UpdateWarehouseRequest

// int64 id = 1;
inline void UpdateWarehouseRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t UpdateWarehouseRequest::id() const {
  // @@protoc_insertion_point(field_get:warehouse.UpdateWarehouseRequest.id)
  return _internal_id();
}
inline void UpdateWarehouseRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.UpdateWarehouseRequest.id)
}
inline ::int64_t UpdateWarehouseRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void UpdateWarehouseRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string name = 2;
inline void UpdateWarehouseRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& UpdateWarehouseRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.UpdateWarehouseRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateWarehouseRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.UpdateWarehouseRequest.name)
}
inline std::string* UpdateWarehouseRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:warehouse.UpdateWarehouseRequest.name)
  return _s;
}
inline const std::string& UpdateWarehouseRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void UpdateWarehouseRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* UpdateWarehouseRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* UpdateWarehouseRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.UpdateWarehouseRequest.name)
  return _impl_.name_.Release();
}
inline void UpdateWarehouseRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.UpdateWarehouseRequest.name)
}

// .organization.AddressModel address = 3;
inline bool UpdateWarehouseRequest::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline const ::organization::AddressModel& UpdateWarehouseRequest::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::AddressModel* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::AddressModel&>(::organization::_AddressModel_default_instance_);
}
inline const ::organization::AddressModel& UpdateWarehouseRequest::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.UpdateWarehouseRequest.address)
  return _internal_address();
}
inline void UpdateWarehouseRequest::unsafe_arena_set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.UpdateWarehouseRequest.address)
}
inline ::organization::AddressModel* UpdateWarehouseRequest::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* released = _impl_.address_;
  _impl_.address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::AddressModel* UpdateWarehouseRequest::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.UpdateWarehouseRequest.address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::organization::AddressModel* UpdateWarehouseRequest::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::AddressModel>(GetArena());
    _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(p);
  }
  return _impl_.address_;
}
inline ::organization::AddressModel* UpdateWarehouseRequest::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::AddressModel* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:warehouse.UpdateWarehouseRequest.address)
  return _msg;
}
inline void UpdateWarehouseRequest::set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.UpdateWarehouseRequest.address)
}

// -------------------------------------------------------------------

// UpdateWarehouseResponse

// .warehouse.WarehouseModel warehouse = 1;
inline bool UpdateWarehouseResponse::has_warehouse() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.warehouse_ != nullptr);
  return value;
}
inline void UpdateWarehouseResponse::clear_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.warehouse_ != nullptr) _impl_.warehouse_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::warehouse::WarehouseModel& UpdateWarehouseResponse::_internal_warehouse() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::WarehouseModel* p = _impl_.warehouse_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::WarehouseModel&>(::warehouse::_WarehouseModel_default_instance_);
}
inline const ::warehouse::WarehouseModel& UpdateWarehouseResponse::warehouse() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.UpdateWarehouseResponse.warehouse)
  return _internal_warehouse();
}
inline void UpdateWarehouseResponse::unsafe_arena_set_allocated_warehouse(::warehouse::WarehouseModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.warehouse_);
  }
  _impl_.warehouse_ = reinterpret_cast<::warehouse::WarehouseModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.UpdateWarehouseResponse.warehouse)
}
inline ::warehouse::WarehouseModel* UpdateWarehouseResponse::release_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::WarehouseModel* released = _impl_.warehouse_;
  _impl_.warehouse_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::WarehouseModel* UpdateWarehouseResponse::unsafe_arena_release_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.UpdateWarehouseResponse.warehouse)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::WarehouseModel* temp = _impl_.warehouse_;
  _impl_.warehouse_ = nullptr;
  return temp;
}
inline ::warehouse::WarehouseModel* UpdateWarehouseResponse::_internal_mutable_warehouse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.warehouse_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::WarehouseModel>(GetArena());
    _impl_.warehouse_ = reinterpret_cast<::warehouse::WarehouseModel*>(p);
  }
  return _impl_.warehouse_;
}
inline ::warehouse::WarehouseModel* UpdateWarehouseResponse::mutable_warehouse() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::warehouse::WarehouseModel* _msg = _internal_mutable_warehouse();
  // @@protoc_insertion_point(field_mutable:warehouse.UpdateWarehouseResponse.warehouse)
  return _msg;
}
inline void UpdateWarehouseResponse::set_allocated_warehouse(::warehouse::WarehouseModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.warehouse_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.warehouse_ = reinterpret_cast<::warehouse::WarehouseModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.UpdateWarehouseResponse.warehouse)
}

// -------------------------------------------------------------------

// GetProductsInWarehouseRequest

// int64 warehouse_id = 1;
inline void GetProductsInWarehouseRequest::clear_warehouse_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warehouse_id_ = ::int64_t{0};
}
inline ::int64_t GetProductsInWarehouseRequest::warehouse_id() const {
  // @@protoc_insertion_point(field_get:warehouse.GetProductsInWarehouseRequest.warehouse_id)
  return _internal_warehouse_id();
}
inline void GetProductsInWarehouseRequest::set_warehouse_id(::int64_t value) {
  _internal_set_warehouse_id(value);
  // @@protoc_insertion_point(field_set:warehouse.GetProductsInWarehouseRequest.warehouse_id)
}
inline ::int64_t GetProductsInWarehouseRequest::_internal_warehouse_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.warehouse_id_;
}
inline void GetProductsInWarehouseRequest::_internal_set_warehouse_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warehouse_id_ = value;
}

// int64 page = 2;
inline void GetProductsInWarehouseRequest::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = ::int64_t{0};
}
inline ::int64_t GetProductsInWarehouseRequest::page() const {
  // @@protoc_insertion_point(field_get:warehouse.GetProductsInWarehouseRequest.page)
  return _internal_page();
}
inline void GetProductsInWarehouseRequest::set_page(::int64_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:warehouse.GetProductsInWarehouseRequest.page)
}
inline ::int64_t GetProductsInWarehouseRequest::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void GetProductsInWarehouseRequest::_internal_set_page(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// int64 page_size = 3;
inline void GetProductsInWarehouseRequest::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = ::int64_t{0};
}
inline ::int64_t GetProductsInWarehouseRequest::page_size() const {
  // @@protoc_insertion_point(field_get:warehouse.GetProductsInWarehouseRequest.page_size)
  return _internal_page_size();
}
inline void GetProductsInWarehouseRequest::set_page_size(::int64_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:warehouse.GetProductsInWarehouseRequest.page_size)
}
inline ::int64_t GetProductsInWarehouseRequest::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void GetProductsInWarehouseRequest::_internal_set_page_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// string name = 4;
inline void GetProductsInWarehouseRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetProductsInWarehouseRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.GetProductsInWarehouseRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetProductsInWarehouseRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.GetProductsInWarehouseRequest.name)
}
inline std::string* GetProductsInWarehouseRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:warehouse.GetProductsInWarehouseRequest.name)
  return _s;
}
inline const std::string& GetProductsInWarehouseRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void GetProductsInWarehouseRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetProductsInWarehouseRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetProductsInWarehouseRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.GetProductsInWarehouseRequest.name)
  return _impl_.name_.Release();
}
inline void GetProductsInWarehouseRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.GetProductsInWarehouseRequest.name)
}

// string sort_by = 5;
inline void GetProductsInWarehouseRequest::clear_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sort_by_.ClearToEmpty();
}
inline const std::string& GetProductsInWarehouseRequest::sort_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.GetProductsInWarehouseRequest.sort_by)
  return _internal_sort_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetProductsInWarehouseRequest::set_sort_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sort_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.GetProductsInWarehouseRequest.sort_by)
}
inline std::string* GetProductsInWarehouseRequest::mutable_sort_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sort_by();
  // @@protoc_insertion_point(field_mutable:warehouse.GetProductsInWarehouseRequest.sort_by)
  return _s;
}
inline const std::string& GetProductsInWarehouseRequest::_internal_sort_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sort_by_.Get();
}
inline void GetProductsInWarehouseRequest::_internal_set_sort_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sort_by_.Set(value, GetArena());
}
inline std::string* GetProductsInWarehouseRequest::_internal_mutable_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sort_by_.Mutable( GetArena());
}
inline std::string* GetProductsInWarehouseRequest::release_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.GetProductsInWarehouseRequest.sort_by)
  return _impl_.sort_by_.Release();
}
inline void GetProductsInWarehouseRequest::set_allocated_sort_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sort_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sort_by_.IsDefault()) {
    _impl_.sort_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.GetProductsInWarehouseRequest.sort_by)
}

// bool is_ascending = 6;
inline void GetProductsInWarehouseRequest::clear_is_ascending() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_ascending_ = false;
}
inline bool GetProductsInWarehouseRequest::is_ascending() const {
  // @@protoc_insertion_point(field_get:warehouse.GetProductsInWarehouseRequest.is_ascending)
  return _internal_is_ascending();
}
inline void GetProductsInWarehouseRequest::set_is_ascending(bool value) {
  _internal_set_is_ascending(value);
  // @@protoc_insertion_point(field_set:warehouse.GetProductsInWarehouseRequest.is_ascending)
}
inline bool GetProductsInWarehouseRequest::_internal_is_ascending() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_ascending_;
}
inline void GetProductsInWarehouseRequest::_internal_set_is_ascending(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_ascending_ = value;
}

// bool is_all = 7;
inline void GetProductsInWarehouseRequest::clear_is_all() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_all_ = false;
}
inline bool GetProductsInWarehouseRequest::is_all() const {
  // @@protoc_insertion_point(field_get:warehouse.GetProductsInWarehouseRequest.is_all)
  return _internal_is_all();
}
inline void GetProductsInWarehouseRequest::set_is_all(bool value) {
  _internal_set_is_all(value);
  // @@protoc_insertion_point(field_set:warehouse.GetProductsInWarehouseRequest.is_all)
}
inline bool GetProductsInWarehouseRequest::_internal_is_all() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_all_;
}
inline void GetProductsInWarehouseRequest::_internal_set_is_all(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_all_ = value;
}

// int64 organization_id = 8;
inline void GetProductsInWarehouseRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t GetProductsInWarehouseRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:warehouse.GetProductsInWarehouseRequest.organization_id)
  return _internal_organization_id();
}
inline void GetProductsInWarehouseRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:warehouse.GetProductsInWarehouseRequest.organization_id)
}
inline ::int64_t GetProductsInWarehouseRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void GetProductsInWarehouseRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// -------------------------------------------------------------------

// GetProductsInWarehouseResponse

// repeated .warehouse.WarehouseProducts products = 1;
inline int GetProductsInWarehouseResponse::_internal_products_size() const {
  return _internal_products().size();
}
inline int GetProductsInWarehouseResponse::products_size() const {
  return _internal_products_size();
}
inline void GetProductsInWarehouseResponse::clear_products() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.products_.Clear();
}
inline ::warehouse::WarehouseProducts* GetProductsInWarehouseResponse::mutable_products(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:warehouse.GetProductsInWarehouseResponse.products)
  return _internal_mutable_products()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>* GetProductsInWarehouseResponse::mutable_products()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:warehouse.GetProductsInWarehouseResponse.products)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_products();
}
inline const ::warehouse::WarehouseProducts& GetProductsInWarehouseResponse::products(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.GetProductsInWarehouseResponse.products)
  return _internal_products().Get(index);
}
inline ::warehouse::WarehouseProducts* GetProductsInWarehouseResponse::add_products() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::warehouse::WarehouseProducts* _add = _internal_mutable_products()->Add();
  // @@protoc_insertion_point(field_add:warehouse.GetProductsInWarehouseResponse.products)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>& GetProductsInWarehouseResponse::products() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:warehouse.GetProductsInWarehouseResponse.products)
  return _internal_products();
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>&
GetProductsInWarehouseResponse::_internal_products() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.products_;
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::WarehouseProducts>*
GetProductsInWarehouseResponse::_internal_mutable_products() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.products_;
}

// int64 total_count = 2;
inline void GetProductsInWarehouseResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = ::int64_t{0};
}
inline ::int64_t GetProductsInWarehouseResponse::total_count() const {
  // @@protoc_insertion_point(field_get:warehouse.GetProductsInWarehouseResponse.total_count)
  return _internal_total_count();
}
inline void GetProductsInWarehouseResponse::set_total_count(::int64_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:warehouse.GetProductsInWarehouseResponse.total_count)
}
inline ::int64_t GetProductsInWarehouseResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void GetProductsInWarehouseResponse::_internal_set_total_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// -------------------------------------------------------------------

// GetWarehouseAnalyticsRequest

// int64 warehouse_id = 1;
inline void GetWarehouseAnalyticsRequest::clear_warehouse_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warehouse_id_ = ::int64_t{0};
}
inline ::int64_t GetWarehouseAnalyticsRequest::warehouse_id() const {
  // @@protoc_insertion_point(field_get:warehouse.GetWarehouseAnalyticsRequest.warehouse_id)
  return _internal_warehouse_id();
}
inline void GetWarehouseAnalyticsRequest::set_warehouse_id(::int64_t value) {
  _internal_set_warehouse_id(value);
  // @@protoc_insertion_point(field_set:warehouse.GetWarehouseAnalyticsRequest.warehouse_id)
}
inline ::int64_t GetWarehouseAnalyticsRequest::_internal_warehouse_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.warehouse_id_;
}
inline void GetWarehouseAnalyticsRequest::_internal_set_warehouse_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warehouse_id_ = value;
}

// -------------------------------------------------------------------

// GetWarehouseAnalyticsResponse

// .warehouse.WarehouseAnalytics analytics = 1;
inline bool GetWarehouseAnalyticsResponse::has_analytics() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.analytics_ != nullptr);
  return value;
}
inline void GetWarehouseAnalyticsResponse::clear_analytics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.analytics_ != nullptr) _impl_.analytics_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::warehouse::WarehouseAnalytics& GetWarehouseAnalyticsResponse::_internal_analytics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::WarehouseAnalytics* p = _impl_.analytics_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::WarehouseAnalytics&>(::warehouse::_WarehouseAnalytics_default_instance_);
}
inline const ::warehouse::WarehouseAnalytics& GetWarehouseAnalyticsResponse::analytics() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.GetWarehouseAnalyticsResponse.analytics)
  return _internal_analytics();
}
inline void GetWarehouseAnalyticsResponse::unsafe_arena_set_allocated_analytics(::warehouse::WarehouseAnalytics* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.analytics_);
  }
  _impl_.analytics_ = reinterpret_cast<::warehouse::WarehouseAnalytics*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.GetWarehouseAnalyticsResponse.analytics)
}
inline ::warehouse::WarehouseAnalytics* GetWarehouseAnalyticsResponse::release_analytics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::WarehouseAnalytics* released = _impl_.analytics_;
  _impl_.analytics_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::WarehouseAnalytics* GetWarehouseAnalyticsResponse::unsafe_arena_release_analytics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.GetWarehouseAnalyticsResponse.analytics)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::WarehouseAnalytics* temp = _impl_.analytics_;
  _impl_.analytics_ = nullptr;
  return temp;
}
inline ::warehouse::WarehouseAnalytics* GetWarehouseAnalyticsResponse::_internal_mutable_analytics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.analytics_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::WarehouseAnalytics>(GetArena());
    _impl_.analytics_ = reinterpret_cast<::warehouse::WarehouseAnalytics*>(p);
  }
  return _impl_.analytics_;
}
inline ::warehouse::WarehouseAnalytics* GetWarehouseAnalyticsResponse::mutable_analytics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::warehouse::WarehouseAnalytics* _msg = _internal_mutable_analytics();
  // @@protoc_insertion_point(field_mutable:warehouse.GetWarehouseAnalyticsResponse.analytics)
  return _msg;
}
inline void GetWarehouseAnalyticsResponse::set_allocated_analytics(::warehouse::WarehouseAnalytics* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.analytics_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.analytics_ = reinterpret_cast<::warehouse::WarehouseAnalytics*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.GetWarehouseAnalyticsResponse.analytics)
}

// -------------------------------------------------------------------

// AddProductToWarehouseRequest

// int64 warehouse_id = 1;
inline void AddProductToWarehouseRequest::clear_warehouse_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warehouse_id_ = ::int64_t{0};
}
inline ::int64_t AddProductToWarehouseRequest::warehouse_id() const {
  // @@protoc_insertion_point(field_get:warehouse.AddProductToWarehouseRequest.warehouse_id)
  return _internal_warehouse_id();
}
inline void AddProductToWarehouseRequest::set_warehouse_id(::int64_t value) {
  _internal_set_warehouse_id(value);
  // @@protoc_insertion_point(field_set:warehouse.AddProductToWarehouseRequest.warehouse_id)
}
inline ::int64_t AddProductToWarehouseRequest::_internal_warehouse_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.warehouse_id_;
}
inline void AddProductToWarehouseRequest::_internal_set_warehouse_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warehouse_id_ = value;
}

// int64 product_id = 2;
inline void AddProductToWarehouseRequest::clear_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = ::int64_t{0};
}
inline ::int64_t AddProductToWarehouseRequest::product_id() const {
  // @@protoc_insertion_point(field_get:warehouse.AddProductToWarehouseRequest.product_id)
  return _internal_product_id();
}
inline void AddProductToWarehouseRequest::set_product_id(::int64_t value) {
  _internal_set_product_id(value);
  // @@protoc_insertion_point(field_set:warehouse.AddProductToWarehouseRequest.product_id)
}
inline ::int64_t AddProductToWarehouseRequest::_internal_product_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_id_;
}
inline void AddProductToWarehouseRequest::_internal_set_product_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = value;
}

// int64 quantity = 3;
inline void AddProductToWarehouseRequest::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = ::int64_t{0};
}
inline ::int64_t AddProductToWarehouseRequest::quantity() const {
  // @@protoc_insertion_point(field_get:warehouse.AddProductToWarehouseRequest.quantity)
  return _internal_quantity();
}
inline void AddProductToWarehouseRequest::set_quantity(::int64_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:warehouse.AddProductToWarehouseRequest.quantity)
}
inline ::int64_t AddProductToWarehouseRequest::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void AddProductToWarehouseRequest::_internal_set_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// -------------------------------------------------------------------

// AddProductToWarehouseResponse

// .warehouse.WarehouseProducts product = 1;
inline bool AddProductToWarehouseResponse::has_product() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_ != nullptr);
  return value;
}
inline void AddProductToWarehouseResponse::clear_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ != nullptr) _impl_.product_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::warehouse::WarehouseProducts& AddProductToWarehouseResponse::_internal_product() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::WarehouseProducts* p = _impl_.product_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::WarehouseProducts&>(::warehouse::_WarehouseProducts_default_instance_);
}
inline const ::warehouse::WarehouseProducts& AddProductToWarehouseResponse::product() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.AddProductToWarehouseResponse.product)
  return _internal_product();
}
inline void AddProductToWarehouseResponse::unsafe_arena_set_allocated_product(::warehouse::WarehouseProducts* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }
  _impl_.product_ = reinterpret_cast<::warehouse::WarehouseProducts*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.AddProductToWarehouseResponse.product)
}
inline ::warehouse::WarehouseProducts* AddProductToWarehouseResponse::release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::WarehouseProducts* released = _impl_.product_;
  _impl_.product_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::WarehouseProducts* AddProductToWarehouseResponse::unsafe_arena_release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.AddProductToWarehouseResponse.product)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::WarehouseProducts* temp = _impl_.product_;
  _impl_.product_ = nullptr;
  return temp;
}
inline ::warehouse::WarehouseProducts* AddProductToWarehouseResponse::_internal_mutable_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::WarehouseProducts>(GetArena());
    _impl_.product_ = reinterpret_cast<::warehouse::WarehouseProducts*>(p);
  }
  return _impl_.product_;
}
inline ::warehouse::WarehouseProducts* AddProductToWarehouseResponse::mutable_product() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::warehouse::WarehouseProducts* _msg = _internal_mutable_product();
  // @@protoc_insertion_point(field_mutable:warehouse.AddProductToWarehouseResponse.product)
  return _msg;
}
inline void AddProductToWarehouseResponse::set_allocated_product(::warehouse::WarehouseProducts* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.product_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.product_ = reinterpret_cast<::warehouse::WarehouseProducts*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.AddProductToWarehouseResponse.product)
}

// -------------------------------------------------------------------

// CreateAcceptanceRequest

// int64 organization_id = 1;
inline void CreateAcceptanceRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t CreateAcceptanceRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:warehouse.CreateAcceptanceRequest.organization_id)
  return _internal_organization_id();
}
inline void CreateAcceptanceRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:warehouse.CreateAcceptanceRequest.organization_id)
}
inline ::int64_t CreateAcceptanceRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void CreateAcceptanceRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// int64 counterparty_id = 2;
inline void CreateAcceptanceRequest::clear_counterparty_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counterparty_id_ = ::int64_t{0};
}
inline ::int64_t CreateAcceptanceRequest::counterparty_id() const {
  // @@protoc_insertion_point(field_get:warehouse.CreateAcceptanceRequest.counterparty_id)
  return _internal_counterparty_id();
}
inline void CreateAcceptanceRequest::set_counterparty_id(::int64_t value) {
  _internal_set_counterparty_id(value);
  // @@protoc_insertion_point(field_set:warehouse.CreateAcceptanceRequest.counterparty_id)
}
inline ::int64_t CreateAcceptanceRequest::_internal_counterparty_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.counterparty_id_;
}
inline void CreateAcceptanceRequest::_internal_set_counterparty_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counterparty_id_ = value;
}

// int64 warehouse_id = 3;
inline void CreateAcceptanceRequest::clear_warehouse_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warehouse_id_ = ::int64_t{0};
}
inline ::int64_t CreateAcceptanceRequest::warehouse_id() const {
  // @@protoc_insertion_point(field_get:warehouse.CreateAcceptanceRequest.warehouse_id)
  return _internal_warehouse_id();
}
inline void CreateAcceptanceRequest::set_warehouse_id(::int64_t value) {
  _internal_set_warehouse_id(value);
  // @@protoc_insertion_point(field_set:warehouse.CreateAcceptanceRequest.warehouse_id)
}
inline ::int64_t CreateAcceptanceRequest::_internal_warehouse_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.warehouse_id_;
}
inline void CreateAcceptanceRequest::_internal_set_warehouse_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warehouse_id_ = value;
}

// int64 user_id = 5;
inline void CreateAcceptanceRequest::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = ::int64_t{0};
}
inline ::int64_t CreateAcceptanceRequest::user_id() const {
  // @@protoc_insertion_point(field_get:warehouse.CreateAcceptanceRequest.user_id)
  return _internal_user_id();
}
inline void CreateAcceptanceRequest::set_user_id(::int64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:warehouse.CreateAcceptanceRequest.user_id)
}
inline ::int64_t CreateAcceptanceRequest::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_;
}
inline void CreateAcceptanceRequest::_internal_set_user_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = value;
}

// repeated .warehouse.AcceptanceProductModel products = 6;
inline int CreateAcceptanceRequest::_internal_products_size() const {
  return _internal_products().size();
}
inline int CreateAcceptanceRequest::products_size() const {
  return _internal_products_size();
}
inline void CreateAcceptanceRequest::clear_products() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.products_.Clear();
}
inline ::warehouse::AcceptanceProductModel* CreateAcceptanceRequest::mutable_products(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:warehouse.CreateAcceptanceRequest.products)
  return _internal_mutable_products()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProductModel>* CreateAcceptanceRequest::mutable_products()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:warehouse.CreateAcceptanceRequest.products)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_products();
}
inline const ::warehouse::AcceptanceProductModel& CreateAcceptanceRequest::products(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.CreateAcceptanceRequest.products)
  return _internal_products().Get(index);
}
inline ::warehouse::AcceptanceProductModel* CreateAcceptanceRequest::add_products() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::warehouse::AcceptanceProductModel* _add = _internal_mutable_products()->Add();
  // @@protoc_insertion_point(field_add:warehouse.CreateAcceptanceRequest.products)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProductModel>& CreateAcceptanceRequest::products() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:warehouse.CreateAcceptanceRequest.products)
  return _internal_products();
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProductModel>&
CreateAcceptanceRequest::_internal_products() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.products_;
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProductModel>*
CreateAcceptanceRequest::_internal_mutable_products() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.products_;
}

// -------------------------------------------------------------------

// CreateAcceptanceResponse

// .warehouse.Acceptance acceptance = 1;
inline bool CreateAcceptanceResponse::has_acceptance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.acceptance_ != nullptr);
  return value;
}
inline void CreateAcceptanceResponse::clear_acceptance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.acceptance_ != nullptr) _impl_.acceptance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::warehouse::Acceptance& CreateAcceptanceResponse::_internal_acceptance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::Acceptance* p = _impl_.acceptance_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::Acceptance&>(::warehouse::_Acceptance_default_instance_);
}
inline const ::warehouse::Acceptance& CreateAcceptanceResponse::acceptance() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.CreateAcceptanceResponse.acceptance)
  return _internal_acceptance();
}
inline void CreateAcceptanceResponse::unsafe_arena_set_allocated_acceptance(::warehouse::Acceptance* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.acceptance_);
  }
  _impl_.acceptance_ = reinterpret_cast<::warehouse::Acceptance*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.CreateAcceptanceResponse.acceptance)
}
inline ::warehouse::Acceptance* CreateAcceptanceResponse::release_acceptance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::Acceptance* released = _impl_.acceptance_;
  _impl_.acceptance_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::Acceptance* CreateAcceptanceResponse::unsafe_arena_release_acceptance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.CreateAcceptanceResponse.acceptance)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::Acceptance* temp = _impl_.acceptance_;
  _impl_.acceptance_ = nullptr;
  return temp;
}
inline ::warehouse::Acceptance* CreateAcceptanceResponse::_internal_mutable_acceptance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.acceptance_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::Acceptance>(GetArena());
    _impl_.acceptance_ = reinterpret_cast<::warehouse::Acceptance*>(p);
  }
  return _impl_.acceptance_;
}
inline ::warehouse::Acceptance* CreateAcceptanceResponse::mutable_acceptance() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::warehouse::Acceptance* _msg = _internal_mutable_acceptance();
  // @@protoc_insertion_point(field_mutable:warehouse.CreateAcceptanceResponse.acceptance)
  return _msg;
}
inline void CreateAcceptanceResponse::set_allocated_acceptance(::warehouse::Acceptance* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.acceptance_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.acceptance_ = reinterpret_cast<::warehouse::Acceptance*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.CreateAcceptanceResponse.acceptance)
}

// -------------------------------------------------------------------

// GetAcceptanceRequest

// int64 id = 1;
inline void GetAcceptanceRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t GetAcceptanceRequest::id() const {
  // @@protoc_insertion_point(field_get:warehouse.GetAcceptanceRequest.id)
  return _internal_id();
}
inline void GetAcceptanceRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.GetAcceptanceRequest.id)
}
inline ::int64_t GetAcceptanceRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void GetAcceptanceRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// GetAcceptanceResponse

// .warehouse.Acceptance acceptance = 1;
inline bool GetAcceptanceResponse::has_acceptance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.acceptance_ != nullptr);
  return value;
}
inline void GetAcceptanceResponse::clear_acceptance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.acceptance_ != nullptr) _impl_.acceptance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::warehouse::Acceptance& GetAcceptanceResponse::_internal_acceptance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::Acceptance* p = _impl_.acceptance_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::Acceptance&>(::warehouse::_Acceptance_default_instance_);
}
inline const ::warehouse::Acceptance& GetAcceptanceResponse::acceptance() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.GetAcceptanceResponse.acceptance)
  return _internal_acceptance();
}
inline void GetAcceptanceResponse::unsafe_arena_set_allocated_acceptance(::warehouse::Acceptance* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.acceptance_);
  }
  _impl_.acceptance_ = reinterpret_cast<::warehouse::Acceptance*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.GetAcceptanceResponse.acceptance)
}
inline ::warehouse::Acceptance* GetAcceptanceResponse::release_acceptance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::Acceptance* released = _impl_.acceptance_;
  _impl_.acceptance_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::Acceptance* GetAcceptanceResponse::unsafe_arena_release_acceptance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.GetAcceptanceResponse.acceptance)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::Acceptance* temp = _impl_.acceptance_;
  _impl_.acceptance_ = nullptr;
  return temp;
}
inline ::warehouse::Acceptance* GetAcceptanceResponse::_internal_mutable_acceptance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.acceptance_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::Acceptance>(GetArena());
    _impl_.acceptance_ = reinterpret_cast<::warehouse::Acceptance*>(p);
  }
  return _impl_.acceptance_;
}
inline ::warehouse::Acceptance* GetAcceptanceResponse::mutable_acceptance() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::warehouse::Acceptance* _msg = _internal_mutable_acceptance();
  // @@protoc_insertion_point(field_mutable:warehouse.GetAcceptanceResponse.acceptance)
  return _msg;
}
inline void GetAcceptanceResponse::set_allocated_acceptance(::warehouse::Acceptance* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.acceptance_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.acceptance_ = reinterpret_cast<::warehouse::Acceptance*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.GetAcceptanceResponse.acceptance)
}

// -------------------------------------------------------------------

// ListAcceptancesRequest

// int64 page = 1;
inline void ListAcceptancesRequest::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = ::int64_t{0};
}
inline ::int64_t ListAcceptancesRequest::page() const {
  // @@protoc_insertion_point(field_get:warehouse.ListAcceptancesRequest.page)
  return _internal_page();
}
inline void ListAcceptancesRequest::set_page(::int64_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:warehouse.ListAcceptancesRequest.page)
}
inline ::int64_t ListAcceptancesRequest::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void ListAcceptancesRequest::_internal_set_page(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// int64 page_size = 2;
inline void ListAcceptancesRequest::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = ::int64_t{0};
}
inline ::int64_t ListAcceptancesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:warehouse.ListAcceptancesRequest.page_size)
  return _internal_page_size();
}
inline void ListAcceptancesRequest::set_page_size(::int64_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:warehouse.ListAcceptancesRequest.page_size)
}
inline ::int64_t ListAcceptancesRequest::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void ListAcceptancesRequest::_internal_set_page_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// int64 organization_id = 3;
inline void ListAcceptancesRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t ListAcceptancesRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:warehouse.ListAcceptancesRequest.organization_id)
  return _internal_organization_id();
}
inline void ListAcceptancesRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:warehouse.ListAcceptancesRequest.organization_id)
}
inline ::int64_t ListAcceptancesRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void ListAcceptancesRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// -------------------------------------------------------------------

// ListAcceptancesResponse

// repeated .warehouse.Acceptance acceptances = 1;
inline int ListAcceptancesResponse::_internal_acceptances_size() const {
  return _internal_acceptances().size();
}
inline int ListAcceptancesResponse::acceptances_size() const {
  return _internal_acceptances_size();
}
inline void ListAcceptancesResponse::clear_acceptances() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.acceptances_.Clear();
}
inline ::warehouse::Acceptance* ListAcceptancesResponse::mutable_acceptances(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:warehouse.ListAcceptancesResponse.acceptances)
  return _internal_mutable_acceptances()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::Acceptance>* ListAcceptancesResponse::mutable_acceptances()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:warehouse.ListAcceptancesResponse.acceptances)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_acceptances();
}
inline const ::warehouse::Acceptance& ListAcceptancesResponse::acceptances(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.ListAcceptancesResponse.acceptances)
  return _internal_acceptances().Get(index);
}
inline ::warehouse::Acceptance* ListAcceptancesResponse::add_acceptances() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::warehouse::Acceptance* _add = _internal_mutable_acceptances()->Add();
  // @@protoc_insertion_point(field_add:warehouse.ListAcceptancesResponse.acceptances)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::Acceptance>& ListAcceptancesResponse::acceptances() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:warehouse.ListAcceptancesResponse.acceptances)
  return _internal_acceptances();
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::Acceptance>&
ListAcceptancesResponse::_internal_acceptances() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.acceptances_;
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::Acceptance>*
ListAcceptancesResponse::_internal_mutable_acceptances() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.acceptances_;
}

// int64 total_count = 2;
inline void ListAcceptancesResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = ::int64_t{0};
}
inline ::int64_t ListAcceptancesResponse::total_count() const {
  // @@protoc_insertion_point(field_get:warehouse.ListAcceptancesResponse.total_count)
  return _internal_total_count();
}
inline void ListAcceptancesResponse::set_total_count(::int64_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:warehouse.ListAcceptancesResponse.total_count)
}
inline ::int64_t ListAcceptancesResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void ListAcceptancesResponse::_internal_set_total_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// -------------------------------------------------------------------

// UpdateAcceptanceRequest

// int64 id = 1;
inline void UpdateAcceptanceRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t UpdateAcceptanceRequest::id() const {
  // @@protoc_insertion_point(field_get:warehouse.UpdateAcceptanceRequest.id)
  return _internal_id();
}
inline void UpdateAcceptanceRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.UpdateAcceptanceRequest.id)
}
inline ::int64_t UpdateAcceptanceRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void UpdateAcceptanceRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// optional int64 organization_id = 2;
inline bool UpdateAcceptanceRequest::has_organization_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void UpdateAcceptanceRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t UpdateAcceptanceRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:warehouse.UpdateAcceptanceRequest.organization_id)
  return _internal_organization_id();
}
inline void UpdateAcceptanceRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:warehouse.UpdateAcceptanceRequest.organization_id)
}
inline ::int64_t UpdateAcceptanceRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void UpdateAcceptanceRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// optional int64 counterparty_id = 3;
inline bool UpdateAcceptanceRequest::has_counterparty_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void UpdateAcceptanceRequest::clear_counterparty_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counterparty_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t UpdateAcceptanceRequest::counterparty_id() const {
  // @@protoc_insertion_point(field_get:warehouse.UpdateAcceptanceRequest.counterparty_id)
  return _internal_counterparty_id();
}
inline void UpdateAcceptanceRequest::set_counterparty_id(::int64_t value) {
  _internal_set_counterparty_id(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:warehouse.UpdateAcceptanceRequest.counterparty_id)
}
inline ::int64_t UpdateAcceptanceRequest::_internal_counterparty_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.counterparty_id_;
}
inline void UpdateAcceptanceRequest::_internal_set_counterparty_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counterparty_id_ = value;
}

// optional int64 warehouse_id = 4;
inline bool UpdateAcceptanceRequest::has_warehouse_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void UpdateAcceptanceRequest::clear_warehouse_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warehouse_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t UpdateAcceptanceRequest::warehouse_id() const {
  // @@protoc_insertion_point(field_get:warehouse.UpdateAcceptanceRequest.warehouse_id)
  return _internal_warehouse_id();
}
inline void UpdateAcceptanceRequest::set_warehouse_id(::int64_t value) {
  _internal_set_warehouse_id(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:warehouse.UpdateAcceptanceRequest.warehouse_id)
}
inline ::int64_t UpdateAcceptanceRequest::_internal_warehouse_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.warehouse_id_;
}
inline void UpdateAcceptanceRequest::_internal_set_warehouse_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warehouse_id_ = value;
}

// optional string document_url = 5;
inline bool UpdateAcceptanceRequest::has_document_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void UpdateAcceptanceRequest::clear_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.document_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UpdateAcceptanceRequest::document_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.UpdateAcceptanceRequest.document_url)
  return _internal_document_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateAcceptanceRequest::set_document_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.document_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:warehouse.UpdateAcceptanceRequest.document_url)
}
inline std::string* UpdateAcceptanceRequest::mutable_document_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_document_url();
  // @@protoc_insertion_point(field_mutable:warehouse.UpdateAcceptanceRequest.document_url)
  return _s;
}
inline const std::string& UpdateAcceptanceRequest::_internal_document_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.document_url_.Get();
}
inline void UpdateAcceptanceRequest::_internal_set_document_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.document_url_.Set(value, GetArena());
}
inline std::string* UpdateAcceptanceRequest::_internal_mutable_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.document_url_.Mutable( GetArena());
}
inline std::string* UpdateAcceptanceRequest::release_document_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.UpdateAcceptanceRequest.document_url)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.document_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.document_url_.Set("", GetArena());
  }
  return released;
}
inline void UpdateAcceptanceRequest::set_allocated_document_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.document_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.document_url_.IsDefault()) {
    _impl_.document_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:warehouse.UpdateAcceptanceRequest.document_url)
}

// optional int64 user_id = 6;
inline bool UpdateAcceptanceRequest::has_user_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void UpdateAcceptanceRequest::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t UpdateAcceptanceRequest::user_id() const {
  // @@protoc_insertion_point(field_get:warehouse.UpdateAcceptanceRequest.user_id)
  return _internal_user_id();
}
inline void UpdateAcceptanceRequest::set_user_id(::int64_t value) {
  _internal_set_user_id(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:warehouse.UpdateAcceptanceRequest.user_id)
}
inline ::int64_t UpdateAcceptanceRequest::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_;
}
inline void UpdateAcceptanceRequest::_internal_set_user_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = value;
}

// repeated .warehouse.AcceptanceProductModel products = 7;
inline int UpdateAcceptanceRequest::_internal_products_size() const {
  return _internal_products().size();
}
inline int UpdateAcceptanceRequest::products_size() const {
  return _internal_products_size();
}
inline void UpdateAcceptanceRequest::clear_products() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.products_.Clear();
}
inline ::warehouse::AcceptanceProductModel* UpdateAcceptanceRequest::mutable_products(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:warehouse.UpdateAcceptanceRequest.products)
  return _internal_mutable_products()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProductModel>* UpdateAcceptanceRequest::mutable_products()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:warehouse.UpdateAcceptanceRequest.products)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_products();
}
inline const ::warehouse::AcceptanceProductModel& UpdateAcceptanceRequest::products(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.UpdateAcceptanceRequest.products)
  return _internal_products().Get(index);
}
inline ::warehouse::AcceptanceProductModel* UpdateAcceptanceRequest::add_products() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::warehouse::AcceptanceProductModel* _add = _internal_mutable_products()->Add();
  // @@protoc_insertion_point(field_add:warehouse.UpdateAcceptanceRequest.products)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProductModel>& UpdateAcceptanceRequest::products() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:warehouse.UpdateAcceptanceRequest.products)
  return _internal_products();
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProductModel>&
UpdateAcceptanceRequest::_internal_products() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.products_;
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::AcceptanceProductModel>*
UpdateAcceptanceRequest::_internal_mutable_products() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.products_;
}

// -------------------------------------------------------------------

// UpdateAcceptanceResponse

// .warehouse.Acceptance acceptance = 1;
inline bool UpdateAcceptanceResponse::has_acceptance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.acceptance_ != nullptr);
  return value;
}
inline void UpdateAcceptanceResponse::clear_acceptance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.acceptance_ != nullptr) _impl_.acceptance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::warehouse::Acceptance& UpdateAcceptanceResponse::_internal_acceptance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::Acceptance* p = _impl_.acceptance_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::Acceptance&>(::warehouse::_Acceptance_default_instance_);
}
inline const ::warehouse::Acceptance& UpdateAcceptanceResponse::acceptance() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.UpdateAcceptanceResponse.acceptance)
  return _internal_acceptance();
}
inline void UpdateAcceptanceResponse::unsafe_arena_set_allocated_acceptance(::warehouse::Acceptance* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.acceptance_);
  }
  _impl_.acceptance_ = reinterpret_cast<::warehouse::Acceptance*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.UpdateAcceptanceResponse.acceptance)
}
inline ::warehouse::Acceptance* UpdateAcceptanceResponse::release_acceptance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::Acceptance* released = _impl_.acceptance_;
  _impl_.acceptance_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::Acceptance* UpdateAcceptanceResponse::unsafe_arena_release_acceptance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.UpdateAcceptanceResponse.acceptance)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::Acceptance* temp = _impl_.acceptance_;
  _impl_.acceptance_ = nullptr;
  return temp;
}
inline ::warehouse::Acceptance* UpdateAcceptanceResponse::_internal_mutable_acceptance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.acceptance_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::Acceptance>(GetArena());
    _impl_.acceptance_ = reinterpret_cast<::warehouse::Acceptance*>(p);
  }
  return _impl_.acceptance_;
}
inline ::warehouse::Acceptance* UpdateAcceptanceResponse::mutable_acceptance() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::warehouse::Acceptance* _msg = _internal_mutable_acceptance();
  // @@protoc_insertion_point(field_mutable:warehouse.UpdateAcceptanceResponse.acceptance)
  return _msg;
}
inline void UpdateAcceptanceResponse::set_allocated_acceptance(::warehouse::Acceptance* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.acceptance_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.acceptance_ = reinterpret_cast<::warehouse::Acceptance*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.UpdateAcceptanceResponse.acceptance)
}

// -------------------------------------------------------------------

// DeleteAcceptanceRequest

// int64 id = 1;
inline void DeleteAcceptanceRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t DeleteAcceptanceRequest::id() const {
  // @@protoc_insertion_point(field_get:warehouse.DeleteAcceptanceRequest.id)
  return _internal_id();
}
inline void DeleteAcceptanceRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.DeleteAcceptanceRequest.id)
}
inline ::int64_t DeleteAcceptanceRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void DeleteAcceptanceRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// DeleteAcceptanceResponse

// bool success = 1;
inline void DeleteAcceptanceResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool DeleteAcceptanceResponse::success() const {
  // @@protoc_insertion_point(field_get:warehouse.DeleteAcceptanceResponse.success)
  return _internal_success();
}
inline void DeleteAcceptanceResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:warehouse.DeleteAcceptanceResponse.success)
}
inline bool DeleteAcceptanceResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void DeleteAcceptanceResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// CreateWriteOffRequest

// .warehouse.WriteOffModel write_off = 1;
inline bool CreateWriteOffRequest::has_write_off() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.write_off_ != nullptr);
  return value;
}
inline void CreateWriteOffRequest::clear_write_off() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.write_off_ != nullptr) _impl_.write_off_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::warehouse::WriteOffModel& CreateWriteOffRequest::_internal_write_off() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::WriteOffModel* p = _impl_.write_off_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::WriteOffModel&>(::warehouse::_WriteOffModel_default_instance_);
}
inline const ::warehouse::WriteOffModel& CreateWriteOffRequest::write_off() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.CreateWriteOffRequest.write_off)
  return _internal_write_off();
}
inline void CreateWriteOffRequest::unsafe_arena_set_allocated_write_off(::warehouse::WriteOffModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.write_off_);
  }
  _impl_.write_off_ = reinterpret_cast<::warehouse::WriteOffModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.CreateWriteOffRequest.write_off)
}
inline ::warehouse::WriteOffModel* CreateWriteOffRequest::release_write_off() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::WriteOffModel* released = _impl_.write_off_;
  _impl_.write_off_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::WriteOffModel* CreateWriteOffRequest::unsafe_arena_release_write_off() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.CreateWriteOffRequest.write_off)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::WriteOffModel* temp = _impl_.write_off_;
  _impl_.write_off_ = nullptr;
  return temp;
}
inline ::warehouse::WriteOffModel* CreateWriteOffRequest::_internal_mutable_write_off() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.write_off_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::WriteOffModel>(GetArena());
    _impl_.write_off_ = reinterpret_cast<::warehouse::WriteOffModel*>(p);
  }
  return _impl_.write_off_;
}
inline ::warehouse::WriteOffModel* CreateWriteOffRequest::mutable_write_off() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::warehouse::WriteOffModel* _msg = _internal_mutable_write_off();
  // @@protoc_insertion_point(field_mutable:warehouse.CreateWriteOffRequest.write_off)
  return _msg;
}
inline void CreateWriteOffRequest::set_allocated_write_off(::warehouse::WriteOffModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.write_off_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.write_off_ = reinterpret_cast<::warehouse::WriteOffModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.CreateWriteOffRequest.write_off)
}

// -------------------------------------------------------------------

// CreateWriteOffResponse

// .warehouse.WriteOff write_off = 1;
inline bool CreateWriteOffResponse::has_write_off() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.write_off_ != nullptr);
  return value;
}
inline void CreateWriteOffResponse::clear_write_off() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.write_off_ != nullptr) _impl_.write_off_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::warehouse::WriteOff& CreateWriteOffResponse::_internal_write_off() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::WriteOff* p = _impl_.write_off_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::WriteOff&>(::warehouse::_WriteOff_default_instance_);
}
inline const ::warehouse::WriteOff& CreateWriteOffResponse::write_off() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.CreateWriteOffResponse.write_off)
  return _internal_write_off();
}
inline void CreateWriteOffResponse::unsafe_arena_set_allocated_write_off(::warehouse::WriteOff* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.write_off_);
  }
  _impl_.write_off_ = reinterpret_cast<::warehouse::WriteOff*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.CreateWriteOffResponse.write_off)
}
inline ::warehouse::WriteOff* CreateWriteOffResponse::release_write_off() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::WriteOff* released = _impl_.write_off_;
  _impl_.write_off_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::WriteOff* CreateWriteOffResponse::unsafe_arena_release_write_off() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.CreateWriteOffResponse.write_off)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::WriteOff* temp = _impl_.write_off_;
  _impl_.write_off_ = nullptr;
  return temp;
}
inline ::warehouse::WriteOff* CreateWriteOffResponse::_internal_mutable_write_off() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.write_off_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::WriteOff>(GetArena());
    _impl_.write_off_ = reinterpret_cast<::warehouse::WriteOff*>(p);
  }
  return _impl_.write_off_;
}
inline ::warehouse::WriteOff* CreateWriteOffResponse::mutable_write_off() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::warehouse::WriteOff* _msg = _internal_mutable_write_off();
  // @@protoc_insertion_point(field_mutable:warehouse.CreateWriteOffResponse.write_off)
  return _msg;
}
inline void CreateWriteOffResponse::set_allocated_write_off(::warehouse::WriteOff* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.write_off_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.write_off_ = reinterpret_cast<::warehouse::WriteOff*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.CreateWriteOffResponse.write_off)
}

// -------------------------------------------------------------------

// GetWriteOffRequest

// int64 write_off_id = 1;
inline void GetWriteOffRequest::clear_write_off_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.write_off_id_ = ::int64_t{0};
}
inline ::int64_t GetWriteOffRequest::write_off_id() const {
  // @@protoc_insertion_point(field_get:warehouse.GetWriteOffRequest.write_off_id)
  return _internal_write_off_id();
}
inline void GetWriteOffRequest::set_write_off_id(::int64_t value) {
  _internal_set_write_off_id(value);
  // @@protoc_insertion_point(field_set:warehouse.GetWriteOffRequest.write_off_id)
}
inline ::int64_t GetWriteOffRequest::_internal_write_off_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.write_off_id_;
}
inline void GetWriteOffRequest::_internal_set_write_off_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.write_off_id_ = value;
}

// -------------------------------------------------------------------

// GetWriteOffResponse

// .warehouse.WriteOff write_off = 1;
inline bool GetWriteOffResponse::has_write_off() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.write_off_ != nullptr);
  return value;
}
inline void GetWriteOffResponse::clear_write_off() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.write_off_ != nullptr) _impl_.write_off_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::warehouse::WriteOff& GetWriteOffResponse::_internal_write_off() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::WriteOff* p = _impl_.write_off_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::WriteOff&>(::warehouse::_WriteOff_default_instance_);
}
inline const ::warehouse::WriteOff& GetWriteOffResponse::write_off() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.GetWriteOffResponse.write_off)
  return _internal_write_off();
}
inline void GetWriteOffResponse::unsafe_arena_set_allocated_write_off(::warehouse::WriteOff* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.write_off_);
  }
  _impl_.write_off_ = reinterpret_cast<::warehouse::WriteOff*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.GetWriteOffResponse.write_off)
}
inline ::warehouse::WriteOff* GetWriteOffResponse::release_write_off() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::WriteOff* released = _impl_.write_off_;
  _impl_.write_off_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::WriteOff* GetWriteOffResponse::unsafe_arena_release_write_off() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.GetWriteOffResponse.write_off)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::WriteOff* temp = _impl_.write_off_;
  _impl_.write_off_ = nullptr;
  return temp;
}
inline ::warehouse::WriteOff* GetWriteOffResponse::_internal_mutable_write_off() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.write_off_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::WriteOff>(GetArena());
    _impl_.write_off_ = reinterpret_cast<::warehouse::WriteOff*>(p);
  }
  return _impl_.write_off_;
}
inline ::warehouse::WriteOff* GetWriteOffResponse::mutable_write_off() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::warehouse::WriteOff* _msg = _internal_mutable_write_off();
  // @@protoc_insertion_point(field_mutable:warehouse.GetWriteOffResponse.write_off)
  return _msg;
}
inline void GetWriteOffResponse::set_allocated_write_off(::warehouse::WriteOff* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.write_off_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.write_off_ = reinterpret_cast<::warehouse::WriteOff*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.GetWriteOffResponse.write_off)
}

// -------------------------------------------------------------------

// ListWriteOffRequest

// int64 page = 1;
inline void ListWriteOffRequest::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = ::int64_t{0};
}
inline ::int64_t ListWriteOffRequest::page() const {
  // @@protoc_insertion_point(field_get:warehouse.ListWriteOffRequest.page)
  return _internal_page();
}
inline void ListWriteOffRequest::set_page(::int64_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:warehouse.ListWriteOffRequest.page)
}
inline ::int64_t ListWriteOffRequest::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void ListWriteOffRequest::_internal_set_page(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// int64 page_size = 2;
inline void ListWriteOffRequest::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = ::int64_t{0};
}
inline ::int64_t ListWriteOffRequest::page_size() const {
  // @@protoc_insertion_point(field_get:warehouse.ListWriteOffRequest.page_size)
  return _internal_page_size();
}
inline void ListWriteOffRequest::set_page_size(::int64_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:warehouse.ListWriteOffRequest.page_size)
}
inline ::int64_t ListWriteOffRequest::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void ListWriteOffRequest::_internal_set_page_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// int64 organization_id = 3;
inline void ListWriteOffRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t ListWriteOffRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:warehouse.ListWriteOffRequest.organization_id)
  return _internal_organization_id();
}
inline void ListWriteOffRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:warehouse.ListWriteOffRequest.organization_id)
}
inline ::int64_t ListWriteOffRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void ListWriteOffRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// -------------------------------------------------------------------

// ListWriteOffResponse

// repeated .warehouse.WriteOff write_offs = 1;
inline int ListWriteOffResponse::_internal_write_offs_size() const {
  return _internal_write_offs().size();
}
inline int ListWriteOffResponse::write_offs_size() const {
  return _internal_write_offs_size();
}
inline void ListWriteOffResponse::clear_write_offs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.write_offs_.Clear();
}
inline ::warehouse::WriteOff* ListWriteOffResponse::mutable_write_offs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:warehouse.ListWriteOffResponse.write_offs)
  return _internal_mutable_write_offs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::WriteOff>* ListWriteOffResponse::mutable_write_offs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:warehouse.ListWriteOffResponse.write_offs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_write_offs();
}
inline const ::warehouse::WriteOff& ListWriteOffResponse::write_offs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.ListWriteOffResponse.write_offs)
  return _internal_write_offs().Get(index);
}
inline ::warehouse::WriteOff* ListWriteOffResponse::add_write_offs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::warehouse::WriteOff* _add = _internal_mutable_write_offs()->Add();
  // @@protoc_insertion_point(field_add:warehouse.ListWriteOffResponse.write_offs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::WriteOff>& ListWriteOffResponse::write_offs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:warehouse.ListWriteOffResponse.write_offs)
  return _internal_write_offs();
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::WriteOff>&
ListWriteOffResponse::_internal_write_offs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.write_offs_;
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::WriteOff>*
ListWriteOffResponse::_internal_mutable_write_offs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.write_offs_;
}

// int64 total_count = 2;
inline void ListWriteOffResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = ::int64_t{0};
}
inline ::int64_t ListWriteOffResponse::total_count() const {
  // @@protoc_insertion_point(field_get:warehouse.ListWriteOffResponse.total_count)
  return _internal_total_count();
}
inline void ListWriteOffResponse::set_total_count(::int64_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:warehouse.ListWriteOffResponse.total_count)
}
inline ::int64_t ListWriteOffResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void ListWriteOffResponse::_internal_set_total_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// -------------------------------------------------------------------

// CreateMovingRequest

// .warehouse.MovingModel moving = 1;
inline bool CreateMovingRequest::has_moving() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.moving_ != nullptr);
  return value;
}
inline void CreateMovingRequest::clear_moving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.moving_ != nullptr) _impl_.moving_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::warehouse::MovingModel& CreateMovingRequest::_internal_moving() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::MovingModel* p = _impl_.moving_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::MovingModel&>(::warehouse::_MovingModel_default_instance_);
}
inline const ::warehouse::MovingModel& CreateMovingRequest::moving() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.CreateMovingRequest.moving)
  return _internal_moving();
}
inline void CreateMovingRequest::unsafe_arena_set_allocated_moving(::warehouse::MovingModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.moving_);
  }
  _impl_.moving_ = reinterpret_cast<::warehouse::MovingModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.CreateMovingRequest.moving)
}
inline ::warehouse::MovingModel* CreateMovingRequest::release_moving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::MovingModel* released = _impl_.moving_;
  _impl_.moving_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::MovingModel* CreateMovingRequest::unsafe_arena_release_moving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.CreateMovingRequest.moving)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::MovingModel* temp = _impl_.moving_;
  _impl_.moving_ = nullptr;
  return temp;
}
inline ::warehouse::MovingModel* CreateMovingRequest::_internal_mutable_moving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.moving_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::MovingModel>(GetArena());
    _impl_.moving_ = reinterpret_cast<::warehouse::MovingModel*>(p);
  }
  return _impl_.moving_;
}
inline ::warehouse::MovingModel* CreateMovingRequest::mutable_moving() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::warehouse::MovingModel* _msg = _internal_mutable_moving();
  // @@protoc_insertion_point(field_mutable:warehouse.CreateMovingRequest.moving)
  return _msg;
}
inline void CreateMovingRequest::set_allocated_moving(::warehouse::MovingModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.moving_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.moving_ = reinterpret_cast<::warehouse::MovingModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.CreateMovingRequest.moving)
}

// -------------------------------------------------------------------

// CreateMovingResponse

// .warehouse.Moving moving = 1;
inline bool CreateMovingResponse::has_moving() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.moving_ != nullptr);
  return value;
}
inline void CreateMovingResponse::clear_moving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.moving_ != nullptr) _impl_.moving_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::warehouse::Moving& CreateMovingResponse::_internal_moving() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::Moving* p = _impl_.moving_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::Moving&>(::warehouse::_Moving_default_instance_);
}
inline const ::warehouse::Moving& CreateMovingResponse::moving() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.CreateMovingResponse.moving)
  return _internal_moving();
}
inline void CreateMovingResponse::unsafe_arena_set_allocated_moving(::warehouse::Moving* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.moving_);
  }
  _impl_.moving_ = reinterpret_cast<::warehouse::Moving*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.CreateMovingResponse.moving)
}
inline ::warehouse::Moving* CreateMovingResponse::release_moving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::Moving* released = _impl_.moving_;
  _impl_.moving_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::Moving* CreateMovingResponse::unsafe_arena_release_moving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.CreateMovingResponse.moving)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::Moving* temp = _impl_.moving_;
  _impl_.moving_ = nullptr;
  return temp;
}
inline ::warehouse::Moving* CreateMovingResponse::_internal_mutable_moving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.moving_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::Moving>(GetArena());
    _impl_.moving_ = reinterpret_cast<::warehouse::Moving*>(p);
  }
  return _impl_.moving_;
}
inline ::warehouse::Moving* CreateMovingResponse::mutable_moving() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::warehouse::Moving* _msg = _internal_mutable_moving();
  // @@protoc_insertion_point(field_mutable:warehouse.CreateMovingResponse.moving)
  return _msg;
}
inline void CreateMovingResponse::set_allocated_moving(::warehouse::Moving* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.moving_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.moving_ = reinterpret_cast<::warehouse::Moving*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.CreateMovingResponse.moving)
}

// -------------------------------------------------------------------

// GetMovingRequest

// int64 id = 1;
inline void GetMovingRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t GetMovingRequest::id() const {
  // @@protoc_insertion_point(field_get:warehouse.GetMovingRequest.id)
  return _internal_id();
}
inline void GetMovingRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.GetMovingRequest.id)
}
inline ::int64_t GetMovingRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void GetMovingRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// GetMovingResponse

// .warehouse.Moving moving = 1;
inline bool GetMovingResponse::has_moving() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.moving_ != nullptr);
  return value;
}
inline void GetMovingResponse::clear_moving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.moving_ != nullptr) _impl_.moving_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::warehouse::Moving& GetMovingResponse::_internal_moving() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::Moving* p = _impl_.moving_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::Moving&>(::warehouse::_Moving_default_instance_);
}
inline const ::warehouse::Moving& GetMovingResponse::moving() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.GetMovingResponse.moving)
  return _internal_moving();
}
inline void GetMovingResponse::unsafe_arena_set_allocated_moving(::warehouse::Moving* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.moving_);
  }
  _impl_.moving_ = reinterpret_cast<::warehouse::Moving*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.GetMovingResponse.moving)
}
inline ::warehouse::Moving* GetMovingResponse::release_moving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::Moving* released = _impl_.moving_;
  _impl_.moving_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::Moving* GetMovingResponse::unsafe_arena_release_moving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.GetMovingResponse.moving)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::Moving* temp = _impl_.moving_;
  _impl_.moving_ = nullptr;
  return temp;
}
inline ::warehouse::Moving* GetMovingResponse::_internal_mutable_moving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.moving_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::Moving>(GetArena());
    _impl_.moving_ = reinterpret_cast<::warehouse::Moving*>(p);
  }
  return _impl_.moving_;
}
inline ::warehouse::Moving* GetMovingResponse::mutable_moving() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::warehouse::Moving* _msg = _internal_mutable_moving();
  // @@protoc_insertion_point(field_mutable:warehouse.GetMovingResponse.moving)
  return _msg;
}
inline void GetMovingResponse::set_allocated_moving(::warehouse::Moving* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.moving_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.moving_ = reinterpret_cast<::warehouse::Moving*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.GetMovingResponse.moving)
}

// -------------------------------------------------------------------

// ListMovingRequest

// int64 page = 1;
inline void ListMovingRequest::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = ::int64_t{0};
}
inline ::int64_t ListMovingRequest::page() const {
  // @@protoc_insertion_point(field_get:warehouse.ListMovingRequest.page)
  return _internal_page();
}
inline void ListMovingRequest::set_page(::int64_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:warehouse.ListMovingRequest.page)
}
inline ::int64_t ListMovingRequest::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void ListMovingRequest::_internal_set_page(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// int64 page_size = 2;
inline void ListMovingRequest::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = ::int64_t{0};
}
inline ::int64_t ListMovingRequest::page_size() const {
  // @@protoc_insertion_point(field_get:warehouse.ListMovingRequest.page_size)
  return _internal_page_size();
}
inline void ListMovingRequest::set_page_size(::int64_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:warehouse.ListMovingRequest.page_size)
}
inline ::int64_t ListMovingRequest::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void ListMovingRequest::_internal_set_page_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// int64 organization_id = 3;
inline void ListMovingRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t ListMovingRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:warehouse.ListMovingRequest.organization_id)
  return _internal_organization_id();
}
inline void ListMovingRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:warehouse.ListMovingRequest.organization_id)
}
inline ::int64_t ListMovingRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void ListMovingRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// -------------------------------------------------------------------

// ListMovingResponse

// repeated .warehouse.Moving movings = 1;
inline int ListMovingResponse::_internal_movings_size() const {
  return _internal_movings().size();
}
inline int ListMovingResponse::movings_size() const {
  return _internal_movings_size();
}
inline void ListMovingResponse::clear_movings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.movings_.Clear();
}
inline ::warehouse::Moving* ListMovingResponse::mutable_movings(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:warehouse.ListMovingResponse.movings)
  return _internal_mutable_movings()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::Moving>* ListMovingResponse::mutable_movings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:warehouse.ListMovingResponse.movings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_movings();
}
inline const ::warehouse::Moving& ListMovingResponse::movings(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.ListMovingResponse.movings)
  return _internal_movings().Get(index);
}
inline ::warehouse::Moving* ListMovingResponse::add_movings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::warehouse::Moving* _add = _internal_mutable_movings()->Add();
  // @@protoc_insertion_point(field_add:warehouse.ListMovingResponse.movings)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::Moving>& ListMovingResponse::movings() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:warehouse.ListMovingResponse.movings)
  return _internal_movings();
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::Moving>&
ListMovingResponse::_internal_movings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.movings_;
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::Moving>*
ListMovingResponse::_internal_mutable_movings() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.movings_;
}

// int64 total_count = 2;
inline void ListMovingResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = ::int64_t{0};
}
inline ::int64_t ListMovingResponse::total_count() const {
  // @@protoc_insertion_point(field_get:warehouse.ListMovingResponse.total_count)
  return _internal_total_count();
}
inline void ListMovingResponse::set_total_count(::int64_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:warehouse.ListMovingResponse.total_count)
}
inline ::int64_t ListMovingResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void ListMovingResponse::_internal_set_total_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// -------------------------------------------------------------------

// CreateInventoryRequest

// .warehouse.InventoryModel inventory = 1;
inline bool CreateInventoryRequest::has_inventory() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.inventory_ != nullptr);
  return value;
}
inline void CreateInventoryRequest::clear_inventory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.inventory_ != nullptr) _impl_.inventory_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::warehouse::InventoryModel& CreateInventoryRequest::_internal_inventory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::InventoryModel* p = _impl_.inventory_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::InventoryModel&>(::warehouse::_InventoryModel_default_instance_);
}
inline const ::warehouse::InventoryModel& CreateInventoryRequest::inventory() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.CreateInventoryRequest.inventory)
  return _internal_inventory();
}
inline void CreateInventoryRequest::unsafe_arena_set_allocated_inventory(::warehouse::InventoryModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.inventory_);
  }
  _impl_.inventory_ = reinterpret_cast<::warehouse::InventoryModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.CreateInventoryRequest.inventory)
}
inline ::warehouse::InventoryModel* CreateInventoryRequest::release_inventory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::InventoryModel* released = _impl_.inventory_;
  _impl_.inventory_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::InventoryModel* CreateInventoryRequest::unsafe_arena_release_inventory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.CreateInventoryRequest.inventory)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::InventoryModel* temp = _impl_.inventory_;
  _impl_.inventory_ = nullptr;
  return temp;
}
inline ::warehouse::InventoryModel* CreateInventoryRequest::_internal_mutable_inventory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.inventory_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::InventoryModel>(GetArena());
    _impl_.inventory_ = reinterpret_cast<::warehouse::InventoryModel*>(p);
  }
  return _impl_.inventory_;
}
inline ::warehouse::InventoryModel* CreateInventoryRequest::mutable_inventory() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::warehouse::InventoryModel* _msg = _internal_mutable_inventory();
  // @@protoc_insertion_point(field_mutable:warehouse.CreateInventoryRequest.inventory)
  return _msg;
}
inline void CreateInventoryRequest::set_allocated_inventory(::warehouse::InventoryModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.inventory_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.inventory_ = reinterpret_cast<::warehouse::InventoryModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.CreateInventoryRequest.inventory)
}

// -------------------------------------------------------------------

// CreateInventoryResponse

// .warehouse.Inventory inventory = 2;
inline bool CreateInventoryResponse::has_inventory() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.inventory_ != nullptr);
  return value;
}
inline void CreateInventoryResponse::clear_inventory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.inventory_ != nullptr) _impl_.inventory_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::warehouse::Inventory& CreateInventoryResponse::_internal_inventory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::Inventory* p = _impl_.inventory_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::Inventory&>(::warehouse::_Inventory_default_instance_);
}
inline const ::warehouse::Inventory& CreateInventoryResponse::inventory() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.CreateInventoryResponse.inventory)
  return _internal_inventory();
}
inline void CreateInventoryResponse::unsafe_arena_set_allocated_inventory(::warehouse::Inventory* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.inventory_);
  }
  _impl_.inventory_ = reinterpret_cast<::warehouse::Inventory*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.CreateInventoryResponse.inventory)
}
inline ::warehouse::Inventory* CreateInventoryResponse::release_inventory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::Inventory* released = _impl_.inventory_;
  _impl_.inventory_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::Inventory* CreateInventoryResponse::unsafe_arena_release_inventory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.CreateInventoryResponse.inventory)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::Inventory* temp = _impl_.inventory_;
  _impl_.inventory_ = nullptr;
  return temp;
}
inline ::warehouse::Inventory* CreateInventoryResponse::_internal_mutable_inventory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.inventory_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::Inventory>(GetArena());
    _impl_.inventory_ = reinterpret_cast<::warehouse::Inventory*>(p);
  }
  return _impl_.inventory_;
}
inline ::warehouse::Inventory* CreateInventoryResponse::mutable_inventory() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::warehouse::Inventory* _msg = _internal_mutable_inventory();
  // @@protoc_insertion_point(field_mutable:warehouse.CreateInventoryResponse.inventory)
  return _msg;
}
inline void CreateInventoryResponse::set_allocated_inventory(::warehouse::Inventory* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.inventory_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.inventory_ = reinterpret_cast<::warehouse::Inventory*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.CreateInventoryResponse.inventory)
}

// -------------------------------------------------------------------

// GetInventoryRequest

// int64 id = 1;
inline void GetInventoryRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t GetInventoryRequest::id() const {
  // @@protoc_insertion_point(field_get:warehouse.GetInventoryRequest.id)
  return _internal_id();
}
inline void GetInventoryRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:warehouse.GetInventoryRequest.id)
}
inline ::int64_t GetInventoryRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void GetInventoryRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// GetInventoryResponse

// .warehouse.Inventory invetory = 1;
inline bool GetInventoryResponse::has_invetory() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.invetory_ != nullptr);
  return value;
}
inline void GetInventoryResponse::clear_invetory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.invetory_ != nullptr) _impl_.invetory_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::warehouse::Inventory& GetInventoryResponse::_internal_invetory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::warehouse::Inventory* p = _impl_.invetory_;
  return p != nullptr ? *p : reinterpret_cast<const ::warehouse::Inventory&>(::warehouse::_Inventory_default_instance_);
}
inline const ::warehouse::Inventory& GetInventoryResponse::invetory() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.GetInventoryResponse.invetory)
  return _internal_invetory();
}
inline void GetInventoryResponse::unsafe_arena_set_allocated_invetory(::warehouse::Inventory* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.invetory_);
  }
  _impl_.invetory_ = reinterpret_cast<::warehouse::Inventory*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:warehouse.GetInventoryResponse.invetory)
}
inline ::warehouse::Inventory* GetInventoryResponse::release_invetory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::Inventory* released = _impl_.invetory_;
  _impl_.invetory_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::warehouse::Inventory* GetInventoryResponse::unsafe_arena_release_invetory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:warehouse.GetInventoryResponse.invetory)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::warehouse::Inventory* temp = _impl_.invetory_;
  _impl_.invetory_ = nullptr;
  return temp;
}
inline ::warehouse::Inventory* GetInventoryResponse::_internal_mutable_invetory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.invetory_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::warehouse::Inventory>(GetArena());
    _impl_.invetory_ = reinterpret_cast<::warehouse::Inventory*>(p);
  }
  return _impl_.invetory_;
}
inline ::warehouse::Inventory* GetInventoryResponse::mutable_invetory() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::warehouse::Inventory* _msg = _internal_mutable_invetory();
  // @@protoc_insertion_point(field_mutable:warehouse.GetInventoryResponse.invetory)
  return _msg;
}
inline void GetInventoryResponse::set_allocated_invetory(::warehouse::Inventory* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.invetory_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.invetory_ = reinterpret_cast<::warehouse::Inventory*>(value);
  // @@protoc_insertion_point(field_set_allocated:warehouse.GetInventoryResponse.invetory)
}

// -------------------------------------------------------------------

// ListInventoryRequest

// int64 page = 1;
inline void ListInventoryRequest::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = ::int64_t{0};
}
inline ::int64_t ListInventoryRequest::page() const {
  // @@protoc_insertion_point(field_get:warehouse.ListInventoryRequest.page)
  return _internal_page();
}
inline void ListInventoryRequest::set_page(::int64_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:warehouse.ListInventoryRequest.page)
}
inline ::int64_t ListInventoryRequest::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void ListInventoryRequest::_internal_set_page(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// int64 page_size = 2;
inline void ListInventoryRequest::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = ::int64_t{0};
}
inline ::int64_t ListInventoryRequest::page_size() const {
  // @@protoc_insertion_point(field_get:warehouse.ListInventoryRequest.page_size)
  return _internal_page_size();
}
inline void ListInventoryRequest::set_page_size(::int64_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:warehouse.ListInventoryRequest.page_size)
}
inline ::int64_t ListInventoryRequest::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void ListInventoryRequest::_internal_set_page_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// int64 organization_id = 3;
inline void ListInventoryRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t ListInventoryRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:warehouse.ListInventoryRequest.organization_id)
  return _internal_organization_id();
}
inline void ListInventoryRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:warehouse.ListInventoryRequest.organization_id)
}
inline ::int64_t ListInventoryRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void ListInventoryRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// -------------------------------------------------------------------

// ListInventoryResponse

// repeated .warehouse.Inventory inventories = 1;
inline int ListInventoryResponse::_internal_inventories_size() const {
  return _internal_inventories().size();
}
inline int ListInventoryResponse::inventories_size() const {
  return _internal_inventories_size();
}
inline void ListInventoryResponse::clear_inventories() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inventories_.Clear();
}
inline ::warehouse::Inventory* ListInventoryResponse::mutable_inventories(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:warehouse.ListInventoryResponse.inventories)
  return _internal_mutable_inventories()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::Inventory>* ListInventoryResponse::mutable_inventories()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:warehouse.ListInventoryResponse.inventories)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_inventories();
}
inline const ::warehouse::Inventory& ListInventoryResponse::inventories(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.ListInventoryResponse.inventories)
  return _internal_inventories().Get(index);
}
inline ::warehouse::Inventory* ListInventoryResponse::add_inventories() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::warehouse::Inventory* _add = _internal_mutable_inventories()->Add();
  // @@protoc_insertion_point(field_add:warehouse.ListInventoryResponse.inventories)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::Inventory>& ListInventoryResponse::inventories() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:warehouse.ListInventoryResponse.inventories)
  return _internal_inventories();
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::Inventory>&
ListInventoryResponse::_internal_inventories() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inventories_;
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::Inventory>*
ListInventoryResponse::_internal_mutable_inventories() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.inventories_;
}

// int64 total_count = 2;
inline void ListInventoryResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = ::int64_t{0};
}
inline ::int64_t ListInventoryResponse::total_count() const {
  // @@protoc_insertion_point(field_get:warehouse.ListInventoryResponse.total_count)
  return _internal_total_count();
}
inline void ListInventoryResponse::set_total_count(::int64_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:warehouse.ListInventoryResponse.total_count)
}
inline ::int64_t ListInventoryResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void ListInventoryResponse::_internal_set_total_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// -------------------------------------------------------------------

// GetCountProductsRequest

// repeated int64 product_ids = 1;
inline int GetCountProductsRequest::_internal_product_ids_size() const {
  return _internal_product_ids().size();
}
inline int GetCountProductsRequest::product_ids_size() const {
  return _internal_product_ids_size();
}
inline void GetCountProductsRequest::clear_product_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_ids_.Clear();
}
inline ::int64_t GetCountProductsRequest::product_ids(int index) const {
  // @@protoc_insertion_point(field_get:warehouse.GetCountProductsRequest.product_ids)
  return _internal_product_ids().Get(index);
}
inline void GetCountProductsRequest::set_product_ids(int index, ::int64_t value) {
  _internal_mutable_product_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:warehouse.GetCountProductsRequest.product_ids)
}
inline void GetCountProductsRequest::add_product_ids(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_product_ids()->Add(value);
  // @@protoc_insertion_point(field_add:warehouse.GetCountProductsRequest.product_ids)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& GetCountProductsRequest::product_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:warehouse.GetCountProductsRequest.product_ids)
  return _internal_product_ids();
}
inline ::google::protobuf::RepeatedField<::int64_t>* GetCountProductsRequest::mutable_product_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:warehouse.GetCountProductsRequest.product_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_product_ids();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
GetCountProductsRequest::_internal_product_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_ids_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* GetCountProductsRequest::_internal_mutable_product_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.product_ids_;
}

// int64 warehouse_id = 2;
inline void GetCountProductsRequest::clear_warehouse_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warehouse_id_ = ::int64_t{0};
}
inline ::int64_t GetCountProductsRequest::warehouse_id() const {
  // @@protoc_insertion_point(field_get:warehouse.GetCountProductsRequest.warehouse_id)
  return _internal_warehouse_id();
}
inline void GetCountProductsRequest::set_warehouse_id(::int64_t value) {
  _internal_set_warehouse_id(value);
  // @@protoc_insertion_point(field_set:warehouse.GetCountProductsRequest.warehouse_id)
}
inline ::int64_t GetCountProductsRequest::_internal_warehouse_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.warehouse_id_;
}
inline void GetCountProductsRequest::_internal_set_warehouse_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warehouse_id_ = value;
}

// -------------------------------------------------------------------

// GetCountProductsResponse

// repeated .warehouse.CountProducts count_products = 1;
inline int GetCountProductsResponse::_internal_count_products_size() const {
  return _internal_count_products().size();
}
inline int GetCountProductsResponse::count_products_size() const {
  return _internal_count_products_size();
}
inline void GetCountProductsResponse::clear_count_products() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_products_.Clear();
}
inline ::warehouse::CountProducts* GetCountProductsResponse::mutable_count_products(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:warehouse.GetCountProductsResponse.count_products)
  return _internal_mutable_count_products()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::CountProducts>* GetCountProductsResponse::mutable_count_products()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:warehouse.GetCountProductsResponse.count_products)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_count_products();
}
inline const ::warehouse::CountProducts& GetCountProductsResponse::count_products(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:warehouse.GetCountProductsResponse.count_products)
  return _internal_count_products().Get(index);
}
inline ::warehouse::CountProducts* GetCountProductsResponse::add_count_products() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::warehouse::CountProducts* _add = _internal_mutable_count_products()->Add();
  // @@protoc_insertion_point(field_add:warehouse.GetCountProductsResponse.count_products)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::CountProducts>& GetCountProductsResponse::count_products() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:warehouse.GetCountProductsResponse.count_products)
  return _internal_count_products();
}
inline const ::google::protobuf::RepeatedPtrField<::warehouse::CountProducts>&
GetCountProductsResponse::_internal_count_products() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_products_;
}
inline ::google::protobuf::RepeatedPtrField<::warehouse::CountProducts>*
GetCountProductsResponse::_internal_mutable_count_products() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.count_products_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace warehouse


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // warehouse_2fwarehouse_2eproto_2epb_2eh

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: product/product.proto
// Protobuf C++ Version: 5.29.3

#ifndef product_2fproduct_2eproto_2epb_2eh
#define product_2fproduct_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_product_2fproduct_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_product_2fproduct_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_product_2fproduct_2eproto;
namespace product {
class CategoryModel;
struct CategoryModelDefaultTypeInternal;
extern CategoryModelDefaultTypeInternal _CategoryModel_default_instance_;
class Characteristic;
struct CharacteristicDefaultTypeInternal;
extern CharacteristicDefaultTypeInternal _Characteristic_default_instance_;
class CharacteristicGroup;
struct CharacteristicGroupDefaultTypeInternal;
extern CharacteristicGroupDefaultTypeInternal _CharacteristicGroup_default_instance_;
class CreateProductCategoryRequest;
struct CreateProductCategoryRequestDefaultTypeInternal;
extern CreateProductCategoryRequestDefaultTypeInternal _CreateProductCategoryRequest_default_instance_;
class CreateProductCategoryResponse;
struct CreateProductCategoryResponseDefaultTypeInternal;
extern CreateProductCategoryResponseDefaultTypeInternal _CreateProductCategoryResponse_default_instance_;
class CreateProductGroupRequest;
struct CreateProductGroupRequestDefaultTypeInternal;
extern CreateProductGroupRequestDefaultTypeInternal _CreateProductGroupRequest_default_instance_;
class CreateProductGroupResponse;
struct CreateProductGroupResponseDefaultTypeInternal;
extern CreateProductGroupResponseDefaultTypeInternal _CreateProductGroupResponse_default_instance_;
class CreateProductRequest;
struct CreateProductRequestDefaultTypeInternal;
extern CreateProductRequestDefaultTypeInternal _CreateProductRequest_default_instance_;
class CreateProductResponse;
struct CreateProductResponseDefaultTypeInternal;
extern CreateProductResponseDefaultTypeInternal _CreateProductResponse_default_instance_;
class DeleteProductGroupRequest;
struct DeleteProductGroupRequestDefaultTypeInternal;
extern DeleteProductGroupRequestDefaultTypeInternal _DeleteProductGroupRequest_default_instance_;
class DeleteProductGroupResponse;
struct DeleteProductGroupResponseDefaultTypeInternal;
extern DeleteProductGroupResponseDefaultTypeInternal _DeleteProductGroupResponse_default_instance_;
class DeleteProductRequest;
struct DeleteProductRequestDefaultTypeInternal;
extern DeleteProductRequestDefaultTypeInternal _DeleteProductRequest_default_instance_;
class DeleteProductResponse;
struct DeleteProductResponseDefaultTypeInternal;
extern DeleteProductResponseDefaultTypeInternal _DeleteProductResponse_default_instance_;
class DuplicateProductRequest;
struct DuplicateProductRequestDefaultTypeInternal;
extern DuplicateProductRequestDefaultTypeInternal _DuplicateProductRequest_default_instance_;
class DuplicateProductResponse;
struct DuplicateProductResponseDefaultTypeInternal;
extern DuplicateProductResponseDefaultTypeInternal _DuplicateProductResponse_default_instance_;
class GeneratePresignedURLsRequest;
struct GeneratePresignedURLsRequestDefaultTypeInternal;
extern GeneratePresignedURLsRequestDefaultTypeInternal _GeneratePresignedURLsRequest_default_instance_;
class GeneratePresignedURLsResponse;
struct GeneratePresignedURLsResponseDefaultTypeInternal;
extern GeneratePresignedURLsResponseDefaultTypeInternal _GeneratePresignedURLsResponse_default_instance_;
class GetChildrenCategoriesRequest;
struct GetChildrenCategoriesRequestDefaultTypeInternal;
extern GetChildrenCategoriesRequestDefaultTypeInternal _GetChildrenCategoriesRequest_default_instance_;
class GetChildrenCategoriesResponse;
struct GetChildrenCategoriesResponseDefaultTypeInternal;
extern GetChildrenCategoriesResponseDefaultTypeInternal _GetChildrenCategoriesResponse_default_instance_;
class GetProductCategoryWithChildrenRequest;
struct GetProductCategoryWithChildrenRequestDefaultTypeInternal;
extern GetProductCategoryWithChildrenRequestDefaultTypeInternal _GetProductCategoryWithChildrenRequest_default_instance_;
class GetProductCategoryWithChildrenResponse;
struct GetProductCategoryWithChildrenResponseDefaultTypeInternal;
extern GetProductCategoryWithChildrenResponseDefaultTypeInternal _GetProductCategoryWithChildrenResponse_default_instance_;
class GetProductGroupRequest;
struct GetProductGroupRequestDefaultTypeInternal;
extern GetProductGroupRequestDefaultTypeInternal _GetProductGroupRequest_default_instance_;
class GetProductGroupResponse;
struct GetProductGroupResponseDefaultTypeInternal;
extern GetProductGroupResponseDefaultTypeInternal _GetProductGroupResponse_default_instance_;
class GetProductRequest;
struct GetProductRequestDefaultTypeInternal;
extern GetProductRequestDefaultTypeInternal _GetProductRequest_default_instance_;
class GetProductResponse;
struct GetProductResponseDefaultTypeInternal;
extern GetProductResponseDefaultTypeInternal _GetProductResponse_default_instance_;
class ImageModel;
struct ImageModelDefaultTypeInternal;
extern ImageModelDefaultTypeInternal _ImageModel_default_instance_;
class ListCategoriesRequest;
struct ListCategoriesRequestDefaultTypeInternal;
extern ListCategoriesRequestDefaultTypeInternal _ListCategoriesRequest_default_instance_;
class ListCategoriesResponse;
struct ListCategoriesResponseDefaultTypeInternal;
extern ListCategoriesResponseDefaultTypeInternal _ListCategoriesResponse_default_instance_;
class ListProductGroupsRequest;
struct ListProductGroupsRequestDefaultTypeInternal;
extern ListProductGroupsRequestDefaultTypeInternal _ListProductGroupsRequest_default_instance_;
class ListProductGroupsResponse;
struct ListProductGroupsResponseDefaultTypeInternal;
extern ListProductGroupsResponseDefaultTypeInternal _ListProductGroupsResponse_default_instance_;
class ListProductsRequest;
struct ListProductsRequestDefaultTypeInternal;
extern ListProductsRequestDefaultTypeInternal _ListProductsRequest_default_instance_;
class ListProductsRequest_FilterEntry_DoNotUse;
struct ListProductsRequest_FilterEntry_DoNotUseDefaultTypeInternal;
extern ListProductsRequest_FilterEntry_DoNotUseDefaultTypeInternal _ListProductsRequest_FilterEntry_DoNotUse_default_instance_;
class ListProductsResponse;
struct ListProductsResponseDefaultTypeInternal;
extern ListProductsResponseDefaultTypeInternal _ListProductsResponse_default_instance_;
class PatchProductRequest;
struct PatchProductRequestDefaultTypeInternal;
extern PatchProductRequestDefaultTypeInternal _PatchProductRequest_default_instance_;
class PatchProductResponse;
struct PatchProductResponseDefaultTypeInternal;
extern PatchProductResponseDefaultTypeInternal _PatchProductResponse_default_instance_;
class PresignedURLInfo;
struct PresignedURLInfoDefaultTypeInternal;
extern PresignedURLInfoDefaultTypeInternal _PresignedURLInfo_default_instance_;
class Product;
struct ProductDefaultTypeInternal;
extern ProductDefaultTypeInternal _Product_default_instance_;
class ProductCharacteristics;
struct ProductCharacteristicsDefaultTypeInternal;
extern ProductCharacteristicsDefaultTypeInternal _ProductCharacteristics_default_instance_;
class ProductGroup;
struct ProductGroupDefaultTypeInternal;
extern ProductGroupDefaultTypeInternal _ProductGroup_default_instance_;
class ProductGroupModel;
struct ProductGroupModelDefaultTypeInternal;
extern ProductGroupModelDefaultTypeInternal _ProductGroupModel_default_instance_;
class ProductModel;
struct ProductModelDefaultTypeInternal;
extern ProductModelDefaultTypeInternal _ProductModel_default_instance_;
class ProductViewAgg;
struct ProductViewAggDefaultTypeInternal;
extern ProductViewAggDefaultTypeInternal _ProductViewAgg_default_instance_;
class UpdateProductGroupRequest;
struct UpdateProductGroupRequestDefaultTypeInternal;
extern UpdateProductGroupRequestDefaultTypeInternal _UpdateProductGroupRequest_default_instance_;
class UpdateProductGroupResponse;
struct UpdateProductGroupResponseDefaultTypeInternal;
extern UpdateProductGroupResponseDefaultTypeInternal _UpdateProductGroupResponse_default_instance_;
class UploadProductsRequest;
struct UploadProductsRequestDefaultTypeInternal;
extern UploadProductsRequestDefaultTypeInternal _UploadProductsRequest_default_instance_;
class UploadProductsResponse;
struct UploadProductsResponseDefaultTypeInternal;
extern UploadProductsResponseDefaultTypeInternal _UploadProductsResponse_default_instance_;
class Values;
struct ValuesDefaultTypeInternal;
extern ValuesDefaultTypeInternal _Values_default_instance_;
}  // namespace product
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace product {

// ===================================================================


// -------------------------------------------------------------------

class Values final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.Values) */ {
 public:
  inline Values() : Values(nullptr) {}
  ~Values() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Values* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Values));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Values(
      ::google::protobuf::internal::ConstantInitialized);

  inline Values(const Values& from) : Values(nullptr, from) {}
  inline Values(Values&& from) noexcept
      : Values(nullptr, std::move(from)) {}
  inline Values& operator=(const Values& from) {
    CopyFrom(from);
    return *this;
  }
  inline Values& operator=(Values&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Values& default_instance() {
    return *internal_default_instance();
  }
  static inline const Values* internal_default_instance() {
    return reinterpret_cast<const Values*>(
        &_Values_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(Values& a, Values& b) { a.Swap(&b); }
  inline void Swap(Values* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Values* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Values* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Values>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Values& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Values& from) { Values::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Values* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.Values"; }

 protected:
  explicit Values(::google::protobuf::Arena* arena);
  Values(::google::protobuf::Arena* arena, const Values& from);
  Values(::google::protobuf::Arena* arena, Values&& from) noexcept
      : Values(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValuesFieldNumber = 1,
  };
  // repeated string values = 1;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  const std::string& values(int index) const;
  std::string* mutable_values(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_values(int index, Arg_&& value, Args_... args);
  std::string* add_values();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_values(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& values() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_values();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_values() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_values();

  public:
  // @@protoc_insertion_point(class_scope:product.Values)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      29, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Values& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> values_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class UploadProductsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.UploadProductsRequest) */ {
 public:
  inline UploadProductsRequest() : UploadProductsRequest(nullptr) {}
  ~UploadProductsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UploadProductsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UploadProductsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UploadProductsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UploadProductsRequest(const UploadProductsRequest& from) : UploadProductsRequest(nullptr, from) {}
  inline UploadProductsRequest(UploadProductsRequest&& from) noexcept
      : UploadProductsRequest(nullptr, std::move(from)) {}
  inline UploadProductsRequest& operator=(const UploadProductsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UploadProductsRequest& operator=(UploadProductsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UploadProductsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UploadProductsRequest* internal_default_instance() {
    return reinterpret_cast<const UploadProductsRequest*>(
        &_UploadProductsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(UploadProductsRequest& a, UploadProductsRequest& b) { a.Swap(&b); }
  inline void Swap(UploadProductsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UploadProductsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UploadProductsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UploadProductsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UploadProductsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UploadProductsRequest& from) { UploadProductsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UploadProductsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.UploadProductsRequest"; }

 protected:
  explicit UploadProductsRequest(::google::protobuf::Arena* arena);
  UploadProductsRequest(::google::protobuf::Arena* arena, const UploadProductsRequest& from);
  UploadProductsRequest(::google::protobuf::Arena* arena, UploadProductsRequest&& from) noexcept
      : UploadProductsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExcelFileFieldNumber = 1,
  };
  // bytes excel_file = 1;
  void clear_excel_file() ;
  const std::string& excel_file() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_excel_file(Arg_&& arg, Args_... args);
  std::string* mutable_excel_file();
  PROTOBUF_NODISCARD std::string* release_excel_file();
  void set_allocated_excel_file(std::string* value);

  private:
  const std::string& _internal_excel_file() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_excel_file(
      const std::string& value);
  std::string* _internal_mutable_excel_file();

  public:
  // @@protoc_insertion_point(class_scope:product.UploadProductsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UploadProductsRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr excel_file_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class ProductViewAgg final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.ProductViewAgg) */ {
 public:
  inline ProductViewAgg() : ProductViewAgg(nullptr) {}
  ~ProductViewAgg() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProductViewAgg* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProductViewAgg));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProductViewAgg(
      ::google::protobuf::internal::ConstantInitialized);

  inline ProductViewAgg(const ProductViewAgg& from) : ProductViewAgg(nullptr, from) {}
  inline ProductViewAgg(ProductViewAgg&& from) noexcept
      : ProductViewAgg(nullptr, std::move(from)) {}
  inline ProductViewAgg& operator=(const ProductViewAgg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProductViewAgg& operator=(ProductViewAgg&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProductViewAgg& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProductViewAgg* internal_default_instance() {
    return reinterpret_cast<const ProductViewAgg*>(
        &_ProductViewAgg_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(ProductViewAgg& a, ProductViewAgg& b) { a.Swap(&b); }
  inline void Swap(ProductViewAgg* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProductViewAgg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProductViewAgg* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProductViewAgg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProductViewAgg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProductViewAgg& from) { ProductViewAgg::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProductViewAgg* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.ProductViewAgg"; }

 protected:
  explicit ProductViewAgg(::google::protobuf::Arena* arena);
  ProductViewAgg(::google::protobuf::Arena* arena, const ProductViewAgg& from);
  ProductViewAgg(::google::protobuf::Arena* arena, ProductViewAgg&& from) noexcept
      : ProductViewAgg(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLastSeenFieldNumber = 3,
    kProductIdFieldNumber = 1,
    kTotalViewsFieldNumber = 2,
  };
  // string last_seen = 3;
  void clear_last_seen() ;
  const std::string& last_seen() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_seen(Arg_&& arg, Args_... args);
  std::string* mutable_last_seen();
  PROTOBUF_NODISCARD std::string* release_last_seen();
  void set_allocated_last_seen(std::string* value);

  private:
  const std::string& _internal_last_seen() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_seen(
      const std::string& value);
  std::string* _internal_mutable_last_seen();

  public:
  // int64 product_id = 1;
  void clear_product_id() ;
  ::int64_t product_id() const;
  void set_product_id(::int64_t value);

  private:
  ::int64_t _internal_product_id() const;
  void _internal_set_product_id(::int64_t value);

  public:
  // uint64 total_views = 2;
  void clear_total_views() ;
  ::uint64_t total_views() const;
  void set_total_views(::uint64_t value);

  private:
  ::uint64_t _internal_total_views() const;
  void _internal_set_total_views(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:product.ProductViewAgg)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      40, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ProductViewAgg& from_msg);
    ::google::protobuf::internal::ArenaStringPtr last_seen_;
    ::int64_t product_id_;
    ::uint64_t total_views_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class ProductModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.ProductModel) */ {
 public:
  inline ProductModel() : ProductModel(nullptr) {}
  ~ProductModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProductModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProductModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProductModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline ProductModel(const ProductModel& from) : ProductModel(nullptr, from) {}
  inline ProductModel(ProductModel&& from) noexcept
      : ProductModel(nullptr, std::move(from)) {}
  inline ProductModel& operator=(const ProductModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProductModel& operator=(ProductModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProductModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProductModel* internal_default_instance() {
    return reinterpret_cast<const ProductModel*>(
        &_ProductModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ProductModel& a, ProductModel& b) { a.Swap(&b); }
  inline void Swap(ProductModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProductModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProductModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProductModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProductModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProductModel& from) { ProductModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProductModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.ProductModel"; }

 protected:
  explicit ProductModel(::google::protobuf::Arena* arena);
  ProductModel(::google::protobuf::Arena* arena, const ProductModel& from);
  ProductModel(::google::protobuf::Arena* arena, ProductModel&& from) noexcept
      : ProductModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kCategoryIdFieldNumber = 4,
    kDesignUrlFieldNumber = 7,
    kSaleStatusFieldNumber = 12,
    kImageUrlFieldNumber = 13,
    kCreatedAtFieldNumber = 15,
    kUpdatedAtFieldNumber = 16,
    kIdFieldNumber = 1,
    kOrganizationIdFieldNumber = 5,
    kParentProductIdFieldNumber = 6,
    kCreatedByFieldNumber = 8,
    kIsExternalFieldNumber = 9,
    kSalePriceFieldNumber = 10,
    kBrandIdFieldNumber = 14,
    kPurchasePriceFieldNumber = 11,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string description = 3;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // optional string category_id = 4;
  bool has_category_id() const;
  void clear_category_id() ;
  const std::string& category_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_category_id(Arg_&& arg, Args_... args);
  std::string* mutable_category_id();
  PROTOBUF_NODISCARD std::string* release_category_id();
  void set_allocated_category_id(std::string* value);

  private:
  const std::string& _internal_category_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_category_id(
      const std::string& value);
  std::string* _internal_mutable_category_id();

  public:
  // optional string design_url = 7;
  bool has_design_url() const;
  void clear_design_url() ;
  const std::string& design_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_design_url(Arg_&& arg, Args_... args);
  std::string* mutable_design_url();
  PROTOBUF_NODISCARD std::string* release_design_url();
  void set_allocated_design_url(std::string* value);

  private:
  const std::string& _internal_design_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_design_url(
      const std::string& value);
  std::string* _internal_mutable_design_url();

  public:
  // optional string sale_status = 12;
  bool has_sale_status() const;
  void clear_sale_status() ;
  const std::string& sale_status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sale_status(Arg_&& arg, Args_... args);
  std::string* mutable_sale_status();
  PROTOBUF_NODISCARD std::string* release_sale_status();
  void set_allocated_sale_status(std::string* value);

  private:
  const std::string& _internal_sale_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sale_status(
      const std::string& value);
  std::string* _internal_mutable_sale_status();

  public:
  // optional string image_url = 13;
  bool has_image_url() const;
  void clear_image_url() ;
  const std::string& image_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_image_url(Arg_&& arg, Args_... args);
  std::string* mutable_image_url();
  PROTOBUF_NODISCARD std::string* release_image_url();
  void set_allocated_image_url(std::string* value);

  private:
  const std::string& _internal_image_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_image_url(
      const std::string& value);
  std::string* _internal_mutable_image_url();

  public:
  // optional string created_at = 15;
  bool has_created_at() const;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // optional string updated_at = 16;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // optional int64 id = 1;
  bool has_id() const;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 organization_id = 5;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // optional int64 parent_product_id = 6;
  bool has_parent_product_id() const;
  void clear_parent_product_id() ;
  ::int64_t parent_product_id() const;
  void set_parent_product_id(::int64_t value);

  private:
  ::int64_t _internal_parent_product_id() const;
  void _internal_set_parent_product_id(::int64_t value);

  public:
  // int64 created_by = 8;
  void clear_created_by() ;
  ::int64_t created_by() const;
  void set_created_by(::int64_t value);

  private:
  ::int64_t _internal_created_by() const;
  void _internal_set_created_by(::int64_t value);

  public:
  // optional bool is_external = 9;
  bool has_is_external() const;
  void clear_is_external() ;
  bool is_external() const;
  void set_is_external(bool value);

  private:
  bool _internal_is_external() const;
  void _internal_set_is_external(bool value);

  public:
  // float sale_price = 10;
  void clear_sale_price() ;
  float sale_price() const;
  void set_sale_price(float value);

  private:
  float _internal_sale_price() const;
  void _internal_set_sale_price(float value);

  public:
  // optional int64 brand_id = 14;
  bool has_brand_id() const;
  void clear_brand_id() ;
  ::int64_t brand_id() const;
  void set_brand_id(::int64_t value);

  private:
  ::int64_t _internal_brand_id() const;
  void _internal_set_brand_id(::int64_t value);

  public:
  // optional float purchase_price = 11;
  bool has_purchase_price() const;
  void clear_purchase_price() ;
  float purchase_price() const;
  void set_purchase_price(float value);

  private:
  float _internal_purchase_price() const;
  void _internal_set_purchase_price(float value);

  public:
  // @@protoc_insertion_point(class_scope:product.ProductModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 16, 0,
      121, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ProductModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr category_id_;
    ::google::protobuf::internal::ArenaStringPtr design_url_;
    ::google::protobuf::internal::ArenaStringPtr sale_status_;
    ::google::protobuf::internal::ArenaStringPtr image_url_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::int64_t id_;
    ::int64_t organization_id_;
    ::int64_t parent_product_id_;
    ::int64_t created_by_;
    bool is_external_;
    float sale_price_;
    ::int64_t brand_id_;
    float purchase_price_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class ProductGroupModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.ProductGroupModel) */ {
 public:
  inline ProductGroupModel() : ProductGroupModel(nullptr) {}
  ~ProductGroupModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProductGroupModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProductGroupModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProductGroupModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline ProductGroupModel(const ProductGroupModel& from) : ProductGroupModel(nullptr, from) {}
  inline ProductGroupModel(ProductGroupModel&& from) noexcept
      : ProductGroupModel(nullptr, std::move(from)) {}
  inline ProductGroupModel& operator=(const ProductGroupModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProductGroupModel& operator=(ProductGroupModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProductGroupModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProductGroupModel* internal_default_instance() {
    return reinterpret_cast<const ProductGroupModel*>(
        &_ProductGroupModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ProductGroupModel& a, ProductGroupModel& b) { a.Swap(&b); }
  inline void Swap(ProductGroupModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProductGroupModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProductGroupModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProductGroupModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProductGroupModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProductGroupModel& from) { ProductGroupModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProductGroupModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.ProductGroupModel"; }

 protected:
  explicit ProductGroupModel(::google::protobuf::Arena* arena);
  ProductGroupModel(::google::protobuf::Arena* arena, const ProductGroupModel& from);
  ProductGroupModel(::google::protobuf::Arena* arena, ProductGroupModel&& from) noexcept
      : ProductGroupModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductIdsFieldNumber = 3,
    kGroupNameFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // repeated int64 product_ids = 3;
  int product_ids_size() const;
  private:
  int _internal_product_ids_size() const;

  public:
  void clear_product_ids() ;
  ::int64_t product_ids(int index) const;
  void set_product_ids(int index, ::int64_t value);
  void add_product_ids(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& product_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_product_ids();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_product_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_product_ids();

  public:
  // string group_name = 2;
  void clear_group_name() ;
  const std::string& group_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_group_name(Arg_&& arg, Args_... args);
  std::string* mutable_group_name();
  PROTOBUF_NODISCARD std::string* release_group_name();
  void set_allocated_group_name(std::string* value);

  private:
  const std::string& _internal_group_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_group_name(
      const std::string& value);
  std::string* _internal_mutable_group_name();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:product.ProductGroupModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      44, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ProductGroupModel& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> product_ids_;
    ::google::protobuf::internal::CachedSize _product_ids_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr group_name_;
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class ProductCharacteristics final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.ProductCharacteristics) */ {
 public:
  inline ProductCharacteristics() : ProductCharacteristics(nullptr) {}
  ~ProductCharacteristics() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProductCharacteristics* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProductCharacteristics));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProductCharacteristics(
      ::google::protobuf::internal::ConstantInitialized);

  inline ProductCharacteristics(const ProductCharacteristics& from) : ProductCharacteristics(nullptr, from) {}
  inline ProductCharacteristics(ProductCharacteristics&& from) noexcept
      : ProductCharacteristics(nullptr, std::move(from)) {}
  inline ProductCharacteristics& operator=(const ProductCharacteristics& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProductCharacteristics& operator=(ProductCharacteristics&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProductCharacteristics& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProductCharacteristics* internal_default_instance() {
    return reinterpret_cast<const ProductCharacteristics*>(
        &_ProductCharacteristics_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ProductCharacteristics& a, ProductCharacteristics& b) { a.Swap(&b); }
  inline void Swap(ProductCharacteristics* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProductCharacteristics* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProductCharacteristics* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProductCharacteristics>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProductCharacteristics& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProductCharacteristics& from) { ProductCharacteristics::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProductCharacteristics* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.ProductCharacteristics"; }

 protected:
  explicit ProductCharacteristics(::google::protobuf::Arena* arena);
  ProductCharacteristics(::google::protobuf::Arena* arena, const ProductCharacteristics& from);
  ProductCharacteristics(::google::protobuf::Arena* arena, ProductCharacteristics&& from) noexcept
      : ProductCharacteristics(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValuesFieldNumber = 5,
    kGroupNameFieldNumber = 3,
    kNameFieldNumber = 4,
    kIdFieldNumber = 1,
    kProductIdFieldNumber = 2,
  };
  // repeated string values = 5;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  const std::string& values(int index) const;
  std::string* mutable_values(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_values(int index, Arg_&& value, Args_... args);
  std::string* add_values();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_values(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& values() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_values();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_values() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_values();

  public:
  // string group_name = 3;
  void clear_group_name() ;
  const std::string& group_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_group_name(Arg_&& arg, Args_... args);
  std::string* mutable_group_name();
  PROTOBUF_NODISCARD std::string* release_group_name();
  void set_allocated_group_name(std::string* value);

  private:
  const std::string& _internal_group_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_group_name(
      const std::string& value);
  std::string* _internal_mutable_group_name();

  public:
  // string name = 4;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // optional int64 product_id = 2;
  bool has_product_id() const;
  void clear_product_id() ;
  ::int64_t product_id() const;
  void set_product_id(::int64_t value);

  private:
  ::int64_t _internal_product_id() const;
  void _internal_set_product_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:product.ProductCharacteristics)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ProductCharacteristics& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> values_;
    ::google::protobuf::internal::ArenaStringPtr group_name_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::int64_t id_;
    ::int64_t product_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class PresignedURLInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.PresignedURLInfo) */ {
 public:
  inline PresignedURLInfo() : PresignedURLInfo(nullptr) {}
  ~PresignedURLInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PresignedURLInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PresignedURLInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PresignedURLInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline PresignedURLInfo(const PresignedURLInfo& from) : PresignedURLInfo(nullptr, from) {}
  inline PresignedURLInfo(PresignedURLInfo&& from) noexcept
      : PresignedURLInfo(nullptr, std::move(from)) {}
  inline PresignedURLInfo& operator=(const PresignedURLInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline PresignedURLInfo& operator=(PresignedURLInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PresignedURLInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const PresignedURLInfo* internal_default_instance() {
    return reinterpret_cast<const PresignedURLInfo*>(
        &_PresignedURLInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 42;
  friend void swap(PresignedURLInfo& a, PresignedURLInfo& b) { a.Swap(&b); }
  inline void Swap(PresignedURLInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PresignedURLInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PresignedURLInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PresignedURLInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PresignedURLInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PresignedURLInfo& from) { PresignedURLInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PresignedURLInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.PresignedURLInfo"; }

 protected:
  explicit PresignedURLInfo(::google::protobuf::Arena* arena);
  PresignedURLInfo(::google::protobuf::Arena* arena, const PresignedURLInfo& from);
  PresignedURLInfo(::google::protobuf::Arena* arena, PresignedURLInfo&& from) noexcept
      : PresignedURLInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFileNameFieldNumber = 1,
    kPresignedUrlFieldNumber = 2,
    kObjectKeyFieldNumber = 3,
  };
  // string file_name = 1;
  void clear_file_name() ;
  const std::string& file_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file_name(Arg_&& arg, Args_... args);
  std::string* mutable_file_name();
  PROTOBUF_NODISCARD std::string* release_file_name();
  void set_allocated_file_name(std::string* value);

  private:
  const std::string& _internal_file_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_name(
      const std::string& value);
  std::string* _internal_mutable_file_name();

  public:
  // string presigned_url = 2;
  void clear_presigned_url() ;
  const std::string& presigned_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_presigned_url(Arg_&& arg, Args_... args);
  std::string* mutable_presigned_url();
  PROTOBUF_NODISCARD std::string* release_presigned_url();
  void set_allocated_presigned_url(std::string* value);

  private:
  const std::string& _internal_presigned_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_presigned_url(
      const std::string& value);
  std::string* _internal_mutable_presigned_url();

  public:
  // string object_key = 3;
  void clear_object_key() ;
  const std::string& object_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_object_key(Arg_&& arg, Args_... args);
  std::string* mutable_object_key();
  PROTOBUF_NODISCARD std::string* release_object_key();
  void set_allocated_object_key(std::string* value);

  private:
  const std::string& _internal_object_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_object_key(
      const std::string& value);
  std::string* _internal_mutable_object_key();

  public:
  // @@protoc_insertion_point(class_scope:product.PresignedURLInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      65, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PresignedURLInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr file_name_;
    ::google::protobuf::internal::ArenaStringPtr presigned_url_;
    ::google::protobuf::internal::ArenaStringPtr object_key_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class ListProductGroupsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.ListProductGroupsRequest) */ {
 public:
  inline ListProductGroupsRequest() : ListProductGroupsRequest(nullptr) {}
  ~ListProductGroupsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListProductGroupsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListProductGroupsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListProductGroupsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListProductGroupsRequest(const ListProductGroupsRequest& from) : ListProductGroupsRequest(nullptr, from) {}
  inline ListProductGroupsRequest(ListProductGroupsRequest&& from) noexcept
      : ListProductGroupsRequest(nullptr, std::move(from)) {}
  inline ListProductGroupsRequest& operator=(const ListProductGroupsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListProductGroupsRequest& operator=(ListProductGroupsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListProductGroupsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListProductGroupsRequest* internal_default_instance() {
    return reinterpret_cast<const ListProductGroupsRequest*>(
        &_ListProductGroupsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(ListProductGroupsRequest& a, ListProductGroupsRequest& b) { a.Swap(&b); }
  inline void Swap(ListProductGroupsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListProductGroupsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListProductGroupsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListProductGroupsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListProductGroupsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListProductGroupsRequest& from) { ListProductGroupsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListProductGroupsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.ListProductGroupsRequest"; }

 protected:
  explicit ListProductGroupsRequest(::google::protobuf::Arena* arena);
  ListProductGroupsRequest(::google::protobuf::Arena* arena, const ListProductGroupsRequest& from);
  ListProductGroupsRequest(::google::protobuf::Arena* arena, ListProductGroupsRequest&& from) noexcept
      : ListProductGroupsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 3,
    kPageFieldNumber = 1,
    kPageSizeFieldNumber = 2,
    kProductIdFieldNumber = 4,
    kOrganizationIdFieldNumber = 5,
  };
  // string name = 3;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // int64 page = 1;
  void clear_page() ;
  ::int64_t page() const;
  void set_page(::int64_t value);

  private:
  ::int64_t _internal_page() const;
  void _internal_set_page(::int64_t value);

  public:
  // int64 page_size = 2;
  void clear_page_size() ;
  ::int64_t page_size() const;
  void set_page_size(::int64_t value);

  private:
  ::int64_t _internal_page_size() const;
  void _internal_set_page_size(::int64_t value);

  public:
  // int64 product_id = 4;
  void clear_product_id() ;
  ::int64_t product_id() const;
  void set_product_id(::int64_t value);

  private:
  ::int64_t _internal_product_id() const;
  void _internal_set_product_id(::int64_t value);

  public:
  // int64 organization_id = 5;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:product.ListProductGroupsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      45, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListProductGroupsRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::int64_t page_;
    ::int64_t page_size_;
    ::int64_t product_id_;
    ::int64_t organization_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class ListCategoriesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.ListCategoriesRequest) */ {
 public:
  inline ListCategoriesRequest() : ListCategoriesRequest(nullptr) {}
  ~ListCategoriesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListCategoriesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListCategoriesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListCategoriesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListCategoriesRequest(const ListCategoriesRequest& from) : ListCategoriesRequest(nullptr, from) {}
  inline ListCategoriesRequest(ListCategoriesRequest&& from) noexcept
      : ListCategoriesRequest(nullptr, std::move(from)) {}
  inline ListCategoriesRequest& operator=(const ListCategoriesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCategoriesRequest& operator=(ListCategoriesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListCategoriesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListCategoriesRequest* internal_default_instance() {
    return reinterpret_cast<const ListCategoriesRequest*>(
        &_ListCategoriesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(ListCategoriesRequest& a, ListCategoriesRequest& b) { a.Swap(&b); }
  inline void Swap(ListCategoriesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCategoriesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListCategoriesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListCategoriesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListCategoriesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListCategoriesRequest& from) { ListCategoriesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListCategoriesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.ListCategoriesRequest"; }

 protected:
  explicit ListCategoriesRequest(::google::protobuf::Arena* arena);
  ListCategoriesRequest(::google::protobuf::Arena* arena, const ListCategoriesRequest& from);
  ListCategoriesRequest(::google::protobuf::Arena* arena, ListCategoriesRequest&& from) noexcept
      : ListCategoriesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLevelFieldNumber = 1,
  };
  // optional int32 level = 1;
  bool has_level() const;
  void clear_level() ;
  ::int32_t level() const;
  void set_level(::int32_t value);

  private:
  ::int32_t _internal_level() const;
  void _internal_set_level(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:product.ListCategoriesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListCategoriesRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t level_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class ImageModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.ImageModel) */ {
 public:
  inline ImageModel() : ImageModel(nullptr) {}
  ~ImageModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ImageModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ImageModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ImageModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline ImageModel(const ImageModel& from) : ImageModel(nullptr, from) {}
  inline ImageModel(ImageModel&& from) noexcept
      : ImageModel(nullptr, std::move(from)) {}
  inline ImageModel& operator=(const ImageModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImageModel& operator=(ImageModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ImageModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImageModel* internal_default_instance() {
    return reinterpret_cast<const ImageModel*>(
        &_ImageModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ImageModel& a, ImageModel& b) { a.Swap(&b); }
  inline void Swap(ImageModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImageModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ImageModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ImageModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ImageModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ImageModel& from) { ImageModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ImageModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.ImageModel"; }

 protected:
  explicit ImageModel(::google::protobuf::Arena* arena);
  ImageModel(::google::protobuf::Arena* arena, const ImageModel& from);
  ImageModel(::google::protobuf::Arena* arena, ImageModel&& from) noexcept
      : ImageModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kImageUrlFieldNumber = 2,
    kObjectKeyFieldNumber = 4,
    kIdFieldNumber = 1,
    kImageIndexFieldNumber = 3,
  };
  // string image_url = 2;
  void clear_image_url() ;
  const std::string& image_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_image_url(Arg_&& arg, Args_... args);
  std::string* mutable_image_url();
  PROTOBUF_NODISCARD std::string* release_image_url();
  void set_allocated_image_url(std::string* value);

  private:
  const std::string& _internal_image_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_image_url(
      const std::string& value);
  std::string* _internal_mutable_image_url();

  public:
  // string object_key = 4;
  void clear_object_key() ;
  const std::string& object_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_object_key(Arg_&& arg, Args_... args);
  std::string* mutable_object_key();
  PROTOBUF_NODISCARD std::string* release_object_key();
  void set_allocated_object_key(std::string* value);

  private:
  const std::string& _internal_object_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_object_key(
      const std::string& value);
  std::string* _internal_mutable_object_key();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // optional int64 image_index = 3;
  bool has_image_index() const;
  void clear_image_index() ;
  ::int64_t image_index() const;
  void set_image_index(::int64_t value);

  private:
  ::int64_t _internal_image_index() const;
  void _internal_set_image_index(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:product.ImageModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      46, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ImageModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr image_url_;
    ::google::protobuf::internal::ArenaStringPtr object_key_;
    ::int64_t id_;
    ::int64_t image_index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class GetProductRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.GetProductRequest) */ {
 public:
  inline GetProductRequest() : GetProductRequest(nullptr) {}
  ~GetProductRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetProductRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetProductRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetProductRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetProductRequest(const GetProductRequest& from) : GetProductRequest(nullptr, from) {}
  inline GetProductRequest(GetProductRequest&& from) noexcept
      : GetProductRequest(nullptr, std::move(from)) {}
  inline GetProductRequest& operator=(const GetProductRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetProductRequest& operator=(GetProductRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetProductRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetProductRequest* internal_default_instance() {
    return reinterpret_cast<const GetProductRequest*>(
        &_GetProductRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(GetProductRequest& a, GetProductRequest& b) { a.Swap(&b); }
  inline void Swap(GetProductRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetProductRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetProductRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetProductRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetProductRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetProductRequest& from) { GetProductRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetProductRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.GetProductRequest"; }

 protected:
  explicit GetProductRequest(::google::protobuf::Arena* arena);
  GetProductRequest(::google::protobuf::Arena* arena, const GetProductRequest& from);
  GetProductRequest(::google::protobuf::Arena* arena, GetProductRequest&& from) noexcept
      : GetProductRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrganizationTypeFieldNumber = 6,
    kIdFieldNumber = 1,
    kUserIdFieldNumber = 5,
    kIncludeCharacteristicsFieldNumber = 2,
    kIncludeImagesFieldNumber = 3,
    kIncludeProductGroupsFieldNumber = 4,
  };
  // string organization_type = 6;
  void clear_organization_type() ;
  const std::string& organization_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_organization_type(Arg_&& arg, Args_... args);
  std::string* mutable_organization_type();
  PROTOBUF_NODISCARD std::string* release_organization_type();
  void set_allocated_organization_type(std::string* value);

  private:
  const std::string& _internal_organization_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_organization_type(
      const std::string& value);
  std::string* _internal_mutable_organization_type();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 user_id = 5;
  void clear_user_id() ;
  ::int64_t user_id() const;
  void set_user_id(::int64_t value);

  private:
  ::int64_t _internal_user_id() const;
  void _internal_set_user_id(::int64_t value);

  public:
  // bool include_characteristics = 2;
  void clear_include_characteristics() ;
  bool include_characteristics() const;
  void set_include_characteristics(bool value);

  private:
  bool _internal_include_characteristics() const;
  void _internal_set_include_characteristics(bool value);

  public:
  // bool include_images = 3;
  void clear_include_images() ;
  bool include_images() const;
  void set_include_images(bool value);

  private:
  bool _internal_include_images() const;
  void _internal_set_include_images(bool value);

  public:
  // bool include_product_groups = 4;
  void clear_include_product_groups() ;
  bool include_product_groups() const;
  void set_include_product_groups(bool value);

  private:
  bool _internal_include_product_groups() const;
  void _internal_set_include_product_groups(bool value);

  public:
  // @@protoc_insertion_point(class_scope:product.GetProductRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      51, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetProductRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr organization_type_;
    ::int64_t id_;
    ::int64_t user_id_;
    bool include_characteristics_;
    bool include_images_;
    bool include_product_groups_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class GetProductGroupRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.GetProductGroupRequest) */ {
 public:
  inline GetProductGroupRequest() : GetProductGroupRequest(nullptr) {}
  ~GetProductGroupRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetProductGroupRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetProductGroupRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetProductGroupRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetProductGroupRequest(const GetProductGroupRequest& from) : GetProductGroupRequest(nullptr, from) {}
  inline GetProductGroupRequest(GetProductGroupRequest&& from) noexcept
      : GetProductGroupRequest(nullptr, std::move(from)) {}
  inline GetProductGroupRequest& operator=(const GetProductGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetProductGroupRequest& operator=(GetProductGroupRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetProductGroupRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetProductGroupRequest* internal_default_instance() {
    return reinterpret_cast<const GetProductGroupRequest*>(
        &_GetProductGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(GetProductGroupRequest& a, GetProductGroupRequest& b) { a.Swap(&b); }
  inline void Swap(GetProductGroupRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetProductGroupRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetProductGroupRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetProductGroupRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetProductGroupRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetProductGroupRequest& from) { GetProductGroupRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetProductGroupRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.GetProductGroupRequest"; }

 protected:
  explicit GetProductGroupRequest(::google::protobuf::Arena* arena);
  GetProductGroupRequest(::google::protobuf::Arena* arena, const GetProductGroupRequest& from);
  GetProductGroupRequest(::google::protobuf::Arena* arena, GetProductGroupRequest&& from) noexcept
      : GetProductGroupRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:product.GetProductGroupRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetProductGroupRequest& from_msg);
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class GetProductCategoryWithChildrenRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.GetProductCategoryWithChildrenRequest) */ {
 public:
  inline GetProductCategoryWithChildrenRequest() : GetProductCategoryWithChildrenRequest(nullptr) {}
  ~GetProductCategoryWithChildrenRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetProductCategoryWithChildrenRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetProductCategoryWithChildrenRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetProductCategoryWithChildrenRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetProductCategoryWithChildrenRequest(const GetProductCategoryWithChildrenRequest& from) : GetProductCategoryWithChildrenRequest(nullptr, from) {}
  inline GetProductCategoryWithChildrenRequest(GetProductCategoryWithChildrenRequest&& from) noexcept
      : GetProductCategoryWithChildrenRequest(nullptr, std::move(from)) {}
  inline GetProductCategoryWithChildrenRequest& operator=(const GetProductCategoryWithChildrenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetProductCategoryWithChildrenRequest& operator=(GetProductCategoryWithChildrenRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetProductCategoryWithChildrenRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetProductCategoryWithChildrenRequest* internal_default_instance() {
    return reinterpret_cast<const GetProductCategoryWithChildrenRequest*>(
        &_GetProductCategoryWithChildrenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(GetProductCategoryWithChildrenRequest& a, GetProductCategoryWithChildrenRequest& b) { a.Swap(&b); }
  inline void Swap(GetProductCategoryWithChildrenRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetProductCategoryWithChildrenRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetProductCategoryWithChildrenRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetProductCategoryWithChildrenRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetProductCategoryWithChildrenRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetProductCategoryWithChildrenRequest& from) { GetProductCategoryWithChildrenRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetProductCategoryWithChildrenRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.GetProductCategoryWithChildrenRequest"; }

 protected:
  explicit GetProductCategoryWithChildrenRequest(::google::protobuf::Arena* arena);
  GetProductCategoryWithChildrenRequest(::google::protobuf::Arena* arena, const GetProductCategoryWithChildrenRequest& from);
  GetProductCategoryWithChildrenRequest(::google::protobuf::Arena* arena, GetProductCategoryWithChildrenRequest&& from) noexcept
      : GetProductCategoryWithChildrenRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:product.GetProductCategoryWithChildrenRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetProductCategoryWithChildrenRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class GetChildrenCategoriesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.GetChildrenCategoriesRequest) */ {
 public:
  inline GetChildrenCategoriesRequest() : GetChildrenCategoriesRequest(nullptr) {}
  ~GetChildrenCategoriesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetChildrenCategoriesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetChildrenCategoriesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetChildrenCategoriesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetChildrenCategoriesRequest(const GetChildrenCategoriesRequest& from) : GetChildrenCategoriesRequest(nullptr, from) {}
  inline GetChildrenCategoriesRequest(GetChildrenCategoriesRequest&& from) noexcept
      : GetChildrenCategoriesRequest(nullptr, std::move(from)) {}
  inline GetChildrenCategoriesRequest& operator=(const GetChildrenCategoriesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetChildrenCategoriesRequest& operator=(GetChildrenCategoriesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetChildrenCategoriesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetChildrenCategoriesRequest* internal_default_instance() {
    return reinterpret_cast<const GetChildrenCategoriesRequest*>(
        &_GetChildrenCategoriesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 45;
  friend void swap(GetChildrenCategoriesRequest& a, GetChildrenCategoriesRequest& b) { a.Swap(&b); }
  inline void Swap(GetChildrenCategoriesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetChildrenCategoriesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetChildrenCategoriesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetChildrenCategoriesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetChildrenCategoriesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetChildrenCategoriesRequest& from) { GetChildrenCategoriesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetChildrenCategoriesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.GetChildrenCategoriesRequest"; }

 protected:
  explicit GetChildrenCategoriesRequest(::google::protobuf::Arena* arena);
  GetChildrenCategoriesRequest(::google::protobuf::Arena* arena, const GetChildrenCategoriesRequest& from);
  GetChildrenCategoriesRequest(::google::protobuf::Arena* arena, GetChildrenCategoriesRequest&& from) noexcept
      : GetChildrenCategoriesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryIdFieldNumber = 1,
  };
  // string category_id = 1;
  void clear_category_id() ;
  const std::string& category_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_category_id(Arg_&& arg, Args_... args);
  std::string* mutable_category_id();
  PROTOBUF_NODISCARD std::string* release_category_id();
  void set_allocated_category_id(std::string* value);

  private:
  const std::string& _internal_category_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_category_id(
      const std::string& value);
  std::string* _internal_mutable_category_id();

  public:
  // @@protoc_insertion_point(class_scope:product.GetChildrenCategoriesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetChildrenCategoriesRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr category_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class GeneratePresignedURLsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.GeneratePresignedURLsRequest) */ {
 public:
  inline GeneratePresignedURLsRequest() : GeneratePresignedURLsRequest(nullptr) {}
  ~GeneratePresignedURLsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GeneratePresignedURLsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GeneratePresignedURLsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GeneratePresignedURLsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GeneratePresignedURLsRequest(const GeneratePresignedURLsRequest& from) : GeneratePresignedURLsRequest(nullptr, from) {}
  inline GeneratePresignedURLsRequest(GeneratePresignedURLsRequest&& from) noexcept
      : GeneratePresignedURLsRequest(nullptr, std::move(from)) {}
  inline GeneratePresignedURLsRequest& operator=(const GeneratePresignedURLsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeneratePresignedURLsRequest& operator=(GeneratePresignedURLsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GeneratePresignedURLsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GeneratePresignedURLsRequest* internal_default_instance() {
    return reinterpret_cast<const GeneratePresignedURLsRequest*>(
        &_GeneratePresignedURLsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(GeneratePresignedURLsRequest& a, GeneratePresignedURLsRequest& b) { a.Swap(&b); }
  inline void Swap(GeneratePresignedURLsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GeneratePresignedURLsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GeneratePresignedURLsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GeneratePresignedURLsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GeneratePresignedURLsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GeneratePresignedURLsRequest& from) { GeneratePresignedURLsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GeneratePresignedURLsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.GeneratePresignedURLsRequest"; }

 protected:
  explicit GeneratePresignedURLsRequest(::google::protobuf::Arena* arena);
  GeneratePresignedURLsRequest(::google::protobuf::Arena* arena, const GeneratePresignedURLsRequest& from);
  GeneratePresignedURLsRequest(::google::protobuf::Arena* arena, GeneratePresignedURLsRequest&& from) noexcept
      : GeneratePresignedURLsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFileNamesFieldNumber = 2,
    kOrganizationIdFieldNumber = 1,
  };
  // repeated string file_names = 2;
  int file_names_size() const;
  private:
  int _internal_file_names_size() const;

  public:
  void clear_file_names() ;
  const std::string& file_names(int index) const;
  std::string* mutable_file_names(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file_names(int index, Arg_&& value, Args_... args);
  std::string* add_file_names();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_file_names(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& file_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_file_names();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_file_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_file_names();

  public:
  // int64 organization_id = 1;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:product.GeneratePresignedURLsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      55, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GeneratePresignedURLsRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> file_names_;
    ::int64_t organization_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class DuplicateProductRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.DuplicateProductRequest) */ {
 public:
  inline DuplicateProductRequest() : DuplicateProductRequest(nullptr) {}
  ~DuplicateProductRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DuplicateProductRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DuplicateProductRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DuplicateProductRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DuplicateProductRequest(const DuplicateProductRequest& from) : DuplicateProductRequest(nullptr, from) {}
  inline DuplicateProductRequest(DuplicateProductRequest&& from) noexcept
      : DuplicateProductRequest(nullptr, std::move(from)) {}
  inline DuplicateProductRequest& operator=(const DuplicateProductRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DuplicateProductRequest& operator=(DuplicateProductRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DuplicateProductRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DuplicateProductRequest* internal_default_instance() {
    return reinterpret_cast<const DuplicateProductRequest*>(
        &_DuplicateProductRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(DuplicateProductRequest& a, DuplicateProductRequest& b) { a.Swap(&b); }
  inline void Swap(DuplicateProductRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DuplicateProductRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DuplicateProductRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DuplicateProductRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DuplicateProductRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DuplicateProductRequest& from) { DuplicateProductRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DuplicateProductRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.DuplicateProductRequest"; }

 protected:
  explicit DuplicateProductRequest(::google::protobuf::Arena* arena);
  DuplicateProductRequest(::google::protobuf::Arena* arena, const DuplicateProductRequest& from);
  DuplicateProductRequest(::google::protobuf::Arena* arena, DuplicateProductRequest&& from) noexcept
      : DuplicateProductRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kCreatedByFieldNumber = 2,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 created_by = 2;
  void clear_created_by() ;
  ::int64_t created_by() const;
  void set_created_by(::int64_t value);

  private:
  ::int64_t _internal_created_by() const;
  void _internal_set_created_by(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:product.DuplicateProductRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DuplicateProductRequest& from_msg);
    ::int64_t id_;
    ::int64_t created_by_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class DeleteProductResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.DeleteProductResponse) */ {
 public:
  inline DeleteProductResponse() : DeleteProductResponse(nullptr) {}
  ~DeleteProductResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteProductResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteProductResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteProductResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteProductResponse(const DeleteProductResponse& from) : DeleteProductResponse(nullptr, from) {}
  inline DeleteProductResponse(DeleteProductResponse&& from) noexcept
      : DeleteProductResponse(nullptr, std::move(from)) {}
  inline DeleteProductResponse& operator=(const DeleteProductResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteProductResponse& operator=(DeleteProductResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteProductResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteProductResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteProductResponse*>(
        &_DeleteProductResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(DeleteProductResponse& a, DeleteProductResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteProductResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteProductResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteProductResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteProductResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteProductResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteProductResponse& from) { DeleteProductResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteProductResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.DeleteProductResponse"; }

 protected:
  explicit DeleteProductResponse(::google::protobuf::Arena* arena);
  DeleteProductResponse(::google::protobuf::Arena* arena, const DeleteProductResponse& from);
  DeleteProductResponse(::google::protobuf::Arena* arena, DeleteProductResponse&& from) noexcept
      : DeleteProductResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:product.DeleteProductResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteProductResponse& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class DeleteProductRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.DeleteProductRequest) */ {
 public:
  inline DeleteProductRequest() : DeleteProductRequest(nullptr) {}
  ~DeleteProductRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteProductRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteProductRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteProductRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteProductRequest(const DeleteProductRequest& from) : DeleteProductRequest(nullptr, from) {}
  inline DeleteProductRequest(DeleteProductRequest&& from) noexcept
      : DeleteProductRequest(nullptr, std::move(from)) {}
  inline DeleteProductRequest& operator=(const DeleteProductRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteProductRequest& operator=(DeleteProductRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteProductRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteProductRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteProductRequest*>(
        &_DeleteProductRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(DeleteProductRequest& a, DeleteProductRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteProductRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteProductRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteProductRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteProductRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteProductRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteProductRequest& from) { DeleteProductRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteProductRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.DeleteProductRequest"; }

 protected:
  explicit DeleteProductRequest(::google::protobuf::Arena* arena);
  DeleteProductRequest(::google::protobuf::Arena* arena, const DeleteProductRequest& from);
  DeleteProductRequest(::google::protobuf::Arena* arena, DeleteProductRequest&& from) noexcept
      : DeleteProductRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:product.DeleteProductRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteProductRequest& from_msg);
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class DeleteProductGroupResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.DeleteProductGroupResponse) */ {
 public:
  inline DeleteProductGroupResponse() : DeleteProductGroupResponse(nullptr) {}
  ~DeleteProductGroupResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteProductGroupResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteProductGroupResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteProductGroupResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteProductGroupResponse(const DeleteProductGroupResponse& from) : DeleteProductGroupResponse(nullptr, from) {}
  inline DeleteProductGroupResponse(DeleteProductGroupResponse&& from) noexcept
      : DeleteProductGroupResponse(nullptr, std::move(from)) {}
  inline DeleteProductGroupResponse& operator=(const DeleteProductGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteProductGroupResponse& operator=(DeleteProductGroupResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteProductGroupResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteProductGroupResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteProductGroupResponse*>(
        &_DeleteProductGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(DeleteProductGroupResponse& a, DeleteProductGroupResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteProductGroupResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteProductGroupResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteProductGroupResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteProductGroupResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteProductGroupResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteProductGroupResponse& from) { DeleteProductGroupResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteProductGroupResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.DeleteProductGroupResponse"; }

 protected:
  explicit DeleteProductGroupResponse(::google::protobuf::Arena* arena);
  DeleteProductGroupResponse(::google::protobuf::Arena* arena, const DeleteProductGroupResponse& from);
  DeleteProductGroupResponse(::google::protobuf::Arena* arena, DeleteProductGroupResponse&& from) noexcept
      : DeleteProductGroupResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:product.DeleteProductGroupResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteProductGroupResponse& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class DeleteProductGroupRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.DeleteProductGroupRequest) */ {
 public:
  inline DeleteProductGroupRequest() : DeleteProductGroupRequest(nullptr) {}
  ~DeleteProductGroupRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteProductGroupRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteProductGroupRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteProductGroupRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteProductGroupRequest(const DeleteProductGroupRequest& from) : DeleteProductGroupRequest(nullptr, from) {}
  inline DeleteProductGroupRequest(DeleteProductGroupRequest&& from) noexcept
      : DeleteProductGroupRequest(nullptr, std::move(from)) {}
  inline DeleteProductGroupRequest& operator=(const DeleteProductGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteProductGroupRequest& operator=(DeleteProductGroupRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteProductGroupRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteProductGroupRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteProductGroupRequest*>(
        &_DeleteProductGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(DeleteProductGroupRequest& a, DeleteProductGroupRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteProductGroupRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteProductGroupRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteProductGroupRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteProductGroupRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteProductGroupRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteProductGroupRequest& from) { DeleteProductGroupRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteProductGroupRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.DeleteProductGroupRequest"; }

 protected:
  explicit DeleteProductGroupRequest(::google::protobuf::Arena* arena);
  DeleteProductGroupRequest(::google::protobuf::Arena* arena, const DeleteProductGroupRequest& from);
  DeleteProductGroupRequest(::google::protobuf::Arena* arena, DeleteProductGroupRequest&& from) noexcept
      : DeleteProductGroupRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:product.DeleteProductGroupRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteProductGroupRequest& from_msg);
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class Characteristic final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.Characteristic) */ {
 public:
  inline Characteristic() : Characteristic(nullptr) {}
  ~Characteristic() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Characteristic* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Characteristic));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Characteristic(
      ::google::protobuf::internal::ConstantInitialized);

  inline Characteristic(const Characteristic& from) : Characteristic(nullptr, from) {}
  inline Characteristic(Characteristic&& from) noexcept
      : Characteristic(nullptr, std::move(from)) {}
  inline Characteristic& operator=(const Characteristic& from) {
    CopyFrom(from);
    return *this;
  }
  inline Characteristic& operator=(Characteristic&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Characteristic& default_instance() {
    return *internal_default_instance();
  }
  static inline const Characteristic* internal_default_instance() {
    return reinterpret_cast<const Characteristic*>(
        &_Characteristic_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(Characteristic& a, Characteristic& b) { a.Swap(&b); }
  inline void Swap(Characteristic* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Characteristic* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Characteristic* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Characteristic>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Characteristic& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Characteristic& from) { Characteristic::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Characteristic* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.Characteristic"; }

 protected:
  explicit Characteristic(::google::protobuf::Arena* arena);
  Characteristic(::google::protobuf::Arena* arena, const Characteristic& from);
  Characteristic(::google::protobuf::Arena* arena, Characteristic&& from) noexcept
      : Characteristic(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOptionsFieldNumber = 3,
    kNameFieldNumber = 1,
    kTypeFieldNumber = 2,
    kDefaultValueFieldNumber = 5,
    kIsRequiredFieldNumber = 4,
  };
  // repeated string options = 3;
  int options_size() const;
  private:
  int _internal_options_size() const;

  public:
  void clear_options() ;
  const std::string& options(int index) const;
  std::string* mutable_options(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_options(int index, Arg_&& value, Args_... args);
  std::string* add_options();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_options(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& options() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_options();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_options() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_options();

  public:
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string type = 2;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // string default_value = 5;
  void clear_default_value() ;
  const std::string& default_value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_default_value(Arg_&& arg, Args_... args);
  std::string* mutable_default_value();
  PROTOBUF_NODISCARD std::string* release_default_value();
  void set_allocated_default_value(std::string* value);

  private:
  const std::string& _internal_default_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_default_value(
      const std::string& value);
  std::string* _internal_mutable_default_value();

  public:
  // bool is_required = 4;
  void clear_is_required() ;
  bool is_required() const;
  void set_is_required(bool value);

  private:
  bool _internal_is_required() const;
  void _internal_set_is_required(bool value);

  public:
  // @@protoc_insertion_point(class_scope:product.Characteristic)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Characteristic& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> options_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr default_value_;
    bool is_required_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class UpdateProductGroupRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.UpdateProductGroupRequest) */ {
 public:
  inline UpdateProductGroupRequest() : UpdateProductGroupRequest(nullptr) {}
  ~UpdateProductGroupRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateProductGroupRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateProductGroupRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateProductGroupRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateProductGroupRequest(const UpdateProductGroupRequest& from) : UpdateProductGroupRequest(nullptr, from) {}
  inline UpdateProductGroupRequest(UpdateProductGroupRequest&& from) noexcept
      : UpdateProductGroupRequest(nullptr, std::move(from)) {}
  inline UpdateProductGroupRequest& operator=(const UpdateProductGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateProductGroupRequest& operator=(UpdateProductGroupRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateProductGroupRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateProductGroupRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateProductGroupRequest*>(
        &_UpdateProductGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(UpdateProductGroupRequest& a, UpdateProductGroupRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateProductGroupRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateProductGroupRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateProductGroupRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateProductGroupRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateProductGroupRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateProductGroupRequest& from) { UpdateProductGroupRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateProductGroupRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.UpdateProductGroupRequest"; }

 protected:
  explicit UpdateProductGroupRequest(::google::protobuf::Arena* arena);
  UpdateProductGroupRequest(::google::protobuf::Arena* arena, const UpdateProductGroupRequest& from);
  UpdateProductGroupRequest(::google::protobuf::Arena* arena, UpdateProductGroupRequest&& from) noexcept
      : UpdateProductGroupRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductGroupFieldNumber = 1,
  };
  // .product.ProductGroupModel product_group = 1;
  bool has_product_group() const;
  void clear_product_group() ;
  const ::product::ProductGroupModel& product_group() const;
  PROTOBUF_NODISCARD ::product::ProductGroupModel* release_product_group();
  ::product::ProductGroupModel* mutable_product_group();
  void set_allocated_product_group(::product::ProductGroupModel* value);
  void unsafe_arena_set_allocated_product_group(::product::ProductGroupModel* value);
  ::product::ProductGroupModel* unsafe_arena_release_product_group();

  private:
  const ::product::ProductGroupModel& _internal_product_group() const;
  ::product::ProductGroupModel* _internal_mutable_product_group();

  public:
  // @@protoc_insertion_point(class_scope:product.UpdateProductGroupRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateProductGroupRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::product::ProductGroupModel* product_group_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class ProductGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.ProductGroup) */ {
 public:
  inline ProductGroup() : ProductGroup(nullptr) {}
  ~ProductGroup() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProductGroup* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProductGroup));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProductGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline ProductGroup(const ProductGroup& from) : ProductGroup(nullptr, from) {}
  inline ProductGroup(ProductGroup&& from) noexcept
      : ProductGroup(nullptr, std::move(from)) {}
  inline ProductGroup& operator=(const ProductGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProductGroup& operator=(ProductGroup&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProductGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProductGroup* internal_default_instance() {
    return reinterpret_cast<const ProductGroup*>(
        &_ProductGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ProductGroup& a, ProductGroup& b) { a.Swap(&b); }
  inline void Swap(ProductGroup* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProductGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProductGroup* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProductGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProductGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProductGroup& from) { ProductGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProductGroup* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.ProductGroup"; }

 protected:
  explicit ProductGroup(::google::protobuf::Arena* arena);
  ProductGroup(::google::protobuf::Arena* arena, const ProductGroup& from);
  ProductGroup(::google::protobuf::Arena* arena, ProductGroup&& from) noexcept
      : ProductGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductsFieldNumber = 3,
    kGroupNameFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // repeated .product.ProductModel products = 3;
  int products_size() const;
  private:
  int _internal_products_size() const;

  public:
  void clear_products() ;
  ::product::ProductModel* mutable_products(int index);
  ::google::protobuf::RepeatedPtrField<::product::ProductModel>* mutable_products();

  private:
  const ::google::protobuf::RepeatedPtrField<::product::ProductModel>& _internal_products() const;
  ::google::protobuf::RepeatedPtrField<::product::ProductModel>* _internal_mutable_products();
  public:
  const ::product::ProductModel& products(int index) const;
  ::product::ProductModel* add_products();
  const ::google::protobuf::RepeatedPtrField<::product::ProductModel>& products() const;
  // string group_name = 2;
  void clear_group_name() ;
  const std::string& group_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_group_name(Arg_&& arg, Args_... args);
  std::string* mutable_group_name();
  PROTOBUF_NODISCARD std::string* release_group_name();
  void set_allocated_group_name(std::string* value);

  private:
  const std::string& _internal_group_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_group_name(
      const std::string& value);
  std::string* _internal_mutable_group_name();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:product.ProductGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      39, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ProductGroup& from_msg);
    ::google::protobuf::RepeatedPtrField< ::product::ProductModel > products_;
    ::google::protobuf::internal::ArenaStringPtr group_name_;
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class ListProductsRequest_FilterEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::google::protobuf::Message,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::google::protobuf::Message,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ListProductsRequest_FilterEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListProductsRequest_FilterEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ListProductsRequest_FilterEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ListProductsRequest_FilterEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ListProductsRequest_FilterEntry_DoNotUse*>(
        &_ListProductsRequest_FilterEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_product_2fproduct_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      51, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class GeneratePresignedURLsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.GeneratePresignedURLsResponse) */ {
 public:
  inline GeneratePresignedURLsResponse() : GeneratePresignedURLsResponse(nullptr) {}
  ~GeneratePresignedURLsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GeneratePresignedURLsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GeneratePresignedURLsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GeneratePresignedURLsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GeneratePresignedURLsResponse(const GeneratePresignedURLsResponse& from) : GeneratePresignedURLsResponse(nullptr, from) {}
  inline GeneratePresignedURLsResponse(GeneratePresignedURLsResponse&& from) noexcept
      : GeneratePresignedURLsResponse(nullptr, std::move(from)) {}
  inline GeneratePresignedURLsResponse& operator=(const GeneratePresignedURLsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeneratePresignedURLsResponse& operator=(GeneratePresignedURLsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GeneratePresignedURLsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GeneratePresignedURLsResponse* internal_default_instance() {
    return reinterpret_cast<const GeneratePresignedURLsResponse*>(
        &_GeneratePresignedURLsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 43;
  friend void swap(GeneratePresignedURLsResponse& a, GeneratePresignedURLsResponse& b) { a.Swap(&b); }
  inline void Swap(GeneratePresignedURLsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GeneratePresignedURLsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GeneratePresignedURLsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GeneratePresignedURLsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GeneratePresignedURLsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GeneratePresignedURLsResponse& from) { GeneratePresignedURLsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GeneratePresignedURLsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.GeneratePresignedURLsResponse"; }

 protected:
  explicit GeneratePresignedURLsResponse(::google::protobuf::Arena* arena);
  GeneratePresignedURLsResponse(::google::protobuf::Arena* arena, const GeneratePresignedURLsResponse& from);
  GeneratePresignedURLsResponse(::google::protobuf::Arena* arena, GeneratePresignedURLsResponse&& from) noexcept
      : GeneratePresignedURLsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPresignedUrlsFieldNumber = 1,
  };
  // repeated .product.PresignedURLInfo presigned_urls = 1;
  int presigned_urls_size() const;
  private:
  int _internal_presigned_urls_size() const;

  public:
  void clear_presigned_urls() ;
  ::product::PresignedURLInfo* mutable_presigned_urls(int index);
  ::google::protobuf::RepeatedPtrField<::product::PresignedURLInfo>* mutable_presigned_urls();

  private:
  const ::google::protobuf::RepeatedPtrField<::product::PresignedURLInfo>& _internal_presigned_urls() const;
  ::google::protobuf::RepeatedPtrField<::product::PresignedURLInfo>* _internal_mutable_presigned_urls();
  public:
  const ::product::PresignedURLInfo& presigned_urls(int index) const;
  ::product::PresignedURLInfo* add_presigned_urls();
  const ::google::protobuf::RepeatedPtrField<::product::PresignedURLInfo>& presigned_urls() const;
  // @@protoc_insertion_point(class_scope:product.GeneratePresignedURLsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GeneratePresignedURLsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::product::PresignedURLInfo > presigned_urls_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class CreateProductGroupRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.CreateProductGroupRequest) */ {
 public:
  inline CreateProductGroupRequest() : CreateProductGroupRequest(nullptr) {}
  ~CreateProductGroupRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateProductGroupRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateProductGroupRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateProductGroupRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateProductGroupRequest(const CreateProductGroupRequest& from) : CreateProductGroupRequest(nullptr, from) {}
  inline CreateProductGroupRequest(CreateProductGroupRequest&& from) noexcept
      : CreateProductGroupRequest(nullptr, std::move(from)) {}
  inline CreateProductGroupRequest& operator=(const CreateProductGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateProductGroupRequest& operator=(CreateProductGroupRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateProductGroupRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateProductGroupRequest* internal_default_instance() {
    return reinterpret_cast<const CreateProductGroupRequest*>(
        &_CreateProductGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(CreateProductGroupRequest& a, CreateProductGroupRequest& b) { a.Swap(&b); }
  inline void Swap(CreateProductGroupRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateProductGroupRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateProductGroupRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateProductGroupRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateProductGroupRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateProductGroupRequest& from) { CreateProductGroupRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateProductGroupRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.CreateProductGroupRequest"; }

 protected:
  explicit CreateProductGroupRequest(::google::protobuf::Arena* arena);
  CreateProductGroupRequest(::google::protobuf::Arena* arena, const CreateProductGroupRequest& from);
  CreateProductGroupRequest(::google::protobuf::Arena* arena, CreateProductGroupRequest&& from) noexcept
      : CreateProductGroupRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductGroupFieldNumber = 1,
  };
  // .product.ProductGroupModel product_group = 1;
  bool has_product_group() const;
  void clear_product_group() ;
  const ::product::ProductGroupModel& product_group() const;
  PROTOBUF_NODISCARD ::product::ProductGroupModel* release_product_group();
  ::product::ProductGroupModel* mutable_product_group();
  void set_allocated_product_group(::product::ProductGroupModel* value);
  void unsafe_arena_set_allocated_product_group(::product::ProductGroupModel* value);
  ::product::ProductGroupModel* unsafe_arena_release_product_group();

  private:
  const ::product::ProductGroupModel& _internal_product_group() const;
  ::product::ProductGroupModel* _internal_mutable_product_group();

  public:
  // @@protoc_insertion_point(class_scope:product.CreateProductGroupRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateProductGroupRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::product::ProductGroupModel* product_group_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class CharacteristicGroup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.CharacteristicGroup) */ {
 public:
  inline CharacteristicGroup() : CharacteristicGroup(nullptr) {}
  ~CharacteristicGroup() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CharacteristicGroup* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CharacteristicGroup));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CharacteristicGroup(
      ::google::protobuf::internal::ConstantInitialized);

  inline CharacteristicGroup(const CharacteristicGroup& from) : CharacteristicGroup(nullptr, from) {}
  inline CharacteristicGroup(CharacteristicGroup&& from) noexcept
      : CharacteristicGroup(nullptr, std::move(from)) {}
  inline CharacteristicGroup& operator=(const CharacteristicGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline CharacteristicGroup& operator=(CharacteristicGroup&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CharacteristicGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const CharacteristicGroup* internal_default_instance() {
    return reinterpret_cast<const CharacteristicGroup*>(
        &_CharacteristicGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(CharacteristicGroup& a, CharacteristicGroup& b) { a.Swap(&b); }
  inline void Swap(CharacteristicGroup* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CharacteristicGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CharacteristicGroup* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CharacteristicGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CharacteristicGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CharacteristicGroup& from) { CharacteristicGroup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CharacteristicGroup* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.CharacteristicGroup"; }

 protected:
  explicit CharacteristicGroup(::google::protobuf::Arena* arena);
  CharacteristicGroup(::google::protobuf::Arena* arena, const CharacteristicGroup& from);
  CharacteristicGroup(::google::protobuf::Arena* arena, CharacteristicGroup&& from) noexcept
      : CharacteristicGroup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCharacteristicsFieldNumber = 3,
    kGroupNameFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // repeated .product.Characteristic characteristics = 3;
  int characteristics_size() const;
  private:
  int _internal_characteristics_size() const;

  public:
  void clear_characteristics() ;
  ::product::Characteristic* mutable_characteristics(int index);
  ::google::protobuf::RepeatedPtrField<::product::Characteristic>* mutable_characteristics();

  private:
  const ::google::protobuf::RepeatedPtrField<::product::Characteristic>& _internal_characteristics() const;
  ::google::protobuf::RepeatedPtrField<::product::Characteristic>* _internal_mutable_characteristics();
  public:
  const ::product::Characteristic& characteristics(int index) const;
  ::product::Characteristic* add_characteristics();
  const ::google::protobuf::RepeatedPtrField<::product::Characteristic>& characteristics() const;
  // string group_name = 2;
  void clear_group_name() ;
  const std::string& group_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_group_name(Arg_&& arg, Args_... args);
  std::string* mutable_group_name();
  PROTOBUF_NODISCARD std::string* release_group_name();
  void set_allocated_group_name(std::string* value);

  private:
  const std::string& _internal_group_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_group_name(
      const std::string& value);
  std::string* _internal_mutable_group_name();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:product.CharacteristicGroup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      46, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CharacteristicGroup& from_msg);
    ::google::protobuf::RepeatedPtrField< ::product::Characteristic > characteristics_;
    ::google::protobuf::internal::ArenaStringPtr group_name_;
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class UpdateProductGroupResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.UpdateProductGroupResponse) */ {
 public:
  inline UpdateProductGroupResponse() : UpdateProductGroupResponse(nullptr) {}
  ~UpdateProductGroupResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateProductGroupResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateProductGroupResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateProductGroupResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateProductGroupResponse(const UpdateProductGroupResponse& from) : UpdateProductGroupResponse(nullptr, from) {}
  inline UpdateProductGroupResponse(UpdateProductGroupResponse&& from) noexcept
      : UpdateProductGroupResponse(nullptr, std::move(from)) {}
  inline UpdateProductGroupResponse& operator=(const UpdateProductGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateProductGroupResponse& operator=(UpdateProductGroupResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateProductGroupResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateProductGroupResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateProductGroupResponse*>(
        &_UpdateProductGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(UpdateProductGroupResponse& a, UpdateProductGroupResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateProductGroupResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateProductGroupResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateProductGroupResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateProductGroupResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateProductGroupResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateProductGroupResponse& from) { UpdateProductGroupResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateProductGroupResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.UpdateProductGroupResponse"; }

 protected:
  explicit UpdateProductGroupResponse(::google::protobuf::Arena* arena);
  UpdateProductGroupResponse(::google::protobuf::Arena* arena, const UpdateProductGroupResponse& from);
  UpdateProductGroupResponse(::google::protobuf::Arena* arena, UpdateProductGroupResponse&& from) noexcept
      : UpdateProductGroupResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductGroupFieldNumber = 1,
  };
  // .product.ProductGroup product_group = 1;
  bool has_product_group() const;
  void clear_product_group() ;
  const ::product::ProductGroup& product_group() const;
  PROTOBUF_NODISCARD ::product::ProductGroup* release_product_group();
  ::product::ProductGroup* mutable_product_group();
  void set_allocated_product_group(::product::ProductGroup* value);
  void unsafe_arena_set_allocated_product_group(::product::ProductGroup* value);
  ::product::ProductGroup* unsafe_arena_release_product_group();

  private:
  const ::product::ProductGroup& _internal_product_group() const;
  ::product::ProductGroup* _internal_mutable_product_group();

  public:
  // @@protoc_insertion_point(class_scope:product.UpdateProductGroupResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateProductGroupResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::product::ProductGroup* product_group_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class Product final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.Product) */ {
 public:
  inline Product() : Product(nullptr) {}
  ~Product() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Product* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Product));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Product(
      ::google::protobuf::internal::ConstantInitialized);

  inline Product(const Product& from) : Product(nullptr, from) {}
  inline Product(Product&& from) noexcept
      : Product(nullptr, std::move(from)) {}
  inline Product& operator=(const Product& from) {
    CopyFrom(from);
    return *this;
  }
  inline Product& operator=(Product&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Product& default_instance() {
    return *internal_default_instance();
  }
  static inline const Product* internal_default_instance() {
    return reinterpret_cast<const Product*>(
        &_Product_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Product& a, Product& b) { a.Swap(&b); }
  inline void Swap(Product* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Product* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Product* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Product>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Product& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Product& from) { Product::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Product* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.Product"; }

 protected:
  explicit Product(::google::protobuf::Arena* arena);
  Product(::google::protobuf::Arena* arena, const Product& from);
  Product(::google::protobuf::Arena* arena, Product&& from) noexcept
      : Product(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kImagesFieldNumber = 16,
    kCharacteristicsFieldNumber = 17,
    kProductGroupsFieldNumber = 18,
    kNameFieldNumber = 2,
    kImageUrlFieldNumber = 3,
    kDescriptionFieldNumber = 4,
    kCategoryNameFieldNumber = 5,
    kCategoryIdFieldNumber = 6,
    kDesignUrlFieldNumber = 12,
    kSaleStatusFieldNumber = 13,
    kBrandNameFieldNumber = 15,
    kIdFieldNumber = 1,
    kSalePriceFieldNumber = 7,
    kPurchasePriceFieldNumber = 8,
    kOrganizationIdFieldNumber = 9,
    kCreatedByFieldNumber = 10,
    kBrandIdFieldNumber = 14,
    kCartQuantityFieldNumber = 19,
    kViewsFieldNumber = 20,
    kIsExternalFieldNumber = 11,
  };
  // repeated .product.ImageModel images = 16;
  int images_size() const;
  private:
  int _internal_images_size() const;

  public:
  void clear_images() ;
  ::product::ImageModel* mutable_images(int index);
  ::google::protobuf::RepeatedPtrField<::product::ImageModel>* mutable_images();

  private:
  const ::google::protobuf::RepeatedPtrField<::product::ImageModel>& _internal_images() const;
  ::google::protobuf::RepeatedPtrField<::product::ImageModel>* _internal_mutable_images();
  public:
  const ::product::ImageModel& images(int index) const;
  ::product::ImageModel* add_images();
  const ::google::protobuf::RepeatedPtrField<::product::ImageModel>& images() const;
  // repeated .product.ProductCharacteristics characteristics = 17;
  int characteristics_size() const;
  private:
  int _internal_characteristics_size() const;

  public:
  void clear_characteristics() ;
  ::product::ProductCharacteristics* mutable_characteristics(int index);
  ::google::protobuf::RepeatedPtrField<::product::ProductCharacteristics>* mutable_characteristics();

  private:
  const ::google::protobuf::RepeatedPtrField<::product::ProductCharacteristics>& _internal_characteristics() const;
  ::google::protobuf::RepeatedPtrField<::product::ProductCharacteristics>* _internal_mutable_characteristics();
  public:
  const ::product::ProductCharacteristics& characteristics(int index) const;
  ::product::ProductCharacteristics* add_characteristics();
  const ::google::protobuf::RepeatedPtrField<::product::ProductCharacteristics>& characteristics() const;
  // repeated .product.ProductGroup product_groups = 18;
  int product_groups_size() const;
  private:
  int _internal_product_groups_size() const;

  public:
  void clear_product_groups() ;
  ::product::ProductGroup* mutable_product_groups(int index);
  ::google::protobuf::RepeatedPtrField<::product::ProductGroup>* mutable_product_groups();

  private:
  const ::google::protobuf::RepeatedPtrField<::product::ProductGroup>& _internal_product_groups() const;
  ::google::protobuf::RepeatedPtrField<::product::ProductGroup>* _internal_mutable_product_groups();
  public:
  const ::product::ProductGroup& product_groups(int index) const;
  ::product::ProductGroup* add_product_groups();
  const ::google::protobuf::RepeatedPtrField<::product::ProductGroup>& product_groups() const;
  // optional string name = 2;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string image_url = 3;
  bool has_image_url() const;
  void clear_image_url() ;
  const std::string& image_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_image_url(Arg_&& arg, Args_... args);
  std::string* mutable_image_url();
  PROTOBUF_NODISCARD std::string* release_image_url();
  void set_allocated_image_url(std::string* value);

  private:
  const std::string& _internal_image_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_image_url(
      const std::string& value);
  std::string* _internal_mutable_image_url();

  public:
  // optional string description = 4;
  bool has_description() const;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // optional string category_name = 5;
  bool has_category_name() const;
  void clear_category_name() ;
  const std::string& category_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_category_name(Arg_&& arg, Args_... args);
  std::string* mutable_category_name();
  PROTOBUF_NODISCARD std::string* release_category_name();
  void set_allocated_category_name(std::string* value);

  private:
  const std::string& _internal_category_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_category_name(
      const std::string& value);
  std::string* _internal_mutable_category_name();

  public:
  // optional string category_id = 6;
  bool has_category_id() const;
  void clear_category_id() ;
  const std::string& category_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_category_id(Arg_&& arg, Args_... args);
  std::string* mutable_category_id();
  PROTOBUF_NODISCARD std::string* release_category_id();
  void set_allocated_category_id(std::string* value);

  private:
  const std::string& _internal_category_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_category_id(
      const std::string& value);
  std::string* _internal_mutable_category_id();

  public:
  // optional string design_url = 12;
  bool has_design_url() const;
  void clear_design_url() ;
  const std::string& design_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_design_url(Arg_&& arg, Args_... args);
  std::string* mutable_design_url();
  PROTOBUF_NODISCARD std::string* release_design_url();
  void set_allocated_design_url(std::string* value);

  private:
  const std::string& _internal_design_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_design_url(
      const std::string& value);
  std::string* _internal_mutable_design_url();

  public:
  // optional string sale_status = 13;
  bool has_sale_status() const;
  void clear_sale_status() ;
  const std::string& sale_status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sale_status(Arg_&& arg, Args_... args);
  std::string* mutable_sale_status();
  PROTOBUF_NODISCARD std::string* release_sale_status();
  void set_allocated_sale_status(std::string* value);

  private:
  const std::string& _internal_sale_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sale_status(
      const std::string& value);
  std::string* _internal_mutable_sale_status();

  public:
  // optional string brand_name = 15;
  bool has_brand_name() const;
  void clear_brand_name() ;
  const std::string& brand_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_brand_name(Arg_&& arg, Args_... args);
  std::string* mutable_brand_name();
  PROTOBUF_NODISCARD std::string* release_brand_name();
  void set_allocated_brand_name(std::string* value);

  private:
  const std::string& _internal_brand_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_brand_name(
      const std::string& value);
  std::string* _internal_mutable_brand_name();

  public:
  // optional int64 id = 1;
  bool has_id() const;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // optional float sale_price = 7;
  bool has_sale_price() const;
  void clear_sale_price() ;
  float sale_price() const;
  void set_sale_price(float value);

  private:
  float _internal_sale_price() const;
  void _internal_set_sale_price(float value);

  public:
  // optional float purchase_price = 8;
  bool has_purchase_price() const;
  void clear_purchase_price() ;
  float purchase_price() const;
  void set_purchase_price(float value);

  private:
  float _internal_purchase_price() const;
  void _internal_set_purchase_price(float value);

  public:
  // optional int64 organization_id = 9;
  bool has_organization_id() const;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // optional int64 created_by = 10;
  bool has_created_by() const;
  void clear_created_by() ;
  ::int64_t created_by() const;
  void set_created_by(::int64_t value);

  private:
  ::int64_t _internal_created_by() const;
  void _internal_set_created_by(::int64_t value);

  public:
  // optional int64 brand_id = 14;
  bool has_brand_id() const;
  void clear_brand_id() ;
  ::int64_t brand_id() const;
  void set_brand_id(::int64_t value);

  private:
  ::int64_t _internal_brand_id() const;
  void _internal_set_brand_id(::int64_t value);

  public:
  // int64 cart_quantity = 19;
  void clear_cart_quantity() ;
  ::int64_t cart_quantity() const;
  void set_cart_quantity(::int64_t value);

  private:
  ::int64_t _internal_cart_quantity() const;
  void _internal_set_cart_quantity(::int64_t value);

  public:
  // optional uint64 views = 20;
  bool has_views() const;
  void clear_views() ;
  ::uint64_t views() const;
  void set_views(::uint64_t value);

  private:
  ::uint64_t _internal_views() const;
  void _internal_set_views(::uint64_t value);

  public:
  // optional bool is_external = 11;
  bool has_is_external() const;
  void clear_is_external() ;
  bool is_external() const;
  void set_is_external(bool value);

  private:
  bool _internal_is_external() const;
  void _internal_set_is_external(bool value);

  public:
  // @@protoc_insertion_point(class_scope:product.Product)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 20, 3,
      119, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Product& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::product::ImageModel > images_;
    ::google::protobuf::RepeatedPtrField< ::product::ProductCharacteristics > characteristics_;
    ::google::protobuf::RepeatedPtrField< ::product::ProductGroup > product_groups_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr image_url_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr category_name_;
    ::google::protobuf::internal::ArenaStringPtr category_id_;
    ::google::protobuf::internal::ArenaStringPtr design_url_;
    ::google::protobuf::internal::ArenaStringPtr sale_status_;
    ::google::protobuf::internal::ArenaStringPtr brand_name_;
    ::int64_t id_;
    float sale_price_;
    float purchase_price_;
    ::int64_t organization_id_;
    ::int64_t created_by_;
    ::int64_t brand_id_;
    ::int64_t cart_quantity_;
    ::uint64_t views_;
    bool is_external_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class ListProductsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.ListProductsRequest) */ {
 public:
  inline ListProductsRequest() : ListProductsRequest(nullptr) {}
  ~ListProductsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListProductsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListProductsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListProductsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListProductsRequest(const ListProductsRequest& from) : ListProductsRequest(nullptr, from) {}
  inline ListProductsRequest(ListProductsRequest&& from) noexcept
      : ListProductsRequest(nullptr, std::move(from)) {}
  inline ListProductsRequest& operator=(const ListProductsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListProductsRequest& operator=(ListProductsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListProductsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListProductsRequest* internal_default_instance() {
    return reinterpret_cast<const ListProductsRequest*>(
        &_ListProductsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(ListProductsRequest& a, ListProductsRequest& b) { a.Swap(&b); }
  inline void Swap(ListProductsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListProductsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListProductsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListProductsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListProductsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListProductsRequest& from) { ListProductsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListProductsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.ListProductsRequest"; }

 protected:
  explicit ListProductsRequest(::google::protobuf::Arena* arena);
  ListProductsRequest(::google::protobuf::Arena* arena, const ListProductsRequest& from);
  ListProductsRequest(::google::protobuf::Arena* arena, ListProductsRequest&& from) noexcept
      : ListProductsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFilterFieldNumber = 13,
    kExcludeProductIdsFieldNumber = 14,
    kSearchQueryFieldNumber = 3,
    kCategoryIdFieldNumber = 4,
    kSortByFieldNumber = 5,
    kPdfUrlFieldNumber = 11,
    kOrganizationTypeFieldNumber = 12,
    kPageFieldNumber = 1,
    kPageSizeFieldNumber = 2,
    kOrganizationIdFieldNumber = 7,
    kBrandIdFieldNumber = 8,
    kPriceFromFieldNumber = 9,
    kPriceToFieldNumber = 10,
    kAscendingFieldNumber = 6,
    kPopularFieldNumber = 15,
  };
  // map<string, .product.Values> filter = 13;
  int filter_size() const;
  private:
  int _internal_filter_size() const;

  public:
  void clear_filter() ;
  const ::google::protobuf::Map<std::string, ::product::Values>& filter() const;
  ::google::protobuf::Map<std::string, ::product::Values>* mutable_filter();

  private:
  const ::google::protobuf::Map<std::string, ::product::Values>& _internal_filter() const;
  ::google::protobuf::Map<std::string, ::product::Values>* _internal_mutable_filter();

  public:
  // repeated int64 exclude_product_ids = 14;
  int exclude_product_ids_size() const;
  private:
  int _internal_exclude_product_ids_size() const;

  public:
  void clear_exclude_product_ids() ;
  ::int64_t exclude_product_ids(int index) const;
  void set_exclude_product_ids(int index, ::int64_t value);
  void add_exclude_product_ids(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& exclude_product_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_exclude_product_ids();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_exclude_product_ids() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_exclude_product_ids();

  public:
  // string search_query = 3;
  void clear_search_query() ;
  const std::string& search_query() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_search_query(Arg_&& arg, Args_... args);
  std::string* mutable_search_query();
  PROTOBUF_NODISCARD std::string* release_search_query();
  void set_allocated_search_query(std::string* value);

  private:
  const std::string& _internal_search_query() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_search_query(
      const std::string& value);
  std::string* _internal_mutable_search_query();

  public:
  // string category_id = 4;
  void clear_category_id() ;
  const std::string& category_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_category_id(Arg_&& arg, Args_... args);
  std::string* mutable_category_id();
  PROTOBUF_NODISCARD std::string* release_category_id();
  void set_allocated_category_id(std::string* value);

  private:
  const std::string& _internal_category_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_category_id(
      const std::string& value);
  std::string* _internal_mutable_category_id();

  public:
  // string sort_by = 5;
  void clear_sort_by() ;
  const std::string& sort_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sort_by(Arg_&& arg, Args_... args);
  std::string* mutable_sort_by();
  PROTOBUF_NODISCARD std::string* release_sort_by();
  void set_allocated_sort_by(std::string* value);

  private:
  const std::string& _internal_sort_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sort_by(
      const std::string& value);
  std::string* _internal_mutable_sort_by();

  public:
  // string pdf_url = 11;
  void clear_pdf_url() ;
  const std::string& pdf_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pdf_url(Arg_&& arg, Args_... args);
  std::string* mutable_pdf_url();
  PROTOBUF_NODISCARD std::string* release_pdf_url();
  void set_allocated_pdf_url(std::string* value);

  private:
  const std::string& _internal_pdf_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pdf_url(
      const std::string& value);
  std::string* _internal_mutable_pdf_url();

  public:
  // string organization_type = 12;
  void clear_organization_type() ;
  const std::string& organization_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_organization_type(Arg_&& arg, Args_... args);
  std::string* mutable_organization_type();
  PROTOBUF_NODISCARD std::string* release_organization_type();
  void set_allocated_organization_type(std::string* value);

  private:
  const std::string& _internal_organization_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_organization_type(
      const std::string& value);
  std::string* _internal_mutable_organization_type();

  public:
  // int32 page = 1;
  void clear_page() ;
  ::int32_t page() const;
  void set_page(::int32_t value);

  private:
  ::int32_t _internal_page() const;
  void _internal_set_page(::int32_t value);

  public:
  // int32 page_size = 2;
  void clear_page_size() ;
  ::int32_t page_size() const;
  void set_page_size(::int32_t value);

  private:
  ::int32_t _internal_page_size() const;
  void _internal_set_page_size(::int32_t value);

  public:
  // int64 organization_id = 7;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // int64 brand_id = 8;
  void clear_brand_id() ;
  ::int64_t brand_id() const;
  void set_brand_id(::int64_t value);

  private:
  ::int64_t _internal_brand_id() const;
  void _internal_set_brand_id(::int64_t value);

  public:
  // float price_from = 9;
  void clear_price_from() ;
  float price_from() const;
  void set_price_from(float value);

  private:
  float _internal_price_from() const;
  void _internal_set_price_from(float value);

  public:
  // float price_to = 10;
  void clear_price_to() ;
  float price_to() const;
  void set_price_to(float value);

  private:
  float _internal_price_to() const;
  void _internal_set_price_to(float value);

  public:
  // bool ascending = 6;
  void clear_ascending() ;
  bool ascending() const;
  void set_ascending(bool value);

  private:
  bool _internal_ascending() const;
  void _internal_set_ascending(bool value);

  public:
  // optional bool popular = 15;
  bool has_popular() const;
  void clear_popular() ;
  bool popular() const;
  void set_popular(bool value);

  private:
  bool _internal_popular() const;
  void _internal_set_popular(bool value);

  public:
  // @@protoc_insertion_point(class_scope:product.ListProductsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 15, 2,
      104, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListProductsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<ListProductsRequest_FilterEntry_DoNotUse, std::string, ::product::Values,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        filter_;
    ::google::protobuf::RepeatedField<::int64_t> exclude_product_ids_;
    ::google::protobuf::internal::CachedSize _exclude_product_ids_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr search_query_;
    ::google::protobuf::internal::ArenaStringPtr category_id_;
    ::google::protobuf::internal::ArenaStringPtr sort_by_;
    ::google::protobuf::internal::ArenaStringPtr pdf_url_;
    ::google::protobuf::internal::ArenaStringPtr organization_type_;
    ::int32_t page_;
    ::int32_t page_size_;
    ::int64_t organization_id_;
    ::int64_t brand_id_;
    float price_from_;
    float price_to_;
    bool ascending_;
    bool popular_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class ListProductGroupsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.ListProductGroupsResponse) */ {
 public:
  inline ListProductGroupsResponse() : ListProductGroupsResponse(nullptr) {}
  ~ListProductGroupsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListProductGroupsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListProductGroupsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListProductGroupsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListProductGroupsResponse(const ListProductGroupsResponse& from) : ListProductGroupsResponse(nullptr, from) {}
  inline ListProductGroupsResponse(ListProductGroupsResponse&& from) noexcept
      : ListProductGroupsResponse(nullptr, std::move(from)) {}
  inline ListProductGroupsResponse& operator=(const ListProductGroupsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListProductGroupsResponse& operator=(ListProductGroupsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListProductGroupsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListProductGroupsResponse* internal_default_instance() {
    return reinterpret_cast<const ListProductGroupsResponse*>(
        &_ListProductGroupsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(ListProductGroupsResponse& a, ListProductGroupsResponse& b) { a.Swap(&b); }
  inline void Swap(ListProductGroupsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListProductGroupsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListProductGroupsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListProductGroupsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListProductGroupsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListProductGroupsResponse& from) { ListProductGroupsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListProductGroupsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.ListProductGroupsResponse"; }

 protected:
  explicit ListProductGroupsResponse(::google::protobuf::Arena* arena);
  ListProductGroupsResponse(::google::protobuf::Arena* arena, const ListProductGroupsResponse& from);
  ListProductGroupsResponse(::google::protobuf::Arena* arena, ListProductGroupsResponse&& from) noexcept
      : ListProductGroupsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductGroupsFieldNumber = 1,
    kTotalFieldNumber = 2,
  };
  // repeated .product.ProductGroup product_groups = 1;
  int product_groups_size() const;
  private:
  int _internal_product_groups_size() const;

  public:
  void clear_product_groups() ;
  ::product::ProductGroup* mutable_product_groups(int index);
  ::google::protobuf::RepeatedPtrField<::product::ProductGroup>* mutable_product_groups();

  private:
  const ::google::protobuf::RepeatedPtrField<::product::ProductGroup>& _internal_product_groups() const;
  ::google::protobuf::RepeatedPtrField<::product::ProductGroup>* _internal_mutable_product_groups();
  public:
  const ::product::ProductGroup& product_groups(int index) const;
  ::product::ProductGroup* add_product_groups();
  const ::google::protobuf::RepeatedPtrField<::product::ProductGroup>& product_groups() const;
  // int64 total = 2;
  void clear_total() ;
  ::int64_t total() const;
  void set_total(::int64_t value);

  private:
  ::int64_t _internal_total() const;
  void _internal_set_total(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:product.ListProductGroupsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListProductGroupsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::product::ProductGroup > product_groups_;
    ::int64_t total_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class GetProductGroupResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.GetProductGroupResponse) */ {
 public:
  inline GetProductGroupResponse() : GetProductGroupResponse(nullptr) {}
  ~GetProductGroupResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetProductGroupResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetProductGroupResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetProductGroupResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetProductGroupResponse(const GetProductGroupResponse& from) : GetProductGroupResponse(nullptr, from) {}
  inline GetProductGroupResponse(GetProductGroupResponse&& from) noexcept
      : GetProductGroupResponse(nullptr, std::move(from)) {}
  inline GetProductGroupResponse& operator=(const GetProductGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetProductGroupResponse& operator=(GetProductGroupResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetProductGroupResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetProductGroupResponse* internal_default_instance() {
    return reinterpret_cast<const GetProductGroupResponse*>(
        &_GetProductGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(GetProductGroupResponse& a, GetProductGroupResponse& b) { a.Swap(&b); }
  inline void Swap(GetProductGroupResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetProductGroupResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetProductGroupResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetProductGroupResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetProductGroupResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetProductGroupResponse& from) { GetProductGroupResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetProductGroupResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.GetProductGroupResponse"; }

 protected:
  explicit GetProductGroupResponse(::google::protobuf::Arena* arena);
  GetProductGroupResponse(::google::protobuf::Arena* arena, const GetProductGroupResponse& from);
  GetProductGroupResponse(::google::protobuf::Arena* arena, GetProductGroupResponse&& from) noexcept
      : GetProductGroupResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductGroupFieldNumber = 1,
  };
  // .product.ProductGroup product_group = 1;
  bool has_product_group() const;
  void clear_product_group() ;
  const ::product::ProductGroup& product_group() const;
  PROTOBUF_NODISCARD ::product::ProductGroup* release_product_group();
  ::product::ProductGroup* mutable_product_group();
  void set_allocated_product_group(::product::ProductGroup* value);
  void unsafe_arena_set_allocated_product_group(::product::ProductGroup* value);
  ::product::ProductGroup* unsafe_arena_release_product_group();

  private:
  const ::product::ProductGroup& _internal_product_group() const;
  ::product::ProductGroup* _internal_mutable_product_group();

  public:
  // @@protoc_insertion_point(class_scope:product.GetProductGroupResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetProductGroupResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::product::ProductGroup* product_group_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class CreateProductGroupResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.CreateProductGroupResponse) */ {
 public:
  inline CreateProductGroupResponse() : CreateProductGroupResponse(nullptr) {}
  ~CreateProductGroupResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateProductGroupResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateProductGroupResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateProductGroupResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateProductGroupResponse(const CreateProductGroupResponse& from) : CreateProductGroupResponse(nullptr, from) {}
  inline CreateProductGroupResponse(CreateProductGroupResponse&& from) noexcept
      : CreateProductGroupResponse(nullptr, std::move(from)) {}
  inline CreateProductGroupResponse& operator=(const CreateProductGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateProductGroupResponse& operator=(CreateProductGroupResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateProductGroupResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateProductGroupResponse* internal_default_instance() {
    return reinterpret_cast<const CreateProductGroupResponse*>(
        &_CreateProductGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(CreateProductGroupResponse& a, CreateProductGroupResponse& b) { a.Swap(&b); }
  inline void Swap(CreateProductGroupResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateProductGroupResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateProductGroupResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateProductGroupResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateProductGroupResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateProductGroupResponse& from) { CreateProductGroupResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateProductGroupResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.CreateProductGroupResponse"; }

 protected:
  explicit CreateProductGroupResponse(::google::protobuf::Arena* arena);
  CreateProductGroupResponse(::google::protobuf::Arena* arena, const CreateProductGroupResponse& from);
  CreateProductGroupResponse(::google::protobuf::Arena* arena, CreateProductGroupResponse&& from) noexcept
      : CreateProductGroupResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductGroupFieldNumber = 1,
  };
  // .product.ProductGroup product_group = 1;
  bool has_product_group() const;
  void clear_product_group() ;
  const ::product::ProductGroup& product_group() const;
  PROTOBUF_NODISCARD ::product::ProductGroup* release_product_group();
  ::product::ProductGroup* mutable_product_group();
  void set_allocated_product_group(::product::ProductGroup* value);
  void unsafe_arena_set_allocated_product_group(::product::ProductGroup* value);
  ::product::ProductGroup* unsafe_arena_release_product_group();

  private:
  const ::product::ProductGroup& _internal_product_group() const;
  ::product::ProductGroup* _internal_mutable_product_group();

  public:
  // @@protoc_insertion_point(class_scope:product.CreateProductGroupResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateProductGroupResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::product::ProductGroup* product_group_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class CreateProductCategoryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.CreateProductCategoryRequest) */ {
 public:
  inline CreateProductCategoryRequest() : CreateProductCategoryRequest(nullptr) {}
  ~CreateProductCategoryRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateProductCategoryRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateProductCategoryRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateProductCategoryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateProductCategoryRequest(const CreateProductCategoryRequest& from) : CreateProductCategoryRequest(nullptr, from) {}
  inline CreateProductCategoryRequest(CreateProductCategoryRequest&& from) noexcept
      : CreateProductCategoryRequest(nullptr, std::move(from)) {}
  inline CreateProductCategoryRequest& operator=(const CreateProductCategoryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateProductCategoryRequest& operator=(CreateProductCategoryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateProductCategoryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateProductCategoryRequest* internal_default_instance() {
    return reinterpret_cast<const CreateProductCategoryRequest*>(
        &_CreateProductCategoryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(CreateProductCategoryRequest& a, CreateProductCategoryRequest& b) { a.Swap(&b); }
  inline void Swap(CreateProductCategoryRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateProductCategoryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateProductCategoryRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateProductCategoryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateProductCategoryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateProductCategoryRequest& from) { CreateProductCategoryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateProductCategoryRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.CreateProductCategoryRequest"; }

 protected:
  explicit CreateProductCategoryRequest(::google::protobuf::Arena* arena);
  CreateProductCategoryRequest(::google::protobuf::Arena* arena, const CreateProductCategoryRequest& from);
  CreateProductCategoryRequest(::google::protobuf::Arena* arena, CreateProductCategoryRequest&& from) noexcept
      : CreateProductCategoryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCharacteristicGroupsFieldNumber = 5,
    kNameFieldNumber = 1,
    kDescriptionFieldNumber = 2,
    kParentIdFieldNumber = 3,
    kLevelFieldNumber = 4,
  };
  // repeated .product.CharacteristicGroup characteristic_groups = 5;
  int characteristic_groups_size() const;
  private:
  int _internal_characteristic_groups_size() const;

  public:
  void clear_characteristic_groups() ;
  ::product::CharacteristicGroup* mutable_characteristic_groups(int index);
  ::google::protobuf::RepeatedPtrField<::product::CharacteristicGroup>* mutable_characteristic_groups();

  private:
  const ::google::protobuf::RepeatedPtrField<::product::CharacteristicGroup>& _internal_characteristic_groups() const;
  ::google::protobuf::RepeatedPtrField<::product::CharacteristicGroup>* _internal_mutable_characteristic_groups();
  public:
  const ::product::CharacteristicGroup& characteristic_groups(int index) const;
  ::product::CharacteristicGroup* add_characteristic_groups();
  const ::google::protobuf::RepeatedPtrField<::product::CharacteristicGroup>& characteristic_groups() const;
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string description = 2;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string parent_id = 3;
  void clear_parent_id() ;
  const std::string& parent_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_parent_id(Arg_&& arg, Args_... args);
  std::string* mutable_parent_id();
  PROTOBUF_NODISCARD std::string* release_parent_id();
  void set_allocated_parent_id(std::string* value);

  private:
  const std::string& _internal_parent_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_parent_id(
      const std::string& value);
  std::string* _internal_mutable_parent_id();

  public:
  // int64 level = 4;
  void clear_level() ;
  ::int64_t level() const;
  void set_level(::int64_t value);

  private:
  ::int64_t _internal_level() const;
  void _internal_set_level(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:product.CreateProductCategoryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      69, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateProductCategoryRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::product::CharacteristicGroup > characteristic_groups_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr parent_id_;
    ::int64_t level_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class CategoryModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.CategoryModel) */ {
 public:
  inline CategoryModel() : CategoryModel(nullptr) {}
  ~CategoryModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CategoryModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CategoryModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CategoryModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline CategoryModel(const CategoryModel& from) : CategoryModel(nullptr, from) {}
  inline CategoryModel(CategoryModel&& from) noexcept
      : CategoryModel(nullptr, std::move(from)) {}
  inline CategoryModel& operator=(const CategoryModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline CategoryModel& operator=(CategoryModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CategoryModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const CategoryModel* internal_default_instance() {
    return reinterpret_cast<const CategoryModel*>(
        &_CategoryModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(CategoryModel& a, CategoryModel& b) { a.Swap(&b); }
  inline void Swap(CategoryModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CategoryModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CategoryModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CategoryModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CategoryModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CategoryModel& from) { CategoryModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CategoryModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.CategoryModel"; }

 protected:
  explicit CategoryModel(::google::protobuf::Arena* arena);
  CategoryModel(::google::protobuf::Arena* arena, const CategoryModel& from);
  CategoryModel(::google::protobuf::Arena* arena, CategoryModel&& from) noexcept
      : CategoryModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCharacteristicGroupsFieldNumber = 8,
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kParentIdFieldNumber = 4,
    kImageUrlFieldNumber = 7,
    kLevelFieldNumber = 5,
    kIsParentFieldNumber = 6,
  };
  // repeated .product.CharacteristicGroup characteristic_groups = 8;
  int characteristic_groups_size() const;
  private:
  int _internal_characteristic_groups_size() const;

  public:
  void clear_characteristic_groups() ;
  ::product::CharacteristicGroup* mutable_characteristic_groups(int index);
  ::google::protobuf::RepeatedPtrField<::product::CharacteristicGroup>* mutable_characteristic_groups();

  private:
  const ::google::protobuf::RepeatedPtrField<::product::CharacteristicGroup>& _internal_characteristic_groups() const;
  ::google::protobuf::RepeatedPtrField<::product::CharacteristicGroup>* _internal_mutable_characteristic_groups();
  public:
  const ::product::CharacteristicGroup& characteristic_groups(int index) const;
  ::product::CharacteristicGroup* add_characteristic_groups();
  const ::google::protobuf::RepeatedPtrField<::product::CharacteristicGroup>& characteristic_groups() const;
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string description = 3;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string parent_id = 4;
  void clear_parent_id() ;
  const std::string& parent_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_parent_id(Arg_&& arg, Args_... args);
  std::string* mutable_parent_id();
  PROTOBUF_NODISCARD std::string* release_parent_id();
  void set_allocated_parent_id(std::string* value);

  private:
  const std::string& _internal_parent_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_parent_id(
      const std::string& value);
  std::string* _internal_mutable_parent_id();

  public:
  // string image_url = 7;
  void clear_image_url() ;
  const std::string& image_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_image_url(Arg_&& arg, Args_... args);
  std::string* mutable_image_url();
  PROTOBUF_NODISCARD std::string* release_image_url();
  void set_allocated_image_url(std::string* value);

  private:
  const std::string& _internal_image_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_image_url(
      const std::string& value);
  std::string* _internal_mutable_image_url();

  public:
  // int64 level = 5;
  void clear_level() ;
  ::int64_t level() const;
  void set_level(::int64_t value);

  private:
  ::int64_t _internal_level() const;
  void _internal_set_level(::int64_t value);

  public:
  // bool is_parent = 6;
  void clear_is_parent() ;
  bool is_parent() const;
  void set_is_parent(bool value);

  private:
  bool _internal_is_parent() const;
  void _internal_set_is_parent(bool value);

  public:
  // @@protoc_insertion_point(class_scope:product.CategoryModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      73, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CategoryModel& from_msg);
    ::google::protobuf::RepeatedPtrField< ::product::CharacteristicGroup > characteristic_groups_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr parent_id_;
    ::google::protobuf::internal::ArenaStringPtr image_url_;
    ::int64_t level_;
    bool is_parent_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class UploadProductsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.UploadProductsResponse) */ {
 public:
  inline UploadProductsResponse() : UploadProductsResponse(nullptr) {}
  ~UploadProductsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UploadProductsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UploadProductsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UploadProductsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UploadProductsResponse(const UploadProductsResponse& from) : UploadProductsResponse(nullptr, from) {}
  inline UploadProductsResponse(UploadProductsResponse&& from) noexcept
      : UploadProductsResponse(nullptr, std::move(from)) {}
  inline UploadProductsResponse& operator=(const UploadProductsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UploadProductsResponse& operator=(UploadProductsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UploadProductsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UploadProductsResponse* internal_default_instance() {
    return reinterpret_cast<const UploadProductsResponse*>(
        &_UploadProductsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(UploadProductsResponse& a, UploadProductsResponse& b) { a.Swap(&b); }
  inline void Swap(UploadProductsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UploadProductsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UploadProductsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UploadProductsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UploadProductsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UploadProductsResponse& from) { UploadProductsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UploadProductsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.UploadProductsResponse"; }

 protected:
  explicit UploadProductsResponse(::google::protobuf::Arena* arena);
  UploadProductsResponse(::google::protobuf::Arena* arena, const UploadProductsResponse& from);
  UploadProductsResponse(::google::protobuf::Arena* arena, UploadProductsResponse&& from) noexcept
      : UploadProductsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductsFieldNumber = 1,
  };
  // repeated .product.Product products = 1;
  int products_size() const;
  private:
  int _internal_products_size() const;

  public:
  void clear_products() ;
  ::product::Product* mutable_products(int index);
  ::google::protobuf::RepeatedPtrField<::product::Product>* mutable_products();

  private:
  const ::google::protobuf::RepeatedPtrField<::product::Product>& _internal_products() const;
  ::google::protobuf::RepeatedPtrField<::product::Product>* _internal_mutable_products();
  public:
  const ::product::Product& products(int index) const;
  ::product::Product* add_products();
  const ::google::protobuf::RepeatedPtrField<::product::Product>& products() const;
  // @@protoc_insertion_point(class_scope:product.UploadProductsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UploadProductsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::product::Product > products_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class PatchProductResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.PatchProductResponse) */ {
 public:
  inline PatchProductResponse() : PatchProductResponse(nullptr) {}
  ~PatchProductResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PatchProductResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PatchProductResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PatchProductResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PatchProductResponse(const PatchProductResponse& from) : PatchProductResponse(nullptr, from) {}
  inline PatchProductResponse(PatchProductResponse&& from) noexcept
      : PatchProductResponse(nullptr, std::move(from)) {}
  inline PatchProductResponse& operator=(const PatchProductResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PatchProductResponse& operator=(PatchProductResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PatchProductResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PatchProductResponse* internal_default_instance() {
    return reinterpret_cast<const PatchProductResponse*>(
        &_PatchProductResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(PatchProductResponse& a, PatchProductResponse& b) { a.Swap(&b); }
  inline void Swap(PatchProductResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PatchProductResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PatchProductResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PatchProductResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PatchProductResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PatchProductResponse& from) { PatchProductResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PatchProductResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.PatchProductResponse"; }

 protected:
  explicit PatchProductResponse(::google::protobuf::Arena* arena);
  PatchProductResponse(::google::protobuf::Arena* arena, const PatchProductResponse& from);
  PatchProductResponse(::google::protobuf::Arena* arena, PatchProductResponse&& from) noexcept
      : PatchProductResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductFieldNumber = 1,
  };
  // .product.Product product = 1;
  bool has_product() const;
  void clear_product() ;
  const ::product::Product& product() const;
  PROTOBUF_NODISCARD ::product::Product* release_product();
  ::product::Product* mutable_product();
  void set_allocated_product(::product::Product* value);
  void unsafe_arena_set_allocated_product(::product::Product* value);
  ::product::Product* unsafe_arena_release_product();

  private:
  const ::product::Product& _internal_product() const;
  ::product::Product* _internal_mutable_product();

  public:
  // @@protoc_insertion_point(class_scope:product.PatchProductResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PatchProductResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::product::Product* product_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class PatchProductRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.PatchProductRequest) */ {
 public:
  inline PatchProductRequest() : PatchProductRequest(nullptr) {}
  ~PatchProductRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PatchProductRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PatchProductRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PatchProductRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PatchProductRequest(const PatchProductRequest& from) : PatchProductRequest(nullptr, from) {}
  inline PatchProductRequest(PatchProductRequest&& from) noexcept
      : PatchProductRequest(nullptr, std::move(from)) {}
  inline PatchProductRequest& operator=(const PatchProductRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PatchProductRequest& operator=(PatchProductRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PatchProductRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PatchProductRequest* internal_default_instance() {
    return reinterpret_cast<const PatchProductRequest*>(
        &_PatchProductRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(PatchProductRequest& a, PatchProductRequest& b) { a.Swap(&b); }
  inline void Swap(PatchProductRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PatchProductRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PatchProductRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PatchProductRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PatchProductRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PatchProductRequest& from) { PatchProductRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PatchProductRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.PatchProductRequest"; }

 protected:
  explicit PatchProductRequest(::google::protobuf::Arena* arena);
  PatchProductRequest(::google::protobuf::Arena* arena, const PatchProductRequest& from);
  PatchProductRequest(::google::protobuf::Arena* arena, PatchProductRequest&& from) noexcept
      : PatchProductRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductFieldNumber = 1,
  };
  // .product.Product product = 1;
  bool has_product() const;
  void clear_product() ;
  const ::product::Product& product() const;
  PROTOBUF_NODISCARD ::product::Product* release_product();
  ::product::Product* mutable_product();
  void set_allocated_product(::product::Product* value);
  void unsafe_arena_set_allocated_product(::product::Product* value);
  ::product::Product* unsafe_arena_release_product();

  private:
  const ::product::Product& _internal_product() const;
  ::product::Product* _internal_mutable_product();

  public:
  // @@protoc_insertion_point(class_scope:product.PatchProductRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PatchProductRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::product::Product* product_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class ListProductsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.ListProductsResponse) */ {
 public:
  inline ListProductsResponse() : ListProductsResponse(nullptr) {}
  ~ListProductsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListProductsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListProductsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListProductsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListProductsResponse(const ListProductsResponse& from) : ListProductsResponse(nullptr, from) {}
  inline ListProductsResponse(ListProductsResponse&& from) noexcept
      : ListProductsResponse(nullptr, std::move(from)) {}
  inline ListProductsResponse& operator=(const ListProductsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListProductsResponse& operator=(ListProductsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListProductsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListProductsResponse* internal_default_instance() {
    return reinterpret_cast<const ListProductsResponse*>(
        &_ListProductsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(ListProductsResponse& a, ListProductsResponse& b) { a.Swap(&b); }
  inline void Swap(ListProductsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListProductsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListProductsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListProductsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListProductsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListProductsResponse& from) { ListProductsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListProductsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.ListProductsResponse"; }

 protected:
  explicit ListProductsResponse(::google::protobuf::Arena* arena);
  ListProductsResponse(::google::protobuf::Arena* arena, const ListProductsResponse& from);
  ListProductsResponse(::google::protobuf::Arena* arena, ListProductsResponse&& from) noexcept
      : ListProductsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductsFieldNumber = 1,
    kPdfUrlFieldNumber = 3,
    kTotalCountFieldNumber = 2,
    kIsSaleSettingsCompletedFieldNumber = 4,
  };
  // repeated .product.Product products = 1;
  int products_size() const;
  private:
  int _internal_products_size() const;

  public:
  void clear_products() ;
  ::product::Product* mutable_products(int index);
  ::google::protobuf::RepeatedPtrField<::product::Product>* mutable_products();

  private:
  const ::google::protobuf::RepeatedPtrField<::product::Product>& _internal_products() const;
  ::google::protobuf::RepeatedPtrField<::product::Product>* _internal_mutable_products();
  public:
  const ::product::Product& products(int index) const;
  ::product::Product* add_products();
  const ::google::protobuf::RepeatedPtrField<::product::Product>& products() const;
  // optional string pdf_url = 3;
  bool has_pdf_url() const;
  void clear_pdf_url() ;
  const std::string& pdf_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pdf_url(Arg_&& arg, Args_... args);
  std::string* mutable_pdf_url();
  PROTOBUF_NODISCARD std::string* release_pdf_url();
  void set_allocated_pdf_url(std::string* value);

  private:
  const std::string& _internal_pdf_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pdf_url(
      const std::string& value);
  std::string* _internal_mutable_pdf_url();

  public:
  // int32 total_count = 2;
  void clear_total_count() ;
  ::int32_t total_count() const;
  void set_total_count(::int32_t value);

  private:
  ::int32_t _internal_total_count() const;
  void _internal_set_total_count(::int32_t value);

  public:
  // bool is_sale_settings_completed = 4;
  void clear_is_sale_settings_completed() ;
  bool is_sale_settings_completed() const;
  void set_is_sale_settings_completed(bool value);

  private:
  bool _internal_is_sale_settings_completed() const;
  void _internal_set_is_sale_settings_completed(bool value);

  public:
  // @@protoc_insertion_point(class_scope:product.ListProductsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      44, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListProductsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::product::Product > products_;
    ::google::protobuf::internal::ArenaStringPtr pdf_url_;
    ::int32_t total_count_;
    bool is_sale_settings_completed_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class ListCategoriesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.ListCategoriesResponse) */ {
 public:
  inline ListCategoriesResponse() : ListCategoriesResponse(nullptr) {}
  ~ListCategoriesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListCategoriesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListCategoriesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListCategoriesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListCategoriesResponse(const ListCategoriesResponse& from) : ListCategoriesResponse(nullptr, from) {}
  inline ListCategoriesResponse(ListCategoriesResponse&& from) noexcept
      : ListCategoriesResponse(nullptr, std::move(from)) {}
  inline ListCategoriesResponse& operator=(const ListCategoriesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCategoriesResponse& operator=(ListCategoriesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListCategoriesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListCategoriesResponse* internal_default_instance() {
    return reinterpret_cast<const ListCategoriesResponse*>(
        &_ListCategoriesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(ListCategoriesResponse& a, ListCategoriesResponse& b) { a.Swap(&b); }
  inline void Swap(ListCategoriesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCategoriesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListCategoriesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListCategoriesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListCategoriesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListCategoriesResponse& from) { ListCategoriesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListCategoriesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.ListCategoriesResponse"; }

 protected:
  explicit ListCategoriesResponse(::google::protobuf::Arena* arena);
  ListCategoriesResponse(::google::protobuf::Arena* arena, const ListCategoriesResponse& from);
  ListCategoriesResponse(::google::protobuf::Arena* arena, ListCategoriesResponse&& from) noexcept
      : ListCategoriesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoriesFieldNumber = 1,
  };
  // repeated .product.CategoryModel categories = 1;
  int categories_size() const;
  private:
  int _internal_categories_size() const;

  public:
  void clear_categories() ;
  ::product::CategoryModel* mutable_categories(int index);
  ::google::protobuf::RepeatedPtrField<::product::CategoryModel>* mutable_categories();

  private:
  const ::google::protobuf::RepeatedPtrField<::product::CategoryModel>& _internal_categories() const;
  ::google::protobuf::RepeatedPtrField<::product::CategoryModel>* _internal_mutable_categories();
  public:
  const ::product::CategoryModel& categories(int index) const;
  ::product::CategoryModel* add_categories();
  const ::google::protobuf::RepeatedPtrField<::product::CategoryModel>& categories() const;
  // @@protoc_insertion_point(class_scope:product.ListCategoriesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListCategoriesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::product::CategoryModel > categories_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class GetProductResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.GetProductResponse) */ {
 public:
  inline GetProductResponse() : GetProductResponse(nullptr) {}
  ~GetProductResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetProductResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetProductResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetProductResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetProductResponse(const GetProductResponse& from) : GetProductResponse(nullptr, from) {}
  inline GetProductResponse(GetProductResponse&& from) noexcept
      : GetProductResponse(nullptr, std::move(from)) {}
  inline GetProductResponse& operator=(const GetProductResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetProductResponse& operator=(GetProductResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetProductResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetProductResponse* internal_default_instance() {
    return reinterpret_cast<const GetProductResponse*>(
        &_GetProductResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(GetProductResponse& a, GetProductResponse& b) { a.Swap(&b); }
  inline void Swap(GetProductResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetProductResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetProductResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetProductResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetProductResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetProductResponse& from) { GetProductResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetProductResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.GetProductResponse"; }

 protected:
  explicit GetProductResponse(::google::protobuf::Arena* arena);
  GetProductResponse(::google::protobuf::Arena* arena, const GetProductResponse& from);
  GetProductResponse(::google::protobuf::Arena* arena, GetProductResponse&& from) noexcept
      : GetProductResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductFieldNumber = 1,
  };
  // .product.Product product = 1;
  bool has_product() const;
  void clear_product() ;
  const ::product::Product& product() const;
  PROTOBUF_NODISCARD ::product::Product* release_product();
  ::product::Product* mutable_product();
  void set_allocated_product(::product::Product* value);
  void unsafe_arena_set_allocated_product(::product::Product* value);
  ::product::Product* unsafe_arena_release_product();

  private:
  const ::product::Product& _internal_product() const;
  ::product::Product* _internal_mutable_product();

  public:
  // @@protoc_insertion_point(class_scope:product.GetProductResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetProductResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::product::Product* product_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class GetProductCategoryWithChildrenResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.GetProductCategoryWithChildrenResponse) */ {
 public:
  inline GetProductCategoryWithChildrenResponse() : GetProductCategoryWithChildrenResponse(nullptr) {}
  ~GetProductCategoryWithChildrenResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetProductCategoryWithChildrenResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetProductCategoryWithChildrenResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetProductCategoryWithChildrenResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetProductCategoryWithChildrenResponse(const GetProductCategoryWithChildrenResponse& from) : GetProductCategoryWithChildrenResponse(nullptr, from) {}
  inline GetProductCategoryWithChildrenResponse(GetProductCategoryWithChildrenResponse&& from) noexcept
      : GetProductCategoryWithChildrenResponse(nullptr, std::move(from)) {}
  inline GetProductCategoryWithChildrenResponse& operator=(const GetProductCategoryWithChildrenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetProductCategoryWithChildrenResponse& operator=(GetProductCategoryWithChildrenResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetProductCategoryWithChildrenResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetProductCategoryWithChildrenResponse* internal_default_instance() {
    return reinterpret_cast<const GetProductCategoryWithChildrenResponse*>(
        &_GetProductCategoryWithChildrenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(GetProductCategoryWithChildrenResponse& a, GetProductCategoryWithChildrenResponse& b) { a.Swap(&b); }
  inline void Swap(GetProductCategoryWithChildrenResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetProductCategoryWithChildrenResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetProductCategoryWithChildrenResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetProductCategoryWithChildrenResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetProductCategoryWithChildrenResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetProductCategoryWithChildrenResponse& from) { GetProductCategoryWithChildrenResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetProductCategoryWithChildrenResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.GetProductCategoryWithChildrenResponse"; }

 protected:
  explicit GetProductCategoryWithChildrenResponse(::google::protobuf::Arena* arena);
  GetProductCategoryWithChildrenResponse(::google::protobuf::Arena* arena, const GetProductCategoryWithChildrenResponse& from);
  GetProductCategoryWithChildrenResponse(::google::protobuf::Arena* arena, GetProductCategoryWithChildrenResponse&& from) noexcept
      : GetProductCategoryWithChildrenResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChildrenFieldNumber = 2,
    kCategoryFieldNumber = 1,
  };
  // repeated .product.CategoryModel children = 2;
  int children_size() const;
  private:
  int _internal_children_size() const;

  public:
  void clear_children() ;
  ::product::CategoryModel* mutable_children(int index);
  ::google::protobuf::RepeatedPtrField<::product::CategoryModel>* mutable_children();

  private:
  const ::google::protobuf::RepeatedPtrField<::product::CategoryModel>& _internal_children() const;
  ::google::protobuf::RepeatedPtrField<::product::CategoryModel>* _internal_mutable_children();
  public:
  const ::product::CategoryModel& children(int index) const;
  ::product::CategoryModel* add_children();
  const ::google::protobuf::RepeatedPtrField<::product::CategoryModel>& children() const;
  // .product.CategoryModel category = 1;
  bool has_category() const;
  void clear_category() ;
  const ::product::CategoryModel& category() const;
  PROTOBUF_NODISCARD ::product::CategoryModel* release_category();
  ::product::CategoryModel* mutable_category();
  void set_allocated_category(::product::CategoryModel* value);
  void unsafe_arena_set_allocated_category(::product::CategoryModel* value);
  ::product::CategoryModel* unsafe_arena_release_category();

  private:
  const ::product::CategoryModel& _internal_category() const;
  ::product::CategoryModel* _internal_mutable_category();

  public:
  // @@protoc_insertion_point(class_scope:product.GetProductCategoryWithChildrenResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetProductCategoryWithChildrenResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::product::CategoryModel > children_;
    ::product::CategoryModel* category_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class GetChildrenCategoriesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.GetChildrenCategoriesResponse) */ {
 public:
  inline GetChildrenCategoriesResponse() : GetChildrenCategoriesResponse(nullptr) {}
  ~GetChildrenCategoriesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetChildrenCategoriesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetChildrenCategoriesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetChildrenCategoriesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetChildrenCategoriesResponse(const GetChildrenCategoriesResponse& from) : GetChildrenCategoriesResponse(nullptr, from) {}
  inline GetChildrenCategoriesResponse(GetChildrenCategoriesResponse&& from) noexcept
      : GetChildrenCategoriesResponse(nullptr, std::move(from)) {}
  inline GetChildrenCategoriesResponse& operator=(const GetChildrenCategoriesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetChildrenCategoriesResponse& operator=(GetChildrenCategoriesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetChildrenCategoriesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetChildrenCategoriesResponse* internal_default_instance() {
    return reinterpret_cast<const GetChildrenCategoriesResponse*>(
        &_GetChildrenCategoriesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 46;
  friend void swap(GetChildrenCategoriesResponse& a, GetChildrenCategoriesResponse& b) { a.Swap(&b); }
  inline void Swap(GetChildrenCategoriesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetChildrenCategoriesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetChildrenCategoriesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetChildrenCategoriesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetChildrenCategoriesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetChildrenCategoriesResponse& from) { GetChildrenCategoriesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetChildrenCategoriesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.GetChildrenCategoriesResponse"; }

 protected:
  explicit GetChildrenCategoriesResponse(::google::protobuf::Arena* arena);
  GetChildrenCategoriesResponse(::google::protobuf::Arena* arena, const GetChildrenCategoriesResponse& from);
  GetChildrenCategoriesResponse(::google::protobuf::Arena* arena, GetChildrenCategoriesResponse&& from) noexcept
      : GetChildrenCategoriesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoriesFieldNumber = 1,
  };
  // repeated .product.CategoryModel categories = 1;
  int categories_size() const;
  private:
  int _internal_categories_size() const;

  public:
  void clear_categories() ;
  ::product::CategoryModel* mutable_categories(int index);
  ::google::protobuf::RepeatedPtrField<::product::CategoryModel>* mutable_categories();

  private:
  const ::google::protobuf::RepeatedPtrField<::product::CategoryModel>& _internal_categories() const;
  ::google::protobuf::RepeatedPtrField<::product::CategoryModel>* _internal_mutable_categories();
  public:
  const ::product::CategoryModel& categories(int index) const;
  ::product::CategoryModel* add_categories();
  const ::google::protobuf::RepeatedPtrField<::product::CategoryModel>& categories() const;
  // @@protoc_insertion_point(class_scope:product.GetChildrenCategoriesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetChildrenCategoriesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::product::CategoryModel > categories_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class DuplicateProductResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.DuplicateProductResponse) */ {
 public:
  inline DuplicateProductResponse() : DuplicateProductResponse(nullptr) {}
  ~DuplicateProductResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DuplicateProductResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DuplicateProductResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DuplicateProductResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DuplicateProductResponse(const DuplicateProductResponse& from) : DuplicateProductResponse(nullptr, from) {}
  inline DuplicateProductResponse(DuplicateProductResponse&& from) noexcept
      : DuplicateProductResponse(nullptr, std::move(from)) {}
  inline DuplicateProductResponse& operator=(const DuplicateProductResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DuplicateProductResponse& operator=(DuplicateProductResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DuplicateProductResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DuplicateProductResponse* internal_default_instance() {
    return reinterpret_cast<const DuplicateProductResponse*>(
        &_DuplicateProductResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(DuplicateProductResponse& a, DuplicateProductResponse& b) { a.Swap(&b); }
  inline void Swap(DuplicateProductResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DuplicateProductResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DuplicateProductResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DuplicateProductResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DuplicateProductResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DuplicateProductResponse& from) { DuplicateProductResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DuplicateProductResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.DuplicateProductResponse"; }

 protected:
  explicit DuplicateProductResponse(::google::protobuf::Arena* arena);
  DuplicateProductResponse(::google::protobuf::Arena* arena, const DuplicateProductResponse& from);
  DuplicateProductResponse(::google::protobuf::Arena* arena, DuplicateProductResponse&& from) noexcept
      : DuplicateProductResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductFieldNumber = 1,
  };
  // .product.Product product = 1;
  bool has_product() const;
  void clear_product() ;
  const ::product::Product& product() const;
  PROTOBUF_NODISCARD ::product::Product* release_product();
  ::product::Product* mutable_product();
  void set_allocated_product(::product::Product* value);
  void unsafe_arena_set_allocated_product(::product::Product* value);
  ::product::Product* unsafe_arena_release_product();

  private:
  const ::product::Product& _internal_product() const;
  ::product::Product* _internal_mutable_product();

  public:
  // @@protoc_insertion_point(class_scope:product.DuplicateProductResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DuplicateProductResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::product::Product* product_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class CreateProductResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.CreateProductResponse) */ {
 public:
  inline CreateProductResponse() : CreateProductResponse(nullptr) {}
  ~CreateProductResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateProductResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateProductResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateProductResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateProductResponse(const CreateProductResponse& from) : CreateProductResponse(nullptr, from) {}
  inline CreateProductResponse(CreateProductResponse&& from) noexcept
      : CreateProductResponse(nullptr, std::move(from)) {}
  inline CreateProductResponse& operator=(const CreateProductResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateProductResponse& operator=(CreateProductResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateProductResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateProductResponse* internal_default_instance() {
    return reinterpret_cast<const CreateProductResponse*>(
        &_CreateProductResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(CreateProductResponse& a, CreateProductResponse& b) { a.Swap(&b); }
  inline void Swap(CreateProductResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateProductResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateProductResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateProductResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateProductResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateProductResponse& from) { CreateProductResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateProductResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.CreateProductResponse"; }

 protected:
  explicit CreateProductResponse(::google::protobuf::Arena* arena);
  CreateProductResponse(::google::protobuf::Arena* arena, const CreateProductResponse& from);
  CreateProductResponse(::google::protobuf::Arena* arena, CreateProductResponse&& from) noexcept
      : CreateProductResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductFieldNumber = 1,
  };
  // .product.Product product = 1;
  bool has_product() const;
  void clear_product() ;
  const ::product::Product& product() const;
  PROTOBUF_NODISCARD ::product::Product* release_product();
  ::product::Product* mutable_product();
  void set_allocated_product(::product::Product* value);
  void unsafe_arena_set_allocated_product(::product::Product* value);
  ::product::Product* unsafe_arena_release_product();

  private:
  const ::product::Product& _internal_product() const;
  ::product::Product* _internal_mutable_product();

  public:
  // @@protoc_insertion_point(class_scope:product.CreateProductResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateProductResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::product::Product* product_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class CreateProductRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.CreateProductRequest) */ {
 public:
  inline CreateProductRequest() : CreateProductRequest(nullptr) {}
  ~CreateProductRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateProductRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateProductRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateProductRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateProductRequest(const CreateProductRequest& from) : CreateProductRequest(nullptr, from) {}
  inline CreateProductRequest(CreateProductRequest&& from) noexcept
      : CreateProductRequest(nullptr, std::move(from)) {}
  inline CreateProductRequest& operator=(const CreateProductRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateProductRequest& operator=(CreateProductRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateProductRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateProductRequest* internal_default_instance() {
    return reinterpret_cast<const CreateProductRequest*>(
        &_CreateProductRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(CreateProductRequest& a, CreateProductRequest& b) { a.Swap(&b); }
  inline void Swap(CreateProductRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateProductRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateProductRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateProductRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateProductRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateProductRequest& from) { CreateProductRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateProductRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.CreateProductRequest"; }

 protected:
  explicit CreateProductRequest(::google::protobuf::Arena* arena);
  CreateProductRequest(::google::protobuf::Arena* arena, const CreateProductRequest& from);
  CreateProductRequest(::google::protobuf::Arena* arena, CreateProductRequest&& from) noexcept
      : CreateProductRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductFieldNumber = 1,
  };
  // .product.Product product = 1;
  bool has_product() const;
  void clear_product() ;
  const ::product::Product& product() const;
  PROTOBUF_NODISCARD ::product::Product* release_product();
  ::product::Product* mutable_product();
  void set_allocated_product(::product::Product* value);
  void unsafe_arena_set_allocated_product(::product::Product* value);
  ::product::Product* unsafe_arena_release_product();

  private:
  const ::product::Product& _internal_product() const;
  ::product::Product* _internal_mutable_product();

  public:
  // @@protoc_insertion_point(class_scope:product.CreateProductRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateProductRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::product::Product* product_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};
// -------------------------------------------------------------------

class CreateProductCategoryResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:product.CreateProductCategoryResponse) */ {
 public:
  inline CreateProductCategoryResponse() : CreateProductCategoryResponse(nullptr) {}
  ~CreateProductCategoryResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateProductCategoryResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateProductCategoryResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateProductCategoryResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateProductCategoryResponse(const CreateProductCategoryResponse& from) : CreateProductCategoryResponse(nullptr, from) {}
  inline CreateProductCategoryResponse(CreateProductCategoryResponse&& from) noexcept
      : CreateProductCategoryResponse(nullptr, std::move(from)) {}
  inline CreateProductCategoryResponse& operator=(const CreateProductCategoryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateProductCategoryResponse& operator=(CreateProductCategoryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateProductCategoryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateProductCategoryResponse* internal_default_instance() {
    return reinterpret_cast<const CreateProductCategoryResponse*>(
        &_CreateProductCategoryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(CreateProductCategoryResponse& a, CreateProductCategoryResponse& b) { a.Swap(&b); }
  inline void Swap(CreateProductCategoryResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateProductCategoryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateProductCategoryResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateProductCategoryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateProductCategoryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateProductCategoryResponse& from) { CreateProductCategoryResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateProductCategoryResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "product.CreateProductCategoryResponse"; }

 protected:
  explicit CreateProductCategoryResponse(::google::protobuf::Arena* arena);
  CreateProductCategoryResponse(::google::protobuf::Arena* arena, const CreateProductCategoryResponse& from);
  CreateProductCategoryResponse(::google::protobuf::Arena* arena, CreateProductCategoryResponse&& from) noexcept
      : CreateProductCategoryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 1,
  };
  // .product.CategoryModel category = 1;
  bool has_category() const;
  void clear_category() ;
  const ::product::CategoryModel& category() const;
  PROTOBUF_NODISCARD ::product::CategoryModel* release_category();
  ::product::CategoryModel* mutable_category();
  void set_allocated_category(::product::CategoryModel* value);
  void unsafe_arena_set_allocated_category(::product::CategoryModel* value);
  ::product::CategoryModel* unsafe_arena_release_category();

  private:
  const ::product::CategoryModel& _internal_category() const;
  ::product::CategoryModel* _internal_mutable_category();

  public:
  // @@protoc_insertion_point(class_scope:product.CreateProductCategoryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateProductCategoryResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::product::CategoryModel* category_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_product_2fproduct_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ImageModel

// int64 id = 1;
inline void ImageModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t ImageModel::id() const {
  // @@protoc_insertion_point(field_get:product.ImageModel.id)
  return _internal_id();
}
inline void ImageModel::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:product.ImageModel.id)
}
inline ::int64_t ImageModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void ImageModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string image_url = 2;
inline void ImageModel::clear_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.ClearToEmpty();
}
inline const std::string& ImageModel::image_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ImageModel.image_url)
  return _internal_image_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ImageModel::set_image_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ImageModel.image_url)
}
inline std::string* ImageModel::mutable_image_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_image_url();
  // @@protoc_insertion_point(field_mutable:product.ImageModel.image_url)
  return _s;
}
inline const std::string& ImageModel::_internal_image_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.image_url_.Get();
}
inline void ImageModel::_internal_set_image_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.Set(value, GetArena());
}
inline std::string* ImageModel::_internal_mutable_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.image_url_.Mutable( GetArena());
}
inline std::string* ImageModel::release_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ImageModel.image_url)
  return _impl_.image_url_.Release();
}
inline void ImageModel::set_allocated_image_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.image_url_.IsDefault()) {
    _impl_.image_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ImageModel.image_url)
}

// optional int64 image_index = 3;
inline bool ImageModel::has_image_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ImageModel::clear_image_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_index_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t ImageModel::image_index() const {
  // @@protoc_insertion_point(field_get:product.ImageModel.image_index)
  return _internal_image_index();
}
inline void ImageModel::set_image_index(::int64_t value) {
  _internal_set_image_index(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:product.ImageModel.image_index)
}
inline ::int64_t ImageModel::_internal_image_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.image_index_;
}
inline void ImageModel::_internal_set_image_index(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_index_ = value;
}

// string object_key = 4;
inline void ImageModel::clear_object_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_key_.ClearToEmpty();
}
inline const std::string& ImageModel::object_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ImageModel.object_key)
  return _internal_object_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ImageModel::set_object_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ImageModel.object_key)
}
inline std::string* ImageModel::mutable_object_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_object_key();
  // @@protoc_insertion_point(field_mutable:product.ImageModel.object_key)
  return _s;
}
inline const std::string& ImageModel::_internal_object_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.object_key_.Get();
}
inline void ImageModel::_internal_set_object_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_key_.Set(value, GetArena());
}
inline std::string* ImageModel::_internal_mutable_object_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.object_key_.Mutable( GetArena());
}
inline std::string* ImageModel::release_object_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ImageModel.object_key)
  return _impl_.object_key_.Release();
}
inline void ImageModel::set_allocated_object_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.object_key_.IsDefault()) {
    _impl_.object_key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ImageModel.object_key)
}

// -------------------------------------------------------------------

// ProductGroup

// int64 id = 1;
inline void ProductGroup::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t ProductGroup::id() const {
  // @@protoc_insertion_point(field_get:product.ProductGroup.id)
  return _internal_id();
}
inline void ProductGroup::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:product.ProductGroup.id)
}
inline ::int64_t ProductGroup::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void ProductGroup::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string group_name = 2;
inline void ProductGroup::clear_group_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_name_.ClearToEmpty();
}
inline const std::string& ProductGroup::group_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ProductGroup.group_name)
  return _internal_group_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProductGroup::set_group_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ProductGroup.group_name)
}
inline std::string* ProductGroup::mutable_group_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_group_name();
  // @@protoc_insertion_point(field_mutable:product.ProductGroup.group_name)
  return _s;
}
inline const std::string& ProductGroup::_internal_group_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_name_.Get();
}
inline void ProductGroup::_internal_set_group_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_name_.Set(value, GetArena());
}
inline std::string* ProductGroup::_internal_mutable_group_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.group_name_.Mutable( GetArena());
}
inline std::string* ProductGroup::release_group_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ProductGroup.group_name)
  return _impl_.group_name_.Release();
}
inline void ProductGroup::set_allocated_group_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.group_name_.IsDefault()) {
    _impl_.group_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ProductGroup.group_name)
}

// repeated .product.ProductModel products = 3;
inline int ProductGroup::_internal_products_size() const {
  return _internal_products().size();
}
inline int ProductGroup::products_size() const {
  return _internal_products_size();
}
inline void ProductGroup::clear_products() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.products_.Clear();
}
inline ::product::ProductModel* ProductGroup::mutable_products(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:product.ProductGroup.products)
  return _internal_mutable_products()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::product::ProductModel>* ProductGroup::mutable_products()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.ProductGroup.products)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_products();
}
inline const ::product::ProductModel& ProductGroup::products(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ProductGroup.products)
  return _internal_products().Get(index);
}
inline ::product::ProductModel* ProductGroup::add_products() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::product::ProductModel* _add = _internal_mutable_products()->Add();
  // @@protoc_insertion_point(field_add:product.ProductGroup.products)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::product::ProductModel>& ProductGroup::products() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.ProductGroup.products)
  return _internal_products();
}
inline const ::google::protobuf::RepeatedPtrField<::product::ProductModel>&
ProductGroup::_internal_products() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.products_;
}
inline ::google::protobuf::RepeatedPtrField<::product::ProductModel>*
ProductGroup::_internal_mutable_products() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.products_;
}

// -------------------------------------------------------------------

// ProductGroupModel

// int64 id = 1;
inline void ProductGroupModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t ProductGroupModel::id() const {
  // @@protoc_insertion_point(field_get:product.ProductGroupModel.id)
  return _internal_id();
}
inline void ProductGroupModel::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:product.ProductGroupModel.id)
}
inline ::int64_t ProductGroupModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void ProductGroupModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string group_name = 2;
inline void ProductGroupModel::clear_group_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_name_.ClearToEmpty();
}
inline const std::string& ProductGroupModel::group_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ProductGroupModel.group_name)
  return _internal_group_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProductGroupModel::set_group_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ProductGroupModel.group_name)
}
inline std::string* ProductGroupModel::mutable_group_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_group_name();
  // @@protoc_insertion_point(field_mutable:product.ProductGroupModel.group_name)
  return _s;
}
inline const std::string& ProductGroupModel::_internal_group_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_name_.Get();
}
inline void ProductGroupModel::_internal_set_group_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_name_.Set(value, GetArena());
}
inline std::string* ProductGroupModel::_internal_mutable_group_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.group_name_.Mutable( GetArena());
}
inline std::string* ProductGroupModel::release_group_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ProductGroupModel.group_name)
  return _impl_.group_name_.Release();
}
inline void ProductGroupModel::set_allocated_group_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.group_name_.IsDefault()) {
    _impl_.group_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ProductGroupModel.group_name)
}

// repeated int64 product_ids = 3;
inline int ProductGroupModel::_internal_product_ids_size() const {
  return _internal_product_ids().size();
}
inline int ProductGroupModel::product_ids_size() const {
  return _internal_product_ids_size();
}
inline void ProductGroupModel::clear_product_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_ids_.Clear();
}
inline ::int64_t ProductGroupModel::product_ids(int index) const {
  // @@protoc_insertion_point(field_get:product.ProductGroupModel.product_ids)
  return _internal_product_ids().Get(index);
}
inline void ProductGroupModel::set_product_ids(int index, ::int64_t value) {
  _internal_mutable_product_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:product.ProductGroupModel.product_ids)
}
inline void ProductGroupModel::add_product_ids(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_product_ids()->Add(value);
  // @@protoc_insertion_point(field_add:product.ProductGroupModel.product_ids)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& ProductGroupModel::product_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.ProductGroupModel.product_ids)
  return _internal_product_ids();
}
inline ::google::protobuf::RepeatedField<::int64_t>* ProductGroupModel::mutable_product_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.ProductGroupModel.product_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_product_ids();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
ProductGroupModel::_internal_product_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_ids_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* ProductGroupModel::_internal_mutable_product_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.product_ids_;
}

// -------------------------------------------------------------------

// Product

// optional int64 id = 1;
inline bool Product::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void Product::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int64_t Product::id() const {
  // @@protoc_insertion_point(field_get:product.Product.id)
  return _internal_id();
}
inline void Product::set_id(::int64_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:product.Product.id)
}
inline ::int64_t Product::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Product::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// optional string name = 2;
inline bool Product::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Product::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Product::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.Product.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Product::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.Product.name)
}
inline std::string* Product::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:product.Product.name)
  return _s;
}
inline const std::string& Product::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Product::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Product::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Product::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.Product.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void Product::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.Product.name)
}

// optional string image_url = 3;
inline bool Product::has_image_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Product::clear_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Product::image_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.Product.image_url)
  return _internal_image_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Product::set_image_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.image_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.Product.image_url)
}
inline std::string* Product::mutable_image_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_image_url();
  // @@protoc_insertion_point(field_mutable:product.Product.image_url)
  return _s;
}
inline const std::string& Product::_internal_image_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.image_url_.Get();
}
inline void Product::_internal_set_image_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.image_url_.Set(value, GetArena());
}
inline std::string* Product::_internal_mutable_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.image_url_.Mutable( GetArena());
}
inline std::string* Product::release_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.Product.image_url)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.image_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.image_url_.Set("", GetArena());
  }
  return released;
}
inline void Product::set_allocated_image_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.image_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.image_url_.IsDefault()) {
    _impl_.image_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.Product.image_url)
}

// optional string description = 4;
inline bool Product::has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Product::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& Product::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.Product.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Product::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.Product.description)
}
inline std::string* Product::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:product.Product.description)
  return _s;
}
inline const std::string& Product::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void Product::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.description_.Set(value, GetArena());
}
inline std::string* Product::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* Product::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.Product.description)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void Product::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.Product.description)
}

// optional string category_name = 5;
inline bool Product::has_category_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Product::clear_category_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& Product::category_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.Product.category_name)
  return _internal_category_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Product::set_category_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.category_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.Product.category_name)
}
inline std::string* Product::mutable_category_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_category_name();
  // @@protoc_insertion_point(field_mutable:product.Product.category_name)
  return _s;
}
inline const std::string& Product::_internal_category_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_name_.Get();
}
inline void Product::_internal_set_category_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.category_name_.Set(value, GetArena());
}
inline std::string* Product::_internal_mutable_category_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.category_name_.Mutable( GetArena());
}
inline std::string* Product::release_category_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.Product.category_name)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.category_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_name_.Set("", GetArena());
  }
  return released;
}
inline void Product::set_allocated_category_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.category_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_name_.IsDefault()) {
    _impl_.category_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.Product.category_name)
}

// optional string category_id = 6;
inline bool Product::has_category_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Product::clear_category_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& Product::category_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.Product.category_id)
  return _internal_category_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Product::set_category_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.category_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.Product.category_id)
}
inline std::string* Product::mutable_category_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_category_id();
  // @@protoc_insertion_point(field_mutable:product.Product.category_id)
  return _s;
}
inline const std::string& Product::_internal_category_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_id_.Get();
}
inline void Product::_internal_set_category_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.category_id_.Set(value, GetArena());
}
inline std::string* Product::_internal_mutable_category_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.category_id_.Mutable( GetArena());
}
inline std::string* Product::release_category_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.Product.category_id)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.category_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_id_.Set("", GetArena());
  }
  return released;
}
inline void Product::set_allocated_category_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.category_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_id_.IsDefault()) {
    _impl_.category_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.Product.category_id)
}

// optional float sale_price = 7;
inline bool Product::has_sale_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void Product::clear_sale_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sale_price_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline float Product::sale_price() const {
  // @@protoc_insertion_point(field_get:product.Product.sale_price)
  return _internal_sale_price();
}
inline void Product::set_sale_price(float value) {
  _internal_set_sale_price(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:product.Product.sale_price)
}
inline float Product::_internal_sale_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sale_price_;
}
inline void Product::_internal_set_sale_price(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sale_price_ = value;
}

// optional float purchase_price = 8;
inline bool Product::has_purchase_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void Product::clear_purchase_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.purchase_price_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline float Product::purchase_price() const {
  // @@protoc_insertion_point(field_get:product.Product.purchase_price)
  return _internal_purchase_price();
}
inline void Product::set_purchase_price(float value) {
  _internal_set_purchase_price(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:product.Product.purchase_price)
}
inline float Product::_internal_purchase_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.purchase_price_;
}
inline void Product::_internal_set_purchase_price(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.purchase_price_ = value;
}

// optional int64 organization_id = 9;
inline bool Product::has_organization_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void Product::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::int64_t Product::organization_id() const {
  // @@protoc_insertion_point(field_get:product.Product.organization_id)
  return _internal_organization_id();
}
inline void Product::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:product.Product.organization_id)
}
inline ::int64_t Product::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void Product::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// optional int64 created_by = 10;
inline bool Product::has_created_by() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void Product::clear_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::int64_t Product::created_by() const {
  // @@protoc_insertion_point(field_get:product.Product.created_by)
  return _internal_created_by();
}
inline void Product::set_created_by(::int64_t value) {
  _internal_set_created_by(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:product.Product.created_by)
}
inline ::int64_t Product::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_;
}
inline void Product::_internal_set_created_by(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = value;
}

// optional bool is_external = 11;
inline bool Product::has_is_external() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void Product::clear_is_external() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_external_ = false;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline bool Product::is_external() const {
  // @@protoc_insertion_point(field_get:product.Product.is_external)
  return _internal_is_external();
}
inline void Product::set_is_external(bool value) {
  _internal_set_is_external(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:product.Product.is_external)
}
inline bool Product::_internal_is_external() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_external_;
}
inline void Product::_internal_set_is_external(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_external_ = value;
}

// optional string design_url = 12;
inline bool Product::has_design_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Product::clear_design_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.design_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& Product::design_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.Product.design_url)
  return _internal_design_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Product::set_design_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.design_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.Product.design_url)
}
inline std::string* Product::mutable_design_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_design_url();
  // @@protoc_insertion_point(field_mutable:product.Product.design_url)
  return _s;
}
inline const std::string& Product::_internal_design_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.design_url_.Get();
}
inline void Product::_internal_set_design_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.design_url_.Set(value, GetArena());
}
inline std::string* Product::_internal_mutable_design_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.design_url_.Mutable( GetArena());
}
inline std::string* Product::release_design_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.Product.design_url)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.design_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.design_url_.Set("", GetArena());
  }
  return released;
}
inline void Product::set_allocated_design_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.design_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.design_url_.IsDefault()) {
    _impl_.design_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.Product.design_url)
}

// optional string sale_status = 13;
inline bool Product::has_sale_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Product::clear_sale_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sale_status_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const std::string& Product::sale_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.Product.sale_status)
  return _internal_sale_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Product::set_sale_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.sale_status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.Product.sale_status)
}
inline std::string* Product::mutable_sale_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sale_status();
  // @@protoc_insertion_point(field_mutable:product.Product.sale_status)
  return _s;
}
inline const std::string& Product::_internal_sale_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sale_status_.Get();
}
inline void Product::_internal_set_sale_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.sale_status_.Set(value, GetArena());
}
inline std::string* Product::_internal_mutable_sale_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.sale_status_.Mutable( GetArena());
}
inline std::string* Product::release_sale_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.Product.sale_status)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  auto* released = _impl_.sale_status_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.sale_status_.Set("", GetArena());
  }
  return released;
}
inline void Product::set_allocated_sale_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.sale_status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sale_status_.IsDefault()) {
    _impl_.sale_status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.Product.sale_status)
}

// optional int64 brand_id = 14;
inline bool Product::has_brand_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void Product::clear_brand_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.brand_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::int64_t Product::brand_id() const {
  // @@protoc_insertion_point(field_get:product.Product.brand_id)
  return _internal_brand_id();
}
inline void Product::set_brand_id(::int64_t value) {
  _internal_set_brand_id(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:product.Product.brand_id)
}
inline ::int64_t Product::_internal_brand_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.brand_id_;
}
inline void Product::_internal_set_brand_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.brand_id_ = value;
}

// optional string brand_name = 15;
inline bool Product::has_brand_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void Product::clear_brand_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.brand_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const std::string& Product::brand_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.Product.brand_name)
  return _internal_brand_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Product::set_brand_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.brand_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.Product.brand_name)
}
inline std::string* Product::mutable_brand_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_brand_name();
  // @@protoc_insertion_point(field_mutable:product.Product.brand_name)
  return _s;
}
inline const std::string& Product::_internal_brand_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.brand_name_.Get();
}
inline void Product::_internal_set_brand_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.brand_name_.Set(value, GetArena());
}
inline std::string* Product::_internal_mutable_brand_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  return _impl_.brand_name_.Mutable( GetArena());
}
inline std::string* Product::release_brand_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.Product.brand_name)
  if ((_impl_._has_bits_[0] & 0x00000080u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000080u;
  auto* released = _impl_.brand_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.brand_name_.Set("", GetArena());
  }
  return released;
}
inline void Product::set_allocated_brand_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  _impl_.brand_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.brand_name_.IsDefault()) {
    _impl_.brand_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.Product.brand_name)
}

// repeated .product.ImageModel images = 16;
inline int Product::_internal_images_size() const {
  return _internal_images().size();
}
inline int Product::images_size() const {
  return _internal_images_size();
}
inline void Product::clear_images() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.images_.Clear();
}
inline ::product::ImageModel* Product::mutable_images(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:product.Product.images)
  return _internal_mutable_images()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::product::ImageModel>* Product::mutable_images()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.Product.images)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_images();
}
inline const ::product::ImageModel& Product::images(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.Product.images)
  return _internal_images().Get(index);
}
inline ::product::ImageModel* Product::add_images() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::product::ImageModel* _add = _internal_mutable_images()->Add();
  // @@protoc_insertion_point(field_add:product.Product.images)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::product::ImageModel>& Product::images() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.Product.images)
  return _internal_images();
}
inline const ::google::protobuf::RepeatedPtrField<::product::ImageModel>&
Product::_internal_images() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.images_;
}
inline ::google::protobuf::RepeatedPtrField<::product::ImageModel>*
Product::_internal_mutable_images() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.images_;
}

// repeated .product.ProductCharacteristics characteristics = 17;
inline int Product::_internal_characteristics_size() const {
  return _internal_characteristics().size();
}
inline int Product::characteristics_size() const {
  return _internal_characteristics_size();
}
inline void Product::clear_characteristics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characteristics_.Clear();
}
inline ::product::ProductCharacteristics* Product::mutable_characteristics(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:product.Product.characteristics)
  return _internal_mutable_characteristics()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::product::ProductCharacteristics>* Product::mutable_characteristics()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.Product.characteristics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_characteristics();
}
inline const ::product::ProductCharacteristics& Product::characteristics(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.Product.characteristics)
  return _internal_characteristics().Get(index);
}
inline ::product::ProductCharacteristics* Product::add_characteristics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::product::ProductCharacteristics* _add = _internal_mutable_characteristics()->Add();
  // @@protoc_insertion_point(field_add:product.Product.characteristics)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::product::ProductCharacteristics>& Product::characteristics() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.Product.characteristics)
  return _internal_characteristics();
}
inline const ::google::protobuf::RepeatedPtrField<::product::ProductCharacteristics>&
Product::_internal_characteristics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characteristics_;
}
inline ::google::protobuf::RepeatedPtrField<::product::ProductCharacteristics>*
Product::_internal_mutable_characteristics() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.characteristics_;
}

// repeated .product.ProductGroup product_groups = 18;
inline int Product::_internal_product_groups_size() const {
  return _internal_product_groups().size();
}
inline int Product::product_groups_size() const {
  return _internal_product_groups_size();
}
inline void Product::clear_product_groups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_groups_.Clear();
}
inline ::product::ProductGroup* Product::mutable_product_groups(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:product.Product.product_groups)
  return _internal_mutable_product_groups()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::product::ProductGroup>* Product::mutable_product_groups()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.Product.product_groups)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_product_groups();
}
inline const ::product::ProductGroup& Product::product_groups(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.Product.product_groups)
  return _internal_product_groups().Get(index);
}
inline ::product::ProductGroup* Product::add_product_groups() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::product::ProductGroup* _add = _internal_mutable_product_groups()->Add();
  // @@protoc_insertion_point(field_add:product.Product.product_groups)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::product::ProductGroup>& Product::product_groups() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.Product.product_groups)
  return _internal_product_groups();
}
inline const ::google::protobuf::RepeatedPtrField<::product::ProductGroup>&
Product::_internal_product_groups() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_groups_;
}
inline ::google::protobuf::RepeatedPtrField<::product::ProductGroup>*
Product::_internal_mutable_product_groups() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.product_groups_;
}

// int64 cart_quantity = 19;
inline void Product::clear_cart_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cart_quantity_ = ::int64_t{0};
}
inline ::int64_t Product::cart_quantity() const {
  // @@protoc_insertion_point(field_get:product.Product.cart_quantity)
  return _internal_cart_quantity();
}
inline void Product::set_cart_quantity(::int64_t value) {
  _internal_set_cart_quantity(value);
  // @@protoc_insertion_point(field_set:product.Product.cart_quantity)
}
inline ::int64_t Product::_internal_cart_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cart_quantity_;
}
inline void Product::_internal_set_cart_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cart_quantity_ = value;
}

// optional uint64 views = 20;
inline bool Product::has_views() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void Product::clear_views() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.views_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::uint64_t Product::views() const {
  // @@protoc_insertion_point(field_get:product.Product.views)
  return _internal_views();
}
inline void Product::set_views(::uint64_t value) {
  _internal_set_views(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:product.Product.views)
}
inline ::uint64_t Product::_internal_views() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.views_;
}
inline void Product::_internal_set_views(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.views_ = value;
}

// -------------------------------------------------------------------

// ProductModel

// optional int64 id = 1;
inline bool ProductModel::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void ProductModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int64_t ProductModel::id() const {
  // @@protoc_insertion_point(field_get:product.ProductModel.id)
  return _internal_id();
}
inline void ProductModel::set_id(::int64_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:product.ProductModel.id)
}
inline ::int64_t ProductModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void ProductModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string name = 2;
inline void ProductModel::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ProductModel::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ProductModel.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProductModel::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ProductModel.name)
}
inline std::string* ProductModel::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:product.ProductModel.name)
  return _s;
}
inline const std::string& ProductModel::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ProductModel::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ProductModel::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ProductModel::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ProductModel.name)
  return _impl_.name_.Release();
}
inline void ProductModel::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ProductModel.name)
}

// string description = 3;
inline void ProductModel::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& ProductModel::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ProductModel.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProductModel::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ProductModel.description)
}
inline std::string* ProductModel::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:product.ProductModel.description)
  return _s;
}
inline const std::string& ProductModel::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void ProductModel::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* ProductModel::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* ProductModel::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ProductModel.description)
  return _impl_.description_.Release();
}
inline void ProductModel::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ProductModel.description)
}

// optional string category_id = 4;
inline bool ProductModel::has_category_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ProductModel::clear_category_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProductModel::category_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ProductModel.category_id)
  return _internal_category_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProductModel::set_category_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.category_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ProductModel.category_id)
}
inline std::string* ProductModel::mutable_category_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_category_id();
  // @@protoc_insertion_point(field_mutable:product.ProductModel.category_id)
  return _s;
}
inline const std::string& ProductModel::_internal_category_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_id_.Get();
}
inline void ProductModel::_internal_set_category_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.category_id_.Set(value, GetArena());
}
inline std::string* ProductModel::_internal_mutable_category_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.category_id_.Mutable( GetArena());
}
inline std::string* ProductModel::release_category_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ProductModel.category_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.category_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_id_.Set("", GetArena());
  }
  return released;
}
inline void ProductModel::set_allocated_category_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.category_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_id_.IsDefault()) {
    _impl_.category_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ProductModel.category_id)
}

// int64 organization_id = 5;
inline void ProductModel::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t ProductModel::organization_id() const {
  // @@protoc_insertion_point(field_get:product.ProductModel.organization_id)
  return _internal_organization_id();
}
inline void ProductModel::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:product.ProductModel.organization_id)
}
inline ::int64_t ProductModel::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void ProductModel::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// optional int64 parent_product_id = 6;
inline bool ProductModel::has_parent_product_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void ProductModel::clear_parent_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_product_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int64_t ProductModel::parent_product_id() const {
  // @@protoc_insertion_point(field_get:product.ProductModel.parent_product_id)
  return _internal_parent_product_id();
}
inline void ProductModel::set_parent_product_id(::int64_t value) {
  _internal_set_parent_product_id(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:product.ProductModel.parent_product_id)
}
inline ::int64_t ProductModel::_internal_parent_product_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parent_product_id_;
}
inline void ProductModel::_internal_set_parent_product_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_product_id_ = value;
}

// optional string design_url = 7;
inline bool ProductModel::has_design_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ProductModel::clear_design_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.design_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ProductModel::design_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ProductModel.design_url)
  return _internal_design_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProductModel::set_design_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.design_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ProductModel.design_url)
}
inline std::string* ProductModel::mutable_design_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_design_url();
  // @@protoc_insertion_point(field_mutable:product.ProductModel.design_url)
  return _s;
}
inline const std::string& ProductModel::_internal_design_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.design_url_.Get();
}
inline void ProductModel::_internal_set_design_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.design_url_.Set(value, GetArena());
}
inline std::string* ProductModel::_internal_mutable_design_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.design_url_.Mutable( GetArena());
}
inline std::string* ProductModel::release_design_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ProductModel.design_url)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.design_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.design_url_.Set("", GetArena());
  }
  return released;
}
inline void ProductModel::set_allocated_design_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.design_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.design_url_.IsDefault()) {
    _impl_.design_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ProductModel.design_url)
}

// int64 created_by = 8;
inline void ProductModel::clear_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = ::int64_t{0};
}
inline ::int64_t ProductModel::created_by() const {
  // @@protoc_insertion_point(field_get:product.ProductModel.created_by)
  return _internal_created_by();
}
inline void ProductModel::set_created_by(::int64_t value) {
  _internal_set_created_by(value);
  // @@protoc_insertion_point(field_set:product.ProductModel.created_by)
}
inline ::int64_t ProductModel::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_;
}
inline void ProductModel::_internal_set_created_by(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = value;
}

// optional bool is_external = 9;
inline bool ProductModel::has_is_external() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void ProductModel::clear_is_external() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_external_ = false;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline bool ProductModel::is_external() const {
  // @@protoc_insertion_point(field_get:product.ProductModel.is_external)
  return _internal_is_external();
}
inline void ProductModel::set_is_external(bool value) {
  _internal_set_is_external(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:product.ProductModel.is_external)
}
inline bool ProductModel::_internal_is_external() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_external_;
}
inline void ProductModel::_internal_set_is_external(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_external_ = value;
}

// float sale_price = 10;
inline void ProductModel::clear_sale_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sale_price_ = 0;
}
inline float ProductModel::sale_price() const {
  // @@protoc_insertion_point(field_get:product.ProductModel.sale_price)
  return _internal_sale_price();
}
inline void ProductModel::set_sale_price(float value) {
  _internal_set_sale_price(value);
  // @@protoc_insertion_point(field_set:product.ProductModel.sale_price)
}
inline float ProductModel::_internal_sale_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sale_price_;
}
inline void ProductModel::_internal_set_sale_price(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sale_price_ = value;
}

// optional float purchase_price = 11;
inline bool ProductModel::has_purchase_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void ProductModel::clear_purchase_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.purchase_price_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline float ProductModel::purchase_price() const {
  // @@protoc_insertion_point(field_get:product.ProductModel.purchase_price)
  return _internal_purchase_price();
}
inline void ProductModel::set_purchase_price(float value) {
  _internal_set_purchase_price(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:product.ProductModel.purchase_price)
}
inline float ProductModel::_internal_purchase_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.purchase_price_;
}
inline void ProductModel::_internal_set_purchase_price(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.purchase_price_ = value;
}

// optional string sale_status = 12;
inline bool ProductModel::has_sale_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void ProductModel::clear_sale_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sale_status_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& ProductModel::sale_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ProductModel.sale_status)
  return _internal_sale_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProductModel::set_sale_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.sale_status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ProductModel.sale_status)
}
inline std::string* ProductModel::mutable_sale_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sale_status();
  // @@protoc_insertion_point(field_mutable:product.ProductModel.sale_status)
  return _s;
}
inline const std::string& ProductModel::_internal_sale_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sale_status_.Get();
}
inline void ProductModel::_internal_set_sale_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.sale_status_.Set(value, GetArena());
}
inline std::string* ProductModel::_internal_mutable_sale_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.sale_status_.Mutable( GetArena());
}
inline std::string* ProductModel::release_sale_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ProductModel.sale_status)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.sale_status_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.sale_status_.Set("", GetArena());
  }
  return released;
}
inline void ProductModel::set_allocated_sale_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.sale_status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sale_status_.IsDefault()) {
    _impl_.sale_status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ProductModel.sale_status)
}

// optional string image_url = 13;
inline bool ProductModel::has_image_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void ProductModel::clear_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& ProductModel::image_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ProductModel.image_url)
  return _internal_image_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProductModel::set_image_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.image_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ProductModel.image_url)
}
inline std::string* ProductModel::mutable_image_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_image_url();
  // @@protoc_insertion_point(field_mutable:product.ProductModel.image_url)
  return _s;
}
inline const std::string& ProductModel::_internal_image_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.image_url_.Get();
}
inline void ProductModel::_internal_set_image_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.image_url_.Set(value, GetArena());
}
inline std::string* ProductModel::_internal_mutable_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.image_url_.Mutable( GetArena());
}
inline std::string* ProductModel::release_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ProductModel.image_url)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.image_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.image_url_.Set("", GetArena());
  }
  return released;
}
inline void ProductModel::set_allocated_image_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.image_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.image_url_.IsDefault()) {
    _impl_.image_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ProductModel.image_url)
}

// optional int64 brand_id = 14;
inline bool ProductModel::has_brand_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void ProductModel::clear_brand_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.brand_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::int64_t ProductModel::brand_id() const {
  // @@protoc_insertion_point(field_get:product.ProductModel.brand_id)
  return _internal_brand_id();
}
inline void ProductModel::set_brand_id(::int64_t value) {
  _internal_set_brand_id(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:product.ProductModel.brand_id)
}
inline ::int64_t ProductModel::_internal_brand_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.brand_id_;
}
inline void ProductModel::_internal_set_brand_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.brand_id_ = value;
}

// optional string created_at = 15;
inline bool ProductModel::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void ProductModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& ProductModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ProductModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProductModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ProductModel.created_at)
}
inline std::string* ProductModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:product.ProductModel.created_at)
  return _s;
}
inline const std::string& ProductModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void ProductModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* ProductModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* ProductModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ProductModel.created_at)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.created_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.created_at_.Set("", GetArena());
  }
  return released;
}
inline void ProductModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ProductModel.created_at)
}

// optional string updated_at = 16;
inline bool ProductModel::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void ProductModel::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& ProductModel::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ProductModel.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProductModel::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ProductModel.updated_at)
}
inline std::string* ProductModel::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:product.ProductModel.updated_at)
  return _s;
}
inline const std::string& ProductModel::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void ProductModel::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* ProductModel::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* ProductModel::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ProductModel.updated_at)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.updated_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  return released;
}
inline void ProductModel::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_at_.IsDefault()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ProductModel.updated_at)
}

// -------------------------------------------------------------------

// ProductCharacteristics

// int64 id = 1;
inline void ProductCharacteristics::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t ProductCharacteristics::id() const {
  // @@protoc_insertion_point(field_get:product.ProductCharacteristics.id)
  return _internal_id();
}
inline void ProductCharacteristics::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:product.ProductCharacteristics.id)
}
inline ::int64_t ProductCharacteristics::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void ProductCharacteristics::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// optional int64 product_id = 2;
inline bool ProductCharacteristics::has_product_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ProductCharacteristics::clear_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t ProductCharacteristics::product_id() const {
  // @@protoc_insertion_point(field_get:product.ProductCharacteristics.product_id)
  return _internal_product_id();
}
inline void ProductCharacteristics::set_product_id(::int64_t value) {
  _internal_set_product_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:product.ProductCharacteristics.product_id)
}
inline ::int64_t ProductCharacteristics::_internal_product_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_id_;
}
inline void ProductCharacteristics::_internal_set_product_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = value;
}

// string group_name = 3;
inline void ProductCharacteristics::clear_group_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_name_.ClearToEmpty();
}
inline const std::string& ProductCharacteristics::group_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ProductCharacteristics.group_name)
  return _internal_group_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProductCharacteristics::set_group_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ProductCharacteristics.group_name)
}
inline std::string* ProductCharacteristics::mutable_group_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_group_name();
  // @@protoc_insertion_point(field_mutable:product.ProductCharacteristics.group_name)
  return _s;
}
inline const std::string& ProductCharacteristics::_internal_group_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_name_.Get();
}
inline void ProductCharacteristics::_internal_set_group_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_name_.Set(value, GetArena());
}
inline std::string* ProductCharacteristics::_internal_mutable_group_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.group_name_.Mutable( GetArena());
}
inline std::string* ProductCharacteristics::release_group_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ProductCharacteristics.group_name)
  return _impl_.group_name_.Release();
}
inline void ProductCharacteristics::set_allocated_group_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.group_name_.IsDefault()) {
    _impl_.group_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ProductCharacteristics.group_name)
}

// string name = 4;
inline void ProductCharacteristics::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ProductCharacteristics::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ProductCharacteristics.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProductCharacteristics::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ProductCharacteristics.name)
}
inline std::string* ProductCharacteristics::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:product.ProductCharacteristics.name)
  return _s;
}
inline const std::string& ProductCharacteristics::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ProductCharacteristics::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ProductCharacteristics::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ProductCharacteristics::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ProductCharacteristics.name)
  return _impl_.name_.Release();
}
inline void ProductCharacteristics::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ProductCharacteristics.name)
}

// repeated string values = 5;
inline int ProductCharacteristics::_internal_values_size() const {
  return _internal_values().size();
}
inline int ProductCharacteristics::values_size() const {
  return _internal_values_size();
}
inline void ProductCharacteristics::clear_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.values_.Clear();
}
inline std::string* ProductCharacteristics::add_values() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_values()->Add();
  // @@protoc_insertion_point(field_add_mutable:product.ProductCharacteristics.values)
  return _s;
}
inline const std::string& ProductCharacteristics::values(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ProductCharacteristics.values)
  return _internal_values().Get(index);
}
inline std::string* ProductCharacteristics::mutable_values(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:product.ProductCharacteristics.values)
  return _internal_mutable_values()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ProductCharacteristics::set_values(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_values()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:product.ProductCharacteristics.values)
}
template <typename Arg_, typename... Args_>
inline void ProductCharacteristics::add_values(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_values(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:product.ProductCharacteristics.values)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ProductCharacteristics::values() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.ProductCharacteristics.values)
  return _internal_values();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ProductCharacteristics::mutable_values() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.ProductCharacteristics.values)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_values();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ProductCharacteristics::_internal_values() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ProductCharacteristics::_internal_mutable_values() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.values_;
}

// -------------------------------------------------------------------

// CategoryModel

// string id = 1;
inline void CategoryModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& CategoryModel::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.CategoryModel.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CategoryModel::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.CategoryModel.id)
}
inline std::string* CategoryModel::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:product.CategoryModel.id)
  return _s;
}
inline const std::string& CategoryModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void CategoryModel::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* CategoryModel::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* CategoryModel::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.CategoryModel.id)
  return _impl_.id_.Release();
}
inline void CategoryModel::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.CategoryModel.id)
}

// string name = 2;
inline void CategoryModel::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& CategoryModel::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.CategoryModel.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CategoryModel::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.CategoryModel.name)
}
inline std::string* CategoryModel::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:product.CategoryModel.name)
  return _s;
}
inline const std::string& CategoryModel::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void CategoryModel::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* CategoryModel::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* CategoryModel::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.CategoryModel.name)
  return _impl_.name_.Release();
}
inline void CategoryModel::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.CategoryModel.name)
}

// string description = 3;
inline void CategoryModel::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& CategoryModel::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.CategoryModel.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CategoryModel::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.CategoryModel.description)
}
inline std::string* CategoryModel::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:product.CategoryModel.description)
  return _s;
}
inline const std::string& CategoryModel::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void CategoryModel::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* CategoryModel::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* CategoryModel::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.CategoryModel.description)
  return _impl_.description_.Release();
}
inline void CategoryModel::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.CategoryModel.description)
}

// string parent_id = 4;
inline void CategoryModel::clear_parent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_id_.ClearToEmpty();
}
inline const std::string& CategoryModel::parent_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.CategoryModel.parent_id)
  return _internal_parent_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CategoryModel::set_parent_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.CategoryModel.parent_id)
}
inline std::string* CategoryModel::mutable_parent_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_parent_id();
  // @@protoc_insertion_point(field_mutable:product.CategoryModel.parent_id)
  return _s;
}
inline const std::string& CategoryModel::_internal_parent_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parent_id_.Get();
}
inline void CategoryModel::_internal_set_parent_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_id_.Set(value, GetArena());
}
inline std::string* CategoryModel::_internal_mutable_parent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.parent_id_.Mutable( GetArena());
}
inline std::string* CategoryModel::release_parent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.CategoryModel.parent_id)
  return _impl_.parent_id_.Release();
}
inline void CategoryModel::set_allocated_parent_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.parent_id_.IsDefault()) {
    _impl_.parent_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.CategoryModel.parent_id)
}

// int64 level = 5;
inline void CategoryModel::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = ::int64_t{0};
}
inline ::int64_t CategoryModel::level() const {
  // @@protoc_insertion_point(field_get:product.CategoryModel.level)
  return _internal_level();
}
inline void CategoryModel::set_level(::int64_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:product.CategoryModel.level)
}
inline ::int64_t CategoryModel::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void CategoryModel::_internal_set_level(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// bool is_parent = 6;
inline void CategoryModel::clear_is_parent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_parent_ = false;
}
inline bool CategoryModel::is_parent() const {
  // @@protoc_insertion_point(field_get:product.CategoryModel.is_parent)
  return _internal_is_parent();
}
inline void CategoryModel::set_is_parent(bool value) {
  _internal_set_is_parent(value);
  // @@protoc_insertion_point(field_set:product.CategoryModel.is_parent)
}
inline bool CategoryModel::_internal_is_parent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_parent_;
}
inline void CategoryModel::_internal_set_is_parent(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_parent_ = value;
}

// string image_url = 7;
inline void CategoryModel::clear_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.ClearToEmpty();
}
inline const std::string& CategoryModel::image_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.CategoryModel.image_url)
  return _internal_image_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CategoryModel::set_image_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.CategoryModel.image_url)
}
inline std::string* CategoryModel::mutable_image_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_image_url();
  // @@protoc_insertion_point(field_mutable:product.CategoryModel.image_url)
  return _s;
}
inline const std::string& CategoryModel::_internal_image_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.image_url_.Get();
}
inline void CategoryModel::_internal_set_image_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.Set(value, GetArena());
}
inline std::string* CategoryModel::_internal_mutable_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.image_url_.Mutable( GetArena());
}
inline std::string* CategoryModel::release_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.CategoryModel.image_url)
  return _impl_.image_url_.Release();
}
inline void CategoryModel::set_allocated_image_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.image_url_.IsDefault()) {
    _impl_.image_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.CategoryModel.image_url)
}

// repeated .product.CharacteristicGroup characteristic_groups = 8;
inline int CategoryModel::_internal_characteristic_groups_size() const {
  return _internal_characteristic_groups().size();
}
inline int CategoryModel::characteristic_groups_size() const {
  return _internal_characteristic_groups_size();
}
inline void CategoryModel::clear_characteristic_groups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characteristic_groups_.Clear();
}
inline ::product::CharacteristicGroup* CategoryModel::mutable_characteristic_groups(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:product.CategoryModel.characteristic_groups)
  return _internal_mutable_characteristic_groups()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::product::CharacteristicGroup>* CategoryModel::mutable_characteristic_groups()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.CategoryModel.characteristic_groups)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_characteristic_groups();
}
inline const ::product::CharacteristicGroup& CategoryModel::characteristic_groups(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.CategoryModel.characteristic_groups)
  return _internal_characteristic_groups().Get(index);
}
inline ::product::CharacteristicGroup* CategoryModel::add_characteristic_groups() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::product::CharacteristicGroup* _add = _internal_mutable_characteristic_groups()->Add();
  // @@protoc_insertion_point(field_add:product.CategoryModel.characteristic_groups)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::product::CharacteristicGroup>& CategoryModel::characteristic_groups() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.CategoryModel.characteristic_groups)
  return _internal_characteristic_groups();
}
inline const ::google::protobuf::RepeatedPtrField<::product::CharacteristicGroup>&
CategoryModel::_internal_characteristic_groups() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characteristic_groups_;
}
inline ::google::protobuf::RepeatedPtrField<::product::CharacteristicGroup>*
CategoryModel::_internal_mutable_characteristic_groups() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.characteristic_groups_;
}

// -------------------------------------------------------------------

// CharacteristicGroup

// int64 id = 1;
inline void CharacteristicGroup::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t CharacteristicGroup::id() const {
  // @@protoc_insertion_point(field_get:product.CharacteristicGroup.id)
  return _internal_id();
}
inline void CharacteristicGroup::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:product.CharacteristicGroup.id)
}
inline ::int64_t CharacteristicGroup::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void CharacteristicGroup::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string group_name = 2;
inline void CharacteristicGroup::clear_group_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_name_.ClearToEmpty();
}
inline const std::string& CharacteristicGroup::group_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.CharacteristicGroup.group_name)
  return _internal_group_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CharacteristicGroup::set_group_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.CharacteristicGroup.group_name)
}
inline std::string* CharacteristicGroup::mutable_group_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_group_name();
  // @@protoc_insertion_point(field_mutable:product.CharacteristicGroup.group_name)
  return _s;
}
inline const std::string& CharacteristicGroup::_internal_group_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_name_.Get();
}
inline void CharacteristicGroup::_internal_set_group_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_name_.Set(value, GetArena());
}
inline std::string* CharacteristicGroup::_internal_mutable_group_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.group_name_.Mutable( GetArena());
}
inline std::string* CharacteristicGroup::release_group_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.CharacteristicGroup.group_name)
  return _impl_.group_name_.Release();
}
inline void CharacteristicGroup::set_allocated_group_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.group_name_.IsDefault()) {
    _impl_.group_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.CharacteristicGroup.group_name)
}

// repeated .product.Characteristic characteristics = 3;
inline int CharacteristicGroup::_internal_characteristics_size() const {
  return _internal_characteristics().size();
}
inline int CharacteristicGroup::characteristics_size() const {
  return _internal_characteristics_size();
}
inline void CharacteristicGroup::clear_characteristics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characteristics_.Clear();
}
inline ::product::Characteristic* CharacteristicGroup::mutable_characteristics(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:product.CharacteristicGroup.characteristics)
  return _internal_mutable_characteristics()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::product::Characteristic>* CharacteristicGroup::mutable_characteristics()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.CharacteristicGroup.characteristics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_characteristics();
}
inline const ::product::Characteristic& CharacteristicGroup::characteristics(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.CharacteristicGroup.characteristics)
  return _internal_characteristics().Get(index);
}
inline ::product::Characteristic* CharacteristicGroup::add_characteristics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::product::Characteristic* _add = _internal_mutable_characteristics()->Add();
  // @@protoc_insertion_point(field_add:product.CharacteristicGroup.characteristics)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::product::Characteristic>& CharacteristicGroup::characteristics() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.CharacteristicGroup.characteristics)
  return _internal_characteristics();
}
inline const ::google::protobuf::RepeatedPtrField<::product::Characteristic>&
CharacteristicGroup::_internal_characteristics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characteristics_;
}
inline ::google::protobuf::RepeatedPtrField<::product::Characteristic>*
CharacteristicGroup::_internal_mutable_characteristics() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.characteristics_;
}

// -------------------------------------------------------------------

// Characteristic

// string name = 1;
inline void Characteristic::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Characteristic::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.Characteristic.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Characteristic::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.Characteristic.name)
}
inline std::string* Characteristic::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:product.Characteristic.name)
  return _s;
}
inline const std::string& Characteristic::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Characteristic::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Characteristic::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Characteristic::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.Characteristic.name)
  return _impl_.name_.Release();
}
inline void Characteristic::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.Characteristic.name)
}

// string type = 2;
inline void Characteristic::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& Characteristic::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.Characteristic.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Characteristic::set_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.Characteristic.type)
}
inline std::string* Characteristic::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:product.Characteristic.type)
  return _s;
}
inline const std::string& Characteristic::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void Characteristic::_internal_set_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(value, GetArena());
}
inline std::string* Characteristic::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* Characteristic::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.Characteristic.type)
  return _impl_.type_.Release();
}
inline void Characteristic::set_allocated_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.Characteristic.type)
}

// repeated string options = 3;
inline int Characteristic::_internal_options_size() const {
  return _internal_options().size();
}
inline int Characteristic::options_size() const {
  return _internal_options_size();
}
inline void Characteristic::clear_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.options_.Clear();
}
inline std::string* Characteristic::add_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_options()->Add();
  // @@protoc_insertion_point(field_add_mutable:product.Characteristic.options)
  return _s;
}
inline const std::string& Characteristic::options(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.Characteristic.options)
  return _internal_options().Get(index);
}
inline std::string* Characteristic::mutable_options(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:product.Characteristic.options)
  return _internal_mutable_options()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Characteristic::set_options(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_options()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:product.Characteristic.options)
}
template <typename Arg_, typename... Args_>
inline void Characteristic::add_options(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_options(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:product.Characteristic.options)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Characteristic::options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.Characteristic.options)
  return _internal_options();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Characteristic::mutable_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.Characteristic.options)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_options();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Characteristic::_internal_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.options_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Characteristic::_internal_mutable_options() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.options_;
}

// bool is_required = 4;
inline void Characteristic::clear_is_required() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_required_ = false;
}
inline bool Characteristic::is_required() const {
  // @@protoc_insertion_point(field_get:product.Characteristic.is_required)
  return _internal_is_required();
}
inline void Characteristic::set_is_required(bool value) {
  _internal_set_is_required(value);
  // @@protoc_insertion_point(field_set:product.Characteristic.is_required)
}
inline bool Characteristic::_internal_is_required() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_required_;
}
inline void Characteristic::_internal_set_is_required(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_required_ = value;
}

// string default_value = 5;
inline void Characteristic::clear_default_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_value_.ClearToEmpty();
}
inline const std::string& Characteristic::default_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.Characteristic.default_value)
  return _internal_default_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Characteristic::set_default_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.Characteristic.default_value)
}
inline std::string* Characteristic::mutable_default_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_default_value();
  // @@protoc_insertion_point(field_mutable:product.Characteristic.default_value)
  return _s;
}
inline const std::string& Characteristic::_internal_default_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_value_.Get();
}
inline void Characteristic::_internal_set_default_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_value_.Set(value, GetArena());
}
inline std::string* Characteristic::_internal_mutable_default_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.default_value_.Mutable( GetArena());
}
inline std::string* Characteristic::release_default_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.Characteristic.default_value)
  return _impl_.default_value_.Release();
}
inline void Characteristic::set_allocated_default_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_value_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.default_value_.IsDefault()) {
    _impl_.default_value_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.Characteristic.default_value)
}

// -------------------------------------------------------------------

// CreateProductRequest

// .product.Product product = 1;
inline bool CreateProductRequest::has_product() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_ != nullptr);
  return value;
}
inline void CreateProductRequest::clear_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ != nullptr) _impl_.product_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::product::Product& CreateProductRequest::_internal_product() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::Product* p = _impl_.product_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::Product&>(::product::_Product_default_instance_);
}
inline const ::product::Product& CreateProductRequest::product() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.CreateProductRequest.product)
  return _internal_product();
}
inline void CreateProductRequest::unsafe_arena_set_allocated_product(::product::Product* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }
  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:product.CreateProductRequest.product)
}
inline ::product::Product* CreateProductRequest::release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* released = _impl_.product_;
  _impl_.product_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::Product* CreateProductRequest::unsafe_arena_release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.CreateProductRequest.product)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* temp = _impl_.product_;
  _impl_.product_ = nullptr;
  return temp;
}
inline ::product::Product* CreateProductRequest::_internal_mutable_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::Product>(GetArena());
    _impl_.product_ = reinterpret_cast<::product::Product*>(p);
  }
  return _impl_.product_;
}
inline ::product::Product* CreateProductRequest::mutable_product() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::product::Product* _msg = _internal_mutable_product();
  // @@protoc_insertion_point(field_mutable:product.CreateProductRequest.product)
  return _msg;
}
inline void CreateProductRequest::set_allocated_product(::product::Product* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.product_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  // @@protoc_insertion_point(field_set_allocated:product.CreateProductRequest.product)
}

// -------------------------------------------------------------------

// CreateProductResponse

// .product.Product product = 1;
inline bool CreateProductResponse::has_product() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_ != nullptr);
  return value;
}
inline void CreateProductResponse::clear_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ != nullptr) _impl_.product_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::product::Product& CreateProductResponse::_internal_product() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::Product* p = _impl_.product_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::Product&>(::product::_Product_default_instance_);
}
inline const ::product::Product& CreateProductResponse::product() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.CreateProductResponse.product)
  return _internal_product();
}
inline void CreateProductResponse::unsafe_arena_set_allocated_product(::product::Product* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }
  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:product.CreateProductResponse.product)
}
inline ::product::Product* CreateProductResponse::release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* released = _impl_.product_;
  _impl_.product_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::Product* CreateProductResponse::unsafe_arena_release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.CreateProductResponse.product)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* temp = _impl_.product_;
  _impl_.product_ = nullptr;
  return temp;
}
inline ::product::Product* CreateProductResponse::_internal_mutable_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::Product>(GetArena());
    _impl_.product_ = reinterpret_cast<::product::Product*>(p);
  }
  return _impl_.product_;
}
inline ::product::Product* CreateProductResponse::mutable_product() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::product::Product* _msg = _internal_mutable_product();
  // @@protoc_insertion_point(field_mutable:product.CreateProductResponse.product)
  return _msg;
}
inline void CreateProductResponse::set_allocated_product(::product::Product* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.product_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  // @@protoc_insertion_point(field_set_allocated:product.CreateProductResponse.product)
}

// -------------------------------------------------------------------

// Values

// repeated string values = 1;
inline int Values::_internal_values_size() const {
  return _internal_values().size();
}
inline int Values::values_size() const {
  return _internal_values_size();
}
inline void Values::clear_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.values_.Clear();
}
inline std::string* Values::add_values() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_values()->Add();
  // @@protoc_insertion_point(field_add_mutable:product.Values.values)
  return _s;
}
inline const std::string& Values::values(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.Values.values)
  return _internal_values().Get(index);
}
inline std::string* Values::mutable_values(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:product.Values.values)
  return _internal_mutable_values()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Values::set_values(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_values()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:product.Values.values)
}
template <typename Arg_, typename... Args_>
inline void Values::add_values(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_values(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:product.Values.values)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Values::values() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.Values.values)
  return _internal_values();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Values::mutable_values() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.Values.values)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_values();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Values::_internal_values() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Values::_internal_mutable_values() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.values_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ListProductsRequest

// int32 page = 1;
inline void ListProductsRequest::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = 0;
}
inline ::int32_t ListProductsRequest::page() const {
  // @@protoc_insertion_point(field_get:product.ListProductsRequest.page)
  return _internal_page();
}
inline void ListProductsRequest::set_page(::int32_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:product.ListProductsRequest.page)
}
inline ::int32_t ListProductsRequest::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void ListProductsRequest::_internal_set_page(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// int32 page_size = 2;
inline void ListProductsRequest::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = 0;
}
inline ::int32_t ListProductsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:product.ListProductsRequest.page_size)
  return _internal_page_size();
}
inline void ListProductsRequest::set_page_size(::int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:product.ListProductsRequest.page_size)
}
inline ::int32_t ListProductsRequest::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void ListProductsRequest::_internal_set_page_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// string search_query = 3;
inline void ListProductsRequest::clear_search_query() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.search_query_.ClearToEmpty();
}
inline const std::string& ListProductsRequest::search_query() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ListProductsRequest.search_query)
  return _internal_search_query();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListProductsRequest::set_search_query(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.search_query_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ListProductsRequest.search_query)
}
inline std::string* ListProductsRequest::mutable_search_query() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_search_query();
  // @@protoc_insertion_point(field_mutable:product.ListProductsRequest.search_query)
  return _s;
}
inline const std::string& ListProductsRequest::_internal_search_query() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.search_query_.Get();
}
inline void ListProductsRequest::_internal_set_search_query(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.search_query_.Set(value, GetArena());
}
inline std::string* ListProductsRequest::_internal_mutable_search_query() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.search_query_.Mutable( GetArena());
}
inline std::string* ListProductsRequest::release_search_query() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ListProductsRequest.search_query)
  return _impl_.search_query_.Release();
}
inline void ListProductsRequest::set_allocated_search_query(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.search_query_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.search_query_.IsDefault()) {
    _impl_.search_query_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ListProductsRequest.search_query)
}

// string category_id = 4;
inline void ListProductsRequest::clear_category_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_id_.ClearToEmpty();
}
inline const std::string& ListProductsRequest::category_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ListProductsRequest.category_id)
  return _internal_category_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListProductsRequest::set_category_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ListProductsRequest.category_id)
}
inline std::string* ListProductsRequest::mutable_category_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_category_id();
  // @@protoc_insertion_point(field_mutable:product.ListProductsRequest.category_id)
  return _s;
}
inline const std::string& ListProductsRequest::_internal_category_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_id_.Get();
}
inline void ListProductsRequest::_internal_set_category_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_id_.Set(value, GetArena());
}
inline std::string* ListProductsRequest::_internal_mutable_category_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.category_id_.Mutable( GetArena());
}
inline std::string* ListProductsRequest::release_category_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ListProductsRequest.category_id)
  return _impl_.category_id_.Release();
}
inline void ListProductsRequest::set_allocated_category_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_id_.IsDefault()) {
    _impl_.category_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ListProductsRequest.category_id)
}

// string sort_by = 5;
inline void ListProductsRequest::clear_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sort_by_.ClearToEmpty();
}
inline const std::string& ListProductsRequest::sort_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ListProductsRequest.sort_by)
  return _internal_sort_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListProductsRequest::set_sort_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sort_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ListProductsRequest.sort_by)
}
inline std::string* ListProductsRequest::mutable_sort_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sort_by();
  // @@protoc_insertion_point(field_mutable:product.ListProductsRequest.sort_by)
  return _s;
}
inline const std::string& ListProductsRequest::_internal_sort_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sort_by_.Get();
}
inline void ListProductsRequest::_internal_set_sort_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sort_by_.Set(value, GetArena());
}
inline std::string* ListProductsRequest::_internal_mutable_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sort_by_.Mutable( GetArena());
}
inline std::string* ListProductsRequest::release_sort_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ListProductsRequest.sort_by)
  return _impl_.sort_by_.Release();
}
inline void ListProductsRequest::set_allocated_sort_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sort_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sort_by_.IsDefault()) {
    _impl_.sort_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ListProductsRequest.sort_by)
}

// bool ascending = 6;
inline void ListProductsRequest::clear_ascending() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ascending_ = false;
}
inline bool ListProductsRequest::ascending() const {
  // @@protoc_insertion_point(field_get:product.ListProductsRequest.ascending)
  return _internal_ascending();
}
inline void ListProductsRequest::set_ascending(bool value) {
  _internal_set_ascending(value);
  // @@protoc_insertion_point(field_set:product.ListProductsRequest.ascending)
}
inline bool ListProductsRequest::_internal_ascending() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ascending_;
}
inline void ListProductsRequest::_internal_set_ascending(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ascending_ = value;
}

// int64 organization_id = 7;
inline void ListProductsRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t ListProductsRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:product.ListProductsRequest.organization_id)
  return _internal_organization_id();
}
inline void ListProductsRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:product.ListProductsRequest.organization_id)
}
inline ::int64_t ListProductsRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void ListProductsRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// int64 brand_id = 8;
inline void ListProductsRequest::clear_brand_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.brand_id_ = ::int64_t{0};
}
inline ::int64_t ListProductsRequest::brand_id() const {
  // @@protoc_insertion_point(field_get:product.ListProductsRequest.brand_id)
  return _internal_brand_id();
}
inline void ListProductsRequest::set_brand_id(::int64_t value) {
  _internal_set_brand_id(value);
  // @@protoc_insertion_point(field_set:product.ListProductsRequest.brand_id)
}
inline ::int64_t ListProductsRequest::_internal_brand_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.brand_id_;
}
inline void ListProductsRequest::_internal_set_brand_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.brand_id_ = value;
}

// float price_from = 9;
inline void ListProductsRequest::clear_price_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_from_ = 0;
}
inline float ListProductsRequest::price_from() const {
  // @@protoc_insertion_point(field_get:product.ListProductsRequest.price_from)
  return _internal_price_from();
}
inline void ListProductsRequest::set_price_from(float value) {
  _internal_set_price_from(value);
  // @@protoc_insertion_point(field_set:product.ListProductsRequest.price_from)
}
inline float ListProductsRequest::_internal_price_from() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_from_;
}
inline void ListProductsRequest::_internal_set_price_from(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_from_ = value;
}

// float price_to = 10;
inline void ListProductsRequest::clear_price_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_to_ = 0;
}
inline float ListProductsRequest::price_to() const {
  // @@protoc_insertion_point(field_get:product.ListProductsRequest.price_to)
  return _internal_price_to();
}
inline void ListProductsRequest::set_price_to(float value) {
  _internal_set_price_to(value);
  // @@protoc_insertion_point(field_set:product.ListProductsRequest.price_to)
}
inline float ListProductsRequest::_internal_price_to() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_to_;
}
inline void ListProductsRequest::_internal_set_price_to(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_to_ = value;
}

// string pdf_url = 11;
inline void ListProductsRequest::clear_pdf_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pdf_url_.ClearToEmpty();
}
inline const std::string& ListProductsRequest::pdf_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ListProductsRequest.pdf_url)
  return _internal_pdf_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListProductsRequest::set_pdf_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pdf_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ListProductsRequest.pdf_url)
}
inline std::string* ListProductsRequest::mutable_pdf_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pdf_url();
  // @@protoc_insertion_point(field_mutable:product.ListProductsRequest.pdf_url)
  return _s;
}
inline const std::string& ListProductsRequest::_internal_pdf_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pdf_url_.Get();
}
inline void ListProductsRequest::_internal_set_pdf_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pdf_url_.Set(value, GetArena());
}
inline std::string* ListProductsRequest::_internal_mutable_pdf_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pdf_url_.Mutable( GetArena());
}
inline std::string* ListProductsRequest::release_pdf_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ListProductsRequest.pdf_url)
  return _impl_.pdf_url_.Release();
}
inline void ListProductsRequest::set_allocated_pdf_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pdf_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pdf_url_.IsDefault()) {
    _impl_.pdf_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ListProductsRequest.pdf_url)
}

// string organization_type = 12;
inline void ListProductsRequest::clear_organization_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_type_.ClearToEmpty();
}
inline const std::string& ListProductsRequest::organization_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ListProductsRequest.organization_type)
  return _internal_organization_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListProductsRequest::set_organization_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ListProductsRequest.organization_type)
}
inline std::string* ListProductsRequest::mutable_organization_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_organization_type();
  // @@protoc_insertion_point(field_mutable:product.ListProductsRequest.organization_type)
  return _s;
}
inline const std::string& ListProductsRequest::_internal_organization_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_type_.Get();
}
inline void ListProductsRequest::_internal_set_organization_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_type_.Set(value, GetArena());
}
inline std::string* ListProductsRequest::_internal_mutable_organization_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.organization_type_.Mutable( GetArena());
}
inline std::string* ListProductsRequest::release_organization_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ListProductsRequest.organization_type)
  return _impl_.organization_type_.Release();
}
inline void ListProductsRequest::set_allocated_organization_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.organization_type_.IsDefault()) {
    _impl_.organization_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ListProductsRequest.organization_type)
}

// map<string, .product.Values> filter = 13;
inline int ListProductsRequest::_internal_filter_size() const {
  return _internal_filter().size();
}
inline int ListProductsRequest::filter_size() const {
  return _internal_filter_size();
}
inline void ListProductsRequest::clear_filter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filter_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::product::Values>& ListProductsRequest::_internal_filter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filter_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::product::Values>& ListProductsRequest::filter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:product.ListProductsRequest.filter)
  return _internal_filter();
}
inline ::google::protobuf::Map<std::string, ::product::Values>* ListProductsRequest::_internal_mutable_filter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.filter_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::product::Values>* ListProductsRequest::mutable_filter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:product.ListProductsRequest.filter)
  return _internal_mutable_filter();
}

// repeated int64 exclude_product_ids = 14;
inline int ListProductsRequest::_internal_exclude_product_ids_size() const {
  return _internal_exclude_product_ids().size();
}
inline int ListProductsRequest::exclude_product_ids_size() const {
  return _internal_exclude_product_ids_size();
}
inline void ListProductsRequest::clear_exclude_product_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exclude_product_ids_.Clear();
}
inline ::int64_t ListProductsRequest::exclude_product_ids(int index) const {
  // @@protoc_insertion_point(field_get:product.ListProductsRequest.exclude_product_ids)
  return _internal_exclude_product_ids().Get(index);
}
inline void ListProductsRequest::set_exclude_product_ids(int index, ::int64_t value) {
  _internal_mutable_exclude_product_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:product.ListProductsRequest.exclude_product_ids)
}
inline void ListProductsRequest::add_exclude_product_ids(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_exclude_product_ids()->Add(value);
  // @@protoc_insertion_point(field_add:product.ListProductsRequest.exclude_product_ids)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& ListProductsRequest::exclude_product_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.ListProductsRequest.exclude_product_ids)
  return _internal_exclude_product_ids();
}
inline ::google::protobuf::RepeatedField<::int64_t>* ListProductsRequest::mutable_exclude_product_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.ListProductsRequest.exclude_product_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_exclude_product_ids();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
ListProductsRequest::_internal_exclude_product_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exclude_product_ids_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* ListProductsRequest::_internal_mutable_exclude_product_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.exclude_product_ids_;
}

// optional bool popular = 15;
inline bool ListProductsRequest::has_popular() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ListProductsRequest::clear_popular() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.popular_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool ListProductsRequest::popular() const {
  // @@protoc_insertion_point(field_get:product.ListProductsRequest.popular)
  return _internal_popular();
}
inline void ListProductsRequest::set_popular(bool value) {
  _internal_set_popular(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:product.ListProductsRequest.popular)
}
inline bool ListProductsRequest::_internal_popular() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.popular_;
}
inline void ListProductsRequest::_internal_set_popular(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.popular_ = value;
}

// -------------------------------------------------------------------

// ListProductsResponse

// repeated .product.Product products = 1;
inline int ListProductsResponse::_internal_products_size() const {
  return _internal_products().size();
}
inline int ListProductsResponse::products_size() const {
  return _internal_products_size();
}
inline void ListProductsResponse::clear_products() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.products_.Clear();
}
inline ::product::Product* ListProductsResponse::mutable_products(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:product.ListProductsResponse.products)
  return _internal_mutable_products()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::product::Product>* ListProductsResponse::mutable_products()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.ListProductsResponse.products)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_products();
}
inline const ::product::Product& ListProductsResponse::products(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ListProductsResponse.products)
  return _internal_products().Get(index);
}
inline ::product::Product* ListProductsResponse::add_products() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::product::Product* _add = _internal_mutable_products()->Add();
  // @@protoc_insertion_point(field_add:product.ListProductsResponse.products)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::product::Product>& ListProductsResponse::products() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.ListProductsResponse.products)
  return _internal_products();
}
inline const ::google::protobuf::RepeatedPtrField<::product::Product>&
ListProductsResponse::_internal_products() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.products_;
}
inline ::google::protobuf::RepeatedPtrField<::product::Product>*
ListProductsResponse::_internal_mutable_products() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.products_;
}

// int32 total_count = 2;
inline void ListProductsResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = 0;
}
inline ::int32_t ListProductsResponse::total_count() const {
  // @@protoc_insertion_point(field_get:product.ListProductsResponse.total_count)
  return _internal_total_count();
}
inline void ListProductsResponse::set_total_count(::int32_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:product.ListProductsResponse.total_count)
}
inline ::int32_t ListProductsResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void ListProductsResponse::_internal_set_total_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// optional string pdf_url = 3;
inline bool ListProductsResponse::has_pdf_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ListProductsResponse::clear_pdf_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pdf_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ListProductsResponse::pdf_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ListProductsResponse.pdf_url)
  return _internal_pdf_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListProductsResponse::set_pdf_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.pdf_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ListProductsResponse.pdf_url)
}
inline std::string* ListProductsResponse::mutable_pdf_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pdf_url();
  // @@protoc_insertion_point(field_mutable:product.ListProductsResponse.pdf_url)
  return _s;
}
inline const std::string& ListProductsResponse::_internal_pdf_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pdf_url_.Get();
}
inline void ListProductsResponse::_internal_set_pdf_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.pdf_url_.Set(value, GetArena());
}
inline std::string* ListProductsResponse::_internal_mutable_pdf_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.pdf_url_.Mutable( GetArena());
}
inline std::string* ListProductsResponse::release_pdf_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ListProductsResponse.pdf_url)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.pdf_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.pdf_url_.Set("", GetArena());
  }
  return released;
}
inline void ListProductsResponse::set_allocated_pdf_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.pdf_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pdf_url_.IsDefault()) {
    _impl_.pdf_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ListProductsResponse.pdf_url)
}

// bool is_sale_settings_completed = 4;
inline void ListProductsResponse::clear_is_sale_settings_completed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_sale_settings_completed_ = false;
}
inline bool ListProductsResponse::is_sale_settings_completed() const {
  // @@protoc_insertion_point(field_get:product.ListProductsResponse.is_sale_settings_completed)
  return _internal_is_sale_settings_completed();
}
inline void ListProductsResponse::set_is_sale_settings_completed(bool value) {
  _internal_set_is_sale_settings_completed(value);
  // @@protoc_insertion_point(field_set:product.ListProductsResponse.is_sale_settings_completed)
}
inline bool ListProductsResponse::_internal_is_sale_settings_completed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_sale_settings_completed_;
}
inline void ListProductsResponse::_internal_set_is_sale_settings_completed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_sale_settings_completed_ = value;
}

// -------------------------------------------------------------------

// DuplicateProductRequest

// int64 id = 1;
inline void DuplicateProductRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t DuplicateProductRequest::id() const {
  // @@protoc_insertion_point(field_get:product.DuplicateProductRequest.id)
  return _internal_id();
}
inline void DuplicateProductRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:product.DuplicateProductRequest.id)
}
inline ::int64_t DuplicateProductRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void DuplicateProductRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 created_by = 2;
inline void DuplicateProductRequest::clear_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = ::int64_t{0};
}
inline ::int64_t DuplicateProductRequest::created_by() const {
  // @@protoc_insertion_point(field_get:product.DuplicateProductRequest.created_by)
  return _internal_created_by();
}
inline void DuplicateProductRequest::set_created_by(::int64_t value) {
  _internal_set_created_by(value);
  // @@protoc_insertion_point(field_set:product.DuplicateProductRequest.created_by)
}
inline ::int64_t DuplicateProductRequest::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_;
}
inline void DuplicateProductRequest::_internal_set_created_by(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = value;
}

// -------------------------------------------------------------------

// DuplicateProductResponse

// .product.Product product = 1;
inline bool DuplicateProductResponse::has_product() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_ != nullptr);
  return value;
}
inline void DuplicateProductResponse::clear_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ != nullptr) _impl_.product_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::product::Product& DuplicateProductResponse::_internal_product() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::Product* p = _impl_.product_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::Product&>(::product::_Product_default_instance_);
}
inline const ::product::Product& DuplicateProductResponse::product() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.DuplicateProductResponse.product)
  return _internal_product();
}
inline void DuplicateProductResponse::unsafe_arena_set_allocated_product(::product::Product* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }
  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:product.DuplicateProductResponse.product)
}
inline ::product::Product* DuplicateProductResponse::release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* released = _impl_.product_;
  _impl_.product_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::Product* DuplicateProductResponse::unsafe_arena_release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.DuplicateProductResponse.product)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* temp = _impl_.product_;
  _impl_.product_ = nullptr;
  return temp;
}
inline ::product::Product* DuplicateProductResponse::_internal_mutable_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::Product>(GetArena());
    _impl_.product_ = reinterpret_cast<::product::Product*>(p);
  }
  return _impl_.product_;
}
inline ::product::Product* DuplicateProductResponse::mutable_product() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::product::Product* _msg = _internal_mutable_product();
  // @@protoc_insertion_point(field_mutable:product.DuplicateProductResponse.product)
  return _msg;
}
inline void DuplicateProductResponse::set_allocated_product(::product::Product* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.product_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  // @@protoc_insertion_point(field_set_allocated:product.DuplicateProductResponse.product)
}

// -------------------------------------------------------------------

// UploadProductsRequest

// bytes excel_file = 1;
inline void UploadProductsRequest::clear_excel_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.excel_file_.ClearToEmpty();
}
inline const std::string& UploadProductsRequest::excel_file() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.UploadProductsRequest.excel_file)
  return _internal_excel_file();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UploadProductsRequest::set_excel_file(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.excel_file_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.UploadProductsRequest.excel_file)
}
inline std::string* UploadProductsRequest::mutable_excel_file() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_excel_file();
  // @@protoc_insertion_point(field_mutable:product.UploadProductsRequest.excel_file)
  return _s;
}
inline const std::string& UploadProductsRequest::_internal_excel_file() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.excel_file_.Get();
}
inline void UploadProductsRequest::_internal_set_excel_file(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.excel_file_.Set(value, GetArena());
}
inline std::string* UploadProductsRequest::_internal_mutable_excel_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.excel_file_.Mutable( GetArena());
}
inline std::string* UploadProductsRequest::release_excel_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.UploadProductsRequest.excel_file)
  return _impl_.excel_file_.Release();
}
inline void UploadProductsRequest::set_allocated_excel_file(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.excel_file_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.excel_file_.IsDefault()) {
    _impl_.excel_file_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.UploadProductsRequest.excel_file)
}

// -------------------------------------------------------------------

// UploadProductsResponse

// repeated .product.Product products = 1;
inline int UploadProductsResponse::_internal_products_size() const {
  return _internal_products().size();
}
inline int UploadProductsResponse::products_size() const {
  return _internal_products_size();
}
inline void UploadProductsResponse::clear_products() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.products_.Clear();
}
inline ::product::Product* UploadProductsResponse::mutable_products(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:product.UploadProductsResponse.products)
  return _internal_mutable_products()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::product::Product>* UploadProductsResponse::mutable_products()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.UploadProductsResponse.products)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_products();
}
inline const ::product::Product& UploadProductsResponse::products(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.UploadProductsResponse.products)
  return _internal_products().Get(index);
}
inline ::product::Product* UploadProductsResponse::add_products() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::product::Product* _add = _internal_mutable_products()->Add();
  // @@protoc_insertion_point(field_add:product.UploadProductsResponse.products)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::product::Product>& UploadProductsResponse::products() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.UploadProductsResponse.products)
  return _internal_products();
}
inline const ::google::protobuf::RepeatedPtrField<::product::Product>&
UploadProductsResponse::_internal_products() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.products_;
}
inline ::google::protobuf::RepeatedPtrField<::product::Product>*
UploadProductsResponse::_internal_mutable_products() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.products_;
}

// -------------------------------------------------------------------

// PatchProductRequest

// .product.Product product = 1;
inline bool PatchProductRequest::has_product() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_ != nullptr);
  return value;
}
inline void PatchProductRequest::clear_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ != nullptr) _impl_.product_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::product::Product& PatchProductRequest::_internal_product() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::Product* p = _impl_.product_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::Product&>(::product::_Product_default_instance_);
}
inline const ::product::Product& PatchProductRequest::product() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.PatchProductRequest.product)
  return _internal_product();
}
inline void PatchProductRequest::unsafe_arena_set_allocated_product(::product::Product* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }
  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:product.PatchProductRequest.product)
}
inline ::product::Product* PatchProductRequest::release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* released = _impl_.product_;
  _impl_.product_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::Product* PatchProductRequest::unsafe_arena_release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.PatchProductRequest.product)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* temp = _impl_.product_;
  _impl_.product_ = nullptr;
  return temp;
}
inline ::product::Product* PatchProductRequest::_internal_mutable_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::Product>(GetArena());
    _impl_.product_ = reinterpret_cast<::product::Product*>(p);
  }
  return _impl_.product_;
}
inline ::product::Product* PatchProductRequest::mutable_product() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::product::Product* _msg = _internal_mutable_product();
  // @@protoc_insertion_point(field_mutable:product.PatchProductRequest.product)
  return _msg;
}
inline void PatchProductRequest::set_allocated_product(::product::Product* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.product_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  // @@protoc_insertion_point(field_set_allocated:product.PatchProductRequest.product)
}

// -------------------------------------------------------------------

// PatchProductResponse

// .product.Product product = 1;
inline bool PatchProductResponse::has_product() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_ != nullptr);
  return value;
}
inline void PatchProductResponse::clear_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ != nullptr) _impl_.product_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::product::Product& PatchProductResponse::_internal_product() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::Product* p = _impl_.product_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::Product&>(::product::_Product_default_instance_);
}
inline const ::product::Product& PatchProductResponse::product() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.PatchProductResponse.product)
  return _internal_product();
}
inline void PatchProductResponse::unsafe_arena_set_allocated_product(::product::Product* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }
  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:product.PatchProductResponse.product)
}
inline ::product::Product* PatchProductResponse::release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* released = _impl_.product_;
  _impl_.product_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::Product* PatchProductResponse::unsafe_arena_release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.PatchProductResponse.product)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* temp = _impl_.product_;
  _impl_.product_ = nullptr;
  return temp;
}
inline ::product::Product* PatchProductResponse::_internal_mutable_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::Product>(GetArena());
    _impl_.product_ = reinterpret_cast<::product::Product*>(p);
  }
  return _impl_.product_;
}
inline ::product::Product* PatchProductResponse::mutable_product() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::product::Product* _msg = _internal_mutable_product();
  // @@protoc_insertion_point(field_mutable:product.PatchProductResponse.product)
  return _msg;
}
inline void PatchProductResponse::set_allocated_product(::product::Product* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.product_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  // @@protoc_insertion_point(field_set_allocated:product.PatchProductResponse.product)
}

// -------------------------------------------------------------------

// GetProductRequest

// int64 id = 1;
inline void GetProductRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t GetProductRequest::id() const {
  // @@protoc_insertion_point(field_get:product.GetProductRequest.id)
  return _internal_id();
}
inline void GetProductRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:product.GetProductRequest.id)
}
inline ::int64_t GetProductRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void GetProductRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// bool include_characteristics = 2;
inline void GetProductRequest::clear_include_characteristics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_characteristics_ = false;
}
inline bool GetProductRequest::include_characteristics() const {
  // @@protoc_insertion_point(field_get:product.GetProductRequest.include_characteristics)
  return _internal_include_characteristics();
}
inline void GetProductRequest::set_include_characteristics(bool value) {
  _internal_set_include_characteristics(value);
  // @@protoc_insertion_point(field_set:product.GetProductRequest.include_characteristics)
}
inline bool GetProductRequest::_internal_include_characteristics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_characteristics_;
}
inline void GetProductRequest::_internal_set_include_characteristics(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_characteristics_ = value;
}

// bool include_images = 3;
inline void GetProductRequest::clear_include_images() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_images_ = false;
}
inline bool GetProductRequest::include_images() const {
  // @@protoc_insertion_point(field_get:product.GetProductRequest.include_images)
  return _internal_include_images();
}
inline void GetProductRequest::set_include_images(bool value) {
  _internal_set_include_images(value);
  // @@protoc_insertion_point(field_set:product.GetProductRequest.include_images)
}
inline bool GetProductRequest::_internal_include_images() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_images_;
}
inline void GetProductRequest::_internal_set_include_images(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_images_ = value;
}

// bool include_product_groups = 4;
inline void GetProductRequest::clear_include_product_groups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_product_groups_ = false;
}
inline bool GetProductRequest::include_product_groups() const {
  // @@protoc_insertion_point(field_get:product.GetProductRequest.include_product_groups)
  return _internal_include_product_groups();
}
inline void GetProductRequest::set_include_product_groups(bool value) {
  _internal_set_include_product_groups(value);
  // @@protoc_insertion_point(field_set:product.GetProductRequest.include_product_groups)
}
inline bool GetProductRequest::_internal_include_product_groups() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_product_groups_;
}
inline void GetProductRequest::_internal_set_include_product_groups(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_product_groups_ = value;
}

// int64 user_id = 5;
inline void GetProductRequest::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = ::int64_t{0};
}
inline ::int64_t GetProductRequest::user_id() const {
  // @@protoc_insertion_point(field_get:product.GetProductRequest.user_id)
  return _internal_user_id();
}
inline void GetProductRequest::set_user_id(::int64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:product.GetProductRequest.user_id)
}
inline ::int64_t GetProductRequest::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_;
}
inline void GetProductRequest::_internal_set_user_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = value;
}

// string organization_type = 6;
inline void GetProductRequest::clear_organization_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_type_.ClearToEmpty();
}
inline const std::string& GetProductRequest::organization_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.GetProductRequest.organization_type)
  return _internal_organization_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetProductRequest::set_organization_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.GetProductRequest.organization_type)
}
inline std::string* GetProductRequest::mutable_organization_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_organization_type();
  // @@protoc_insertion_point(field_mutable:product.GetProductRequest.organization_type)
  return _s;
}
inline const std::string& GetProductRequest::_internal_organization_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_type_.Get();
}
inline void GetProductRequest::_internal_set_organization_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_type_.Set(value, GetArena());
}
inline std::string* GetProductRequest::_internal_mutable_organization_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.organization_type_.Mutable( GetArena());
}
inline std::string* GetProductRequest::release_organization_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.GetProductRequest.organization_type)
  return _impl_.organization_type_.Release();
}
inline void GetProductRequest::set_allocated_organization_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.organization_type_.IsDefault()) {
    _impl_.organization_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.GetProductRequest.organization_type)
}

// -------------------------------------------------------------------

// GetProductResponse

// .product.Product product = 1;
inline bool GetProductResponse::has_product() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_ != nullptr);
  return value;
}
inline void GetProductResponse::clear_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ != nullptr) _impl_.product_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::product::Product& GetProductResponse::_internal_product() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::Product* p = _impl_.product_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::Product&>(::product::_Product_default_instance_);
}
inline const ::product::Product& GetProductResponse::product() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.GetProductResponse.product)
  return _internal_product();
}
inline void GetProductResponse::unsafe_arena_set_allocated_product(::product::Product* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }
  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:product.GetProductResponse.product)
}
inline ::product::Product* GetProductResponse::release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* released = _impl_.product_;
  _impl_.product_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::Product* GetProductResponse::unsafe_arena_release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.GetProductResponse.product)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* temp = _impl_.product_;
  _impl_.product_ = nullptr;
  return temp;
}
inline ::product::Product* GetProductResponse::_internal_mutable_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::Product>(GetArena());
    _impl_.product_ = reinterpret_cast<::product::Product*>(p);
  }
  return _impl_.product_;
}
inline ::product::Product* GetProductResponse::mutable_product() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::product::Product* _msg = _internal_mutable_product();
  // @@protoc_insertion_point(field_mutable:product.GetProductResponse.product)
  return _msg;
}
inline void GetProductResponse::set_allocated_product(::product::Product* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.product_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  // @@protoc_insertion_point(field_set_allocated:product.GetProductResponse.product)
}

// -------------------------------------------------------------------

// DeleteProductRequest

// int64 id = 1;
inline void DeleteProductRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t DeleteProductRequest::id() const {
  // @@protoc_insertion_point(field_get:product.DeleteProductRequest.id)
  return _internal_id();
}
inline void DeleteProductRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:product.DeleteProductRequest.id)
}
inline ::int64_t DeleteProductRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void DeleteProductRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// DeleteProductResponse

// bool success = 1;
inline void DeleteProductResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool DeleteProductResponse::success() const {
  // @@protoc_insertion_point(field_get:product.DeleteProductResponse.success)
  return _internal_success();
}
inline void DeleteProductResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:product.DeleteProductResponse.success)
}
inline bool DeleteProductResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void DeleteProductResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// CreateProductCategoryRequest

// string name = 1;
inline void CreateProductCategoryRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& CreateProductCategoryRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.CreateProductCategoryRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateProductCategoryRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.CreateProductCategoryRequest.name)
}
inline std::string* CreateProductCategoryRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:product.CreateProductCategoryRequest.name)
  return _s;
}
inline const std::string& CreateProductCategoryRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void CreateProductCategoryRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* CreateProductCategoryRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* CreateProductCategoryRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.CreateProductCategoryRequest.name)
  return _impl_.name_.Release();
}
inline void CreateProductCategoryRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.CreateProductCategoryRequest.name)
}

// string description = 2;
inline void CreateProductCategoryRequest::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& CreateProductCategoryRequest::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.CreateProductCategoryRequest.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateProductCategoryRequest::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.CreateProductCategoryRequest.description)
}
inline std::string* CreateProductCategoryRequest::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:product.CreateProductCategoryRequest.description)
  return _s;
}
inline const std::string& CreateProductCategoryRequest::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void CreateProductCategoryRequest::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* CreateProductCategoryRequest::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* CreateProductCategoryRequest::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.CreateProductCategoryRequest.description)
  return _impl_.description_.Release();
}
inline void CreateProductCategoryRequest::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.CreateProductCategoryRequest.description)
}

// string parent_id = 3;
inline void CreateProductCategoryRequest::clear_parent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_id_.ClearToEmpty();
}
inline const std::string& CreateProductCategoryRequest::parent_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.CreateProductCategoryRequest.parent_id)
  return _internal_parent_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateProductCategoryRequest::set_parent_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.CreateProductCategoryRequest.parent_id)
}
inline std::string* CreateProductCategoryRequest::mutable_parent_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_parent_id();
  // @@protoc_insertion_point(field_mutable:product.CreateProductCategoryRequest.parent_id)
  return _s;
}
inline const std::string& CreateProductCategoryRequest::_internal_parent_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parent_id_.Get();
}
inline void CreateProductCategoryRequest::_internal_set_parent_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_id_.Set(value, GetArena());
}
inline std::string* CreateProductCategoryRequest::_internal_mutable_parent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.parent_id_.Mutable( GetArena());
}
inline std::string* CreateProductCategoryRequest::release_parent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.CreateProductCategoryRequest.parent_id)
  return _impl_.parent_id_.Release();
}
inline void CreateProductCategoryRequest::set_allocated_parent_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.parent_id_.IsDefault()) {
    _impl_.parent_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.CreateProductCategoryRequest.parent_id)
}

// int64 level = 4;
inline void CreateProductCategoryRequest::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = ::int64_t{0};
}
inline ::int64_t CreateProductCategoryRequest::level() const {
  // @@protoc_insertion_point(field_get:product.CreateProductCategoryRequest.level)
  return _internal_level();
}
inline void CreateProductCategoryRequest::set_level(::int64_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:product.CreateProductCategoryRequest.level)
}
inline ::int64_t CreateProductCategoryRequest::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void CreateProductCategoryRequest::_internal_set_level(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// repeated .product.CharacteristicGroup characteristic_groups = 5;
inline int CreateProductCategoryRequest::_internal_characteristic_groups_size() const {
  return _internal_characteristic_groups().size();
}
inline int CreateProductCategoryRequest::characteristic_groups_size() const {
  return _internal_characteristic_groups_size();
}
inline void CreateProductCategoryRequest::clear_characteristic_groups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.characteristic_groups_.Clear();
}
inline ::product::CharacteristicGroup* CreateProductCategoryRequest::mutable_characteristic_groups(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:product.CreateProductCategoryRequest.characteristic_groups)
  return _internal_mutable_characteristic_groups()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::product::CharacteristicGroup>* CreateProductCategoryRequest::mutable_characteristic_groups()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.CreateProductCategoryRequest.characteristic_groups)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_characteristic_groups();
}
inline const ::product::CharacteristicGroup& CreateProductCategoryRequest::characteristic_groups(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.CreateProductCategoryRequest.characteristic_groups)
  return _internal_characteristic_groups().Get(index);
}
inline ::product::CharacteristicGroup* CreateProductCategoryRequest::add_characteristic_groups() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::product::CharacteristicGroup* _add = _internal_mutable_characteristic_groups()->Add();
  // @@protoc_insertion_point(field_add:product.CreateProductCategoryRequest.characteristic_groups)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::product::CharacteristicGroup>& CreateProductCategoryRequest::characteristic_groups() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.CreateProductCategoryRequest.characteristic_groups)
  return _internal_characteristic_groups();
}
inline const ::google::protobuf::RepeatedPtrField<::product::CharacteristicGroup>&
CreateProductCategoryRequest::_internal_characteristic_groups() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characteristic_groups_;
}
inline ::google::protobuf::RepeatedPtrField<::product::CharacteristicGroup>*
CreateProductCategoryRequest::_internal_mutable_characteristic_groups() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.characteristic_groups_;
}

// -------------------------------------------------------------------

// CreateProductCategoryResponse

// .product.CategoryModel category = 1;
inline bool CreateProductCategoryResponse::has_category() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.category_ != nullptr);
  return value;
}
inline void CreateProductCategoryResponse::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.category_ != nullptr) _impl_.category_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::product::CategoryModel& CreateProductCategoryResponse::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::CategoryModel* p = _impl_.category_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::CategoryModel&>(::product::_CategoryModel_default_instance_);
}
inline const ::product::CategoryModel& CreateProductCategoryResponse::category() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.CreateProductCategoryResponse.category)
  return _internal_category();
}
inline void CreateProductCategoryResponse::unsafe_arena_set_allocated_category(::product::CategoryModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.category_);
  }
  _impl_.category_ = reinterpret_cast<::product::CategoryModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:product.CreateProductCategoryResponse.category)
}
inline ::product::CategoryModel* CreateProductCategoryResponse::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::CategoryModel* released = _impl_.category_;
  _impl_.category_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::CategoryModel* CreateProductCategoryResponse::unsafe_arena_release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.CreateProductCategoryResponse.category)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::CategoryModel* temp = _impl_.category_;
  _impl_.category_ = nullptr;
  return temp;
}
inline ::product::CategoryModel* CreateProductCategoryResponse::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.category_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::CategoryModel>(GetArena());
    _impl_.category_ = reinterpret_cast<::product::CategoryModel*>(p);
  }
  return _impl_.category_;
}
inline ::product::CategoryModel* CreateProductCategoryResponse::mutable_category() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::product::CategoryModel* _msg = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:product.CreateProductCategoryResponse.category)
  return _msg;
}
inline void CreateProductCategoryResponse::set_allocated_category(::product::CategoryModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.category_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.category_ = reinterpret_cast<::product::CategoryModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:product.CreateProductCategoryResponse.category)
}

// -------------------------------------------------------------------

// ListCategoriesRequest

// optional int32 level = 1;
inline bool ListCategoriesRequest::has_level() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ListCategoriesRequest::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t ListCategoriesRequest::level() const {
  // @@protoc_insertion_point(field_get:product.ListCategoriesRequest.level)
  return _internal_level();
}
inline void ListCategoriesRequest::set_level(::int32_t value) {
  _internal_set_level(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:product.ListCategoriesRequest.level)
}
inline ::int32_t ListCategoriesRequest::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void ListCategoriesRequest::_internal_set_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// -------------------------------------------------------------------

// ListCategoriesResponse

// repeated .product.CategoryModel categories = 1;
inline int ListCategoriesResponse::_internal_categories_size() const {
  return _internal_categories().size();
}
inline int ListCategoriesResponse::categories_size() const {
  return _internal_categories_size();
}
inline void ListCategoriesResponse::clear_categories() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.categories_.Clear();
}
inline ::product::CategoryModel* ListCategoriesResponse::mutable_categories(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:product.ListCategoriesResponse.categories)
  return _internal_mutable_categories()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::product::CategoryModel>* ListCategoriesResponse::mutable_categories()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.ListCategoriesResponse.categories)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_categories();
}
inline const ::product::CategoryModel& ListCategoriesResponse::categories(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ListCategoriesResponse.categories)
  return _internal_categories().Get(index);
}
inline ::product::CategoryModel* ListCategoriesResponse::add_categories() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::product::CategoryModel* _add = _internal_mutable_categories()->Add();
  // @@protoc_insertion_point(field_add:product.ListCategoriesResponse.categories)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::product::CategoryModel>& ListCategoriesResponse::categories() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.ListCategoriesResponse.categories)
  return _internal_categories();
}
inline const ::google::protobuf::RepeatedPtrField<::product::CategoryModel>&
ListCategoriesResponse::_internal_categories() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.categories_;
}
inline ::google::protobuf::RepeatedPtrField<::product::CategoryModel>*
ListCategoriesResponse::_internal_mutable_categories() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.categories_;
}

// -------------------------------------------------------------------

// GetProductCategoryWithChildrenRequest

// string id = 1;
inline void GetProductCategoryWithChildrenRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetProductCategoryWithChildrenRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.GetProductCategoryWithChildrenRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetProductCategoryWithChildrenRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.GetProductCategoryWithChildrenRequest.id)
}
inline std::string* GetProductCategoryWithChildrenRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:product.GetProductCategoryWithChildrenRequest.id)
  return _s;
}
inline const std::string& GetProductCategoryWithChildrenRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void GetProductCategoryWithChildrenRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* GetProductCategoryWithChildrenRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* GetProductCategoryWithChildrenRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.GetProductCategoryWithChildrenRequest.id)
  return _impl_.id_.Release();
}
inline void GetProductCategoryWithChildrenRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.GetProductCategoryWithChildrenRequest.id)
}

// -------------------------------------------------------------------

// GetProductCategoryWithChildrenResponse

// .product.CategoryModel category = 1;
inline bool GetProductCategoryWithChildrenResponse::has_category() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.category_ != nullptr);
  return value;
}
inline void GetProductCategoryWithChildrenResponse::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.category_ != nullptr) _impl_.category_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::product::CategoryModel& GetProductCategoryWithChildrenResponse::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::CategoryModel* p = _impl_.category_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::CategoryModel&>(::product::_CategoryModel_default_instance_);
}
inline const ::product::CategoryModel& GetProductCategoryWithChildrenResponse::category() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.GetProductCategoryWithChildrenResponse.category)
  return _internal_category();
}
inline void GetProductCategoryWithChildrenResponse::unsafe_arena_set_allocated_category(::product::CategoryModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.category_);
  }
  _impl_.category_ = reinterpret_cast<::product::CategoryModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:product.GetProductCategoryWithChildrenResponse.category)
}
inline ::product::CategoryModel* GetProductCategoryWithChildrenResponse::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::CategoryModel* released = _impl_.category_;
  _impl_.category_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::CategoryModel* GetProductCategoryWithChildrenResponse::unsafe_arena_release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.GetProductCategoryWithChildrenResponse.category)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::CategoryModel* temp = _impl_.category_;
  _impl_.category_ = nullptr;
  return temp;
}
inline ::product::CategoryModel* GetProductCategoryWithChildrenResponse::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.category_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::CategoryModel>(GetArena());
    _impl_.category_ = reinterpret_cast<::product::CategoryModel*>(p);
  }
  return _impl_.category_;
}
inline ::product::CategoryModel* GetProductCategoryWithChildrenResponse::mutable_category() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::product::CategoryModel* _msg = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:product.GetProductCategoryWithChildrenResponse.category)
  return _msg;
}
inline void GetProductCategoryWithChildrenResponse::set_allocated_category(::product::CategoryModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.category_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.category_ = reinterpret_cast<::product::CategoryModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:product.GetProductCategoryWithChildrenResponse.category)
}

// repeated .product.CategoryModel children = 2;
inline int GetProductCategoryWithChildrenResponse::_internal_children_size() const {
  return _internal_children().size();
}
inline int GetProductCategoryWithChildrenResponse::children_size() const {
  return _internal_children_size();
}
inline void GetProductCategoryWithChildrenResponse::clear_children() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.children_.Clear();
}
inline ::product::CategoryModel* GetProductCategoryWithChildrenResponse::mutable_children(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:product.GetProductCategoryWithChildrenResponse.children)
  return _internal_mutable_children()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::product::CategoryModel>* GetProductCategoryWithChildrenResponse::mutable_children()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.GetProductCategoryWithChildrenResponse.children)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_children();
}
inline const ::product::CategoryModel& GetProductCategoryWithChildrenResponse::children(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.GetProductCategoryWithChildrenResponse.children)
  return _internal_children().Get(index);
}
inline ::product::CategoryModel* GetProductCategoryWithChildrenResponse::add_children() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::product::CategoryModel* _add = _internal_mutable_children()->Add();
  // @@protoc_insertion_point(field_add:product.GetProductCategoryWithChildrenResponse.children)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::product::CategoryModel>& GetProductCategoryWithChildrenResponse::children() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.GetProductCategoryWithChildrenResponse.children)
  return _internal_children();
}
inline const ::google::protobuf::RepeatedPtrField<::product::CategoryModel>&
GetProductCategoryWithChildrenResponse::_internal_children() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.children_;
}
inline ::google::protobuf::RepeatedPtrField<::product::CategoryModel>*
GetProductCategoryWithChildrenResponse::_internal_mutable_children() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.children_;
}

// -------------------------------------------------------------------

// ListProductGroupsRequest

// int64 page = 1;
inline void ListProductGroupsRequest::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = ::int64_t{0};
}
inline ::int64_t ListProductGroupsRequest::page() const {
  // @@protoc_insertion_point(field_get:product.ListProductGroupsRequest.page)
  return _internal_page();
}
inline void ListProductGroupsRequest::set_page(::int64_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:product.ListProductGroupsRequest.page)
}
inline ::int64_t ListProductGroupsRequest::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void ListProductGroupsRequest::_internal_set_page(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// int64 page_size = 2;
inline void ListProductGroupsRequest::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = ::int64_t{0};
}
inline ::int64_t ListProductGroupsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:product.ListProductGroupsRequest.page_size)
  return _internal_page_size();
}
inline void ListProductGroupsRequest::set_page_size(::int64_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:product.ListProductGroupsRequest.page_size)
}
inline ::int64_t ListProductGroupsRequest::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void ListProductGroupsRequest::_internal_set_page_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// string name = 3;
inline void ListProductGroupsRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ListProductGroupsRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ListProductGroupsRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListProductGroupsRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ListProductGroupsRequest.name)
}
inline std::string* ListProductGroupsRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:product.ListProductGroupsRequest.name)
  return _s;
}
inline const std::string& ListProductGroupsRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ListProductGroupsRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ListProductGroupsRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ListProductGroupsRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ListProductGroupsRequest.name)
  return _impl_.name_.Release();
}
inline void ListProductGroupsRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ListProductGroupsRequest.name)
}

// int64 product_id = 4;
inline void ListProductGroupsRequest::clear_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = ::int64_t{0};
}
inline ::int64_t ListProductGroupsRequest::product_id() const {
  // @@protoc_insertion_point(field_get:product.ListProductGroupsRequest.product_id)
  return _internal_product_id();
}
inline void ListProductGroupsRequest::set_product_id(::int64_t value) {
  _internal_set_product_id(value);
  // @@protoc_insertion_point(field_set:product.ListProductGroupsRequest.product_id)
}
inline ::int64_t ListProductGroupsRequest::_internal_product_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_id_;
}
inline void ListProductGroupsRequest::_internal_set_product_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = value;
}

// int64 organization_id = 5;
inline void ListProductGroupsRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t ListProductGroupsRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:product.ListProductGroupsRequest.organization_id)
  return _internal_organization_id();
}
inline void ListProductGroupsRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:product.ListProductGroupsRequest.organization_id)
}
inline ::int64_t ListProductGroupsRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void ListProductGroupsRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// -------------------------------------------------------------------

// ListProductGroupsResponse

// repeated .product.ProductGroup product_groups = 1;
inline int ListProductGroupsResponse::_internal_product_groups_size() const {
  return _internal_product_groups().size();
}
inline int ListProductGroupsResponse::product_groups_size() const {
  return _internal_product_groups_size();
}
inline void ListProductGroupsResponse::clear_product_groups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_groups_.Clear();
}
inline ::product::ProductGroup* ListProductGroupsResponse::mutable_product_groups(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:product.ListProductGroupsResponse.product_groups)
  return _internal_mutable_product_groups()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::product::ProductGroup>* ListProductGroupsResponse::mutable_product_groups()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.ListProductGroupsResponse.product_groups)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_product_groups();
}
inline const ::product::ProductGroup& ListProductGroupsResponse::product_groups(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ListProductGroupsResponse.product_groups)
  return _internal_product_groups().Get(index);
}
inline ::product::ProductGroup* ListProductGroupsResponse::add_product_groups() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::product::ProductGroup* _add = _internal_mutable_product_groups()->Add();
  // @@protoc_insertion_point(field_add:product.ListProductGroupsResponse.product_groups)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::product::ProductGroup>& ListProductGroupsResponse::product_groups() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.ListProductGroupsResponse.product_groups)
  return _internal_product_groups();
}
inline const ::google::protobuf::RepeatedPtrField<::product::ProductGroup>&
ListProductGroupsResponse::_internal_product_groups() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_groups_;
}
inline ::google::protobuf::RepeatedPtrField<::product::ProductGroup>*
ListProductGroupsResponse::_internal_mutable_product_groups() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.product_groups_;
}

// int64 total = 2;
inline void ListProductGroupsResponse::clear_total() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_ = ::int64_t{0};
}
inline ::int64_t ListProductGroupsResponse::total() const {
  // @@protoc_insertion_point(field_get:product.ListProductGroupsResponse.total)
  return _internal_total();
}
inline void ListProductGroupsResponse::set_total(::int64_t value) {
  _internal_set_total(value);
  // @@protoc_insertion_point(field_set:product.ListProductGroupsResponse.total)
}
inline ::int64_t ListProductGroupsResponse::_internal_total() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_;
}
inline void ListProductGroupsResponse::_internal_set_total(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_ = value;
}

// -------------------------------------------------------------------

// CreateProductGroupRequest

// .product.ProductGroupModel product_group = 1;
inline bool CreateProductGroupRequest::has_product_group() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_group_ != nullptr);
  return value;
}
inline void CreateProductGroupRequest::clear_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_group_ != nullptr) _impl_.product_group_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::product::ProductGroupModel& CreateProductGroupRequest::_internal_product_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::ProductGroupModel* p = _impl_.product_group_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::ProductGroupModel&>(::product::_ProductGroupModel_default_instance_);
}
inline const ::product::ProductGroupModel& CreateProductGroupRequest::product_group() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.CreateProductGroupRequest.product_group)
  return _internal_product_group();
}
inline void CreateProductGroupRequest::unsafe_arena_set_allocated_product_group(::product::ProductGroupModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_group_);
  }
  _impl_.product_group_ = reinterpret_cast<::product::ProductGroupModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:product.CreateProductGroupRequest.product_group)
}
inline ::product::ProductGroupModel* CreateProductGroupRequest::release_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::ProductGroupModel* released = _impl_.product_group_;
  _impl_.product_group_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::ProductGroupModel* CreateProductGroupRequest::unsafe_arena_release_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.CreateProductGroupRequest.product_group)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::ProductGroupModel* temp = _impl_.product_group_;
  _impl_.product_group_ = nullptr;
  return temp;
}
inline ::product::ProductGroupModel* CreateProductGroupRequest::_internal_mutable_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_group_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::ProductGroupModel>(GetArena());
    _impl_.product_group_ = reinterpret_cast<::product::ProductGroupModel*>(p);
  }
  return _impl_.product_group_;
}
inline ::product::ProductGroupModel* CreateProductGroupRequest::mutable_product_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::product::ProductGroupModel* _msg = _internal_mutable_product_group();
  // @@protoc_insertion_point(field_mutable:product.CreateProductGroupRequest.product_group)
  return _msg;
}
inline void CreateProductGroupRequest::set_allocated_product_group(::product::ProductGroupModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.product_group_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.product_group_ = reinterpret_cast<::product::ProductGroupModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:product.CreateProductGroupRequest.product_group)
}

// -------------------------------------------------------------------

// CreateProductGroupResponse

// .product.ProductGroup product_group = 1;
inline bool CreateProductGroupResponse::has_product_group() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_group_ != nullptr);
  return value;
}
inline void CreateProductGroupResponse::clear_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_group_ != nullptr) _impl_.product_group_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::product::ProductGroup& CreateProductGroupResponse::_internal_product_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::ProductGroup* p = _impl_.product_group_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::ProductGroup&>(::product::_ProductGroup_default_instance_);
}
inline const ::product::ProductGroup& CreateProductGroupResponse::product_group() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.CreateProductGroupResponse.product_group)
  return _internal_product_group();
}
inline void CreateProductGroupResponse::unsafe_arena_set_allocated_product_group(::product::ProductGroup* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_group_);
  }
  _impl_.product_group_ = reinterpret_cast<::product::ProductGroup*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:product.CreateProductGroupResponse.product_group)
}
inline ::product::ProductGroup* CreateProductGroupResponse::release_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::ProductGroup* released = _impl_.product_group_;
  _impl_.product_group_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::ProductGroup* CreateProductGroupResponse::unsafe_arena_release_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.CreateProductGroupResponse.product_group)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::ProductGroup* temp = _impl_.product_group_;
  _impl_.product_group_ = nullptr;
  return temp;
}
inline ::product::ProductGroup* CreateProductGroupResponse::_internal_mutable_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_group_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::ProductGroup>(GetArena());
    _impl_.product_group_ = reinterpret_cast<::product::ProductGroup*>(p);
  }
  return _impl_.product_group_;
}
inline ::product::ProductGroup* CreateProductGroupResponse::mutable_product_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::product::ProductGroup* _msg = _internal_mutable_product_group();
  // @@protoc_insertion_point(field_mutable:product.CreateProductGroupResponse.product_group)
  return _msg;
}
inline void CreateProductGroupResponse::set_allocated_product_group(::product::ProductGroup* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.product_group_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.product_group_ = reinterpret_cast<::product::ProductGroup*>(value);
  // @@protoc_insertion_point(field_set_allocated:product.CreateProductGroupResponse.product_group)
}

// -------------------------------------------------------------------

// GetProductGroupRequest

// int64 id = 1;
inline void GetProductGroupRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t GetProductGroupRequest::id() const {
  // @@protoc_insertion_point(field_get:product.GetProductGroupRequest.id)
  return _internal_id();
}
inline void GetProductGroupRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:product.GetProductGroupRequest.id)
}
inline ::int64_t GetProductGroupRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void GetProductGroupRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// GetProductGroupResponse

// .product.ProductGroup product_group = 1;
inline bool GetProductGroupResponse::has_product_group() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_group_ != nullptr);
  return value;
}
inline void GetProductGroupResponse::clear_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_group_ != nullptr) _impl_.product_group_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::product::ProductGroup& GetProductGroupResponse::_internal_product_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::ProductGroup* p = _impl_.product_group_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::ProductGroup&>(::product::_ProductGroup_default_instance_);
}
inline const ::product::ProductGroup& GetProductGroupResponse::product_group() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.GetProductGroupResponse.product_group)
  return _internal_product_group();
}
inline void GetProductGroupResponse::unsafe_arena_set_allocated_product_group(::product::ProductGroup* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_group_);
  }
  _impl_.product_group_ = reinterpret_cast<::product::ProductGroup*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:product.GetProductGroupResponse.product_group)
}
inline ::product::ProductGroup* GetProductGroupResponse::release_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::ProductGroup* released = _impl_.product_group_;
  _impl_.product_group_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::ProductGroup* GetProductGroupResponse::unsafe_arena_release_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.GetProductGroupResponse.product_group)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::ProductGroup* temp = _impl_.product_group_;
  _impl_.product_group_ = nullptr;
  return temp;
}
inline ::product::ProductGroup* GetProductGroupResponse::_internal_mutable_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_group_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::ProductGroup>(GetArena());
    _impl_.product_group_ = reinterpret_cast<::product::ProductGroup*>(p);
  }
  return _impl_.product_group_;
}
inline ::product::ProductGroup* GetProductGroupResponse::mutable_product_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::product::ProductGroup* _msg = _internal_mutable_product_group();
  // @@protoc_insertion_point(field_mutable:product.GetProductGroupResponse.product_group)
  return _msg;
}
inline void GetProductGroupResponse::set_allocated_product_group(::product::ProductGroup* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.product_group_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.product_group_ = reinterpret_cast<::product::ProductGroup*>(value);
  // @@protoc_insertion_point(field_set_allocated:product.GetProductGroupResponse.product_group)
}

// -------------------------------------------------------------------

// UpdateProductGroupRequest

// .product.ProductGroupModel product_group = 1;
inline bool UpdateProductGroupRequest::has_product_group() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_group_ != nullptr);
  return value;
}
inline void UpdateProductGroupRequest::clear_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_group_ != nullptr) _impl_.product_group_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::product::ProductGroupModel& UpdateProductGroupRequest::_internal_product_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::ProductGroupModel* p = _impl_.product_group_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::ProductGroupModel&>(::product::_ProductGroupModel_default_instance_);
}
inline const ::product::ProductGroupModel& UpdateProductGroupRequest::product_group() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.UpdateProductGroupRequest.product_group)
  return _internal_product_group();
}
inline void UpdateProductGroupRequest::unsafe_arena_set_allocated_product_group(::product::ProductGroupModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_group_);
  }
  _impl_.product_group_ = reinterpret_cast<::product::ProductGroupModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:product.UpdateProductGroupRequest.product_group)
}
inline ::product::ProductGroupModel* UpdateProductGroupRequest::release_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::ProductGroupModel* released = _impl_.product_group_;
  _impl_.product_group_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::ProductGroupModel* UpdateProductGroupRequest::unsafe_arena_release_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.UpdateProductGroupRequest.product_group)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::ProductGroupModel* temp = _impl_.product_group_;
  _impl_.product_group_ = nullptr;
  return temp;
}
inline ::product::ProductGroupModel* UpdateProductGroupRequest::_internal_mutable_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_group_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::ProductGroupModel>(GetArena());
    _impl_.product_group_ = reinterpret_cast<::product::ProductGroupModel*>(p);
  }
  return _impl_.product_group_;
}
inline ::product::ProductGroupModel* UpdateProductGroupRequest::mutable_product_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::product::ProductGroupModel* _msg = _internal_mutable_product_group();
  // @@protoc_insertion_point(field_mutable:product.UpdateProductGroupRequest.product_group)
  return _msg;
}
inline void UpdateProductGroupRequest::set_allocated_product_group(::product::ProductGroupModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.product_group_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.product_group_ = reinterpret_cast<::product::ProductGroupModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:product.UpdateProductGroupRequest.product_group)
}

// -------------------------------------------------------------------

// UpdateProductGroupResponse

// .product.ProductGroup product_group = 1;
inline bool UpdateProductGroupResponse::has_product_group() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_group_ != nullptr);
  return value;
}
inline void UpdateProductGroupResponse::clear_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_group_ != nullptr) _impl_.product_group_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::product::ProductGroup& UpdateProductGroupResponse::_internal_product_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::ProductGroup* p = _impl_.product_group_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::ProductGroup&>(::product::_ProductGroup_default_instance_);
}
inline const ::product::ProductGroup& UpdateProductGroupResponse::product_group() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.UpdateProductGroupResponse.product_group)
  return _internal_product_group();
}
inline void UpdateProductGroupResponse::unsafe_arena_set_allocated_product_group(::product::ProductGroup* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_group_);
  }
  _impl_.product_group_ = reinterpret_cast<::product::ProductGroup*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:product.UpdateProductGroupResponse.product_group)
}
inline ::product::ProductGroup* UpdateProductGroupResponse::release_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::ProductGroup* released = _impl_.product_group_;
  _impl_.product_group_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::ProductGroup* UpdateProductGroupResponse::unsafe_arena_release_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.UpdateProductGroupResponse.product_group)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::ProductGroup* temp = _impl_.product_group_;
  _impl_.product_group_ = nullptr;
  return temp;
}
inline ::product::ProductGroup* UpdateProductGroupResponse::_internal_mutable_product_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_group_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::ProductGroup>(GetArena());
    _impl_.product_group_ = reinterpret_cast<::product::ProductGroup*>(p);
  }
  return _impl_.product_group_;
}
inline ::product::ProductGroup* UpdateProductGroupResponse::mutable_product_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::product::ProductGroup* _msg = _internal_mutable_product_group();
  // @@protoc_insertion_point(field_mutable:product.UpdateProductGroupResponse.product_group)
  return _msg;
}
inline void UpdateProductGroupResponse::set_allocated_product_group(::product::ProductGroup* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.product_group_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.product_group_ = reinterpret_cast<::product::ProductGroup*>(value);
  // @@protoc_insertion_point(field_set_allocated:product.UpdateProductGroupResponse.product_group)
}

// -------------------------------------------------------------------

// DeleteProductGroupRequest

// int64 id = 1;
inline void DeleteProductGroupRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t DeleteProductGroupRequest::id() const {
  // @@protoc_insertion_point(field_get:product.DeleteProductGroupRequest.id)
  return _internal_id();
}
inline void DeleteProductGroupRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:product.DeleteProductGroupRequest.id)
}
inline ::int64_t DeleteProductGroupRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void DeleteProductGroupRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// DeleteProductGroupResponse

// bool success = 1;
inline void DeleteProductGroupResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool DeleteProductGroupResponse::success() const {
  // @@protoc_insertion_point(field_get:product.DeleteProductGroupResponse.success)
  return _internal_success();
}
inline void DeleteProductGroupResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:product.DeleteProductGroupResponse.success)
}
inline bool DeleteProductGroupResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void DeleteProductGroupResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// GeneratePresignedURLsRequest

// int64 organization_id = 1;
inline void GeneratePresignedURLsRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t GeneratePresignedURLsRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:product.GeneratePresignedURLsRequest.organization_id)
  return _internal_organization_id();
}
inline void GeneratePresignedURLsRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:product.GeneratePresignedURLsRequest.organization_id)
}
inline ::int64_t GeneratePresignedURLsRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void GeneratePresignedURLsRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// repeated string file_names = 2;
inline int GeneratePresignedURLsRequest::_internal_file_names_size() const {
  return _internal_file_names().size();
}
inline int GeneratePresignedURLsRequest::file_names_size() const {
  return _internal_file_names_size();
}
inline void GeneratePresignedURLsRequest::clear_file_names() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_names_.Clear();
}
inline std::string* GeneratePresignedURLsRequest::add_file_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_file_names()->Add();
  // @@protoc_insertion_point(field_add_mutable:product.GeneratePresignedURLsRequest.file_names)
  return _s;
}
inline const std::string& GeneratePresignedURLsRequest::file_names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.GeneratePresignedURLsRequest.file_names)
  return _internal_file_names().Get(index);
}
inline std::string* GeneratePresignedURLsRequest::mutable_file_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:product.GeneratePresignedURLsRequest.file_names)
  return _internal_mutable_file_names()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GeneratePresignedURLsRequest::set_file_names(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_file_names()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:product.GeneratePresignedURLsRequest.file_names)
}
template <typename Arg_, typename... Args_>
inline void GeneratePresignedURLsRequest::add_file_names(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_file_names(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:product.GeneratePresignedURLsRequest.file_names)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GeneratePresignedURLsRequest::file_names() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.GeneratePresignedURLsRequest.file_names)
  return _internal_file_names();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GeneratePresignedURLsRequest::mutable_file_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.GeneratePresignedURLsRequest.file_names)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_file_names();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GeneratePresignedURLsRequest::_internal_file_names() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_names_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GeneratePresignedURLsRequest::_internal_mutable_file_names() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.file_names_;
}

// -------------------------------------------------------------------

// PresignedURLInfo

// string file_name = 1;
inline void PresignedURLInfo::clear_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_name_.ClearToEmpty();
}
inline const std::string& PresignedURLInfo::file_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.PresignedURLInfo.file_name)
  return _internal_file_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PresignedURLInfo::set_file_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.PresignedURLInfo.file_name)
}
inline std::string* PresignedURLInfo::mutable_file_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_file_name();
  // @@protoc_insertion_point(field_mutable:product.PresignedURLInfo.file_name)
  return _s;
}
inline const std::string& PresignedURLInfo::_internal_file_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_name_.Get();
}
inline void PresignedURLInfo::_internal_set_file_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_name_.Set(value, GetArena());
}
inline std::string* PresignedURLInfo::_internal_mutable_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.file_name_.Mutable( GetArena());
}
inline std::string* PresignedURLInfo::release_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.PresignedURLInfo.file_name)
  return _impl_.file_name_.Release();
}
inline void PresignedURLInfo::set_allocated_file_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.file_name_.IsDefault()) {
    _impl_.file_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.PresignedURLInfo.file_name)
}

// string presigned_url = 2;
inline void PresignedURLInfo::clear_presigned_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.presigned_url_.ClearToEmpty();
}
inline const std::string& PresignedURLInfo::presigned_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.PresignedURLInfo.presigned_url)
  return _internal_presigned_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PresignedURLInfo::set_presigned_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.presigned_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.PresignedURLInfo.presigned_url)
}
inline std::string* PresignedURLInfo::mutable_presigned_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_presigned_url();
  // @@protoc_insertion_point(field_mutable:product.PresignedURLInfo.presigned_url)
  return _s;
}
inline const std::string& PresignedURLInfo::_internal_presigned_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.presigned_url_.Get();
}
inline void PresignedURLInfo::_internal_set_presigned_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.presigned_url_.Set(value, GetArena());
}
inline std::string* PresignedURLInfo::_internal_mutable_presigned_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.presigned_url_.Mutable( GetArena());
}
inline std::string* PresignedURLInfo::release_presigned_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.PresignedURLInfo.presigned_url)
  return _impl_.presigned_url_.Release();
}
inline void PresignedURLInfo::set_allocated_presigned_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.presigned_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.presigned_url_.IsDefault()) {
    _impl_.presigned_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.PresignedURLInfo.presigned_url)
}

// string object_key = 3;
inline void PresignedURLInfo::clear_object_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_key_.ClearToEmpty();
}
inline const std::string& PresignedURLInfo::object_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.PresignedURLInfo.object_key)
  return _internal_object_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PresignedURLInfo::set_object_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.PresignedURLInfo.object_key)
}
inline std::string* PresignedURLInfo::mutable_object_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_object_key();
  // @@protoc_insertion_point(field_mutable:product.PresignedURLInfo.object_key)
  return _s;
}
inline const std::string& PresignedURLInfo::_internal_object_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.object_key_.Get();
}
inline void PresignedURLInfo::_internal_set_object_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_key_.Set(value, GetArena());
}
inline std::string* PresignedURLInfo::_internal_mutable_object_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.object_key_.Mutable( GetArena());
}
inline std::string* PresignedURLInfo::release_object_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.PresignedURLInfo.object_key)
  return _impl_.object_key_.Release();
}
inline void PresignedURLInfo::set_allocated_object_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.object_key_.IsDefault()) {
    _impl_.object_key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.PresignedURLInfo.object_key)
}

// -------------------------------------------------------------------

// GeneratePresignedURLsResponse

// repeated .product.PresignedURLInfo presigned_urls = 1;
inline int GeneratePresignedURLsResponse::_internal_presigned_urls_size() const {
  return _internal_presigned_urls().size();
}
inline int GeneratePresignedURLsResponse::presigned_urls_size() const {
  return _internal_presigned_urls_size();
}
inline void GeneratePresignedURLsResponse::clear_presigned_urls() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.presigned_urls_.Clear();
}
inline ::product::PresignedURLInfo* GeneratePresignedURLsResponse::mutable_presigned_urls(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:product.GeneratePresignedURLsResponse.presigned_urls)
  return _internal_mutable_presigned_urls()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::product::PresignedURLInfo>* GeneratePresignedURLsResponse::mutable_presigned_urls()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.GeneratePresignedURLsResponse.presigned_urls)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_presigned_urls();
}
inline const ::product::PresignedURLInfo& GeneratePresignedURLsResponse::presigned_urls(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.GeneratePresignedURLsResponse.presigned_urls)
  return _internal_presigned_urls().Get(index);
}
inline ::product::PresignedURLInfo* GeneratePresignedURLsResponse::add_presigned_urls() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::product::PresignedURLInfo* _add = _internal_mutable_presigned_urls()->Add();
  // @@protoc_insertion_point(field_add:product.GeneratePresignedURLsResponse.presigned_urls)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::product::PresignedURLInfo>& GeneratePresignedURLsResponse::presigned_urls() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.GeneratePresignedURLsResponse.presigned_urls)
  return _internal_presigned_urls();
}
inline const ::google::protobuf::RepeatedPtrField<::product::PresignedURLInfo>&
GeneratePresignedURLsResponse::_internal_presigned_urls() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.presigned_urls_;
}
inline ::google::protobuf::RepeatedPtrField<::product::PresignedURLInfo>*
GeneratePresignedURLsResponse::_internal_mutable_presigned_urls() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.presigned_urls_;
}

// -------------------------------------------------------------------

// ProductViewAgg

// int64 product_id = 1;
inline void ProductViewAgg::clear_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = ::int64_t{0};
}
inline ::int64_t ProductViewAgg::product_id() const {
  // @@protoc_insertion_point(field_get:product.ProductViewAgg.product_id)
  return _internal_product_id();
}
inline void ProductViewAgg::set_product_id(::int64_t value) {
  _internal_set_product_id(value);
  // @@protoc_insertion_point(field_set:product.ProductViewAgg.product_id)
}
inline ::int64_t ProductViewAgg::_internal_product_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_id_;
}
inline void ProductViewAgg::_internal_set_product_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = value;
}

// uint64 total_views = 2;
inline void ProductViewAgg::clear_total_views() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_views_ = ::uint64_t{0u};
}
inline ::uint64_t ProductViewAgg::total_views() const {
  // @@protoc_insertion_point(field_get:product.ProductViewAgg.total_views)
  return _internal_total_views();
}
inline void ProductViewAgg::set_total_views(::uint64_t value) {
  _internal_set_total_views(value);
  // @@protoc_insertion_point(field_set:product.ProductViewAgg.total_views)
}
inline ::uint64_t ProductViewAgg::_internal_total_views() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_views_;
}
inline void ProductViewAgg::_internal_set_total_views(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_views_ = value;
}

// string last_seen = 3;
inline void ProductViewAgg::clear_last_seen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_seen_.ClearToEmpty();
}
inline const std::string& ProductViewAgg::last_seen() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.ProductViewAgg.last_seen)
  return _internal_last_seen();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProductViewAgg::set_last_seen(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_seen_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.ProductViewAgg.last_seen)
}
inline std::string* ProductViewAgg::mutable_last_seen() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_seen();
  // @@protoc_insertion_point(field_mutable:product.ProductViewAgg.last_seen)
  return _s;
}
inline const std::string& ProductViewAgg::_internal_last_seen() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_seen_.Get();
}
inline void ProductViewAgg::_internal_set_last_seen(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_seen_.Set(value, GetArena());
}
inline std::string* ProductViewAgg::_internal_mutable_last_seen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_seen_.Mutable( GetArena());
}
inline std::string* ProductViewAgg::release_last_seen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.ProductViewAgg.last_seen)
  return _impl_.last_seen_.Release();
}
inline void ProductViewAgg::set_allocated_last_seen(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_seen_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_seen_.IsDefault()) {
    _impl_.last_seen_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.ProductViewAgg.last_seen)
}

// -------------------------------------------------------------------

// GetChildrenCategoriesRequest

// string category_id = 1;
inline void GetChildrenCategoriesRequest::clear_category_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_id_.ClearToEmpty();
}
inline const std::string& GetChildrenCategoriesRequest::category_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.GetChildrenCategoriesRequest.category_id)
  return _internal_category_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetChildrenCategoriesRequest::set_category_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:product.GetChildrenCategoriesRequest.category_id)
}
inline std::string* GetChildrenCategoriesRequest::mutable_category_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_category_id();
  // @@protoc_insertion_point(field_mutable:product.GetChildrenCategoriesRequest.category_id)
  return _s;
}
inline const std::string& GetChildrenCategoriesRequest::_internal_category_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_id_.Get();
}
inline void GetChildrenCategoriesRequest::_internal_set_category_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_id_.Set(value, GetArena());
}
inline std::string* GetChildrenCategoriesRequest::_internal_mutable_category_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.category_id_.Mutable( GetArena());
}
inline std::string* GetChildrenCategoriesRequest::release_category_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:product.GetChildrenCategoriesRequest.category_id)
  return _impl_.category_id_.Release();
}
inline void GetChildrenCategoriesRequest::set_allocated_category_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_id_.IsDefault()) {
    _impl_.category_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:product.GetChildrenCategoriesRequest.category_id)
}

// -------------------------------------------------------------------

// GetChildrenCategoriesResponse

// repeated .product.CategoryModel categories = 1;
inline int GetChildrenCategoriesResponse::_internal_categories_size() const {
  return _internal_categories().size();
}
inline int GetChildrenCategoriesResponse::categories_size() const {
  return _internal_categories_size();
}
inline void GetChildrenCategoriesResponse::clear_categories() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.categories_.Clear();
}
inline ::product::CategoryModel* GetChildrenCategoriesResponse::mutable_categories(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:product.GetChildrenCategoriesResponse.categories)
  return _internal_mutable_categories()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::product::CategoryModel>* GetChildrenCategoriesResponse::mutable_categories()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:product.GetChildrenCategoriesResponse.categories)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_categories();
}
inline const ::product::CategoryModel& GetChildrenCategoriesResponse::categories(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:product.GetChildrenCategoriesResponse.categories)
  return _internal_categories().Get(index);
}
inline ::product::CategoryModel* GetChildrenCategoriesResponse::add_categories() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::product::CategoryModel* _add = _internal_mutable_categories()->Add();
  // @@protoc_insertion_point(field_add:product.GetChildrenCategoriesResponse.categories)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::product::CategoryModel>& GetChildrenCategoriesResponse::categories() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:product.GetChildrenCategoriesResponse.categories)
  return _internal_categories();
}
inline const ::google::protobuf::RepeatedPtrField<::product::CategoryModel>&
GetChildrenCategoriesResponse::_internal_categories() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.categories_;
}
inline ::google::protobuf::RepeatedPtrField<::product::CategoryModel>*
GetChildrenCategoriesResponse::_internal_mutable_categories() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.categories_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace product


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // product_2fproduct_2eproto_2epb_2eh

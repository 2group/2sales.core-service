// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: product/product.proto
#ifndef GRPC_product_2fproduct_2eproto__INCLUDED
#define GRPC_product_2fproduct_2eproto__INCLUDED

#include "product/product.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace product {

class ProductService final {
 public:
  static constexpr char const* service_full_name() {
    return "product.ProductService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status CreateProduct(::grpc::ClientContext* context, const ::product::CreateProductRequest& request, ::product::CreateProductResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::CreateProductResponse>> AsyncCreateProduct(::grpc::ClientContext* context, const ::product::CreateProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::CreateProductResponse>>(AsyncCreateProductRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::CreateProductResponse>> PrepareAsyncCreateProduct(::grpc::ClientContext* context, const ::product::CreateProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::CreateProductResponse>>(PrepareAsyncCreateProductRaw(context, request, cq));
    }
    virtual ::grpc::Status ListProducts(::grpc::ClientContext* context, const ::product::ListProductsRequest& request, ::product::ListProductsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::ListProductsResponse>> AsyncListProducts(::grpc::ClientContext* context, const ::product::ListProductsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::ListProductsResponse>>(AsyncListProductsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::ListProductsResponse>> PrepareAsyncListProducts(::grpc::ClientContext* context, const ::product::ListProductsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::ListProductsResponse>>(PrepareAsyncListProductsRaw(context, request, cq));
    }
    virtual ::grpc::Status DuplicateProduct(::grpc::ClientContext* context, const ::product::DuplicateProductRequest& request, ::product::DuplicateProductResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::DuplicateProductResponse>> AsyncDuplicateProduct(::grpc::ClientContext* context, const ::product::DuplicateProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::DuplicateProductResponse>>(AsyncDuplicateProductRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::DuplicateProductResponse>> PrepareAsyncDuplicateProduct(::grpc::ClientContext* context, const ::product::DuplicateProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::DuplicateProductResponse>>(PrepareAsyncDuplicateProductRaw(context, request, cq));
    }
    virtual ::grpc::Status UploadProducts(::grpc::ClientContext* context, const ::product::UploadProductsRequest& request, ::product::UploadProductsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::UploadProductsResponse>> AsyncUploadProducts(::grpc::ClientContext* context, const ::product::UploadProductsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::UploadProductsResponse>>(AsyncUploadProductsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::UploadProductsResponse>> PrepareAsyncUploadProducts(::grpc::ClientContext* context, const ::product::UploadProductsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::UploadProductsResponse>>(PrepareAsyncUploadProductsRaw(context, request, cq));
    }
    virtual ::grpc::Status PatchProduct(::grpc::ClientContext* context, const ::product::PatchProductRequest& request, ::product::PatchProductResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::PatchProductResponse>> AsyncPatchProduct(::grpc::ClientContext* context, const ::product::PatchProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::PatchProductResponse>>(AsyncPatchProductRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::PatchProductResponse>> PrepareAsyncPatchProduct(::grpc::ClientContext* context, const ::product::PatchProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::PatchProductResponse>>(PrepareAsyncPatchProductRaw(context, request, cq));
    }
    virtual ::grpc::Status GetProduct(::grpc::ClientContext* context, const ::product::GetProductRequest& request, ::product::GetProductResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GetProductResponse>> AsyncGetProduct(::grpc::ClientContext* context, const ::product::GetProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GetProductResponse>>(AsyncGetProductRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GetProductResponse>> PrepareAsyncGetProduct(::grpc::ClientContext* context, const ::product::GetProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GetProductResponse>>(PrepareAsyncGetProductRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteProduct(::grpc::ClientContext* context, const ::product::DeleteProductRequest& request, ::product::DeleteProductResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::DeleteProductResponse>> AsyncDeleteProduct(::grpc::ClientContext* context, const ::product::DeleteProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::DeleteProductResponse>>(AsyncDeleteProductRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::DeleteProductResponse>> PrepareAsyncDeleteProduct(::grpc::ClientContext* context, const ::product::DeleteProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::DeleteProductResponse>>(PrepareAsyncDeleteProductRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateProductCategory(::grpc::ClientContext* context, const ::product::CreateProductCategoryRequest& request, ::product::CreateProductCategoryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::CreateProductCategoryResponse>> AsyncCreateProductCategory(::grpc::ClientContext* context, const ::product::CreateProductCategoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::CreateProductCategoryResponse>>(AsyncCreateProductCategoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::CreateProductCategoryResponse>> PrepareAsyncCreateProductCategory(::grpc::ClientContext* context, const ::product::CreateProductCategoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::CreateProductCategoryResponse>>(PrepareAsyncCreateProductCategoryRaw(context, request, cq));
    }
    virtual ::grpc::Status GetProductCategoryWithChildren(::grpc::ClientContext* context, const ::product::GetProductCategoryWithChildrenRequest& request, ::product::GetProductCategoryWithChildrenResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GetProductCategoryWithChildrenResponse>> AsyncGetProductCategoryWithChildren(::grpc::ClientContext* context, const ::product::GetProductCategoryWithChildrenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GetProductCategoryWithChildrenResponse>>(AsyncGetProductCategoryWithChildrenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GetProductCategoryWithChildrenResponse>> PrepareAsyncGetProductCategoryWithChildren(::grpc::ClientContext* context, const ::product::GetProductCategoryWithChildrenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GetProductCategoryWithChildrenResponse>>(PrepareAsyncGetProductCategoryWithChildrenRaw(context, request, cq));
    }
    virtual ::grpc::Status ListCategories(::grpc::ClientContext* context, const ::product::ListCategoriesRequest& request, ::product::ListCategoriesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::ListCategoriesResponse>> AsyncListCategories(::grpc::ClientContext* context, const ::product::ListCategoriesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::ListCategoriesResponse>>(AsyncListCategoriesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::ListCategoriesResponse>> PrepareAsyncListCategories(::grpc::ClientContext* context, const ::product::ListCategoriesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::ListCategoriesResponse>>(PrepareAsyncListCategoriesRaw(context, request, cq));
    }
    virtual ::grpc::Status GetChildrenCategories(::grpc::ClientContext* context, const ::product::GetChildrenCategoriesRequest& request, ::product::GetChildrenCategoriesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GetChildrenCategoriesResponse>> AsyncGetChildrenCategories(::grpc::ClientContext* context, const ::product::GetChildrenCategoriesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GetChildrenCategoriesResponse>>(AsyncGetChildrenCategoriesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GetChildrenCategoriesResponse>> PrepareAsyncGetChildrenCategories(::grpc::ClientContext* context, const ::product::GetChildrenCategoriesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GetChildrenCategoriesResponse>>(PrepareAsyncGetChildrenCategoriesRaw(context, request, cq));
    }
    virtual ::grpc::Status ListProductGroups(::grpc::ClientContext* context, const ::product::ListProductGroupsRequest& request, ::product::ListProductGroupsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::ListProductGroupsResponse>> AsyncListProductGroups(::grpc::ClientContext* context, const ::product::ListProductGroupsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::ListProductGroupsResponse>>(AsyncListProductGroupsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::ListProductGroupsResponse>> PrepareAsyncListProductGroups(::grpc::ClientContext* context, const ::product::ListProductGroupsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::ListProductGroupsResponse>>(PrepareAsyncListProductGroupsRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateProductGroup(::grpc::ClientContext* context, const ::product::CreateProductGroupRequest& request, ::product::CreateProductGroupResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::CreateProductGroupResponse>> AsyncCreateProductGroup(::grpc::ClientContext* context, const ::product::CreateProductGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::CreateProductGroupResponse>>(AsyncCreateProductGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::CreateProductGroupResponse>> PrepareAsyncCreateProductGroup(::grpc::ClientContext* context, const ::product::CreateProductGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::CreateProductGroupResponse>>(PrepareAsyncCreateProductGroupRaw(context, request, cq));
    }
    virtual ::grpc::Status GetProductGroup(::grpc::ClientContext* context, const ::product::GetProductGroupRequest& request, ::product::GetProductGroupResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GetProductGroupResponse>> AsyncGetProductGroup(::grpc::ClientContext* context, const ::product::GetProductGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GetProductGroupResponse>>(AsyncGetProductGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GetProductGroupResponse>> PrepareAsyncGetProductGroup(::grpc::ClientContext* context, const ::product::GetProductGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GetProductGroupResponse>>(PrepareAsyncGetProductGroupRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateProductGroup(::grpc::ClientContext* context, const ::product::UpdateProductGroupRequest& request, ::product::UpdateProductGroupResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::UpdateProductGroupResponse>> AsyncUpdateProductGroup(::grpc::ClientContext* context, const ::product::UpdateProductGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::UpdateProductGroupResponse>>(AsyncUpdateProductGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::UpdateProductGroupResponse>> PrepareAsyncUpdateProductGroup(::grpc::ClientContext* context, const ::product::UpdateProductGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::UpdateProductGroupResponse>>(PrepareAsyncUpdateProductGroupRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteProductGroup(::grpc::ClientContext* context, const ::product::DeleteProductGroupRequest& request, ::product::DeleteProductGroupResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::DeleteProductGroupResponse>> AsyncDeleteProductGroup(::grpc::ClientContext* context, const ::product::DeleteProductGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::DeleteProductGroupResponse>>(AsyncDeleteProductGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::DeleteProductGroupResponse>> PrepareAsyncDeleteProductGroup(::grpc::ClientContext* context, const ::product::DeleteProductGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::DeleteProductGroupResponse>>(PrepareAsyncDeleteProductGroupRaw(context, request, cq));
    }
    virtual ::grpc::Status GeneratePresignedURLs(::grpc::ClientContext* context, const ::product::GeneratePresignedURLsRequest& request, ::product::GeneratePresignedURLsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GeneratePresignedURLsResponse>> AsyncGeneratePresignedURLs(::grpc::ClientContext* context, const ::product::GeneratePresignedURLsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GeneratePresignedURLsResponse>>(AsyncGeneratePresignedURLsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GeneratePresignedURLsResponse>> PrepareAsyncGeneratePresignedURLs(::grpc::ClientContext* context, const ::product::GeneratePresignedURLsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::product::GeneratePresignedURLsResponse>>(PrepareAsyncGeneratePresignedURLsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void CreateProduct(::grpc::ClientContext* context, const ::product::CreateProductRequest* request, ::product::CreateProductResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateProduct(::grpc::ClientContext* context, const ::product::CreateProductRequest* request, ::product::CreateProductResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListProducts(::grpc::ClientContext* context, const ::product::ListProductsRequest* request, ::product::ListProductsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListProducts(::grpc::ClientContext* context, const ::product::ListProductsRequest* request, ::product::ListProductsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DuplicateProduct(::grpc::ClientContext* context, const ::product::DuplicateProductRequest* request, ::product::DuplicateProductResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DuplicateProduct(::grpc::ClientContext* context, const ::product::DuplicateProductRequest* request, ::product::DuplicateProductResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UploadProducts(::grpc::ClientContext* context, const ::product::UploadProductsRequest* request, ::product::UploadProductsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UploadProducts(::grpc::ClientContext* context, const ::product::UploadProductsRequest* request, ::product::UploadProductsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void PatchProduct(::grpc::ClientContext* context, const ::product::PatchProductRequest* request, ::product::PatchProductResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PatchProduct(::grpc::ClientContext* context, const ::product::PatchProductRequest* request, ::product::PatchProductResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetProduct(::grpc::ClientContext* context, const ::product::GetProductRequest* request, ::product::GetProductResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetProduct(::grpc::ClientContext* context, const ::product::GetProductRequest* request, ::product::GetProductResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteProduct(::grpc::ClientContext* context, const ::product::DeleteProductRequest* request, ::product::DeleteProductResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteProduct(::grpc::ClientContext* context, const ::product::DeleteProductRequest* request, ::product::DeleteProductResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateProductCategory(::grpc::ClientContext* context, const ::product::CreateProductCategoryRequest* request, ::product::CreateProductCategoryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateProductCategory(::grpc::ClientContext* context, const ::product::CreateProductCategoryRequest* request, ::product::CreateProductCategoryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetProductCategoryWithChildren(::grpc::ClientContext* context, const ::product::GetProductCategoryWithChildrenRequest* request, ::product::GetProductCategoryWithChildrenResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetProductCategoryWithChildren(::grpc::ClientContext* context, const ::product::GetProductCategoryWithChildrenRequest* request, ::product::GetProductCategoryWithChildrenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListCategories(::grpc::ClientContext* context, const ::product::ListCategoriesRequest* request, ::product::ListCategoriesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListCategories(::grpc::ClientContext* context, const ::product::ListCategoriesRequest* request, ::product::ListCategoriesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetChildrenCategories(::grpc::ClientContext* context, const ::product::GetChildrenCategoriesRequest* request, ::product::GetChildrenCategoriesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetChildrenCategories(::grpc::ClientContext* context, const ::product::GetChildrenCategoriesRequest* request, ::product::GetChildrenCategoriesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListProductGroups(::grpc::ClientContext* context, const ::product::ListProductGroupsRequest* request, ::product::ListProductGroupsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListProductGroups(::grpc::ClientContext* context, const ::product::ListProductGroupsRequest* request, ::product::ListProductGroupsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateProductGroup(::grpc::ClientContext* context, const ::product::CreateProductGroupRequest* request, ::product::CreateProductGroupResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateProductGroup(::grpc::ClientContext* context, const ::product::CreateProductGroupRequest* request, ::product::CreateProductGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetProductGroup(::grpc::ClientContext* context, const ::product::GetProductGroupRequest* request, ::product::GetProductGroupResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetProductGroup(::grpc::ClientContext* context, const ::product::GetProductGroupRequest* request, ::product::GetProductGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateProductGroup(::grpc::ClientContext* context, const ::product::UpdateProductGroupRequest* request, ::product::UpdateProductGroupResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateProductGroup(::grpc::ClientContext* context, const ::product::UpdateProductGroupRequest* request, ::product::UpdateProductGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteProductGroup(::grpc::ClientContext* context, const ::product::DeleteProductGroupRequest* request, ::product::DeleteProductGroupResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteProductGroup(::grpc::ClientContext* context, const ::product::DeleteProductGroupRequest* request, ::product::DeleteProductGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GeneratePresignedURLs(::grpc::ClientContext* context, const ::product::GeneratePresignedURLsRequest* request, ::product::GeneratePresignedURLsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GeneratePresignedURLs(::grpc::ClientContext* context, const ::product::GeneratePresignedURLsRequest* request, ::product::GeneratePresignedURLsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::CreateProductResponse>* AsyncCreateProductRaw(::grpc::ClientContext* context, const ::product::CreateProductRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::CreateProductResponse>* PrepareAsyncCreateProductRaw(::grpc::ClientContext* context, const ::product::CreateProductRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::ListProductsResponse>* AsyncListProductsRaw(::grpc::ClientContext* context, const ::product::ListProductsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::ListProductsResponse>* PrepareAsyncListProductsRaw(::grpc::ClientContext* context, const ::product::ListProductsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::DuplicateProductResponse>* AsyncDuplicateProductRaw(::grpc::ClientContext* context, const ::product::DuplicateProductRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::DuplicateProductResponse>* PrepareAsyncDuplicateProductRaw(::grpc::ClientContext* context, const ::product::DuplicateProductRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::UploadProductsResponse>* AsyncUploadProductsRaw(::grpc::ClientContext* context, const ::product::UploadProductsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::UploadProductsResponse>* PrepareAsyncUploadProductsRaw(::grpc::ClientContext* context, const ::product::UploadProductsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::PatchProductResponse>* AsyncPatchProductRaw(::grpc::ClientContext* context, const ::product::PatchProductRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::PatchProductResponse>* PrepareAsyncPatchProductRaw(::grpc::ClientContext* context, const ::product::PatchProductRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::GetProductResponse>* AsyncGetProductRaw(::grpc::ClientContext* context, const ::product::GetProductRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::GetProductResponse>* PrepareAsyncGetProductRaw(::grpc::ClientContext* context, const ::product::GetProductRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::DeleteProductResponse>* AsyncDeleteProductRaw(::grpc::ClientContext* context, const ::product::DeleteProductRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::DeleteProductResponse>* PrepareAsyncDeleteProductRaw(::grpc::ClientContext* context, const ::product::DeleteProductRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::CreateProductCategoryResponse>* AsyncCreateProductCategoryRaw(::grpc::ClientContext* context, const ::product::CreateProductCategoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::CreateProductCategoryResponse>* PrepareAsyncCreateProductCategoryRaw(::grpc::ClientContext* context, const ::product::CreateProductCategoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::GetProductCategoryWithChildrenResponse>* AsyncGetProductCategoryWithChildrenRaw(::grpc::ClientContext* context, const ::product::GetProductCategoryWithChildrenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::GetProductCategoryWithChildrenResponse>* PrepareAsyncGetProductCategoryWithChildrenRaw(::grpc::ClientContext* context, const ::product::GetProductCategoryWithChildrenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::ListCategoriesResponse>* AsyncListCategoriesRaw(::grpc::ClientContext* context, const ::product::ListCategoriesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::ListCategoriesResponse>* PrepareAsyncListCategoriesRaw(::grpc::ClientContext* context, const ::product::ListCategoriesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::GetChildrenCategoriesResponse>* AsyncGetChildrenCategoriesRaw(::grpc::ClientContext* context, const ::product::GetChildrenCategoriesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::GetChildrenCategoriesResponse>* PrepareAsyncGetChildrenCategoriesRaw(::grpc::ClientContext* context, const ::product::GetChildrenCategoriesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::ListProductGroupsResponse>* AsyncListProductGroupsRaw(::grpc::ClientContext* context, const ::product::ListProductGroupsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::ListProductGroupsResponse>* PrepareAsyncListProductGroupsRaw(::grpc::ClientContext* context, const ::product::ListProductGroupsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::CreateProductGroupResponse>* AsyncCreateProductGroupRaw(::grpc::ClientContext* context, const ::product::CreateProductGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::CreateProductGroupResponse>* PrepareAsyncCreateProductGroupRaw(::grpc::ClientContext* context, const ::product::CreateProductGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::GetProductGroupResponse>* AsyncGetProductGroupRaw(::grpc::ClientContext* context, const ::product::GetProductGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::GetProductGroupResponse>* PrepareAsyncGetProductGroupRaw(::grpc::ClientContext* context, const ::product::GetProductGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::UpdateProductGroupResponse>* AsyncUpdateProductGroupRaw(::grpc::ClientContext* context, const ::product::UpdateProductGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::UpdateProductGroupResponse>* PrepareAsyncUpdateProductGroupRaw(::grpc::ClientContext* context, const ::product::UpdateProductGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::DeleteProductGroupResponse>* AsyncDeleteProductGroupRaw(::grpc::ClientContext* context, const ::product::DeleteProductGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::DeleteProductGroupResponse>* PrepareAsyncDeleteProductGroupRaw(::grpc::ClientContext* context, const ::product::DeleteProductGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::GeneratePresignedURLsResponse>* AsyncGeneratePresignedURLsRaw(::grpc::ClientContext* context, const ::product::GeneratePresignedURLsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::product::GeneratePresignedURLsResponse>* PrepareAsyncGeneratePresignedURLsRaw(::grpc::ClientContext* context, const ::product::GeneratePresignedURLsRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateProduct(::grpc::ClientContext* context, const ::product::CreateProductRequest& request, ::product::CreateProductResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::CreateProductResponse>> AsyncCreateProduct(::grpc::ClientContext* context, const ::product::CreateProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::CreateProductResponse>>(AsyncCreateProductRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::CreateProductResponse>> PrepareAsyncCreateProduct(::grpc::ClientContext* context, const ::product::CreateProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::CreateProductResponse>>(PrepareAsyncCreateProductRaw(context, request, cq));
    }
    ::grpc::Status ListProducts(::grpc::ClientContext* context, const ::product::ListProductsRequest& request, ::product::ListProductsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::ListProductsResponse>> AsyncListProducts(::grpc::ClientContext* context, const ::product::ListProductsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::ListProductsResponse>>(AsyncListProductsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::ListProductsResponse>> PrepareAsyncListProducts(::grpc::ClientContext* context, const ::product::ListProductsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::ListProductsResponse>>(PrepareAsyncListProductsRaw(context, request, cq));
    }
    ::grpc::Status DuplicateProduct(::grpc::ClientContext* context, const ::product::DuplicateProductRequest& request, ::product::DuplicateProductResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::DuplicateProductResponse>> AsyncDuplicateProduct(::grpc::ClientContext* context, const ::product::DuplicateProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::DuplicateProductResponse>>(AsyncDuplicateProductRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::DuplicateProductResponse>> PrepareAsyncDuplicateProduct(::grpc::ClientContext* context, const ::product::DuplicateProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::DuplicateProductResponse>>(PrepareAsyncDuplicateProductRaw(context, request, cq));
    }
    ::grpc::Status UploadProducts(::grpc::ClientContext* context, const ::product::UploadProductsRequest& request, ::product::UploadProductsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::UploadProductsResponse>> AsyncUploadProducts(::grpc::ClientContext* context, const ::product::UploadProductsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::UploadProductsResponse>>(AsyncUploadProductsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::UploadProductsResponse>> PrepareAsyncUploadProducts(::grpc::ClientContext* context, const ::product::UploadProductsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::UploadProductsResponse>>(PrepareAsyncUploadProductsRaw(context, request, cq));
    }
    ::grpc::Status PatchProduct(::grpc::ClientContext* context, const ::product::PatchProductRequest& request, ::product::PatchProductResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::PatchProductResponse>> AsyncPatchProduct(::grpc::ClientContext* context, const ::product::PatchProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::PatchProductResponse>>(AsyncPatchProductRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::PatchProductResponse>> PrepareAsyncPatchProduct(::grpc::ClientContext* context, const ::product::PatchProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::PatchProductResponse>>(PrepareAsyncPatchProductRaw(context, request, cq));
    }
    ::grpc::Status GetProduct(::grpc::ClientContext* context, const ::product::GetProductRequest& request, ::product::GetProductResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GetProductResponse>> AsyncGetProduct(::grpc::ClientContext* context, const ::product::GetProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GetProductResponse>>(AsyncGetProductRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GetProductResponse>> PrepareAsyncGetProduct(::grpc::ClientContext* context, const ::product::GetProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GetProductResponse>>(PrepareAsyncGetProductRaw(context, request, cq));
    }
    ::grpc::Status DeleteProduct(::grpc::ClientContext* context, const ::product::DeleteProductRequest& request, ::product::DeleteProductResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::DeleteProductResponse>> AsyncDeleteProduct(::grpc::ClientContext* context, const ::product::DeleteProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::DeleteProductResponse>>(AsyncDeleteProductRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::DeleteProductResponse>> PrepareAsyncDeleteProduct(::grpc::ClientContext* context, const ::product::DeleteProductRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::DeleteProductResponse>>(PrepareAsyncDeleteProductRaw(context, request, cq));
    }
    ::grpc::Status CreateProductCategory(::grpc::ClientContext* context, const ::product::CreateProductCategoryRequest& request, ::product::CreateProductCategoryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::CreateProductCategoryResponse>> AsyncCreateProductCategory(::grpc::ClientContext* context, const ::product::CreateProductCategoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::CreateProductCategoryResponse>>(AsyncCreateProductCategoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::CreateProductCategoryResponse>> PrepareAsyncCreateProductCategory(::grpc::ClientContext* context, const ::product::CreateProductCategoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::CreateProductCategoryResponse>>(PrepareAsyncCreateProductCategoryRaw(context, request, cq));
    }
    ::grpc::Status GetProductCategoryWithChildren(::grpc::ClientContext* context, const ::product::GetProductCategoryWithChildrenRequest& request, ::product::GetProductCategoryWithChildrenResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GetProductCategoryWithChildrenResponse>> AsyncGetProductCategoryWithChildren(::grpc::ClientContext* context, const ::product::GetProductCategoryWithChildrenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GetProductCategoryWithChildrenResponse>>(AsyncGetProductCategoryWithChildrenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GetProductCategoryWithChildrenResponse>> PrepareAsyncGetProductCategoryWithChildren(::grpc::ClientContext* context, const ::product::GetProductCategoryWithChildrenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GetProductCategoryWithChildrenResponse>>(PrepareAsyncGetProductCategoryWithChildrenRaw(context, request, cq));
    }
    ::grpc::Status ListCategories(::grpc::ClientContext* context, const ::product::ListCategoriesRequest& request, ::product::ListCategoriesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::ListCategoriesResponse>> AsyncListCategories(::grpc::ClientContext* context, const ::product::ListCategoriesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::ListCategoriesResponse>>(AsyncListCategoriesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::ListCategoriesResponse>> PrepareAsyncListCategories(::grpc::ClientContext* context, const ::product::ListCategoriesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::ListCategoriesResponse>>(PrepareAsyncListCategoriesRaw(context, request, cq));
    }
    ::grpc::Status GetChildrenCategories(::grpc::ClientContext* context, const ::product::GetChildrenCategoriesRequest& request, ::product::GetChildrenCategoriesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GetChildrenCategoriesResponse>> AsyncGetChildrenCategories(::grpc::ClientContext* context, const ::product::GetChildrenCategoriesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GetChildrenCategoriesResponse>>(AsyncGetChildrenCategoriesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GetChildrenCategoriesResponse>> PrepareAsyncGetChildrenCategories(::grpc::ClientContext* context, const ::product::GetChildrenCategoriesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GetChildrenCategoriesResponse>>(PrepareAsyncGetChildrenCategoriesRaw(context, request, cq));
    }
    ::grpc::Status ListProductGroups(::grpc::ClientContext* context, const ::product::ListProductGroupsRequest& request, ::product::ListProductGroupsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::ListProductGroupsResponse>> AsyncListProductGroups(::grpc::ClientContext* context, const ::product::ListProductGroupsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::ListProductGroupsResponse>>(AsyncListProductGroupsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::ListProductGroupsResponse>> PrepareAsyncListProductGroups(::grpc::ClientContext* context, const ::product::ListProductGroupsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::ListProductGroupsResponse>>(PrepareAsyncListProductGroupsRaw(context, request, cq));
    }
    ::grpc::Status CreateProductGroup(::grpc::ClientContext* context, const ::product::CreateProductGroupRequest& request, ::product::CreateProductGroupResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::CreateProductGroupResponse>> AsyncCreateProductGroup(::grpc::ClientContext* context, const ::product::CreateProductGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::CreateProductGroupResponse>>(AsyncCreateProductGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::CreateProductGroupResponse>> PrepareAsyncCreateProductGroup(::grpc::ClientContext* context, const ::product::CreateProductGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::CreateProductGroupResponse>>(PrepareAsyncCreateProductGroupRaw(context, request, cq));
    }
    ::grpc::Status GetProductGroup(::grpc::ClientContext* context, const ::product::GetProductGroupRequest& request, ::product::GetProductGroupResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GetProductGroupResponse>> AsyncGetProductGroup(::grpc::ClientContext* context, const ::product::GetProductGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GetProductGroupResponse>>(AsyncGetProductGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GetProductGroupResponse>> PrepareAsyncGetProductGroup(::grpc::ClientContext* context, const ::product::GetProductGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GetProductGroupResponse>>(PrepareAsyncGetProductGroupRaw(context, request, cq));
    }
    ::grpc::Status UpdateProductGroup(::grpc::ClientContext* context, const ::product::UpdateProductGroupRequest& request, ::product::UpdateProductGroupResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::UpdateProductGroupResponse>> AsyncUpdateProductGroup(::grpc::ClientContext* context, const ::product::UpdateProductGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::UpdateProductGroupResponse>>(AsyncUpdateProductGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::UpdateProductGroupResponse>> PrepareAsyncUpdateProductGroup(::grpc::ClientContext* context, const ::product::UpdateProductGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::UpdateProductGroupResponse>>(PrepareAsyncUpdateProductGroupRaw(context, request, cq));
    }
    ::grpc::Status DeleteProductGroup(::grpc::ClientContext* context, const ::product::DeleteProductGroupRequest& request, ::product::DeleteProductGroupResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::DeleteProductGroupResponse>> AsyncDeleteProductGroup(::grpc::ClientContext* context, const ::product::DeleteProductGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::DeleteProductGroupResponse>>(AsyncDeleteProductGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::DeleteProductGroupResponse>> PrepareAsyncDeleteProductGroup(::grpc::ClientContext* context, const ::product::DeleteProductGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::DeleteProductGroupResponse>>(PrepareAsyncDeleteProductGroupRaw(context, request, cq));
    }
    ::grpc::Status GeneratePresignedURLs(::grpc::ClientContext* context, const ::product::GeneratePresignedURLsRequest& request, ::product::GeneratePresignedURLsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GeneratePresignedURLsResponse>> AsyncGeneratePresignedURLs(::grpc::ClientContext* context, const ::product::GeneratePresignedURLsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GeneratePresignedURLsResponse>>(AsyncGeneratePresignedURLsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GeneratePresignedURLsResponse>> PrepareAsyncGeneratePresignedURLs(::grpc::ClientContext* context, const ::product::GeneratePresignedURLsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::product::GeneratePresignedURLsResponse>>(PrepareAsyncGeneratePresignedURLsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateProduct(::grpc::ClientContext* context, const ::product::CreateProductRequest* request, ::product::CreateProductResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateProduct(::grpc::ClientContext* context, const ::product::CreateProductRequest* request, ::product::CreateProductResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListProducts(::grpc::ClientContext* context, const ::product::ListProductsRequest* request, ::product::ListProductsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListProducts(::grpc::ClientContext* context, const ::product::ListProductsRequest* request, ::product::ListProductsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DuplicateProduct(::grpc::ClientContext* context, const ::product::DuplicateProductRequest* request, ::product::DuplicateProductResponse* response, std::function<void(::grpc::Status)>) override;
      void DuplicateProduct(::grpc::ClientContext* context, const ::product::DuplicateProductRequest* request, ::product::DuplicateProductResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UploadProducts(::grpc::ClientContext* context, const ::product::UploadProductsRequest* request, ::product::UploadProductsResponse* response, std::function<void(::grpc::Status)>) override;
      void UploadProducts(::grpc::ClientContext* context, const ::product::UploadProductsRequest* request, ::product::UploadProductsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PatchProduct(::grpc::ClientContext* context, const ::product::PatchProductRequest* request, ::product::PatchProductResponse* response, std::function<void(::grpc::Status)>) override;
      void PatchProduct(::grpc::ClientContext* context, const ::product::PatchProductRequest* request, ::product::PatchProductResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetProduct(::grpc::ClientContext* context, const ::product::GetProductRequest* request, ::product::GetProductResponse* response, std::function<void(::grpc::Status)>) override;
      void GetProduct(::grpc::ClientContext* context, const ::product::GetProductRequest* request, ::product::GetProductResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteProduct(::grpc::ClientContext* context, const ::product::DeleteProductRequest* request, ::product::DeleteProductResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteProduct(::grpc::ClientContext* context, const ::product::DeleteProductRequest* request, ::product::DeleteProductResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateProductCategory(::grpc::ClientContext* context, const ::product::CreateProductCategoryRequest* request, ::product::CreateProductCategoryResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateProductCategory(::grpc::ClientContext* context, const ::product::CreateProductCategoryRequest* request, ::product::CreateProductCategoryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetProductCategoryWithChildren(::grpc::ClientContext* context, const ::product::GetProductCategoryWithChildrenRequest* request, ::product::GetProductCategoryWithChildrenResponse* response, std::function<void(::grpc::Status)>) override;
      void GetProductCategoryWithChildren(::grpc::ClientContext* context, const ::product::GetProductCategoryWithChildrenRequest* request, ::product::GetProductCategoryWithChildrenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListCategories(::grpc::ClientContext* context, const ::product::ListCategoriesRequest* request, ::product::ListCategoriesResponse* response, std::function<void(::grpc::Status)>) override;
      void ListCategories(::grpc::ClientContext* context, const ::product::ListCategoriesRequest* request, ::product::ListCategoriesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetChildrenCategories(::grpc::ClientContext* context, const ::product::GetChildrenCategoriesRequest* request, ::product::GetChildrenCategoriesResponse* response, std::function<void(::grpc::Status)>) override;
      void GetChildrenCategories(::grpc::ClientContext* context, const ::product::GetChildrenCategoriesRequest* request, ::product::GetChildrenCategoriesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListProductGroups(::grpc::ClientContext* context, const ::product::ListProductGroupsRequest* request, ::product::ListProductGroupsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListProductGroups(::grpc::ClientContext* context, const ::product::ListProductGroupsRequest* request, ::product::ListProductGroupsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateProductGroup(::grpc::ClientContext* context, const ::product::CreateProductGroupRequest* request, ::product::CreateProductGroupResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateProductGroup(::grpc::ClientContext* context, const ::product::CreateProductGroupRequest* request, ::product::CreateProductGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetProductGroup(::grpc::ClientContext* context, const ::product::GetProductGroupRequest* request, ::product::GetProductGroupResponse* response, std::function<void(::grpc::Status)>) override;
      void GetProductGroup(::grpc::ClientContext* context, const ::product::GetProductGroupRequest* request, ::product::GetProductGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateProductGroup(::grpc::ClientContext* context, const ::product::UpdateProductGroupRequest* request, ::product::UpdateProductGroupResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateProductGroup(::grpc::ClientContext* context, const ::product::UpdateProductGroupRequest* request, ::product::UpdateProductGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteProductGroup(::grpc::ClientContext* context, const ::product::DeleteProductGroupRequest* request, ::product::DeleteProductGroupResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteProductGroup(::grpc::ClientContext* context, const ::product::DeleteProductGroupRequest* request, ::product::DeleteProductGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GeneratePresignedURLs(::grpc::ClientContext* context, const ::product::GeneratePresignedURLsRequest* request, ::product::GeneratePresignedURLsResponse* response, std::function<void(::grpc::Status)>) override;
      void GeneratePresignedURLs(::grpc::ClientContext* context, const ::product::GeneratePresignedURLsRequest* request, ::product::GeneratePresignedURLsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::product::CreateProductResponse>* AsyncCreateProductRaw(::grpc::ClientContext* context, const ::product::CreateProductRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::CreateProductResponse>* PrepareAsyncCreateProductRaw(::grpc::ClientContext* context, const ::product::CreateProductRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::ListProductsResponse>* AsyncListProductsRaw(::grpc::ClientContext* context, const ::product::ListProductsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::ListProductsResponse>* PrepareAsyncListProductsRaw(::grpc::ClientContext* context, const ::product::ListProductsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::DuplicateProductResponse>* AsyncDuplicateProductRaw(::grpc::ClientContext* context, const ::product::DuplicateProductRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::DuplicateProductResponse>* PrepareAsyncDuplicateProductRaw(::grpc::ClientContext* context, const ::product::DuplicateProductRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::UploadProductsResponse>* AsyncUploadProductsRaw(::grpc::ClientContext* context, const ::product::UploadProductsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::UploadProductsResponse>* PrepareAsyncUploadProductsRaw(::grpc::ClientContext* context, const ::product::UploadProductsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::PatchProductResponse>* AsyncPatchProductRaw(::grpc::ClientContext* context, const ::product::PatchProductRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::PatchProductResponse>* PrepareAsyncPatchProductRaw(::grpc::ClientContext* context, const ::product::PatchProductRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::GetProductResponse>* AsyncGetProductRaw(::grpc::ClientContext* context, const ::product::GetProductRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::GetProductResponse>* PrepareAsyncGetProductRaw(::grpc::ClientContext* context, const ::product::GetProductRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::DeleteProductResponse>* AsyncDeleteProductRaw(::grpc::ClientContext* context, const ::product::DeleteProductRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::DeleteProductResponse>* PrepareAsyncDeleteProductRaw(::grpc::ClientContext* context, const ::product::DeleteProductRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::CreateProductCategoryResponse>* AsyncCreateProductCategoryRaw(::grpc::ClientContext* context, const ::product::CreateProductCategoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::CreateProductCategoryResponse>* PrepareAsyncCreateProductCategoryRaw(::grpc::ClientContext* context, const ::product::CreateProductCategoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::GetProductCategoryWithChildrenResponse>* AsyncGetProductCategoryWithChildrenRaw(::grpc::ClientContext* context, const ::product::GetProductCategoryWithChildrenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::GetProductCategoryWithChildrenResponse>* PrepareAsyncGetProductCategoryWithChildrenRaw(::grpc::ClientContext* context, const ::product::GetProductCategoryWithChildrenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::ListCategoriesResponse>* AsyncListCategoriesRaw(::grpc::ClientContext* context, const ::product::ListCategoriesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::ListCategoriesResponse>* PrepareAsyncListCategoriesRaw(::grpc::ClientContext* context, const ::product::ListCategoriesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::GetChildrenCategoriesResponse>* AsyncGetChildrenCategoriesRaw(::grpc::ClientContext* context, const ::product::GetChildrenCategoriesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::GetChildrenCategoriesResponse>* PrepareAsyncGetChildrenCategoriesRaw(::grpc::ClientContext* context, const ::product::GetChildrenCategoriesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::ListProductGroupsResponse>* AsyncListProductGroupsRaw(::grpc::ClientContext* context, const ::product::ListProductGroupsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::ListProductGroupsResponse>* PrepareAsyncListProductGroupsRaw(::grpc::ClientContext* context, const ::product::ListProductGroupsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::CreateProductGroupResponse>* AsyncCreateProductGroupRaw(::grpc::ClientContext* context, const ::product::CreateProductGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::CreateProductGroupResponse>* PrepareAsyncCreateProductGroupRaw(::grpc::ClientContext* context, const ::product::CreateProductGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::GetProductGroupResponse>* AsyncGetProductGroupRaw(::grpc::ClientContext* context, const ::product::GetProductGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::GetProductGroupResponse>* PrepareAsyncGetProductGroupRaw(::grpc::ClientContext* context, const ::product::GetProductGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::UpdateProductGroupResponse>* AsyncUpdateProductGroupRaw(::grpc::ClientContext* context, const ::product::UpdateProductGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::UpdateProductGroupResponse>* PrepareAsyncUpdateProductGroupRaw(::grpc::ClientContext* context, const ::product::UpdateProductGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::DeleteProductGroupResponse>* AsyncDeleteProductGroupRaw(::grpc::ClientContext* context, const ::product::DeleteProductGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::DeleteProductGroupResponse>* PrepareAsyncDeleteProductGroupRaw(::grpc::ClientContext* context, const ::product::DeleteProductGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::GeneratePresignedURLsResponse>* AsyncGeneratePresignedURLsRaw(::grpc::ClientContext* context, const ::product::GeneratePresignedURLsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::product::GeneratePresignedURLsResponse>* PrepareAsyncGeneratePresignedURLsRaw(::grpc::ClientContext* context, const ::product::GeneratePresignedURLsRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateProduct_;
    const ::grpc::internal::RpcMethod rpcmethod_ListProducts_;
    const ::grpc::internal::RpcMethod rpcmethod_DuplicateProduct_;
    const ::grpc::internal::RpcMethod rpcmethod_UploadProducts_;
    const ::grpc::internal::RpcMethod rpcmethod_PatchProduct_;
    const ::grpc::internal::RpcMethod rpcmethod_GetProduct_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteProduct_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateProductCategory_;
    const ::grpc::internal::RpcMethod rpcmethod_GetProductCategoryWithChildren_;
    const ::grpc::internal::RpcMethod rpcmethod_ListCategories_;
    const ::grpc::internal::RpcMethod rpcmethod_GetChildrenCategories_;
    const ::grpc::internal::RpcMethod rpcmethod_ListProductGroups_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateProductGroup_;
    const ::grpc::internal::RpcMethod rpcmethod_GetProductGroup_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateProductGroup_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteProductGroup_;
    const ::grpc::internal::RpcMethod rpcmethod_GeneratePresignedURLs_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status CreateProduct(::grpc::ServerContext* context, const ::product::CreateProductRequest* request, ::product::CreateProductResponse* response);
    virtual ::grpc::Status ListProducts(::grpc::ServerContext* context, const ::product::ListProductsRequest* request, ::product::ListProductsResponse* response);
    virtual ::grpc::Status DuplicateProduct(::grpc::ServerContext* context, const ::product::DuplicateProductRequest* request, ::product::DuplicateProductResponse* response);
    virtual ::grpc::Status UploadProducts(::grpc::ServerContext* context, const ::product::UploadProductsRequest* request, ::product::UploadProductsResponse* response);
    virtual ::grpc::Status PatchProduct(::grpc::ServerContext* context, const ::product::PatchProductRequest* request, ::product::PatchProductResponse* response);
    virtual ::grpc::Status GetProduct(::grpc::ServerContext* context, const ::product::GetProductRequest* request, ::product::GetProductResponse* response);
    virtual ::grpc::Status DeleteProduct(::grpc::ServerContext* context, const ::product::DeleteProductRequest* request, ::product::DeleteProductResponse* response);
    virtual ::grpc::Status CreateProductCategory(::grpc::ServerContext* context, const ::product::CreateProductCategoryRequest* request, ::product::CreateProductCategoryResponse* response);
    virtual ::grpc::Status GetProductCategoryWithChildren(::grpc::ServerContext* context, const ::product::GetProductCategoryWithChildrenRequest* request, ::product::GetProductCategoryWithChildrenResponse* response);
    virtual ::grpc::Status ListCategories(::grpc::ServerContext* context, const ::product::ListCategoriesRequest* request, ::product::ListCategoriesResponse* response);
    virtual ::grpc::Status GetChildrenCategories(::grpc::ServerContext* context, const ::product::GetChildrenCategoriesRequest* request, ::product::GetChildrenCategoriesResponse* response);
    virtual ::grpc::Status ListProductGroups(::grpc::ServerContext* context, const ::product::ListProductGroupsRequest* request, ::product::ListProductGroupsResponse* response);
    virtual ::grpc::Status CreateProductGroup(::grpc::ServerContext* context, const ::product::CreateProductGroupRequest* request, ::product::CreateProductGroupResponse* response);
    virtual ::grpc::Status GetProductGroup(::grpc::ServerContext* context, const ::product::GetProductGroupRequest* request, ::product::GetProductGroupResponse* response);
    virtual ::grpc::Status UpdateProductGroup(::grpc::ServerContext* context, const ::product::UpdateProductGroupRequest* request, ::product::UpdateProductGroupResponse* response);
    virtual ::grpc::Status DeleteProductGroup(::grpc::ServerContext* context, const ::product::DeleteProductGroupRequest* request, ::product::DeleteProductGroupResponse* response);
    virtual ::grpc::Status GeneratePresignedURLs(::grpc::ServerContext* context, const ::product::GeneratePresignedURLsRequest* request, ::product::GeneratePresignedURLsResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateProduct() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProduct(::grpc::ServerContext* /*context*/, const ::product::CreateProductRequest* /*request*/, ::product::CreateProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateProduct(::grpc::ServerContext* context, ::product::CreateProductRequest* request, ::grpc::ServerAsyncResponseWriter< ::product::CreateProductResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListProducts() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ListProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProducts(::grpc::ServerContext* /*context*/, const ::product::ListProductsRequest* /*request*/, ::product::ListProductsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListProducts(::grpc::ServerContext* context, ::product::ListProductsRequest* request, ::grpc::ServerAsyncResponseWriter< ::product::ListProductsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DuplicateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DuplicateProduct() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_DuplicateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DuplicateProduct(::grpc::ServerContext* /*context*/, const ::product::DuplicateProductRequest* /*request*/, ::product::DuplicateProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDuplicateProduct(::grpc::ServerContext* context, ::product::DuplicateProductRequest* request, ::grpc::ServerAsyncResponseWriter< ::product::DuplicateProductResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UploadProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UploadProducts() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UploadProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadProducts(::grpc::ServerContext* /*context*/, const ::product::UploadProductsRequest* /*request*/, ::product::UploadProductsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUploadProducts(::grpc::ServerContext* context, ::product::UploadProductsRequest* request, ::grpc::ServerAsyncResponseWriter< ::product::UploadProductsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PatchProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PatchProduct() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_PatchProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchProduct(::grpc::ServerContext* /*context*/, const ::product::PatchProductRequest* /*request*/, ::product::PatchProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPatchProduct(::grpc::ServerContext* context, ::product::PatchProductRequest* request, ::grpc::ServerAsyncResponseWriter< ::product::PatchProductResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetProduct() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_GetProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProduct(::grpc::ServerContext* /*context*/, const ::product::GetProductRequest* /*request*/, ::product::GetProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProduct(::grpc::ServerContext* context, ::product::GetProductRequest* request, ::grpc::ServerAsyncResponseWriter< ::product::GetProductResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteProduct() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_DeleteProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProduct(::grpc::ServerContext* /*context*/, const ::product::DeleteProductRequest* /*request*/, ::product::DeleteProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteProduct(::grpc::ServerContext* context, ::product::DeleteProductRequest* request, ::grpc::ServerAsyncResponseWriter< ::product::DeleteProductResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateProductCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateProductCategory() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_CreateProductCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProductCategory(::grpc::ServerContext* /*context*/, const ::product::CreateProductCategoryRequest* /*request*/, ::product::CreateProductCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateProductCategory(::grpc::ServerContext* context, ::product::CreateProductCategoryRequest* request, ::grpc::ServerAsyncResponseWriter< ::product::CreateProductCategoryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetProductCategoryWithChildren : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetProductCategoryWithChildren() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetProductCategoryWithChildren() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProductCategoryWithChildren(::grpc::ServerContext* /*context*/, const ::product::GetProductCategoryWithChildrenRequest* /*request*/, ::product::GetProductCategoryWithChildrenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProductCategoryWithChildren(::grpc::ServerContext* context, ::product::GetProductCategoryWithChildrenRequest* request, ::grpc::ServerAsyncResponseWriter< ::product::GetProductCategoryWithChildrenResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListCategories : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListCategories() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_ListCategories() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCategories(::grpc::ServerContext* /*context*/, const ::product::ListCategoriesRequest* /*request*/, ::product::ListCategoriesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCategories(::grpc::ServerContext* context, ::product::ListCategoriesRequest* request, ::grpc::ServerAsyncResponseWriter< ::product::ListCategoriesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetChildrenCategories : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetChildrenCategories() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_GetChildrenCategories() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetChildrenCategories(::grpc::ServerContext* /*context*/, const ::product::GetChildrenCategoriesRequest* /*request*/, ::product::GetChildrenCategoriesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetChildrenCategories(::grpc::ServerContext* context, ::product::GetChildrenCategoriesRequest* request, ::grpc::ServerAsyncResponseWriter< ::product::GetChildrenCategoriesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListProductGroups : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListProductGroups() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_ListProductGroups() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProductGroups(::grpc::ServerContext* /*context*/, const ::product::ListProductGroupsRequest* /*request*/, ::product::ListProductGroupsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListProductGroups(::grpc::ServerContext* context, ::product::ListProductGroupsRequest* request, ::grpc::ServerAsyncResponseWriter< ::product::ListProductGroupsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateProductGroup() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_CreateProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProductGroup(::grpc::ServerContext* /*context*/, const ::product::CreateProductGroupRequest* /*request*/, ::product::CreateProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateProductGroup(::grpc::ServerContext* context, ::product::CreateProductGroupRequest* request, ::grpc::ServerAsyncResponseWriter< ::product::CreateProductGroupResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetProductGroup() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_GetProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProductGroup(::grpc::ServerContext* /*context*/, const ::product::GetProductGroupRequest* /*request*/, ::product::GetProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProductGroup(::grpc::ServerContext* context, ::product::GetProductGroupRequest* request, ::grpc::ServerAsyncResponseWriter< ::product::GetProductGroupResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateProductGroup() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_UpdateProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProductGroup(::grpc::ServerContext* /*context*/, const ::product::UpdateProductGroupRequest* /*request*/, ::product::UpdateProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateProductGroup(::grpc::ServerContext* context, ::product::UpdateProductGroupRequest* request, ::grpc::ServerAsyncResponseWriter< ::product::UpdateProductGroupResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteProductGroup() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_DeleteProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProductGroup(::grpc::ServerContext* /*context*/, const ::product::DeleteProductGroupRequest* /*request*/, ::product::DeleteProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteProductGroup(::grpc::ServerContext* context, ::product::DeleteProductGroupRequest* request, ::grpc::ServerAsyncResponseWriter< ::product::DeleteProductGroupResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GeneratePresignedURLs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GeneratePresignedURLs() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_GeneratePresignedURLs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GeneratePresignedURLs(::grpc::ServerContext* /*context*/, const ::product::GeneratePresignedURLsRequest* /*request*/, ::product::GeneratePresignedURLsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGeneratePresignedURLs(::grpc::ServerContext* context, ::product::GeneratePresignedURLsRequest* request, ::grpc::ServerAsyncResponseWriter< ::product::GeneratePresignedURLsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateProduct<WithAsyncMethod_ListProducts<WithAsyncMethod_DuplicateProduct<WithAsyncMethod_UploadProducts<WithAsyncMethod_PatchProduct<WithAsyncMethod_GetProduct<WithAsyncMethod_DeleteProduct<WithAsyncMethod_CreateProductCategory<WithAsyncMethod_GetProductCategoryWithChildren<WithAsyncMethod_ListCategories<WithAsyncMethod_GetChildrenCategories<WithAsyncMethod_ListProductGroups<WithAsyncMethod_CreateProductGroup<WithAsyncMethod_GetProductGroup<WithAsyncMethod_UpdateProductGroup<WithAsyncMethod_DeleteProductGroup<WithAsyncMethod_GeneratePresignedURLs<Service > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateProduct() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::product::CreateProductRequest, ::product::CreateProductResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::product::CreateProductRequest* request, ::product::CreateProductResponse* response) { return this->CreateProduct(context, request, response); }));}
    void SetMessageAllocatorFor_CreateProduct(
        ::grpc::MessageAllocator< ::product::CreateProductRequest, ::product::CreateProductResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::product::CreateProductRequest, ::product::CreateProductResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProduct(::grpc::ServerContext* /*context*/, const ::product::CreateProductRequest* /*request*/, ::product::CreateProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateProduct(
      ::grpc::CallbackServerContext* /*context*/, const ::product::CreateProductRequest* /*request*/, ::product::CreateProductResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListProducts() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::product::ListProductsRequest, ::product::ListProductsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::product::ListProductsRequest* request, ::product::ListProductsResponse* response) { return this->ListProducts(context, request, response); }));}
    void SetMessageAllocatorFor_ListProducts(
        ::grpc::MessageAllocator< ::product::ListProductsRequest, ::product::ListProductsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::product::ListProductsRequest, ::product::ListProductsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProducts(::grpc::ServerContext* /*context*/, const ::product::ListProductsRequest* /*request*/, ::product::ListProductsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListProducts(
      ::grpc::CallbackServerContext* /*context*/, const ::product::ListProductsRequest* /*request*/, ::product::ListProductsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DuplicateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DuplicateProduct() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::product::DuplicateProductRequest, ::product::DuplicateProductResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::product::DuplicateProductRequest* request, ::product::DuplicateProductResponse* response) { return this->DuplicateProduct(context, request, response); }));}
    void SetMessageAllocatorFor_DuplicateProduct(
        ::grpc::MessageAllocator< ::product::DuplicateProductRequest, ::product::DuplicateProductResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::product::DuplicateProductRequest, ::product::DuplicateProductResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DuplicateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DuplicateProduct(::grpc::ServerContext* /*context*/, const ::product::DuplicateProductRequest* /*request*/, ::product::DuplicateProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DuplicateProduct(
      ::grpc::CallbackServerContext* /*context*/, const ::product::DuplicateProductRequest* /*request*/, ::product::DuplicateProductResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UploadProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UploadProducts() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::product::UploadProductsRequest, ::product::UploadProductsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::product::UploadProductsRequest* request, ::product::UploadProductsResponse* response) { return this->UploadProducts(context, request, response); }));}
    void SetMessageAllocatorFor_UploadProducts(
        ::grpc::MessageAllocator< ::product::UploadProductsRequest, ::product::UploadProductsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::product::UploadProductsRequest, ::product::UploadProductsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UploadProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadProducts(::grpc::ServerContext* /*context*/, const ::product::UploadProductsRequest* /*request*/, ::product::UploadProductsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UploadProducts(
      ::grpc::CallbackServerContext* /*context*/, const ::product::UploadProductsRequest* /*request*/, ::product::UploadProductsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PatchProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PatchProduct() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::product::PatchProductRequest, ::product::PatchProductResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::product::PatchProductRequest* request, ::product::PatchProductResponse* response) { return this->PatchProduct(context, request, response); }));}
    void SetMessageAllocatorFor_PatchProduct(
        ::grpc::MessageAllocator< ::product::PatchProductRequest, ::product::PatchProductResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::product::PatchProductRequest, ::product::PatchProductResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PatchProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchProduct(::grpc::ServerContext* /*context*/, const ::product::PatchProductRequest* /*request*/, ::product::PatchProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PatchProduct(
      ::grpc::CallbackServerContext* /*context*/, const ::product::PatchProductRequest* /*request*/, ::product::PatchProductResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetProduct() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::product::GetProductRequest, ::product::GetProductResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::product::GetProductRequest* request, ::product::GetProductResponse* response) { return this->GetProduct(context, request, response); }));}
    void SetMessageAllocatorFor_GetProduct(
        ::grpc::MessageAllocator< ::product::GetProductRequest, ::product::GetProductResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::product::GetProductRequest, ::product::GetProductResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProduct(::grpc::ServerContext* /*context*/, const ::product::GetProductRequest* /*request*/, ::product::GetProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetProduct(
      ::grpc::CallbackServerContext* /*context*/, const ::product::GetProductRequest* /*request*/, ::product::GetProductResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteProduct() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::product::DeleteProductRequest, ::product::DeleteProductResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::product::DeleteProductRequest* request, ::product::DeleteProductResponse* response) { return this->DeleteProduct(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteProduct(
        ::grpc::MessageAllocator< ::product::DeleteProductRequest, ::product::DeleteProductResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::product::DeleteProductRequest, ::product::DeleteProductResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProduct(::grpc::ServerContext* /*context*/, const ::product::DeleteProductRequest* /*request*/, ::product::DeleteProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteProduct(
      ::grpc::CallbackServerContext* /*context*/, const ::product::DeleteProductRequest* /*request*/, ::product::DeleteProductResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateProductCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateProductCategory() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::product::CreateProductCategoryRequest, ::product::CreateProductCategoryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::product::CreateProductCategoryRequest* request, ::product::CreateProductCategoryResponse* response) { return this->CreateProductCategory(context, request, response); }));}
    void SetMessageAllocatorFor_CreateProductCategory(
        ::grpc::MessageAllocator< ::product::CreateProductCategoryRequest, ::product::CreateProductCategoryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::product::CreateProductCategoryRequest, ::product::CreateProductCategoryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateProductCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProductCategory(::grpc::ServerContext* /*context*/, const ::product::CreateProductCategoryRequest* /*request*/, ::product::CreateProductCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateProductCategory(
      ::grpc::CallbackServerContext* /*context*/, const ::product::CreateProductCategoryRequest* /*request*/, ::product::CreateProductCategoryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetProductCategoryWithChildren : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetProductCategoryWithChildren() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::product::GetProductCategoryWithChildrenRequest, ::product::GetProductCategoryWithChildrenResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::product::GetProductCategoryWithChildrenRequest* request, ::product::GetProductCategoryWithChildrenResponse* response) { return this->GetProductCategoryWithChildren(context, request, response); }));}
    void SetMessageAllocatorFor_GetProductCategoryWithChildren(
        ::grpc::MessageAllocator< ::product::GetProductCategoryWithChildrenRequest, ::product::GetProductCategoryWithChildrenResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::product::GetProductCategoryWithChildrenRequest, ::product::GetProductCategoryWithChildrenResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetProductCategoryWithChildren() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProductCategoryWithChildren(::grpc::ServerContext* /*context*/, const ::product::GetProductCategoryWithChildrenRequest* /*request*/, ::product::GetProductCategoryWithChildrenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetProductCategoryWithChildren(
      ::grpc::CallbackServerContext* /*context*/, const ::product::GetProductCategoryWithChildrenRequest* /*request*/, ::product::GetProductCategoryWithChildrenResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListCategories : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListCategories() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::product::ListCategoriesRequest, ::product::ListCategoriesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::product::ListCategoriesRequest* request, ::product::ListCategoriesResponse* response) { return this->ListCategories(context, request, response); }));}
    void SetMessageAllocatorFor_ListCategories(
        ::grpc::MessageAllocator< ::product::ListCategoriesRequest, ::product::ListCategoriesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::product::ListCategoriesRequest, ::product::ListCategoriesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListCategories() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCategories(::grpc::ServerContext* /*context*/, const ::product::ListCategoriesRequest* /*request*/, ::product::ListCategoriesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListCategories(
      ::grpc::CallbackServerContext* /*context*/, const ::product::ListCategoriesRequest* /*request*/, ::product::ListCategoriesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetChildrenCategories : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetChildrenCategories() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::product::GetChildrenCategoriesRequest, ::product::GetChildrenCategoriesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::product::GetChildrenCategoriesRequest* request, ::product::GetChildrenCategoriesResponse* response) { return this->GetChildrenCategories(context, request, response); }));}
    void SetMessageAllocatorFor_GetChildrenCategories(
        ::grpc::MessageAllocator< ::product::GetChildrenCategoriesRequest, ::product::GetChildrenCategoriesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::product::GetChildrenCategoriesRequest, ::product::GetChildrenCategoriesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetChildrenCategories() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetChildrenCategories(::grpc::ServerContext* /*context*/, const ::product::GetChildrenCategoriesRequest* /*request*/, ::product::GetChildrenCategoriesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetChildrenCategories(
      ::grpc::CallbackServerContext* /*context*/, const ::product::GetChildrenCategoriesRequest* /*request*/, ::product::GetChildrenCategoriesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListProductGroups : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListProductGroups() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::product::ListProductGroupsRequest, ::product::ListProductGroupsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::product::ListProductGroupsRequest* request, ::product::ListProductGroupsResponse* response) { return this->ListProductGroups(context, request, response); }));}
    void SetMessageAllocatorFor_ListProductGroups(
        ::grpc::MessageAllocator< ::product::ListProductGroupsRequest, ::product::ListProductGroupsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::product::ListProductGroupsRequest, ::product::ListProductGroupsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListProductGroups() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProductGroups(::grpc::ServerContext* /*context*/, const ::product::ListProductGroupsRequest* /*request*/, ::product::ListProductGroupsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListProductGroups(
      ::grpc::CallbackServerContext* /*context*/, const ::product::ListProductGroupsRequest* /*request*/, ::product::ListProductGroupsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateProductGroup() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::product::CreateProductGroupRequest, ::product::CreateProductGroupResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::product::CreateProductGroupRequest* request, ::product::CreateProductGroupResponse* response) { return this->CreateProductGroup(context, request, response); }));}
    void SetMessageAllocatorFor_CreateProductGroup(
        ::grpc::MessageAllocator< ::product::CreateProductGroupRequest, ::product::CreateProductGroupResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::product::CreateProductGroupRequest, ::product::CreateProductGroupResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProductGroup(::grpc::ServerContext* /*context*/, const ::product::CreateProductGroupRequest* /*request*/, ::product::CreateProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateProductGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::product::CreateProductGroupRequest* /*request*/, ::product::CreateProductGroupResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetProductGroup() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::product::GetProductGroupRequest, ::product::GetProductGroupResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::product::GetProductGroupRequest* request, ::product::GetProductGroupResponse* response) { return this->GetProductGroup(context, request, response); }));}
    void SetMessageAllocatorFor_GetProductGroup(
        ::grpc::MessageAllocator< ::product::GetProductGroupRequest, ::product::GetProductGroupResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::product::GetProductGroupRequest, ::product::GetProductGroupResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProductGroup(::grpc::ServerContext* /*context*/, const ::product::GetProductGroupRequest* /*request*/, ::product::GetProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetProductGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::product::GetProductGroupRequest* /*request*/, ::product::GetProductGroupResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateProductGroup() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::product::UpdateProductGroupRequest, ::product::UpdateProductGroupResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::product::UpdateProductGroupRequest* request, ::product::UpdateProductGroupResponse* response) { return this->UpdateProductGroup(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateProductGroup(
        ::grpc::MessageAllocator< ::product::UpdateProductGroupRequest, ::product::UpdateProductGroupResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::product::UpdateProductGroupRequest, ::product::UpdateProductGroupResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProductGroup(::grpc::ServerContext* /*context*/, const ::product::UpdateProductGroupRequest* /*request*/, ::product::UpdateProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateProductGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::product::UpdateProductGroupRequest* /*request*/, ::product::UpdateProductGroupResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteProductGroup() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::product::DeleteProductGroupRequest, ::product::DeleteProductGroupResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::product::DeleteProductGroupRequest* request, ::product::DeleteProductGroupResponse* response) { return this->DeleteProductGroup(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteProductGroup(
        ::grpc::MessageAllocator< ::product::DeleteProductGroupRequest, ::product::DeleteProductGroupResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::product::DeleteProductGroupRequest, ::product::DeleteProductGroupResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProductGroup(::grpc::ServerContext* /*context*/, const ::product::DeleteProductGroupRequest* /*request*/, ::product::DeleteProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteProductGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::product::DeleteProductGroupRequest* /*request*/, ::product::DeleteProductGroupResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GeneratePresignedURLs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GeneratePresignedURLs() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::product::GeneratePresignedURLsRequest, ::product::GeneratePresignedURLsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::product::GeneratePresignedURLsRequest* request, ::product::GeneratePresignedURLsResponse* response) { return this->GeneratePresignedURLs(context, request, response); }));}
    void SetMessageAllocatorFor_GeneratePresignedURLs(
        ::grpc::MessageAllocator< ::product::GeneratePresignedURLsRequest, ::product::GeneratePresignedURLsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::product::GeneratePresignedURLsRequest, ::product::GeneratePresignedURLsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GeneratePresignedURLs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GeneratePresignedURLs(::grpc::ServerContext* /*context*/, const ::product::GeneratePresignedURLsRequest* /*request*/, ::product::GeneratePresignedURLsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GeneratePresignedURLs(
      ::grpc::CallbackServerContext* /*context*/, const ::product::GeneratePresignedURLsRequest* /*request*/, ::product::GeneratePresignedURLsResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateProduct<WithCallbackMethod_ListProducts<WithCallbackMethod_DuplicateProduct<WithCallbackMethod_UploadProducts<WithCallbackMethod_PatchProduct<WithCallbackMethod_GetProduct<WithCallbackMethod_DeleteProduct<WithCallbackMethod_CreateProductCategory<WithCallbackMethod_GetProductCategoryWithChildren<WithCallbackMethod_ListCategories<WithCallbackMethod_GetChildrenCategories<WithCallbackMethod_ListProductGroups<WithCallbackMethod_CreateProductGroup<WithCallbackMethod_GetProductGroup<WithCallbackMethod_UpdateProductGroup<WithCallbackMethod_DeleteProductGroup<WithCallbackMethod_GeneratePresignedURLs<Service > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateProduct() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProduct(::grpc::ServerContext* /*context*/, const ::product::CreateProductRequest* /*request*/, ::product::CreateProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListProducts() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ListProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProducts(::grpc::ServerContext* /*context*/, const ::product::ListProductsRequest* /*request*/, ::product::ListProductsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DuplicateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DuplicateProduct() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_DuplicateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DuplicateProduct(::grpc::ServerContext* /*context*/, const ::product::DuplicateProductRequest* /*request*/, ::product::DuplicateProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UploadProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UploadProducts() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UploadProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadProducts(::grpc::ServerContext* /*context*/, const ::product::UploadProductsRequest* /*request*/, ::product::UploadProductsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PatchProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PatchProduct() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_PatchProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchProduct(::grpc::ServerContext* /*context*/, const ::product::PatchProductRequest* /*request*/, ::product::PatchProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetProduct() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_GetProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProduct(::grpc::ServerContext* /*context*/, const ::product::GetProductRequest* /*request*/, ::product::GetProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteProduct() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_DeleteProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProduct(::grpc::ServerContext* /*context*/, const ::product::DeleteProductRequest* /*request*/, ::product::DeleteProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateProductCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateProductCategory() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_CreateProductCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProductCategory(::grpc::ServerContext* /*context*/, const ::product::CreateProductCategoryRequest* /*request*/, ::product::CreateProductCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetProductCategoryWithChildren : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetProductCategoryWithChildren() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetProductCategoryWithChildren() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProductCategoryWithChildren(::grpc::ServerContext* /*context*/, const ::product::GetProductCategoryWithChildrenRequest* /*request*/, ::product::GetProductCategoryWithChildrenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListCategories : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListCategories() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_ListCategories() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCategories(::grpc::ServerContext* /*context*/, const ::product::ListCategoriesRequest* /*request*/, ::product::ListCategoriesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetChildrenCategories : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetChildrenCategories() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_GetChildrenCategories() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetChildrenCategories(::grpc::ServerContext* /*context*/, const ::product::GetChildrenCategoriesRequest* /*request*/, ::product::GetChildrenCategoriesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListProductGroups : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListProductGroups() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_ListProductGroups() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProductGroups(::grpc::ServerContext* /*context*/, const ::product::ListProductGroupsRequest* /*request*/, ::product::ListProductGroupsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateProductGroup() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_CreateProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProductGroup(::grpc::ServerContext* /*context*/, const ::product::CreateProductGroupRequest* /*request*/, ::product::CreateProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetProductGroup() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_GetProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProductGroup(::grpc::ServerContext* /*context*/, const ::product::GetProductGroupRequest* /*request*/, ::product::GetProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateProductGroup() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_UpdateProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProductGroup(::grpc::ServerContext* /*context*/, const ::product::UpdateProductGroupRequest* /*request*/, ::product::UpdateProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteProductGroup() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_DeleteProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProductGroup(::grpc::ServerContext* /*context*/, const ::product::DeleteProductGroupRequest* /*request*/, ::product::DeleteProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GeneratePresignedURLs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GeneratePresignedURLs() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_GeneratePresignedURLs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GeneratePresignedURLs(::grpc::ServerContext* /*context*/, const ::product::GeneratePresignedURLsRequest* /*request*/, ::product::GeneratePresignedURLsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateProduct() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProduct(::grpc::ServerContext* /*context*/, const ::product::CreateProductRequest* /*request*/, ::product::CreateProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateProduct(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListProducts() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ListProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProducts(::grpc::ServerContext* /*context*/, const ::product::ListProductsRequest* /*request*/, ::product::ListProductsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListProducts(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DuplicateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DuplicateProduct() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_DuplicateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DuplicateProduct(::grpc::ServerContext* /*context*/, const ::product::DuplicateProductRequest* /*request*/, ::product::DuplicateProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDuplicateProduct(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UploadProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UploadProducts() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_UploadProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadProducts(::grpc::ServerContext* /*context*/, const ::product::UploadProductsRequest* /*request*/, ::product::UploadProductsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUploadProducts(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PatchProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PatchProduct() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_PatchProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchProduct(::grpc::ServerContext* /*context*/, const ::product::PatchProductRequest* /*request*/, ::product::PatchProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPatchProduct(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetProduct() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_GetProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProduct(::grpc::ServerContext* /*context*/, const ::product::GetProductRequest* /*request*/, ::product::GetProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProduct(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteProduct() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_DeleteProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProduct(::grpc::ServerContext* /*context*/, const ::product::DeleteProductRequest* /*request*/, ::product::DeleteProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteProduct(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateProductCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateProductCategory() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_CreateProductCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProductCategory(::grpc::ServerContext* /*context*/, const ::product::CreateProductCategoryRequest* /*request*/, ::product::CreateProductCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateProductCategory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetProductCategoryWithChildren : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetProductCategoryWithChildren() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_GetProductCategoryWithChildren() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProductCategoryWithChildren(::grpc::ServerContext* /*context*/, const ::product::GetProductCategoryWithChildrenRequest* /*request*/, ::product::GetProductCategoryWithChildrenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProductCategoryWithChildren(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListCategories : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListCategories() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_ListCategories() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCategories(::grpc::ServerContext* /*context*/, const ::product::ListCategoriesRequest* /*request*/, ::product::ListCategoriesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCategories(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetChildrenCategories : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetChildrenCategories() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_GetChildrenCategories() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetChildrenCategories(::grpc::ServerContext* /*context*/, const ::product::GetChildrenCategoriesRequest* /*request*/, ::product::GetChildrenCategoriesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetChildrenCategories(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListProductGroups : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListProductGroups() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_ListProductGroups() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProductGroups(::grpc::ServerContext* /*context*/, const ::product::ListProductGroupsRequest* /*request*/, ::product::ListProductGroupsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListProductGroups(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateProductGroup() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_CreateProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProductGroup(::grpc::ServerContext* /*context*/, const ::product::CreateProductGroupRequest* /*request*/, ::product::CreateProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateProductGroup(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetProductGroup() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_GetProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProductGroup(::grpc::ServerContext* /*context*/, const ::product::GetProductGroupRequest* /*request*/, ::product::GetProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProductGroup(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateProductGroup() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_UpdateProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProductGroup(::grpc::ServerContext* /*context*/, const ::product::UpdateProductGroupRequest* /*request*/, ::product::UpdateProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateProductGroup(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteProductGroup() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_DeleteProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProductGroup(::grpc::ServerContext* /*context*/, const ::product::DeleteProductGroupRequest* /*request*/, ::product::DeleteProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteProductGroup(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GeneratePresignedURLs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GeneratePresignedURLs() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_GeneratePresignedURLs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GeneratePresignedURLs(::grpc::ServerContext* /*context*/, const ::product::GeneratePresignedURLsRequest* /*request*/, ::product::GeneratePresignedURLsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGeneratePresignedURLs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateProduct() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateProduct(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProduct(::grpc::ServerContext* /*context*/, const ::product::CreateProductRequest* /*request*/, ::product::CreateProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateProduct(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListProducts() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListProducts(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProducts(::grpc::ServerContext* /*context*/, const ::product::ListProductsRequest* /*request*/, ::product::ListProductsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListProducts(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DuplicateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DuplicateProduct() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DuplicateProduct(context, request, response); }));
    }
    ~WithRawCallbackMethod_DuplicateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DuplicateProduct(::grpc::ServerContext* /*context*/, const ::product::DuplicateProductRequest* /*request*/, ::product::DuplicateProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DuplicateProduct(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UploadProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UploadProducts() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UploadProducts(context, request, response); }));
    }
    ~WithRawCallbackMethod_UploadProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadProducts(::grpc::ServerContext* /*context*/, const ::product::UploadProductsRequest* /*request*/, ::product::UploadProductsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UploadProducts(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PatchProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PatchProduct() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PatchProduct(context, request, response); }));
    }
    ~WithRawCallbackMethod_PatchProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchProduct(::grpc::ServerContext* /*context*/, const ::product::PatchProductRequest* /*request*/, ::product::PatchProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PatchProduct(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetProduct() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetProduct(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProduct(::grpc::ServerContext* /*context*/, const ::product::GetProductRequest* /*request*/, ::product::GetProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetProduct(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteProduct() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteProduct(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProduct(::grpc::ServerContext* /*context*/, const ::product::DeleteProductRequest* /*request*/, ::product::DeleteProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteProduct(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateProductCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateProductCategory() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateProductCategory(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateProductCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProductCategory(::grpc::ServerContext* /*context*/, const ::product::CreateProductCategoryRequest* /*request*/, ::product::CreateProductCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateProductCategory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetProductCategoryWithChildren : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetProductCategoryWithChildren() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetProductCategoryWithChildren(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetProductCategoryWithChildren() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProductCategoryWithChildren(::grpc::ServerContext* /*context*/, const ::product::GetProductCategoryWithChildrenRequest* /*request*/, ::product::GetProductCategoryWithChildrenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetProductCategoryWithChildren(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListCategories : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListCategories() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListCategories(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListCategories() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCategories(::grpc::ServerContext* /*context*/, const ::product::ListCategoriesRequest* /*request*/, ::product::ListCategoriesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListCategories(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetChildrenCategories : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetChildrenCategories() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetChildrenCategories(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetChildrenCategories() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetChildrenCategories(::grpc::ServerContext* /*context*/, const ::product::GetChildrenCategoriesRequest* /*request*/, ::product::GetChildrenCategoriesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetChildrenCategories(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListProductGroups : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListProductGroups() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListProductGroups(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListProductGroups() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProductGroups(::grpc::ServerContext* /*context*/, const ::product::ListProductGroupsRequest* /*request*/, ::product::ListProductGroupsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListProductGroups(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateProductGroup() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateProductGroup(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProductGroup(::grpc::ServerContext* /*context*/, const ::product::CreateProductGroupRequest* /*request*/, ::product::CreateProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateProductGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetProductGroup() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetProductGroup(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProductGroup(::grpc::ServerContext* /*context*/, const ::product::GetProductGroupRequest* /*request*/, ::product::GetProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetProductGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateProductGroup() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateProductGroup(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProductGroup(::grpc::ServerContext* /*context*/, const ::product::UpdateProductGroupRequest* /*request*/, ::product::UpdateProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateProductGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteProductGroup() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteProductGroup(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProductGroup(::grpc::ServerContext* /*context*/, const ::product::DeleteProductGroupRequest* /*request*/, ::product::DeleteProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteProductGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GeneratePresignedURLs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GeneratePresignedURLs() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GeneratePresignedURLs(context, request, response); }));
    }
    ~WithRawCallbackMethod_GeneratePresignedURLs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GeneratePresignedURLs(::grpc::ServerContext* /*context*/, const ::product::GeneratePresignedURLsRequest* /*request*/, ::product::GeneratePresignedURLsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GeneratePresignedURLs(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateProduct() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::product::CreateProductRequest, ::product::CreateProductResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::product::CreateProductRequest, ::product::CreateProductResponse>* streamer) {
                       return this->StreamedCreateProduct(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateProduct(::grpc::ServerContext* /*context*/, const ::product::CreateProductRequest* /*request*/, ::product::CreateProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateProduct(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::product::CreateProductRequest,::product::CreateProductResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListProducts() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::product::ListProductsRequest, ::product::ListProductsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::product::ListProductsRequest, ::product::ListProductsResponse>* streamer) {
                       return this->StreamedListProducts(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListProducts(::grpc::ServerContext* /*context*/, const ::product::ListProductsRequest* /*request*/, ::product::ListProductsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListProducts(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::product::ListProductsRequest,::product::ListProductsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DuplicateProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DuplicateProduct() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::product::DuplicateProductRequest, ::product::DuplicateProductResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::product::DuplicateProductRequest, ::product::DuplicateProductResponse>* streamer) {
                       return this->StreamedDuplicateProduct(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DuplicateProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DuplicateProduct(::grpc::ServerContext* /*context*/, const ::product::DuplicateProductRequest* /*request*/, ::product::DuplicateProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDuplicateProduct(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::product::DuplicateProductRequest,::product::DuplicateProductResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UploadProducts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UploadProducts() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::product::UploadProductsRequest, ::product::UploadProductsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::product::UploadProductsRequest, ::product::UploadProductsResponse>* streamer) {
                       return this->StreamedUploadProducts(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UploadProducts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UploadProducts(::grpc::ServerContext* /*context*/, const ::product::UploadProductsRequest* /*request*/, ::product::UploadProductsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUploadProducts(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::product::UploadProductsRequest,::product::UploadProductsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PatchProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PatchProduct() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::product::PatchProductRequest, ::product::PatchProductResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::product::PatchProductRequest, ::product::PatchProductResponse>* streamer) {
                       return this->StreamedPatchProduct(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PatchProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PatchProduct(::grpc::ServerContext* /*context*/, const ::product::PatchProductRequest* /*request*/, ::product::PatchProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPatchProduct(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::product::PatchProductRequest,::product::PatchProductResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetProduct() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::product::GetProductRequest, ::product::GetProductResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::product::GetProductRequest, ::product::GetProductResponse>* streamer) {
                       return this->StreamedGetProduct(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetProduct(::grpc::ServerContext* /*context*/, const ::product::GetProductRequest* /*request*/, ::product::GetProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetProduct(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::product::GetProductRequest,::product::GetProductResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteProduct : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteProduct() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::product::DeleteProductRequest, ::product::DeleteProductResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::product::DeleteProductRequest, ::product::DeleteProductResponse>* streamer) {
                       return this->StreamedDeleteProduct(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteProduct() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteProduct(::grpc::ServerContext* /*context*/, const ::product::DeleteProductRequest* /*request*/, ::product::DeleteProductResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteProduct(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::product::DeleteProductRequest,::product::DeleteProductResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateProductCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateProductCategory() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::product::CreateProductCategoryRequest, ::product::CreateProductCategoryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::product::CreateProductCategoryRequest, ::product::CreateProductCategoryResponse>* streamer) {
                       return this->StreamedCreateProductCategory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateProductCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateProductCategory(::grpc::ServerContext* /*context*/, const ::product::CreateProductCategoryRequest* /*request*/, ::product::CreateProductCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateProductCategory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::product::CreateProductCategoryRequest,::product::CreateProductCategoryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetProductCategoryWithChildren : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetProductCategoryWithChildren() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::product::GetProductCategoryWithChildrenRequest, ::product::GetProductCategoryWithChildrenResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::product::GetProductCategoryWithChildrenRequest, ::product::GetProductCategoryWithChildrenResponse>* streamer) {
                       return this->StreamedGetProductCategoryWithChildren(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetProductCategoryWithChildren() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetProductCategoryWithChildren(::grpc::ServerContext* /*context*/, const ::product::GetProductCategoryWithChildrenRequest* /*request*/, ::product::GetProductCategoryWithChildrenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetProductCategoryWithChildren(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::product::GetProductCategoryWithChildrenRequest,::product::GetProductCategoryWithChildrenResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListCategories : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListCategories() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::product::ListCategoriesRequest, ::product::ListCategoriesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::product::ListCategoriesRequest, ::product::ListCategoriesResponse>* streamer) {
                       return this->StreamedListCategories(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListCategories() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListCategories(::grpc::ServerContext* /*context*/, const ::product::ListCategoriesRequest* /*request*/, ::product::ListCategoriesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListCategories(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::product::ListCategoriesRequest,::product::ListCategoriesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetChildrenCategories : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetChildrenCategories() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::product::GetChildrenCategoriesRequest, ::product::GetChildrenCategoriesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::product::GetChildrenCategoriesRequest, ::product::GetChildrenCategoriesResponse>* streamer) {
                       return this->StreamedGetChildrenCategories(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetChildrenCategories() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetChildrenCategories(::grpc::ServerContext* /*context*/, const ::product::GetChildrenCategoriesRequest* /*request*/, ::product::GetChildrenCategoriesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetChildrenCategories(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::product::GetChildrenCategoriesRequest,::product::GetChildrenCategoriesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListProductGroups : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListProductGroups() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::product::ListProductGroupsRequest, ::product::ListProductGroupsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::product::ListProductGroupsRequest, ::product::ListProductGroupsResponse>* streamer) {
                       return this->StreamedListProductGroups(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListProductGroups() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListProductGroups(::grpc::ServerContext* /*context*/, const ::product::ListProductGroupsRequest* /*request*/, ::product::ListProductGroupsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListProductGroups(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::product::ListProductGroupsRequest,::product::ListProductGroupsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateProductGroup() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::product::CreateProductGroupRequest, ::product::CreateProductGroupResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::product::CreateProductGroupRequest, ::product::CreateProductGroupResponse>* streamer) {
                       return this->StreamedCreateProductGroup(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateProductGroup(::grpc::ServerContext* /*context*/, const ::product::CreateProductGroupRequest* /*request*/, ::product::CreateProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateProductGroup(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::product::CreateProductGroupRequest,::product::CreateProductGroupResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetProductGroup() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::product::GetProductGroupRequest, ::product::GetProductGroupResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::product::GetProductGroupRequest, ::product::GetProductGroupResponse>* streamer) {
                       return this->StreamedGetProductGroup(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetProductGroup(::grpc::ServerContext* /*context*/, const ::product::GetProductGroupRequest* /*request*/, ::product::GetProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetProductGroup(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::product::GetProductGroupRequest,::product::GetProductGroupResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateProductGroup() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::product::UpdateProductGroupRequest, ::product::UpdateProductGroupResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::product::UpdateProductGroupRequest, ::product::UpdateProductGroupResponse>* streamer) {
                       return this->StreamedUpdateProductGroup(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateProductGroup(::grpc::ServerContext* /*context*/, const ::product::UpdateProductGroupRequest* /*request*/, ::product::UpdateProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateProductGroup(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::product::UpdateProductGroupRequest,::product::UpdateProductGroupResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteProductGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteProductGroup() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::product::DeleteProductGroupRequest, ::product::DeleteProductGroupResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::product::DeleteProductGroupRequest, ::product::DeleteProductGroupResponse>* streamer) {
                       return this->StreamedDeleteProductGroup(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteProductGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteProductGroup(::grpc::ServerContext* /*context*/, const ::product::DeleteProductGroupRequest* /*request*/, ::product::DeleteProductGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteProductGroup(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::product::DeleteProductGroupRequest,::product::DeleteProductGroupResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GeneratePresignedURLs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GeneratePresignedURLs() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::product::GeneratePresignedURLsRequest, ::product::GeneratePresignedURLsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::product::GeneratePresignedURLsRequest, ::product::GeneratePresignedURLsResponse>* streamer) {
                       return this->StreamedGeneratePresignedURLs(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GeneratePresignedURLs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GeneratePresignedURLs(::grpc::ServerContext* /*context*/, const ::product::GeneratePresignedURLsRequest* /*request*/, ::product::GeneratePresignedURLsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGeneratePresignedURLs(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::product::GeneratePresignedURLsRequest,::product::GeneratePresignedURLsResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateProduct<WithStreamedUnaryMethod_ListProducts<WithStreamedUnaryMethod_DuplicateProduct<WithStreamedUnaryMethod_UploadProducts<WithStreamedUnaryMethod_PatchProduct<WithStreamedUnaryMethod_GetProduct<WithStreamedUnaryMethod_DeleteProduct<WithStreamedUnaryMethod_CreateProductCategory<WithStreamedUnaryMethod_GetProductCategoryWithChildren<WithStreamedUnaryMethod_ListCategories<WithStreamedUnaryMethod_GetChildrenCategories<WithStreamedUnaryMethod_ListProductGroups<WithStreamedUnaryMethod_CreateProductGroup<WithStreamedUnaryMethod_GetProductGroup<WithStreamedUnaryMethod_UpdateProductGroup<WithStreamedUnaryMethod_DeleteProductGroup<WithStreamedUnaryMethod_GeneratePresignedURLs<Service > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateProduct<WithStreamedUnaryMethod_ListProducts<WithStreamedUnaryMethod_DuplicateProduct<WithStreamedUnaryMethod_UploadProducts<WithStreamedUnaryMethod_PatchProduct<WithStreamedUnaryMethod_GetProduct<WithStreamedUnaryMethod_DeleteProduct<WithStreamedUnaryMethod_CreateProductCategory<WithStreamedUnaryMethod_GetProductCategoryWithChildren<WithStreamedUnaryMethod_ListCategories<WithStreamedUnaryMethod_GetChildrenCategories<WithStreamedUnaryMethod_ListProductGroups<WithStreamedUnaryMethod_CreateProductGroup<WithStreamedUnaryMethod_GetProductGroup<WithStreamedUnaryMethod_UpdateProductGroup<WithStreamedUnaryMethod_DeleteProductGroup<WithStreamedUnaryMethod_GeneratePresignedURLs<Service > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace product


#endif  // GRPC_product_2fproduct_2eproto__INCLUDED

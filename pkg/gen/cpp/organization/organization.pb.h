// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: organization/organization.proto
// Protobuf C++ Version: 5.29.3

#ifndef organization_2forganization_2eproto_2epb_2eh
#define organization_2forganization_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_organization_2forganization_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_organization_2forganization_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_organization_2forganization_2eproto;
namespace organization {
class AddressModel;
struct AddressModelDefaultTypeInternal;
extern AddressModelDefaultTypeInternal _AddressModel_default_instance_;
class BankAccountModel;
struct BankAccountModelDefaultTypeInternal;
extern BankAccountModelDefaultTypeInternal _BankAccountModel_default_instance_;
class ContactModel;
struct ContactModelDefaultTypeInternal;
extern ContactModelDefaultTypeInternal _ContactModel_default_instance_;
class Counterparty;
struct CounterpartyDefaultTypeInternal;
extern CounterpartyDefaultTypeInternal _Counterparty_default_instance_;
class CreateAddressRequest;
struct CreateAddressRequestDefaultTypeInternal;
extern CreateAddressRequestDefaultTypeInternal _CreateAddressRequest_default_instance_;
class CreateAddressResponse;
struct CreateAddressResponseDefaultTypeInternal;
extern CreateAddressResponseDefaultTypeInternal _CreateAddressResponse_default_instance_;
class CreateBankAccountRequest;
struct CreateBankAccountRequestDefaultTypeInternal;
extern CreateBankAccountRequestDefaultTypeInternal _CreateBankAccountRequest_default_instance_;
class CreateBankAccountResponse;
struct CreateBankAccountResponseDefaultTypeInternal;
extern CreateBankAccountResponseDefaultTypeInternal _CreateBankAccountResponse_default_instance_;
class CreateContactRequest;
struct CreateContactRequestDefaultTypeInternal;
extern CreateContactRequestDefaultTypeInternal _CreateContactRequest_default_instance_;
class CreateContactResponse;
struct CreateContactResponseDefaultTypeInternal;
extern CreateContactResponseDefaultTypeInternal _CreateContactResponse_default_instance_;
class CreateCounterpartyRequest;
struct CreateCounterpartyRequestDefaultTypeInternal;
extern CreateCounterpartyRequestDefaultTypeInternal _CreateCounterpartyRequest_default_instance_;
class CreateCounterpartyResponse;
struct CreateCounterpartyResponseDefaultTypeInternal;
extern CreateCounterpartyResponseDefaultTypeInternal _CreateCounterpartyResponse_default_instance_;
class CreateOrganizationRequest;
struct CreateOrganizationRequestDefaultTypeInternal;
extern CreateOrganizationRequestDefaultTypeInternal _CreateOrganizationRequest_default_instance_;
class CreateOrganizationResponse;
struct CreateOrganizationResponseDefaultTypeInternal;
extern CreateOrganizationResponseDefaultTypeInternal _CreateOrganizationResponse_default_instance_;
class CreateRelationshipRequest;
struct CreateRelationshipRequestDefaultTypeInternal;
extern CreateRelationshipRequestDefaultTypeInternal _CreateRelationshipRequest_default_instance_;
class CreateRelationshipResponse;
struct CreateRelationshipResponseDefaultTypeInternal;
extern CreateRelationshipResponseDefaultTypeInternal _CreateRelationshipResponse_default_instance_;
class CreateRelationshipTypeRequest;
struct CreateRelationshipTypeRequestDefaultTypeInternal;
extern CreateRelationshipTypeRequestDefaultTypeInternal _CreateRelationshipTypeRequest_default_instance_;
class CreateRelationshipTypeResponse;
struct CreateRelationshipTypeResponseDefaultTypeInternal;
extern CreateRelationshipTypeResponseDefaultTypeInternal _CreateRelationshipTypeResponse_default_instance_;
class CreateSaleSettingsRequest;
struct CreateSaleSettingsRequestDefaultTypeInternal;
extern CreateSaleSettingsRequestDefaultTypeInternal _CreateSaleSettingsRequest_default_instance_;
class CreateSaleSettingsResponse;
struct CreateSaleSettingsResponseDefaultTypeInternal;
extern CreateSaleSettingsResponseDefaultTypeInternal _CreateSaleSettingsResponse_default_instance_;
class DeleteAddressRequest;
struct DeleteAddressRequestDefaultTypeInternal;
extern DeleteAddressRequestDefaultTypeInternal _DeleteAddressRequest_default_instance_;
class DeleteAddressResponse;
struct DeleteAddressResponseDefaultTypeInternal;
extern DeleteAddressResponseDefaultTypeInternal _DeleteAddressResponse_default_instance_;
class DeleteBankAccountRequest;
struct DeleteBankAccountRequestDefaultTypeInternal;
extern DeleteBankAccountRequestDefaultTypeInternal _DeleteBankAccountRequest_default_instance_;
class DeleteBankAccountResponse;
struct DeleteBankAccountResponseDefaultTypeInternal;
extern DeleteBankAccountResponseDefaultTypeInternal _DeleteBankAccountResponse_default_instance_;
class DeleteContactRequest;
struct DeleteContactRequestDefaultTypeInternal;
extern DeleteContactRequestDefaultTypeInternal _DeleteContactRequest_default_instance_;
class DeleteContactResponse;
struct DeleteContactResponseDefaultTypeInternal;
extern DeleteContactResponseDefaultTypeInternal _DeleteContactResponse_default_instance_;
class EnsureRelationshipExistsRequest;
struct EnsureRelationshipExistsRequestDefaultTypeInternal;
extern EnsureRelationshipExistsRequestDefaultTypeInternal _EnsureRelationshipExistsRequest_default_instance_;
class EnsureRelationshipExistsResponse;
struct EnsureRelationshipExistsResponseDefaultTypeInternal;
extern EnsureRelationshipExistsResponseDefaultTypeInternal _EnsureRelationshipExistsResponse_default_instance_;
class Expences;
struct ExpencesDefaultTypeInternal;
extern ExpencesDefaultTypeInternal _Expences_default_instance_;
class ExpencesModel;
struct ExpencesModelDefaultTypeInternal;
extern ExpencesModelDefaultTypeInternal _ExpencesModel_default_instance_;
class GeneratePresignedURLsRequest;
struct GeneratePresignedURLsRequestDefaultTypeInternal;
extern GeneratePresignedURLsRequestDefaultTypeInternal _GeneratePresignedURLsRequest_default_instance_;
class GeneratePresignedURLsResponse;
struct GeneratePresignedURLsResponseDefaultTypeInternal;
extern GeneratePresignedURLsResponseDefaultTypeInternal _GeneratePresignedURLsResponse_default_instance_;
class GetAddressRequest;
struct GetAddressRequestDefaultTypeInternal;
extern GetAddressRequestDefaultTypeInternal _GetAddressRequest_default_instance_;
class GetAddressResponse;
struct GetAddressResponseDefaultTypeInternal;
extern GetAddressResponseDefaultTypeInternal _GetAddressResponse_default_instance_;
class GetContactRequest;
struct GetContactRequestDefaultTypeInternal;
extern GetContactRequestDefaultTypeInternal _GetContactRequest_default_instance_;
class GetContactResponse;
struct GetContactResponseDefaultTypeInternal;
extern GetContactResponseDefaultTypeInternal _GetContactResponse_default_instance_;
class GetCounterpartyRequest;
struct GetCounterpartyRequestDefaultTypeInternal;
extern GetCounterpartyRequestDefaultTypeInternal _GetCounterpartyRequest_default_instance_;
class GetCounterpartyResponse;
struct GetCounterpartyResponseDefaultTypeInternal;
extern GetCounterpartyResponseDefaultTypeInternal _GetCounterpartyResponse_default_instance_;
class GetDefaultBankAccountRequest;
struct GetDefaultBankAccountRequestDefaultTypeInternal;
extern GetDefaultBankAccountRequestDefaultTypeInternal _GetDefaultBankAccountRequest_default_instance_;
class GetDefaultBankAccountResponse;
struct GetDefaultBankAccountResponseDefaultTypeInternal;
extern GetDefaultBankAccountResponseDefaultTypeInternal _GetDefaultBankAccountResponse_default_instance_;
class GetOrganizationRequest;
struct GetOrganizationRequestDefaultTypeInternal;
extern GetOrganizationRequestDefaultTypeInternal _GetOrganizationRequest_default_instance_;
class GetOrganizationResponse;
struct GetOrganizationResponseDefaultTypeInternal;
extern GetOrganizationResponseDefaultTypeInternal _GetOrganizationResponse_default_instance_;
class GetRelationshipTypeRequest;
struct GetRelationshipTypeRequestDefaultTypeInternal;
extern GetRelationshipTypeRequestDefaultTypeInternal _GetRelationshipTypeRequest_default_instance_;
class GetRelationshipTypeResponse;
struct GetRelationshipTypeResponseDefaultTypeInternal;
extern GetRelationshipTypeResponseDefaultTypeInternal _GetRelationshipTypeResponse_default_instance_;
class GetSaleSettingsRequest;
struct GetSaleSettingsRequestDefaultTypeInternal;
extern GetSaleSettingsRequestDefaultTypeInternal _GetSaleSettingsRequest_default_instance_;
class GetSaleSettingsResponse;
struct GetSaleSettingsResponseDefaultTypeInternal;
extern GetSaleSettingsResponseDefaultTypeInternal _GetSaleSettingsResponse_default_instance_;
class ImageModel;
struct ImageModelDefaultTypeInternal;
extern ImageModelDefaultTypeInternal _ImageModel_default_instance_;
class ListBankAccountsRequest;
struct ListBankAccountsRequestDefaultTypeInternal;
extern ListBankAccountsRequestDefaultTypeInternal _ListBankAccountsRequest_default_instance_;
class ListBankAccountsResponse;
struct ListBankAccountsResponseDefaultTypeInternal;
extern ListBankAccountsResponseDefaultTypeInternal _ListBankAccountsResponse_default_instance_;
class ListContactsRequest;
struct ListContactsRequestDefaultTypeInternal;
extern ListContactsRequestDefaultTypeInternal _ListContactsRequest_default_instance_;
class ListContactsResponse;
struct ListContactsResponseDefaultTypeInternal;
extern ListContactsResponseDefaultTypeInternal _ListContactsResponse_default_instance_;
class ListCounterpartiesRequest;
struct ListCounterpartiesRequestDefaultTypeInternal;
extern ListCounterpartiesRequestDefaultTypeInternal _ListCounterpartiesRequest_default_instance_;
class ListCounterpartiesResponse;
struct ListCounterpartiesResponseDefaultTypeInternal;
extern ListCounterpartiesResponseDefaultTypeInternal _ListCounterpartiesResponse_default_instance_;
class ListOrganizationsRequest;
struct ListOrganizationsRequestDefaultTypeInternal;
extern ListOrganizationsRequestDefaultTypeInternal _ListOrganizationsRequest_default_instance_;
class ListOrganizationsResponse;
struct ListOrganizationsResponseDefaultTypeInternal;
extern ListOrganizationsResponseDefaultTypeInternal _ListOrganizationsResponse_default_instance_;
class ListRelationshipTypesRequest;
struct ListRelationshipTypesRequestDefaultTypeInternal;
extern ListRelationshipTypesRequestDefaultTypeInternal _ListRelationshipTypesRequest_default_instance_;
class ListRelationshipTypesResponse;
struct ListRelationshipTypesResponseDefaultTypeInternal;
extern ListRelationshipTypesResponseDefaultTypeInternal _ListRelationshipTypesResponse_default_instance_;
class ListRelationshipsRequest;
struct ListRelationshipsRequestDefaultTypeInternal;
extern ListRelationshipsRequestDefaultTypeInternal _ListRelationshipsRequest_default_instance_;
class ListRelationshipsResponse;
struct ListRelationshipsResponseDefaultTypeInternal;
extern ListRelationshipsResponseDefaultTypeInternal _ListRelationshipsResponse_default_instance_;
class Organization;
struct OrganizationDefaultTypeInternal;
extern OrganizationDefaultTypeInternal _Organization_default_instance_;
class OrganizationModel;
struct OrganizationModelDefaultTypeInternal;
extern OrganizationModelDefaultTypeInternal _OrganizationModel_default_instance_;
class PatchAddressRequest;
struct PatchAddressRequestDefaultTypeInternal;
extern PatchAddressRequestDefaultTypeInternal _PatchAddressRequest_default_instance_;
class PatchAddressResponse;
struct PatchAddressResponseDefaultTypeInternal;
extern PatchAddressResponseDefaultTypeInternal _PatchAddressResponse_default_instance_;
class PatchCounterpartyRequest;
struct PatchCounterpartyRequestDefaultTypeInternal;
extern PatchCounterpartyRequestDefaultTypeInternal _PatchCounterpartyRequest_default_instance_;
class PatchCounterpartyResponse;
struct PatchCounterpartyResponseDefaultTypeInternal;
extern PatchCounterpartyResponseDefaultTypeInternal _PatchCounterpartyResponse_default_instance_;
class PatchOrganizationRequest;
struct PatchOrganizationRequestDefaultTypeInternal;
extern PatchOrganizationRequestDefaultTypeInternal _PatchOrganizationRequest_default_instance_;
class PatchOrganizationResponse;
struct PatchOrganizationResponseDefaultTypeInternal;
extern PatchOrganizationResponseDefaultTypeInternal _PatchOrganizationResponse_default_instance_;
class PresignedURLInfo;
struct PresignedURLInfoDefaultTypeInternal;
extern PresignedURLInfoDefaultTypeInternal _PresignedURLInfo_default_instance_;
class Relationship;
struct RelationshipDefaultTypeInternal;
extern RelationshipDefaultTypeInternal _Relationship_default_instance_;
class RelationshipModel;
struct RelationshipModelDefaultTypeInternal;
extern RelationshipModelDefaultTypeInternal _RelationshipModel_default_instance_;
class RelationshipTypeModel;
struct RelationshipTypeModelDefaultTypeInternal;
extern RelationshipTypeModelDefaultTypeInternal _RelationshipTypeModel_default_instance_;
class SaleSettings;
struct SaleSettingsDefaultTypeInternal;
extern SaleSettingsDefaultTypeInternal _SaleSettings_default_instance_;
class SaleSettingsModel;
struct SaleSettingsModelDefaultTypeInternal;
extern SaleSettingsModelDefaultTypeInternal _SaleSettingsModel_default_instance_;
class UpdateAddressRequest;
struct UpdateAddressRequestDefaultTypeInternal;
extern UpdateAddressRequestDefaultTypeInternal _UpdateAddressRequest_default_instance_;
class UpdateAddressResponse;
struct UpdateAddressResponseDefaultTypeInternal;
extern UpdateAddressResponseDefaultTypeInternal _UpdateAddressResponse_default_instance_;
class UpdateBankAccountRequest;
struct UpdateBankAccountRequestDefaultTypeInternal;
extern UpdateBankAccountRequestDefaultTypeInternal _UpdateBankAccountRequest_default_instance_;
class UpdateBankAccountResponse;
struct UpdateBankAccountResponseDefaultTypeInternal;
extern UpdateBankAccountResponseDefaultTypeInternal _UpdateBankAccountResponse_default_instance_;
class UpdateBankAccountsRequest;
struct UpdateBankAccountsRequestDefaultTypeInternal;
extern UpdateBankAccountsRequestDefaultTypeInternal _UpdateBankAccountsRequest_default_instance_;
class UpdateBankAccountsResponse;
struct UpdateBankAccountsResponseDefaultTypeInternal;
extern UpdateBankAccountsResponseDefaultTypeInternal _UpdateBankAccountsResponse_default_instance_;
class UpdateContactRequest;
struct UpdateContactRequestDefaultTypeInternal;
extern UpdateContactRequestDefaultTypeInternal _UpdateContactRequest_default_instance_;
class UpdateContactResponse;
struct UpdateContactResponseDefaultTypeInternal;
extern UpdateContactResponseDefaultTypeInternal _UpdateContactResponse_default_instance_;
class UpdateOrganizationRequest;
struct UpdateOrganizationRequestDefaultTypeInternal;
extern UpdateOrganizationRequestDefaultTypeInternal _UpdateOrganizationRequest_default_instance_;
class UpdateOrganizationResponse;
struct UpdateOrganizationResponseDefaultTypeInternal;
extern UpdateOrganizationResponseDefaultTypeInternal _UpdateOrganizationResponse_default_instance_;
class UpdateRelationshipRequest;
struct UpdateRelationshipRequestDefaultTypeInternal;
extern UpdateRelationshipRequestDefaultTypeInternal _UpdateRelationshipRequest_default_instance_;
class UpdateRelationshipResponse;
struct UpdateRelationshipResponseDefaultTypeInternal;
extern UpdateRelationshipResponseDefaultTypeInternal _UpdateRelationshipResponse_default_instance_;
class UpdateRelationshipTypeRequest;
struct UpdateRelationshipTypeRequestDefaultTypeInternal;
extern UpdateRelationshipTypeRequestDefaultTypeInternal _UpdateRelationshipTypeRequest_default_instance_;
class UpdateRelationshipTypeResponse;
struct UpdateRelationshipTypeResponseDefaultTypeInternal;
extern UpdateRelationshipTypeResponseDefaultTypeInternal _UpdateRelationshipTypeResponse_default_instance_;
class UpdateSaleSettingsRequest;
struct UpdateSaleSettingsRequestDefaultTypeInternal;
extern UpdateSaleSettingsRequestDefaultTypeInternal _UpdateSaleSettingsRequest_default_instance_;
class UpdateSaleSettingsResponse;
struct UpdateSaleSettingsResponseDefaultTypeInternal;
extern UpdateSaleSettingsResponseDefaultTypeInternal _UpdateSaleSettingsResponse_default_instance_;
}  // namespace organization
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace organization {

// ===================================================================


// -------------------------------------------------------------------

class SaleSettingsModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.SaleSettingsModel) */ {
 public:
  inline SaleSettingsModel() : SaleSettingsModel(nullptr) {}
  ~SaleSettingsModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SaleSettingsModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SaleSettingsModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SaleSettingsModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline SaleSettingsModel(const SaleSettingsModel& from) : SaleSettingsModel(nullptr, from) {}
  inline SaleSettingsModel(SaleSettingsModel&& from) noexcept
      : SaleSettingsModel(nullptr, std::move(from)) {}
  inline SaleSettingsModel& operator=(const SaleSettingsModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline SaleSettingsModel& operator=(SaleSettingsModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SaleSettingsModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const SaleSettingsModel* internal_default_instance() {
    return reinterpret_cast<const SaleSettingsModel*>(
        &_SaleSettingsModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SaleSettingsModel& a, SaleSettingsModel& b) { a.Swap(&b); }
  inline void Swap(SaleSettingsModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SaleSettingsModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SaleSettingsModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SaleSettingsModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SaleSettingsModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SaleSettingsModel& from) { SaleSettingsModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SaleSettingsModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.SaleSettingsModel"; }

 protected:
  explicit SaleSettingsModel(::google::protobuf::Arena* arena);
  SaleSettingsModel(::google::protobuf::Arena* arena, const SaleSettingsModel& from);
  SaleSettingsModel(::google::protobuf::Arena* arena, SaleSettingsModel&& from) noexcept
      : SaleSettingsModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryIdFieldNumber = 4,
    kIdFieldNumber = 1,
    kOrganizationIdFieldNumber = 2,
    kProfitPercentFieldNumber = 3,
  };
  // string category_id = 4;
  void clear_category_id() ;
  const std::string& category_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_category_id(Arg_&& arg, Args_... args);
  std::string* mutable_category_id();
  PROTOBUF_NODISCARD std::string* release_category_id();
  void set_allocated_category_id(std::string* value);

  private:
  const std::string& _internal_category_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_category_id(
      const std::string& value);
  std::string* _internal_mutable_category_id();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 organization_id = 2;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // float profit_percent = 3;
  void clear_profit_percent() ;
  float profit_percent() const;
  void set_profit_percent(float value);

  private:
  float _internal_profit_percent() const;
  void _internal_set_profit_percent(float value);

  public:
  // @@protoc_insertion_point(class_scope:organization.SaleSettingsModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      50, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SaleSettingsModel& from_msg);
    ::google::protobuf::internal::ArenaStringPtr category_id_;
    ::int64_t id_;
    ::int64_t organization_id_;
    float profit_percent_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class RelationshipTypeModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.RelationshipTypeModel) */ {
 public:
  inline RelationshipTypeModel() : RelationshipTypeModel(nullptr) {}
  ~RelationshipTypeModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RelationshipTypeModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RelationshipTypeModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RelationshipTypeModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline RelationshipTypeModel(const RelationshipTypeModel& from) : RelationshipTypeModel(nullptr, from) {}
  inline RelationshipTypeModel(RelationshipTypeModel&& from) noexcept
      : RelationshipTypeModel(nullptr, std::move(from)) {}
  inline RelationshipTypeModel& operator=(const RelationshipTypeModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline RelationshipTypeModel& operator=(RelationshipTypeModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RelationshipTypeModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const RelationshipTypeModel* internal_default_instance() {
    return reinterpret_cast<const RelationshipTypeModel*>(
        &_RelationshipTypeModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(RelationshipTypeModel& a, RelationshipTypeModel& b) { a.Swap(&b); }
  inline void Swap(RelationshipTypeModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RelationshipTypeModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RelationshipTypeModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RelationshipTypeModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RelationshipTypeModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RelationshipTypeModel& from) { RelationshipTypeModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RelationshipTypeModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.RelationshipTypeModel"; }

 protected:
  explicit RelationshipTypeModel(::google::protobuf::Arena* arena);
  RelationshipTypeModel(::google::protobuf::Arena* arena, const RelationshipTypeModel& from);
  RelationshipTypeModel(::google::protobuf::Arena* arena, RelationshipTypeModel&& from) noexcept
      : RelationshipTypeModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeNameFieldNumber = 3,
    kDescriptionFieldNumber = 4,
    kCreatedAtFieldNumber = 5,
    kUpdatedAtFieldNumber = 6,
    kIdFieldNumber = 1,
    kOwningOrganizationIdFieldNumber = 2,
  };
  // optional string type_name = 3;
  bool has_type_name() const;
  void clear_type_name() ;
  const std::string& type_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type_name(Arg_&& arg, Args_... args);
  std::string* mutable_type_name();
  PROTOBUF_NODISCARD std::string* release_type_name();
  void set_allocated_type_name(std::string* value);

  private:
  const std::string& _internal_type_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_name(
      const std::string& value);
  std::string* _internal_mutable_type_name();

  public:
  // optional string description = 4;
  bool has_description() const;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // optional string created_at = 5;
  bool has_created_at() const;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // optional string updated_at = 6;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // optional int64 id = 1;
  bool has_id() const;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // optional int64 owning_organization_id = 2;
  bool has_owning_organization_id() const;
  void clear_owning_organization_id() ;
  ::int64_t owning_organization_id() const;
  void set_owning_organization_id(::int64_t value);

  private:
  ::int64_t _internal_owning_organization_id() const;
  void _internal_set_owning_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.RelationshipTypeModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      83, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RelationshipTypeModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr type_name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::int64_t id_;
    ::int64_t owning_organization_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class RelationshipModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.RelationshipModel) */ {
 public:
  inline RelationshipModel() : RelationshipModel(nullptr) {}
  ~RelationshipModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RelationshipModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RelationshipModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RelationshipModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline RelationshipModel(const RelationshipModel& from) : RelationshipModel(nullptr, from) {}
  inline RelationshipModel(RelationshipModel&& from) noexcept
      : RelationshipModel(nullptr, std::move(from)) {}
  inline RelationshipModel& operator=(const RelationshipModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline RelationshipModel& operator=(RelationshipModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RelationshipModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const RelationshipModel* internal_default_instance() {
    return reinterpret_cast<const RelationshipModel*>(
        &_RelationshipModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(RelationshipModel& a, RelationshipModel& b) { a.Swap(&b); }
  inline void Swap(RelationshipModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RelationshipModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RelationshipModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RelationshipModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RelationshipModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RelationshipModel& from) { RelationshipModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RelationshipModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.RelationshipModel"; }

 protected:
  explicit RelationshipModel(::google::protobuf::Arena* arena);
  RelationshipModel(::google::protobuf::Arena* arena, const RelationshipModel& from);
  RelationshipModel(::google::protobuf::Arena* arena, RelationshipModel&& from) noexcept
      : RelationshipModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCreatedAtFieldNumber = 5,
    kUpdatedAtFieldNumber = 6,
    kIdFieldNumber = 1,
    kSourceOrganizationIdFieldNumber = 2,
    kTargetOrganizationIdFieldNumber = 3,
    kRelationshipTypeIdFieldNumber = 4,
  };
  // optional string created_at = 5;
  bool has_created_at() const;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // optional string updated_at = 6;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // optional int64 id = 1;
  bool has_id() const;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // optional int64 source_organization_id = 2;
  bool has_source_organization_id() const;
  void clear_source_organization_id() ;
  ::int64_t source_organization_id() const;
  void set_source_organization_id(::int64_t value);

  private:
  ::int64_t _internal_source_organization_id() const;
  void _internal_set_source_organization_id(::int64_t value);

  public:
  // optional int64 target_organization_id = 3;
  bool has_target_organization_id() const;
  void clear_target_organization_id() ;
  ::int64_t target_organization_id() const;
  void set_target_organization_id(::int64_t value);

  private:
  ::int64_t _internal_target_organization_id() const;
  void _internal_set_target_organization_id(::int64_t value);

  public:
  // optional int64 relationship_type_id = 4;
  bool has_relationship_type_id() const;
  void clear_relationship_type_id() ;
  ::int64_t relationship_type_id() const;
  void set_relationship_type_id(::int64_t value);

  private:
  ::int64_t _internal_relationship_type_id() const;
  void _internal_set_relationship_type_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.RelationshipModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RelationshipModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::int64_t id_;
    ::int64_t source_organization_id_;
    ::int64_t target_organization_id_;
    ::int64_t relationship_type_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class PresignedURLInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.PresignedURLInfo) */ {
 public:
  inline PresignedURLInfo() : PresignedURLInfo(nullptr) {}
  ~PresignedURLInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PresignedURLInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PresignedURLInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PresignedURLInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline PresignedURLInfo(const PresignedURLInfo& from) : PresignedURLInfo(nullptr, from) {}
  inline PresignedURLInfo(PresignedURLInfo&& from) noexcept
      : PresignedURLInfo(nullptr, std::move(from)) {}
  inline PresignedURLInfo& operator=(const PresignedURLInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline PresignedURLInfo& operator=(PresignedURLInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PresignedURLInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const PresignedURLInfo* internal_default_instance() {
    return reinterpret_cast<const PresignedURLInfo*>(
        &_PresignedURLInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(PresignedURLInfo& a, PresignedURLInfo& b) { a.Swap(&b); }
  inline void Swap(PresignedURLInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PresignedURLInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PresignedURLInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PresignedURLInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PresignedURLInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PresignedURLInfo& from) { PresignedURLInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PresignedURLInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.PresignedURLInfo"; }

 protected:
  explicit PresignedURLInfo(::google::protobuf::Arena* arena);
  PresignedURLInfo(::google::protobuf::Arena* arena, const PresignedURLInfo& from);
  PresignedURLInfo(::google::protobuf::Arena* arena, PresignedURLInfo&& from) noexcept
      : PresignedURLInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFileNameFieldNumber = 1,
    kPresignedUrlFieldNumber = 2,
    kObjectKeyFieldNumber = 3,
  };
  // string file_name = 1;
  void clear_file_name() ;
  const std::string& file_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file_name(Arg_&& arg, Args_... args);
  std::string* mutable_file_name();
  PROTOBUF_NODISCARD std::string* release_file_name();
  void set_allocated_file_name(std::string* value);

  private:
  const std::string& _internal_file_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_name(
      const std::string& value);
  std::string* _internal_mutable_file_name();

  public:
  // string presigned_url = 2;
  void clear_presigned_url() ;
  const std::string& presigned_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_presigned_url(Arg_&& arg, Args_... args);
  std::string* mutable_presigned_url();
  PROTOBUF_NODISCARD std::string* release_presigned_url();
  void set_allocated_presigned_url(std::string* value);

  private:
  const std::string& _internal_presigned_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_presigned_url(
      const std::string& value);
  std::string* _internal_mutable_presigned_url();

  public:
  // string object_key = 3;
  void clear_object_key() ;
  const std::string& object_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_object_key(Arg_&& arg, Args_... args);
  std::string* mutable_object_key();
  PROTOBUF_NODISCARD std::string* release_object_key();
  void set_allocated_object_key(std::string* value);

  private:
  const std::string& _internal_object_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_object_key(
      const std::string& value);
  std::string* _internal_mutable_object_key();

  public:
  // @@protoc_insertion_point(class_scope:organization.PresignedURLInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      70, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PresignedURLInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr file_name_;
    ::google::protobuf::internal::ArenaStringPtr presigned_url_;
    ::google::protobuf::internal::ArenaStringPtr object_key_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class OrganizationModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.OrganizationModel) */ {
 public:
  inline OrganizationModel() : OrganizationModel(nullptr) {}
  ~OrganizationModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrganizationModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrganizationModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrganizationModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrganizationModel(const OrganizationModel& from) : OrganizationModel(nullptr, from) {}
  inline OrganizationModel(OrganizationModel&& from) noexcept
      : OrganizationModel(nullptr, std::move(from)) {}
  inline OrganizationModel& operator=(const OrganizationModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrganizationModel& operator=(OrganizationModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrganizationModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrganizationModel* internal_default_instance() {
    return reinterpret_cast<const OrganizationModel*>(
        &_OrganizationModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(OrganizationModel& a, OrganizationModel& b) { a.Swap(&b); }
  inline void Swap(OrganizationModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrganizationModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrganizationModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrganizationModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrganizationModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrganizationModel& from) { OrganizationModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrganizationModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.OrganizationModel"; }

 protected:
  explicit OrganizationModel(::google::protobuf::Arena* arena);
  OrganizationModel(::google::protobuf::Arena* arena, const OrganizationModel& from);
  OrganizationModel(::google::protobuf::Arena* arena, OrganizationModel&& from) noexcept
      : OrganizationModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kImageUrlFieldNumber = 3,
    kTypeFieldNumber = 4,
    kLegalNameFieldNumber = 5,
    kBinFieldNumber = 6,
    kPhoneNumberFieldNumber = 7,
    kEmailFieldNumber = 8,
    kLegalAddressFieldNumber = 10,
    kCreatedAtFieldNumber = 11,
    kUpdatedAtFieldNumber = 12,
    kIdFieldNumber = 1,
    kAddressIdFieldNumber = 9,
  };
  // optional string name = 2;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string image_url = 3;
  bool has_image_url() const;
  void clear_image_url() ;
  const std::string& image_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_image_url(Arg_&& arg, Args_... args);
  std::string* mutable_image_url();
  PROTOBUF_NODISCARD std::string* release_image_url();
  void set_allocated_image_url(std::string* value);

  private:
  const std::string& _internal_image_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_image_url(
      const std::string& value);
  std::string* _internal_mutable_image_url();

  public:
  // string type = 4;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // optional string legal_name = 5;
  bool has_legal_name() const;
  void clear_legal_name() ;
  const std::string& legal_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_legal_name(Arg_&& arg, Args_... args);
  std::string* mutable_legal_name();
  PROTOBUF_NODISCARD std::string* release_legal_name();
  void set_allocated_legal_name(std::string* value);

  private:
  const std::string& _internal_legal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_legal_name(
      const std::string& value);
  std::string* _internal_mutable_legal_name();

  public:
  // optional string bin = 6;
  bool has_bin() const;
  void clear_bin() ;
  const std::string& bin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bin(Arg_&& arg, Args_... args);
  std::string* mutable_bin();
  PROTOBUF_NODISCARD std::string* release_bin();
  void set_allocated_bin(std::string* value);

  private:
  const std::string& _internal_bin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bin(
      const std::string& value);
  std::string* _internal_mutable_bin();

  public:
  // optional string phone_number = 7;
  bool has_phone_number() const;
  void clear_phone_number() ;
  const std::string& phone_number() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_phone_number(Arg_&& arg, Args_... args);
  std::string* mutable_phone_number();
  PROTOBUF_NODISCARD std::string* release_phone_number();
  void set_allocated_phone_number(std::string* value);

  private:
  const std::string& _internal_phone_number() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_phone_number(
      const std::string& value);
  std::string* _internal_mutable_phone_number();

  public:
  // optional string email = 8;
  bool has_email() const;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // optional string legal_address = 10;
  bool has_legal_address() const;
  void clear_legal_address() ;
  const std::string& legal_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_legal_address(Arg_&& arg, Args_... args);
  std::string* mutable_legal_address();
  PROTOBUF_NODISCARD std::string* release_legal_address();
  void set_allocated_legal_address(std::string* value);

  private:
  const std::string& _internal_legal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_legal_address(
      const std::string& value);
  std::string* _internal_mutable_legal_address();

  public:
  // string created_at = 11;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // string updated_at = 12;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // optional int64 id = 1;
  bool has_id() const;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // optional int64 address_id = 9;
  bool has_address_id() const;
  void clear_address_id() ;
  ::int64_t address_id() const;
  void set_address_id(::int64_t value);

  private:
  ::int64_t _internal_address_id() const;
  void _internal_set_address_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.OrganizationModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 0,
      127, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrganizationModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr image_url_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr legal_name_;
    ::google::protobuf::internal::ArenaStringPtr bin_;
    ::google::protobuf::internal::ArenaStringPtr phone_number_;
    ::google::protobuf::internal::ArenaStringPtr email_;
    ::google::protobuf::internal::ArenaStringPtr legal_address_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::int64_t id_;
    ::int64_t address_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class ListRelationshipsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.ListRelationshipsRequest) */ {
 public:
  inline ListRelationshipsRequest() : ListRelationshipsRequest(nullptr) {}
  ~ListRelationshipsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListRelationshipsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListRelationshipsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListRelationshipsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListRelationshipsRequest(const ListRelationshipsRequest& from) : ListRelationshipsRequest(nullptr, from) {}
  inline ListRelationshipsRequest(ListRelationshipsRequest&& from) noexcept
      : ListRelationshipsRequest(nullptr, std::move(from)) {}
  inline ListRelationshipsRequest& operator=(const ListRelationshipsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListRelationshipsRequest& operator=(ListRelationshipsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListRelationshipsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListRelationshipsRequest* internal_default_instance() {
    return reinterpret_cast<const ListRelationshipsRequest*>(
        &_ListRelationshipsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 63;
  friend void swap(ListRelationshipsRequest& a, ListRelationshipsRequest& b) { a.Swap(&b); }
  inline void Swap(ListRelationshipsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListRelationshipsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListRelationshipsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListRelationshipsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListRelationshipsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListRelationshipsRequest& from) { ListRelationshipsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListRelationshipsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.ListRelationshipsRequest"; }

 protected:
  explicit ListRelationshipsRequest(::google::protobuf::Arena* arena);
  ListRelationshipsRequest(::google::protobuf::Arena* arena, const ListRelationshipsRequest& from);
  ListRelationshipsRequest(::google::protobuf::Arena* arena, ListRelationshipsRequest&& from) noexcept
      : ListRelationshipsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrganizationIdFieldNumber = 1,
    kLimitFieldNumber = 2,
    kOffsetFieldNumber = 3,
  };
  // int64 organization_id = 1;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // int32 limit = 2;
  void clear_limit() ;
  ::int32_t limit() const;
  void set_limit(::int32_t value);

  private:
  ::int32_t _internal_limit() const;
  void _internal_set_limit(::int32_t value);

  public:
  // int32 offset = 3;
  void clear_offset() ;
  ::int32_t offset() const;
  void set_offset(::int32_t value);

  private:
  ::int32_t _internal_offset() const;
  void _internal_set_offset(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.ListRelationshipsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListRelationshipsRequest& from_msg);
    ::int64_t organization_id_;
    ::int32_t limit_;
    ::int32_t offset_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class ListRelationshipTypesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.ListRelationshipTypesRequest) */ {
 public:
  inline ListRelationshipTypesRequest() : ListRelationshipTypesRequest(nullptr) {}
  ~ListRelationshipTypesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListRelationshipTypesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListRelationshipTypesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListRelationshipTypesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListRelationshipTypesRequest(const ListRelationshipTypesRequest& from) : ListRelationshipTypesRequest(nullptr, from) {}
  inline ListRelationshipTypesRequest(ListRelationshipTypesRequest&& from) noexcept
      : ListRelationshipTypesRequest(nullptr, std::move(from)) {}
  inline ListRelationshipTypesRequest& operator=(const ListRelationshipTypesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListRelationshipTypesRequest& operator=(ListRelationshipTypesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListRelationshipTypesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListRelationshipTypesRequest* internal_default_instance() {
    return reinterpret_cast<const ListRelationshipTypesRequest*>(
        &_ListRelationshipTypesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 67;
  friend void swap(ListRelationshipTypesRequest& a, ListRelationshipTypesRequest& b) { a.Swap(&b); }
  inline void Swap(ListRelationshipTypesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListRelationshipTypesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListRelationshipTypesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListRelationshipTypesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListRelationshipTypesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListRelationshipTypesRequest& from) { ListRelationshipTypesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListRelationshipTypesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.ListRelationshipTypesRequest"; }

 protected:
  explicit ListRelationshipTypesRequest(::google::protobuf::Arena* arena);
  ListRelationshipTypesRequest(::google::protobuf::Arena* arena, const ListRelationshipTypesRequest& from);
  ListRelationshipTypesRequest(::google::protobuf::Arena* arena, ListRelationshipTypesRequest&& from) noexcept
      : ListRelationshipTypesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrganizationIdFieldNumber = 1,
  };
  // int64 organization_id = 1;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.ListRelationshipTypesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListRelationshipTypesRequest& from_msg);
    ::int64_t organization_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class ListOrganizationsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.ListOrganizationsRequest) */ {
 public:
  inline ListOrganizationsRequest() : ListOrganizationsRequest(nullptr) {}
  ~ListOrganizationsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListOrganizationsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListOrganizationsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListOrganizationsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListOrganizationsRequest(const ListOrganizationsRequest& from) : ListOrganizationsRequest(nullptr, from) {}
  inline ListOrganizationsRequest(ListOrganizationsRequest&& from) noexcept
      : ListOrganizationsRequest(nullptr, std::move(from)) {}
  inline ListOrganizationsRequest& operator=(const ListOrganizationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListOrganizationsRequest& operator=(ListOrganizationsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListOrganizationsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListOrganizationsRequest* internal_default_instance() {
    return reinterpret_cast<const ListOrganizationsRequest*>(
        &_ListOrganizationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(ListOrganizationsRequest& a, ListOrganizationsRequest& b) { a.Swap(&b); }
  inline void Swap(ListOrganizationsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListOrganizationsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListOrganizationsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListOrganizationsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListOrganizationsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListOrganizationsRequest& from) { ListOrganizationsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListOrganizationsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.ListOrganizationsRequest"; }

 protected:
  explicit ListOrganizationsRequest(::google::protobuf::Arena* arena);
  ListOrganizationsRequest(::google::protobuf::Arena* arena, const ListOrganizationsRequest& from);
  ListOrganizationsRequest(::google::protobuf::Arena* arena, ListOrganizationsRequest&& from) noexcept
      : ListOrganizationsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeFieldNumber = 3,
    kNameFieldNumber = 4,
    kLimitFieldNumber = 1,
    kOffsetFieldNumber = 2,
  };
  // string type = 3;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // string name = 4;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // int32 limit = 1;
  void clear_limit() ;
  ::int32_t limit() const;
  void set_limit(::int32_t value);

  private:
  ::int32_t _internal_limit() const;
  void _internal_set_limit(::int32_t value);

  public:
  // int32 offset = 2;
  void clear_offset() ;
  ::int32_t offset() const;
  void set_offset(::int32_t value);

  private:
  ::int32_t _internal_offset() const;
  void _internal_set_offset(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.ListOrganizationsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      54, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListOrganizationsRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::int32_t limit_;
    ::int32_t offset_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class ListCounterpartiesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.ListCounterpartiesRequest) */ {
 public:
  inline ListCounterpartiesRequest() : ListCounterpartiesRequest(nullptr) {}
  ~ListCounterpartiesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListCounterpartiesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListCounterpartiesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListCounterpartiesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListCounterpartiesRequest(const ListCounterpartiesRequest& from) : ListCounterpartiesRequest(nullptr, from) {}
  inline ListCounterpartiesRequest(ListCounterpartiesRequest&& from) noexcept
      : ListCounterpartiesRequest(nullptr, std::move(from)) {}
  inline ListCounterpartiesRequest& operator=(const ListCounterpartiesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCounterpartiesRequest& operator=(ListCounterpartiesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListCounterpartiesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListCounterpartiesRequest* internal_default_instance() {
    return reinterpret_cast<const ListCounterpartiesRequest*>(
        &_ListCounterpartiesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(ListCounterpartiesRequest& a, ListCounterpartiesRequest& b) { a.Swap(&b); }
  inline void Swap(ListCounterpartiesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCounterpartiesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListCounterpartiesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListCounterpartiesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListCounterpartiesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListCounterpartiesRequest& from) { ListCounterpartiesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListCounterpartiesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.ListCounterpartiesRequest"; }

 protected:
  explicit ListCounterpartiesRequest(::google::protobuf::Arena* arena);
  ListCounterpartiesRequest(::google::protobuf::Arena* arena, const ListCounterpartiesRequest& from);
  ListCounterpartiesRequest(::google::protobuf::Arena* arena, ListCounterpartiesRequest&& from) noexcept
      : ListCounterpartiesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSourceOrganizationIdFieldNumber = 1,
    kLimitFieldNumber = 2,
    kOffsetFieldNumber = 3,
  };
  // int64 source_organization_id = 1;
  void clear_source_organization_id() ;
  ::int64_t source_organization_id() const;
  void set_source_organization_id(::int64_t value);

  private:
  ::int64_t _internal_source_organization_id() const;
  void _internal_set_source_organization_id(::int64_t value);

  public:
  // int32 limit = 2;
  void clear_limit() ;
  ::int32_t limit() const;
  void set_limit(::int32_t value);

  private:
  ::int32_t _internal_limit() const;
  void _internal_set_limit(::int32_t value);

  public:
  // int32 offset = 3;
  void clear_offset() ;
  ::int32_t offset() const;
  void set_offset(::int32_t value);

  private:
  ::int32_t _internal_offset() const;
  void _internal_set_offset(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.ListCounterpartiesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListCounterpartiesRequest& from_msg);
    ::int64_t source_organization_id_;
    ::int32_t limit_;
    ::int32_t offset_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class ListContactsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.ListContactsRequest) */ {
 public:
  inline ListContactsRequest() : ListContactsRequest(nullptr) {}
  ~ListContactsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListContactsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListContactsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListContactsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListContactsRequest(const ListContactsRequest& from) : ListContactsRequest(nullptr, from) {}
  inline ListContactsRequest(ListContactsRequest&& from) noexcept
      : ListContactsRequest(nullptr, std::move(from)) {}
  inline ListContactsRequest& operator=(const ListContactsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListContactsRequest& operator=(ListContactsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListContactsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListContactsRequest* internal_default_instance() {
    return reinterpret_cast<const ListContactsRequest*>(
        &_ListContactsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 81;
  friend void swap(ListContactsRequest& a, ListContactsRequest& b) { a.Swap(&b); }
  inline void Swap(ListContactsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListContactsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListContactsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListContactsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListContactsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListContactsRequest& from) { ListContactsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListContactsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.ListContactsRequest"; }

 protected:
  explicit ListContactsRequest(::google::protobuf::Arena* arena);
  ListContactsRequest(::google::protobuf::Arena* arena, const ListContactsRequest& from);
  ListContactsRequest(::google::protobuf::Arena* arena, ListContactsRequest&& from) noexcept
      : ListContactsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeadIdFieldNumber = 1,
    kOrganizationIdFieldNumber = 2,
  };
  // int64 lead_id = 1;
  void clear_lead_id() ;
  ::int64_t lead_id() const;
  void set_lead_id(::int64_t value);

  private:
  ::int64_t _internal_lead_id() const;
  void _internal_set_lead_id(::int64_t value);

  public:
  // int64 organization_id = 2;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.ListContactsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListContactsRequest& from_msg);
    ::int64_t lead_id_;
    ::int64_t organization_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class ListBankAccountsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.ListBankAccountsRequest) */ {
 public:
  inline ListBankAccountsRequest() : ListBankAccountsRequest(nullptr) {}
  ~ListBankAccountsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListBankAccountsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListBankAccountsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListBankAccountsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListBankAccountsRequest(const ListBankAccountsRequest& from) : ListBankAccountsRequest(nullptr, from) {}
  inline ListBankAccountsRequest(ListBankAccountsRequest&& from) noexcept
      : ListBankAccountsRequest(nullptr, std::move(from)) {}
  inline ListBankAccountsRequest& operator=(const ListBankAccountsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListBankAccountsRequest& operator=(ListBankAccountsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListBankAccountsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListBankAccountsRequest* internal_default_instance() {
    return reinterpret_cast<const ListBankAccountsRequest*>(
        &_ListBankAccountsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(ListBankAccountsRequest& a, ListBankAccountsRequest& b) { a.Swap(&b); }
  inline void Swap(ListBankAccountsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListBankAccountsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListBankAccountsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListBankAccountsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListBankAccountsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListBankAccountsRequest& from) { ListBankAccountsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListBankAccountsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.ListBankAccountsRequest"; }

 protected:
  explicit ListBankAccountsRequest(::google::protobuf::Arena* arena);
  ListBankAccountsRequest(::google::protobuf::Arena* arena, const ListBankAccountsRequest& from);
  ListBankAccountsRequest(::google::protobuf::Arena* arena, ListBankAccountsRequest&& from) noexcept
      : ListBankAccountsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrganizationIdFieldNumber = 1,
  };
  // int64 organization_id = 1;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.ListBankAccountsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListBankAccountsRequest& from_msg);
    ::int64_t organization_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class ImageModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.ImageModel) */ {
 public:
  inline ImageModel() : ImageModel(nullptr) {}
  ~ImageModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ImageModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ImageModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ImageModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline ImageModel(const ImageModel& from) : ImageModel(nullptr, from) {}
  inline ImageModel(ImageModel&& from) noexcept
      : ImageModel(nullptr, std::move(from)) {}
  inline ImageModel& operator=(const ImageModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImageModel& operator=(ImageModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ImageModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImageModel* internal_default_instance() {
    return reinterpret_cast<const ImageModel*>(
        &_ImageModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ImageModel& a, ImageModel& b) { a.Swap(&b); }
  inline void Swap(ImageModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImageModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ImageModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ImageModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ImageModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ImageModel& from) { ImageModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ImageModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.ImageModel"; }

 protected:
  explicit ImageModel(::google::protobuf::Arena* arena);
  ImageModel(::google::protobuf::Arena* arena, const ImageModel& from);
  ImageModel(::google::protobuf::Arena* arena, ImageModel&& from) noexcept
      : ImageModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kImageUrlFieldNumber = 2,
    kObjectKeyFieldNumber = 4,
    kIdFieldNumber = 1,
    kImageIndexFieldNumber = 3,
  };
  // string image_url = 2;
  void clear_image_url() ;
  const std::string& image_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_image_url(Arg_&& arg, Args_... args);
  std::string* mutable_image_url();
  PROTOBUF_NODISCARD std::string* release_image_url();
  void set_allocated_image_url(std::string* value);

  private:
  const std::string& _internal_image_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_image_url(
      const std::string& value);
  std::string* _internal_mutable_image_url();

  public:
  // string object_key = 4;
  void clear_object_key() ;
  const std::string& object_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_object_key(Arg_&& arg, Args_... args);
  std::string* mutable_object_key();
  PROTOBUF_NODISCARD std::string* release_object_key();
  void set_allocated_object_key(std::string* value);

  private:
  const std::string& _internal_object_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_object_key(
      const std::string& value);
  std::string* _internal_mutable_object_key();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // optional int64 image_index = 3;
  bool has_image_index() const;
  void clear_image_index() ;
  ::int64_t image_index() const;
  void set_image_index(::int64_t value);

  private:
  ::int64_t _internal_image_index() const;
  void _internal_set_image_index(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.ImageModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      51, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ImageModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr image_url_;
    ::google::protobuf::internal::ArenaStringPtr object_key_;
    ::int64_t id_;
    ::int64_t image_index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class GetSaleSettingsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.GetSaleSettingsRequest) */ {
 public:
  inline GetSaleSettingsRequest() : GetSaleSettingsRequest(nullptr) {}
  ~GetSaleSettingsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSaleSettingsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSaleSettingsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSaleSettingsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSaleSettingsRequest(const GetSaleSettingsRequest& from) : GetSaleSettingsRequest(nullptr, from) {}
  inline GetSaleSettingsRequest(GetSaleSettingsRequest&& from) noexcept
      : GetSaleSettingsRequest(nullptr, std::move(from)) {}
  inline GetSaleSettingsRequest& operator=(const GetSaleSettingsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSaleSettingsRequest& operator=(GetSaleSettingsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSaleSettingsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSaleSettingsRequest* internal_default_instance() {
    return reinterpret_cast<const GetSaleSettingsRequest*>(
        &_GetSaleSettingsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 87;
  friend void swap(GetSaleSettingsRequest& a, GetSaleSettingsRequest& b) { a.Swap(&b); }
  inline void Swap(GetSaleSettingsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSaleSettingsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSaleSettingsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSaleSettingsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSaleSettingsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSaleSettingsRequest& from) { GetSaleSettingsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSaleSettingsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.GetSaleSettingsRequest"; }

 protected:
  explicit GetSaleSettingsRequest(::google::protobuf::Arena* arena);
  GetSaleSettingsRequest(::google::protobuf::Arena* arena, const GetSaleSettingsRequest& from);
  GetSaleSettingsRequest(::google::protobuf::Arena* arena, GetSaleSettingsRequest&& from) noexcept
      : GetSaleSettingsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrganizationIdFieldNumber = 1,
  };
  // int64 organization_id = 1;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.GetSaleSettingsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSaleSettingsRequest& from_msg);
    ::int64_t organization_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class GetRelationshipTypeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.GetRelationshipTypeRequest) */ {
 public:
  inline GetRelationshipTypeRequest() : GetRelationshipTypeRequest(nullptr) {}
  ~GetRelationshipTypeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetRelationshipTypeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetRelationshipTypeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetRelationshipTypeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetRelationshipTypeRequest(const GetRelationshipTypeRequest& from) : GetRelationshipTypeRequest(nullptr, from) {}
  inline GetRelationshipTypeRequest(GetRelationshipTypeRequest&& from) noexcept
      : GetRelationshipTypeRequest(nullptr, std::move(from)) {}
  inline GetRelationshipTypeRequest& operator=(const GetRelationshipTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRelationshipTypeRequest& operator=(GetRelationshipTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRelationshipTypeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRelationshipTypeRequest* internal_default_instance() {
    return reinterpret_cast<const GetRelationshipTypeRequest*>(
        &_GetRelationshipTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 65;
  friend void swap(GetRelationshipTypeRequest& a, GetRelationshipTypeRequest& b) { a.Swap(&b); }
  inline void Swap(GetRelationshipTypeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRelationshipTypeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRelationshipTypeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetRelationshipTypeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetRelationshipTypeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetRelationshipTypeRequest& from) { GetRelationshipTypeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetRelationshipTypeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.GetRelationshipTypeRequest"; }

 protected:
  explicit GetRelationshipTypeRequest(::google::protobuf::Arena* arena);
  GetRelationshipTypeRequest(::google::protobuf::Arena* arena, const GetRelationshipTypeRequest& from);
  GetRelationshipTypeRequest(::google::protobuf::Arena* arena, GetRelationshipTypeRequest&& from) noexcept
      : GetRelationshipTypeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.GetRelationshipTypeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetRelationshipTypeRequest& from_msg);
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class GetOrganizationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.GetOrganizationRequest) */ {
 public:
  inline GetOrganizationRequest() : GetOrganizationRequest(nullptr) {}
  ~GetOrganizationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetOrganizationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetOrganizationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetOrganizationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetOrganizationRequest(const GetOrganizationRequest& from) : GetOrganizationRequest(nullptr, from) {}
  inline GetOrganizationRequest(GetOrganizationRequest&& from) noexcept
      : GetOrganizationRequest(nullptr, std::move(from)) {}
  inline GetOrganizationRequest& operator=(const GetOrganizationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOrganizationRequest& operator=(GetOrganizationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOrganizationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOrganizationRequest* internal_default_instance() {
    return reinterpret_cast<const GetOrganizationRequest*>(
        &_GetOrganizationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(GetOrganizationRequest& a, GetOrganizationRequest& b) { a.Swap(&b); }
  inline void Swap(GetOrganizationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOrganizationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOrganizationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetOrganizationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOrganizationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetOrganizationRequest& from) { GetOrganizationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetOrganizationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.GetOrganizationRequest"; }

 protected:
  explicit GetOrganizationRequest(::google::protobuf::Arena* arena);
  GetOrganizationRequest(::google::protobuf::Arena* arena, const GetOrganizationRequest& from);
  GetOrganizationRequest(::google::protobuf::Arena* arena, GetOrganizationRequest&& from) noexcept
      : GetOrganizationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.GetOrganizationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetOrganizationRequest& from_msg);
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class GetDefaultBankAccountRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.GetDefaultBankAccountRequest) */ {
 public:
  inline GetDefaultBankAccountRequest() : GetDefaultBankAccountRequest(nullptr) {}
  ~GetDefaultBankAccountRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetDefaultBankAccountRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetDefaultBankAccountRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetDefaultBankAccountRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetDefaultBankAccountRequest(const GetDefaultBankAccountRequest& from) : GetDefaultBankAccountRequest(nullptr, from) {}
  inline GetDefaultBankAccountRequest(GetDefaultBankAccountRequest&& from) noexcept
      : GetDefaultBankAccountRequest(nullptr, std::move(from)) {}
  inline GetDefaultBankAccountRequest& operator=(const GetDefaultBankAccountRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDefaultBankAccountRequest& operator=(GetDefaultBankAccountRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetDefaultBankAccountRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetDefaultBankAccountRequest* internal_default_instance() {
    return reinterpret_cast<const GetDefaultBankAccountRequest*>(
        &_GetDefaultBankAccountRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(GetDefaultBankAccountRequest& a, GetDefaultBankAccountRequest& b) { a.Swap(&b); }
  inline void Swap(GetDefaultBankAccountRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDefaultBankAccountRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetDefaultBankAccountRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetDefaultBankAccountRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetDefaultBankAccountRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetDefaultBankAccountRequest& from) { GetDefaultBankAccountRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetDefaultBankAccountRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.GetDefaultBankAccountRequest"; }

 protected:
  explicit GetDefaultBankAccountRequest(::google::protobuf::Arena* arena);
  GetDefaultBankAccountRequest(::google::protobuf::Arena* arena, const GetDefaultBankAccountRequest& from);
  GetDefaultBankAccountRequest(::google::protobuf::Arena* arena, GetDefaultBankAccountRequest&& from) noexcept
      : GetDefaultBankAccountRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrganizationIdFieldNumber = 1,
  };
  // int64 organization_id = 1;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.GetDefaultBankAccountRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetDefaultBankAccountRequest& from_msg);
    ::int64_t organization_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class GetCounterpartyRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.GetCounterpartyRequest) */ {
 public:
  inline GetCounterpartyRequest() : GetCounterpartyRequest(nullptr) {}
  ~GetCounterpartyRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetCounterpartyRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetCounterpartyRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCounterpartyRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetCounterpartyRequest(const GetCounterpartyRequest& from) : GetCounterpartyRequest(nullptr, from) {}
  inline GetCounterpartyRequest(GetCounterpartyRequest&& from) noexcept
      : GetCounterpartyRequest(nullptr, std::move(from)) {}
  inline GetCounterpartyRequest& operator=(const GetCounterpartyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCounterpartyRequest& operator=(GetCounterpartyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCounterpartyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCounterpartyRequest* internal_default_instance() {
    return reinterpret_cast<const GetCounterpartyRequest*>(
        &_GetCounterpartyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(GetCounterpartyRequest& a, GetCounterpartyRequest& b) { a.Swap(&b); }
  inline void Swap(GetCounterpartyRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCounterpartyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCounterpartyRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetCounterpartyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCounterpartyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCounterpartyRequest& from) { GetCounterpartyRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetCounterpartyRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.GetCounterpartyRequest"; }

 protected:
  explicit GetCounterpartyRequest(::google::protobuf::Arena* arena);
  GetCounterpartyRequest(::google::protobuf::Arena* arena, const GetCounterpartyRequest& from);
  GetCounterpartyRequest(::google::protobuf::Arena* arena, GetCounterpartyRequest&& from) noexcept
      : GetCounterpartyRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.GetCounterpartyRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetCounterpartyRequest& from_msg);
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class GetContactRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.GetContactRequest) */ {
 public:
  inline GetContactRequest() : GetContactRequest(nullptr) {}
  ~GetContactRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetContactRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetContactRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetContactRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetContactRequest(const GetContactRequest& from) : GetContactRequest(nullptr, from) {}
  inline GetContactRequest(GetContactRequest&& from) noexcept
      : GetContactRequest(nullptr, std::move(from)) {}
  inline GetContactRequest& operator=(const GetContactRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContactRequest& operator=(GetContactRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContactRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContactRequest* internal_default_instance() {
    return reinterpret_cast<const GetContactRequest*>(
        &_GetContactRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 77;
  friend void swap(GetContactRequest& a, GetContactRequest& b) { a.Swap(&b); }
  inline void Swap(GetContactRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContactRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContactRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetContactRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetContactRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetContactRequest& from) { GetContactRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetContactRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.GetContactRequest"; }

 protected:
  explicit GetContactRequest(::google::protobuf::Arena* arena);
  GetContactRequest(::google::protobuf::Arena* arena, const GetContactRequest& from);
  GetContactRequest(::google::protobuf::Arena* arena, GetContactRequest&& from) noexcept
      : GetContactRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.GetContactRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetContactRequest& from_msg);
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class GetAddressRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.GetAddressRequest) */ {
 public:
  inline GetAddressRequest() : GetAddressRequest(nullptr) {}
  ~GetAddressRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetAddressRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetAddressRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetAddressRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetAddressRequest(const GetAddressRequest& from) : GetAddressRequest(nullptr, from) {}
  inline GetAddressRequest(GetAddressRequest&& from) noexcept
      : GetAddressRequest(nullptr, std::move(from)) {}
  inline GetAddressRequest& operator=(const GetAddressRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAddressRequest& operator=(GetAddressRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAddressRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAddressRequest* internal_default_instance() {
    return reinterpret_cast<const GetAddressRequest*>(
        &_GetAddressRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 49;
  friend void swap(GetAddressRequest& a, GetAddressRequest& b) { a.Swap(&b); }
  inline void Swap(GetAddressRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAddressRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAddressRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetAddressRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAddressRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetAddressRequest& from) { GetAddressRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetAddressRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.GetAddressRequest"; }

 protected:
  explicit GetAddressRequest(::google::protobuf::Arena* arena);
  GetAddressRequest(::google::protobuf::Arena* arena, const GetAddressRequest& from);
  GetAddressRequest(::google::protobuf::Arena* arena, GetAddressRequest&& from) noexcept
      : GetAddressRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.GetAddressRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetAddressRequest& from_msg);
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class GeneratePresignedURLsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.GeneratePresignedURLsRequest) */ {
 public:
  inline GeneratePresignedURLsRequest() : GeneratePresignedURLsRequest(nullptr) {}
  ~GeneratePresignedURLsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GeneratePresignedURLsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GeneratePresignedURLsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GeneratePresignedURLsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GeneratePresignedURLsRequest(const GeneratePresignedURLsRequest& from) : GeneratePresignedURLsRequest(nullptr, from) {}
  inline GeneratePresignedURLsRequest(GeneratePresignedURLsRequest&& from) noexcept
      : GeneratePresignedURLsRequest(nullptr, std::move(from)) {}
  inline GeneratePresignedURLsRequest& operator=(const GeneratePresignedURLsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeneratePresignedURLsRequest& operator=(GeneratePresignedURLsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GeneratePresignedURLsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GeneratePresignedURLsRequest* internal_default_instance() {
    return reinterpret_cast<const GeneratePresignedURLsRequest*>(
        &_GeneratePresignedURLsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(GeneratePresignedURLsRequest& a, GeneratePresignedURLsRequest& b) { a.Swap(&b); }
  inline void Swap(GeneratePresignedURLsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GeneratePresignedURLsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GeneratePresignedURLsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GeneratePresignedURLsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GeneratePresignedURLsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GeneratePresignedURLsRequest& from) { GeneratePresignedURLsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GeneratePresignedURLsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.GeneratePresignedURLsRequest"; }

 protected:
  explicit GeneratePresignedURLsRequest(::google::protobuf::Arena* arena);
  GeneratePresignedURLsRequest(::google::protobuf::Arena* arena, const GeneratePresignedURLsRequest& from);
  GeneratePresignedURLsRequest(::google::protobuf::Arena* arena, GeneratePresignedURLsRequest&& from) noexcept
      : GeneratePresignedURLsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFileNamesFieldNumber = 2,
    kOrganizationIdFieldNumber = 1,
  };
  // repeated string file_names = 2;
  int file_names_size() const;
  private:
  int _internal_file_names_size() const;

  public:
  void clear_file_names() ;
  const std::string& file_names(int index) const;
  std::string* mutable_file_names(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file_names(int index, Arg_&& value, Args_... args);
  std::string* add_file_names();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_file_names(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& file_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_file_names();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_file_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_file_names();

  public:
  // int64 organization_id = 1;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.GeneratePresignedURLsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GeneratePresignedURLsRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> file_names_;
    ::int64_t organization_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class ExpencesModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.ExpencesModel) */ {
 public:
  inline ExpencesModel() : ExpencesModel(nullptr) {}
  ~ExpencesModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ExpencesModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ExpencesModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExpencesModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline ExpencesModel(const ExpencesModel& from) : ExpencesModel(nullptr, from) {}
  inline ExpencesModel(ExpencesModel&& from) noexcept
      : ExpencesModel(nullptr, std::move(from)) {}
  inline ExpencesModel& operator=(const ExpencesModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExpencesModel& operator=(ExpencesModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExpencesModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExpencesModel* internal_default_instance() {
    return reinterpret_cast<const ExpencesModel*>(
        &_ExpencesModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ExpencesModel& a, ExpencesModel& b) { a.Swap(&b); }
  inline void Swap(ExpencesModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExpencesModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExpencesModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ExpencesModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExpencesModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExpencesModel& from) { ExpencesModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ExpencesModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.ExpencesModel"; }

 protected:
  explicit ExpencesModel(::google::protobuf::Arena* arena);
  ExpencesModel(::google::protobuf::Arena* arena, const ExpencesModel& from);
  ExpencesModel(::google::protobuf::Arena* arena, ExpencesModel&& from) noexcept
      : ExpencesModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kIdFieldNumber = 1,
    kSaleSettingsIdFieldNumber = 4,
    kValueFieldNumber = 3,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 sale_settings_id = 4;
  void clear_sale_settings_id() ;
  ::int64_t sale_settings_id() const;
  void set_sale_settings_id(::int64_t value);

  private:
  ::int64_t _internal_sale_settings_id() const;
  void _internal_set_sale_settings_id(::int64_t value);

  public:
  // float value = 3;
  void clear_value() ;
  float value() const;
  void set_value(float value);

  private:
  float _internal_value() const;
  void _internal_set_value(float value);

  public:
  // @@protoc_insertion_point(class_scope:organization.ExpencesModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      39, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ExpencesModel& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::int64_t id_;
    ::int64_t sale_settings_id_;
    float value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class Expences final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.Expences) */ {
 public:
  inline Expences() : Expences(nullptr) {}
  ~Expences() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Expences* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Expences));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Expences(
      ::google::protobuf::internal::ConstantInitialized);

  inline Expences(const Expences& from) : Expences(nullptr, from) {}
  inline Expences(Expences&& from) noexcept
      : Expences(nullptr, std::move(from)) {}
  inline Expences& operator=(const Expences& from) {
    CopyFrom(from);
    return *this;
  }
  inline Expences& operator=(Expences&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Expences& default_instance() {
    return *internal_default_instance();
  }
  static inline const Expences* internal_default_instance() {
    return reinterpret_cast<const Expences*>(
        &_Expences_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Expences& a, Expences& b) { a.Swap(&b); }
  inline void Swap(Expences* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Expences* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Expences* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Expences>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Expences& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Expences& from) { Expences::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Expences* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.Expences"; }

 protected:
  explicit Expences(::google::protobuf::Arena* arena);
  Expences(::google::protobuf::Arena* arena, const Expences& from);
  Expences(::google::protobuf::Arena* arena, Expences&& from) noexcept
      : Expences(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kIdFieldNumber = 1,
    kValueFieldNumber = 3,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // float value = 3;
  void clear_value() ;
  float value() const;
  void set_value(float value);

  private:
  float _internal_value() const;
  void _internal_set_value(float value);

  public:
  // @@protoc_insertion_point(class_scope:organization.Expences)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      34, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Expences& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::int64_t id_;
    float value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class DeleteContactResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.DeleteContactResponse) */ {
 public:
  inline DeleteContactResponse() : DeleteContactResponse(nullptr) {}
  ~DeleteContactResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteContactResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteContactResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteContactResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteContactResponse(const DeleteContactResponse& from) : DeleteContactResponse(nullptr, from) {}
  inline DeleteContactResponse(DeleteContactResponse&& from) noexcept
      : DeleteContactResponse(nullptr, std::move(from)) {}
  inline DeleteContactResponse& operator=(const DeleteContactResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteContactResponse& operator=(DeleteContactResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteContactResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteContactResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteContactResponse*>(
        &_DeleteContactResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 80;
  friend void swap(DeleteContactResponse& a, DeleteContactResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteContactResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteContactResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteContactResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteContactResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteContactResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteContactResponse& from) { DeleteContactResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteContactResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.DeleteContactResponse"; }

 protected:
  explicit DeleteContactResponse(::google::protobuf::Arena* arena);
  DeleteContactResponse(::google::protobuf::Arena* arena, const DeleteContactResponse& from);
  DeleteContactResponse(::google::protobuf::Arena* arena, DeleteContactResponse&& from) noexcept
      : DeleteContactResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:organization.DeleteContactResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteContactResponse& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class DeleteContactRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.DeleteContactRequest) */ {
 public:
  inline DeleteContactRequest() : DeleteContactRequest(nullptr) {}
  ~DeleteContactRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteContactRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteContactRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteContactRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteContactRequest(const DeleteContactRequest& from) : DeleteContactRequest(nullptr, from) {}
  inline DeleteContactRequest(DeleteContactRequest&& from) noexcept
      : DeleteContactRequest(nullptr, std::move(from)) {}
  inline DeleteContactRequest& operator=(const DeleteContactRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteContactRequest& operator=(DeleteContactRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteContactRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteContactRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteContactRequest*>(
        &_DeleteContactRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 79;
  friend void swap(DeleteContactRequest& a, DeleteContactRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteContactRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteContactRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteContactRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteContactRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteContactRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteContactRequest& from) { DeleteContactRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteContactRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.DeleteContactRequest"; }

 protected:
  explicit DeleteContactRequest(::google::protobuf::Arena* arena);
  DeleteContactRequest(::google::protobuf::Arena* arena, const DeleteContactRequest& from);
  DeleteContactRequest(::google::protobuf::Arena* arena, DeleteContactRequest&& from) noexcept
      : DeleteContactRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.DeleteContactRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteContactRequest& from_msg);
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class DeleteBankAccountResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.DeleteBankAccountResponse) */ {
 public:
  inline DeleteBankAccountResponse() : DeleteBankAccountResponse(nullptr) {}
  ~DeleteBankAccountResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteBankAccountResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteBankAccountResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteBankAccountResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteBankAccountResponse(const DeleteBankAccountResponse& from) : DeleteBankAccountResponse(nullptr, from) {}
  inline DeleteBankAccountResponse(DeleteBankAccountResponse&& from) noexcept
      : DeleteBankAccountResponse(nullptr, std::move(from)) {}
  inline DeleteBankAccountResponse& operator=(const DeleteBankAccountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteBankAccountResponse& operator=(DeleteBankAccountResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteBankAccountResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteBankAccountResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteBankAccountResponse*>(
        &_DeleteBankAccountResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 46;
  friend void swap(DeleteBankAccountResponse& a, DeleteBankAccountResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteBankAccountResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteBankAccountResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteBankAccountResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteBankAccountResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteBankAccountResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteBankAccountResponse& from) { DeleteBankAccountResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteBankAccountResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.DeleteBankAccountResponse"; }

 protected:
  explicit DeleteBankAccountResponse(::google::protobuf::Arena* arena);
  DeleteBankAccountResponse(::google::protobuf::Arena* arena, const DeleteBankAccountResponse& from);
  DeleteBankAccountResponse(::google::protobuf::Arena* arena, DeleteBankAccountResponse&& from) noexcept
      : DeleteBankAccountResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:organization.DeleteBankAccountResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteBankAccountResponse& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class DeleteBankAccountRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.DeleteBankAccountRequest) */ {
 public:
  inline DeleteBankAccountRequest() : DeleteBankAccountRequest(nullptr) {}
  ~DeleteBankAccountRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteBankAccountRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteBankAccountRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteBankAccountRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteBankAccountRequest(const DeleteBankAccountRequest& from) : DeleteBankAccountRequest(nullptr, from) {}
  inline DeleteBankAccountRequest(DeleteBankAccountRequest&& from) noexcept
      : DeleteBankAccountRequest(nullptr, std::move(from)) {}
  inline DeleteBankAccountRequest& operator=(const DeleteBankAccountRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteBankAccountRequest& operator=(DeleteBankAccountRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteBankAccountRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteBankAccountRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteBankAccountRequest*>(
        &_DeleteBankAccountRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 45;
  friend void swap(DeleteBankAccountRequest& a, DeleteBankAccountRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteBankAccountRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteBankAccountRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteBankAccountRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteBankAccountRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteBankAccountRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteBankAccountRequest& from) { DeleteBankAccountRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteBankAccountRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.DeleteBankAccountRequest"; }

 protected:
  explicit DeleteBankAccountRequest(::google::protobuf::Arena* arena);
  DeleteBankAccountRequest(::google::protobuf::Arena* arena, const DeleteBankAccountRequest& from);
  DeleteBankAccountRequest(::google::protobuf::Arena* arena, DeleteBankAccountRequest&& from) noexcept
      : DeleteBankAccountRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.DeleteBankAccountRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteBankAccountRequest& from_msg);
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class DeleteAddressResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.DeleteAddressResponse) */ {
 public:
  inline DeleteAddressResponse() : DeleteAddressResponse(nullptr) {}
  ~DeleteAddressResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteAddressResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteAddressResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteAddressResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteAddressResponse(const DeleteAddressResponse& from) : DeleteAddressResponse(nullptr, from) {}
  inline DeleteAddressResponse(DeleteAddressResponse&& from) noexcept
      : DeleteAddressResponse(nullptr, std::move(from)) {}
  inline DeleteAddressResponse& operator=(const DeleteAddressResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteAddressResponse& operator=(DeleteAddressResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteAddressResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteAddressResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteAddressResponse*>(
        &_DeleteAddressResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 56;
  friend void swap(DeleteAddressResponse& a, DeleteAddressResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteAddressResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteAddressResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteAddressResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteAddressResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteAddressResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteAddressResponse& from) { DeleteAddressResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteAddressResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.DeleteAddressResponse"; }

 protected:
  explicit DeleteAddressResponse(::google::protobuf::Arena* arena);
  DeleteAddressResponse(::google::protobuf::Arena* arena, const DeleteAddressResponse& from);
  DeleteAddressResponse(::google::protobuf::Arena* arena, DeleteAddressResponse&& from) noexcept
      : DeleteAddressResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:organization.DeleteAddressResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteAddressResponse& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class DeleteAddressRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.DeleteAddressRequest) */ {
 public:
  inline DeleteAddressRequest() : DeleteAddressRequest(nullptr) {}
  ~DeleteAddressRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteAddressRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteAddressRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteAddressRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteAddressRequest(const DeleteAddressRequest& from) : DeleteAddressRequest(nullptr, from) {}
  inline DeleteAddressRequest(DeleteAddressRequest&& from) noexcept
      : DeleteAddressRequest(nullptr, std::move(from)) {}
  inline DeleteAddressRequest& operator=(const DeleteAddressRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteAddressRequest& operator=(DeleteAddressRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteAddressRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteAddressRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteAddressRequest*>(
        &_DeleteAddressRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 55;
  friend void swap(DeleteAddressRequest& a, DeleteAddressRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteAddressRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteAddressRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteAddressRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteAddressRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteAddressRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteAddressRequest& from) { DeleteAddressRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteAddressRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.DeleteAddressRequest"; }

 protected:
  explicit DeleteAddressRequest(::google::protobuf::Arena* arena);
  DeleteAddressRequest(::google::protobuf::Arena* arena, const DeleteAddressRequest& from);
  DeleteAddressRequest(::google::protobuf::Arena* arena, DeleteAddressRequest&& from) noexcept
      : DeleteAddressRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.DeleteAddressRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteAddressRequest& from_msg);
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class ContactModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.ContactModel) */ {
 public:
  inline ContactModel() : ContactModel(nullptr) {}
  ~ContactModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ContactModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ContactModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ContactModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline ContactModel(const ContactModel& from) : ContactModel(nullptr, from) {}
  inline ContactModel(ContactModel&& from) noexcept
      : ContactModel(nullptr, std::move(from)) {}
  inline ContactModel& operator=(const ContactModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline ContactModel& operator=(ContactModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ContactModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const ContactModel* internal_default_instance() {
    return reinterpret_cast<const ContactModel*>(
        &_ContactModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(ContactModel& a, ContactModel& b) { a.Swap(&b); }
  inline void Swap(ContactModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ContactModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ContactModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ContactModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ContactModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ContactModel& from) { ContactModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ContactModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.ContactModel"; }

 protected:
  explicit ContactModel(::google::protobuf::Arena* arena);
  ContactModel(::google::protobuf::Arena* arena, const ContactModel& from);
  ContactModel(::google::protobuf::Arena* arena, ContactModel&& from) noexcept
      : ContactModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContactTypeFieldNumber = 5,
    kContactPersonFieldNumber = 6,
    kPhoneNumberFieldNumber = 7,
    kEmailFieldNumber = 8,
    kCreatedAtFieldNumber = 9,
    kUpdatedAtFieldNumber = 10,
    kContactIdFieldNumber = 1,
    kOrganizationIdFieldNumber = 2,
    kUserIdFieldNumber = 3,
    kLeadIdFieldNumber = 4,
  };
  // optional string contact_type = 5;
  bool has_contact_type() const;
  void clear_contact_type() ;
  const std::string& contact_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contact_type(Arg_&& arg, Args_... args);
  std::string* mutable_contact_type();
  PROTOBUF_NODISCARD std::string* release_contact_type();
  void set_allocated_contact_type(std::string* value);

  private:
  const std::string& _internal_contact_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contact_type(
      const std::string& value);
  std::string* _internal_mutable_contact_type();

  public:
  // optional string contact_person = 6;
  bool has_contact_person() const;
  void clear_contact_person() ;
  const std::string& contact_person() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contact_person(Arg_&& arg, Args_... args);
  std::string* mutable_contact_person();
  PROTOBUF_NODISCARD std::string* release_contact_person();
  void set_allocated_contact_person(std::string* value);

  private:
  const std::string& _internal_contact_person() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contact_person(
      const std::string& value);
  std::string* _internal_mutable_contact_person();

  public:
  // optional string phone_number = 7;
  bool has_phone_number() const;
  void clear_phone_number() ;
  const std::string& phone_number() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_phone_number(Arg_&& arg, Args_... args);
  std::string* mutable_phone_number();
  PROTOBUF_NODISCARD std::string* release_phone_number();
  void set_allocated_phone_number(std::string* value);

  private:
  const std::string& _internal_phone_number() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_phone_number(
      const std::string& value);
  std::string* _internal_mutable_phone_number();

  public:
  // optional string email = 8;
  bool has_email() const;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // optional string created_at = 9;
  bool has_created_at() const;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // optional string updated_at = 10;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // optional int64 contact_id = 1;
  bool has_contact_id() const;
  void clear_contact_id() ;
  ::int64_t contact_id() const;
  void set_contact_id(::int64_t value);

  private:
  ::int64_t _internal_contact_id() const;
  void _internal_set_contact_id(::int64_t value);

  public:
  // optional int64 organization_id = 2;
  bool has_organization_id() const;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // optional int64 user_id = 3;
  bool has_user_id() const;
  void clear_user_id() ;
  ::int64_t user_id() const;
  void set_user_id(::int64_t value);

  private:
  ::int64_t _internal_user_id() const;
  void _internal_set_user_id(::int64_t value);

  public:
  // optional int64 lead_id = 4;
  bool has_lead_id() const;
  void clear_lead_id() ;
  ::int64_t lead_id() const;
  void set_lead_id(::int64_t value);

  private:
  ::int64_t _internal_lead_id() const;
  void _internal_set_lead_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.ContactModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 0,
      105, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ContactModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr contact_type_;
    ::google::protobuf::internal::ArenaStringPtr contact_person_;
    ::google::protobuf::internal::ArenaStringPtr phone_number_;
    ::google::protobuf::internal::ArenaStringPtr email_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::int64_t contact_id_;
    ::int64_t organization_id_;
    ::int64_t user_id_;
    ::int64_t lead_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class BankAccountModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.BankAccountModel) */ {
 public:
  inline BankAccountModel() : BankAccountModel(nullptr) {}
  ~BankAccountModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BankAccountModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BankAccountModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BankAccountModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline BankAccountModel(const BankAccountModel& from) : BankAccountModel(nullptr, from) {}
  inline BankAccountModel(BankAccountModel&& from) noexcept
      : BankAccountModel(nullptr, std::move(from)) {}
  inline BankAccountModel& operator=(const BankAccountModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline BankAccountModel& operator=(BankAccountModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BankAccountModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const BankAccountModel* internal_default_instance() {
    return reinterpret_cast<const BankAccountModel*>(
        &_BankAccountModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(BankAccountModel& a, BankAccountModel& b) { a.Swap(&b); }
  inline void Swap(BankAccountModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BankAccountModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BankAccountModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BankAccountModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BankAccountModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BankAccountModel& from) { BankAccountModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BankAccountModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.BankAccountModel"; }

 protected:
  explicit BankAccountModel(::google::protobuf::Arena* arena);
  BankAccountModel(::google::protobuf::Arena* arena, const BankAccountModel& from);
  BankAccountModel(::google::protobuf::Arena* arena, BankAccountModel&& from) noexcept
      : BankAccountModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountNumberFieldNumber = 3,
    kBankNameFieldNumber = 4,
    kBicFieldNumber = 5,
    kCreatedAtFieldNumber = 8,
    kUpdatedAtFieldNumber = 9,
    kIdFieldNumber = 1,
    kOrganizationIdFieldNumber = 2,
    kKbeFieldNumber = 6,
    kIsDefaultFieldNumber = 7,
  };
  // string account_number = 3;
  void clear_account_number() ;
  const std::string& account_number() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account_number(Arg_&& arg, Args_... args);
  std::string* mutable_account_number();
  PROTOBUF_NODISCARD std::string* release_account_number();
  void set_allocated_account_number(std::string* value);

  private:
  const std::string& _internal_account_number() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_number(
      const std::string& value);
  std::string* _internal_mutable_account_number();

  public:
  // optional string bank_name = 4;
  bool has_bank_name() const;
  void clear_bank_name() ;
  const std::string& bank_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bank_name(Arg_&& arg, Args_... args);
  std::string* mutable_bank_name();
  PROTOBUF_NODISCARD std::string* release_bank_name();
  void set_allocated_bank_name(std::string* value);

  private:
  const std::string& _internal_bank_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bank_name(
      const std::string& value);
  std::string* _internal_mutable_bank_name();

  public:
  // string bic = 5;
  void clear_bic() ;
  const std::string& bic() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bic(Arg_&& arg, Args_... args);
  std::string* mutable_bic();
  PROTOBUF_NODISCARD std::string* release_bic();
  void set_allocated_bic(std::string* value);

  private:
  const std::string& _internal_bic() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bic(
      const std::string& value);
  std::string* _internal_mutable_bic();

  public:
  // string created_at = 8;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // string updated_at = 9;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 organization_id = 2;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // optional int64 kbe = 6;
  bool has_kbe() const;
  void clear_kbe() ;
  ::int64_t kbe() const;
  void set_kbe(::int64_t value);

  private:
  ::int64_t _internal_kbe() const;
  void _internal_set_kbe(::int64_t value);

  public:
  // optional bool is_default = 7;
  bool has_is_default() const;
  void clear_is_default() ;
  bool is_default() const;
  void set_is_default(bool value);

  private:
  bool _internal_is_default() const;
  void _internal_set_is_default(bool value);

  public:
  // @@protoc_insertion_point(class_scope:organization.BankAccountModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      92, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BankAccountModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr account_number_;
    ::google::protobuf::internal::ArenaStringPtr bank_name_;
    ::google::protobuf::internal::ArenaStringPtr bic_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::int64_t id_;
    ::int64_t organization_id_;
    ::int64_t kbe_;
    bool is_default_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class AddressModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.AddressModel) */ {
 public:
  inline AddressModel() : AddressModel(nullptr) {}
  ~AddressModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddressModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddressModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddressModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddressModel(const AddressModel& from) : AddressModel(nullptr, from) {}
  inline AddressModel(AddressModel&& from) noexcept
      : AddressModel(nullptr, std::move(from)) {}
  inline AddressModel& operator=(const AddressModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddressModel& operator=(AddressModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddressModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddressModel* internal_default_instance() {
    return reinterpret_cast<const AddressModel*>(
        &_AddressModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(AddressModel& a, AddressModel& b) { a.Swap(&b); }
  inline void Swap(AddressModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddressModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddressModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddressModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddressModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddressModel& from) { AddressModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddressModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.AddressModel"; }

 protected:
  explicit AddressModel(::google::protobuf::Arena* arena);
  AddressModel(::google::protobuf::Arena* arena, const AddressModel& from);
  AddressModel(::google::protobuf::Arena* arena, AddressModel&& from) noexcept
      : AddressModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeFieldNumber = 2,
    kCountryFieldNumber = 3,
    kStateFieldNumber = 4,
    kCityFieldNumber = 5,
    kAddressLineFieldNumber = 6,
    kCreatedAtFieldNumber = 11,
    kUpdatedAtFieldNumber = 12,
    kIdFieldNumber = 1,
    kLatitudeFieldNumber = 7,
    kLongitudeFieldNumber = 8,
  };
  // optional string type = 2;
  bool has_type() const;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // optional string country = 3;
  bool has_country() const;
  void clear_country() ;
  const std::string& country() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_country(Arg_&& arg, Args_... args);
  std::string* mutable_country();
  PROTOBUF_NODISCARD std::string* release_country();
  void set_allocated_country(std::string* value);

  private:
  const std::string& _internal_country() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_country(
      const std::string& value);
  std::string* _internal_mutable_country();

  public:
  // optional string state = 4;
  bool has_state() const;
  void clear_state() ;
  const std::string& state() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_state(Arg_&& arg, Args_... args);
  std::string* mutable_state();
  PROTOBUF_NODISCARD std::string* release_state();
  void set_allocated_state(std::string* value);

  private:
  const std::string& _internal_state() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_state(
      const std::string& value);
  std::string* _internal_mutable_state();

  public:
  // optional string city = 5;
  bool has_city() const;
  void clear_city() ;
  const std::string& city() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_city(Arg_&& arg, Args_... args);
  std::string* mutable_city();
  PROTOBUF_NODISCARD std::string* release_city();
  void set_allocated_city(std::string* value);

  private:
  const std::string& _internal_city() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_city(
      const std::string& value);
  std::string* _internal_mutable_city();

  public:
  // optional string address_line = 6;
  bool has_address_line() const;
  void clear_address_line() ;
  const std::string& address_line() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address_line(Arg_&& arg, Args_... args);
  std::string* mutable_address_line();
  PROTOBUF_NODISCARD std::string* release_address_line();
  void set_allocated_address_line(std::string* value);

  private:
  const std::string& _internal_address_line() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address_line(
      const std::string& value);
  std::string* _internal_mutable_address_line();

  public:
  // optional string created_at = 11;
  bool has_created_at() const;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // optional string updated_at = 12;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // optional int64 id = 1;
  bool has_id() const;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // optional float latitude = 7;
  bool has_latitude() const;
  void clear_latitude() ;
  float latitude() const;
  void set_latitude(float value);

  private:
  float _internal_latitude() const;
  void _internal_set_latitude(float value);

  public:
  // optional float longitude = 8;
  bool has_longitude() const;
  void clear_longitude() ;
  float longitude() const;
  void set_longitude(float value);

  private:
  float _internal_longitude() const;
  void _internal_set_longitude(float value);

  public:
  // @@protoc_insertion_point(class_scope:organization.AddressModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 0,
      94, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddressModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr country_;
    ::google::protobuf::internal::ArenaStringPtr state_;
    ::google::protobuf::internal::ArenaStringPtr city_;
    ::google::protobuf::internal::ArenaStringPtr address_line_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::int64_t id_;
    float latitude_;
    float longitude_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class UpdateRelationshipTypeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.UpdateRelationshipTypeResponse) */ {
 public:
  inline UpdateRelationshipTypeResponse() : UpdateRelationshipTypeResponse(nullptr) {}
  ~UpdateRelationshipTypeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateRelationshipTypeResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateRelationshipTypeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateRelationshipTypeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateRelationshipTypeResponse(const UpdateRelationshipTypeResponse& from) : UpdateRelationshipTypeResponse(nullptr, from) {}
  inline UpdateRelationshipTypeResponse(UpdateRelationshipTypeResponse&& from) noexcept
      : UpdateRelationshipTypeResponse(nullptr, std::move(from)) {}
  inline UpdateRelationshipTypeResponse& operator=(const UpdateRelationshipTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateRelationshipTypeResponse& operator=(UpdateRelationshipTypeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateRelationshipTypeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateRelationshipTypeResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateRelationshipTypeResponse*>(
        &_UpdateRelationshipTypeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 72;
  friend void swap(UpdateRelationshipTypeResponse& a, UpdateRelationshipTypeResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateRelationshipTypeResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateRelationshipTypeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateRelationshipTypeResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateRelationshipTypeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateRelationshipTypeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateRelationshipTypeResponse& from) { UpdateRelationshipTypeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateRelationshipTypeResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.UpdateRelationshipTypeResponse"; }

 protected:
  explicit UpdateRelationshipTypeResponse(::google::protobuf::Arena* arena);
  UpdateRelationshipTypeResponse(::google::protobuf::Arena* arena, const UpdateRelationshipTypeResponse& from);
  UpdateRelationshipTypeResponse(::google::protobuf::Arena* arena, UpdateRelationshipTypeResponse&& from) noexcept
      : UpdateRelationshipTypeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRelationshipTypeFieldNumber = 1,
  };
  // .organization.RelationshipTypeModel relationship_type = 1;
  bool has_relationship_type() const;
  void clear_relationship_type() ;
  const ::organization::RelationshipTypeModel& relationship_type() const;
  PROTOBUF_NODISCARD ::organization::RelationshipTypeModel* release_relationship_type();
  ::organization::RelationshipTypeModel* mutable_relationship_type();
  void set_allocated_relationship_type(::organization::RelationshipTypeModel* value);
  void unsafe_arena_set_allocated_relationship_type(::organization::RelationshipTypeModel* value);
  ::organization::RelationshipTypeModel* unsafe_arena_release_relationship_type();

  private:
  const ::organization::RelationshipTypeModel& _internal_relationship_type() const;
  ::organization::RelationshipTypeModel* _internal_mutable_relationship_type();

  public:
  // @@protoc_insertion_point(class_scope:organization.UpdateRelationshipTypeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateRelationshipTypeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::RelationshipTypeModel* relationship_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class UpdateRelationshipTypeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.UpdateRelationshipTypeRequest) */ {
 public:
  inline UpdateRelationshipTypeRequest() : UpdateRelationshipTypeRequest(nullptr) {}
  ~UpdateRelationshipTypeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateRelationshipTypeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateRelationshipTypeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateRelationshipTypeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateRelationshipTypeRequest(const UpdateRelationshipTypeRequest& from) : UpdateRelationshipTypeRequest(nullptr, from) {}
  inline UpdateRelationshipTypeRequest(UpdateRelationshipTypeRequest&& from) noexcept
      : UpdateRelationshipTypeRequest(nullptr, std::move(from)) {}
  inline UpdateRelationshipTypeRequest& operator=(const UpdateRelationshipTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateRelationshipTypeRequest& operator=(UpdateRelationshipTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateRelationshipTypeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateRelationshipTypeRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateRelationshipTypeRequest*>(
        &_UpdateRelationshipTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 71;
  friend void swap(UpdateRelationshipTypeRequest& a, UpdateRelationshipTypeRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateRelationshipTypeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateRelationshipTypeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateRelationshipTypeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateRelationshipTypeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateRelationshipTypeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateRelationshipTypeRequest& from) { UpdateRelationshipTypeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateRelationshipTypeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.UpdateRelationshipTypeRequest"; }

 protected:
  explicit UpdateRelationshipTypeRequest(::google::protobuf::Arena* arena);
  UpdateRelationshipTypeRequest(::google::protobuf::Arena* arena, const UpdateRelationshipTypeRequest& from);
  UpdateRelationshipTypeRequest(::google::protobuf::Arena* arena, UpdateRelationshipTypeRequest&& from) noexcept
      : UpdateRelationshipTypeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRelationshipTypeFieldNumber = 1,
  };
  // .organization.RelationshipTypeModel relationship_type = 1;
  bool has_relationship_type() const;
  void clear_relationship_type() ;
  const ::organization::RelationshipTypeModel& relationship_type() const;
  PROTOBUF_NODISCARD ::organization::RelationshipTypeModel* release_relationship_type();
  ::organization::RelationshipTypeModel* mutable_relationship_type();
  void set_allocated_relationship_type(::organization::RelationshipTypeModel* value);
  void unsafe_arena_set_allocated_relationship_type(::organization::RelationshipTypeModel* value);
  ::organization::RelationshipTypeModel* unsafe_arena_release_relationship_type();

  private:
  const ::organization::RelationshipTypeModel& _internal_relationship_type() const;
  ::organization::RelationshipTypeModel* _internal_mutable_relationship_type();

  public:
  // @@protoc_insertion_point(class_scope:organization.UpdateRelationshipTypeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateRelationshipTypeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::RelationshipTypeModel* relationship_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class UpdateRelationshipResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.UpdateRelationshipResponse) */ {
 public:
  inline UpdateRelationshipResponse() : UpdateRelationshipResponse(nullptr) {}
  ~UpdateRelationshipResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateRelationshipResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateRelationshipResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateRelationshipResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateRelationshipResponse(const UpdateRelationshipResponse& from) : UpdateRelationshipResponse(nullptr, from) {}
  inline UpdateRelationshipResponse(UpdateRelationshipResponse&& from) noexcept
      : UpdateRelationshipResponse(nullptr, std::move(from)) {}
  inline UpdateRelationshipResponse& operator=(const UpdateRelationshipResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateRelationshipResponse& operator=(UpdateRelationshipResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateRelationshipResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateRelationshipResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateRelationshipResponse*>(
        &_UpdateRelationshipResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 60;
  friend void swap(UpdateRelationshipResponse& a, UpdateRelationshipResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateRelationshipResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateRelationshipResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateRelationshipResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateRelationshipResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateRelationshipResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateRelationshipResponse& from) { UpdateRelationshipResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateRelationshipResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.UpdateRelationshipResponse"; }

 protected:
  explicit UpdateRelationshipResponse(::google::protobuf::Arena* arena);
  UpdateRelationshipResponse(::google::protobuf::Arena* arena, const UpdateRelationshipResponse& from);
  UpdateRelationshipResponse(::google::protobuf::Arena* arena, UpdateRelationshipResponse&& from) noexcept
      : UpdateRelationshipResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRelationshipFieldNumber = 1,
  };
  // .organization.RelationshipModel relationship = 1;
  bool has_relationship() const;
  void clear_relationship() ;
  const ::organization::RelationshipModel& relationship() const;
  PROTOBUF_NODISCARD ::organization::RelationshipModel* release_relationship();
  ::organization::RelationshipModel* mutable_relationship();
  void set_allocated_relationship(::organization::RelationshipModel* value);
  void unsafe_arena_set_allocated_relationship(::organization::RelationshipModel* value);
  ::organization::RelationshipModel* unsafe_arena_release_relationship();

  private:
  const ::organization::RelationshipModel& _internal_relationship() const;
  ::organization::RelationshipModel* _internal_mutable_relationship();

  public:
  // @@protoc_insertion_point(class_scope:organization.UpdateRelationshipResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateRelationshipResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::RelationshipModel* relationship_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class UpdateRelationshipRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.UpdateRelationshipRequest) */ {
 public:
  inline UpdateRelationshipRequest() : UpdateRelationshipRequest(nullptr) {}
  ~UpdateRelationshipRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateRelationshipRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateRelationshipRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateRelationshipRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateRelationshipRequest(const UpdateRelationshipRequest& from) : UpdateRelationshipRequest(nullptr, from) {}
  inline UpdateRelationshipRequest(UpdateRelationshipRequest&& from) noexcept
      : UpdateRelationshipRequest(nullptr, std::move(from)) {}
  inline UpdateRelationshipRequest& operator=(const UpdateRelationshipRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateRelationshipRequest& operator=(UpdateRelationshipRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateRelationshipRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateRelationshipRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateRelationshipRequest*>(
        &_UpdateRelationshipRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 59;
  friend void swap(UpdateRelationshipRequest& a, UpdateRelationshipRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateRelationshipRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateRelationshipRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateRelationshipRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateRelationshipRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateRelationshipRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateRelationshipRequest& from) { UpdateRelationshipRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateRelationshipRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.UpdateRelationshipRequest"; }

 protected:
  explicit UpdateRelationshipRequest(::google::protobuf::Arena* arena);
  UpdateRelationshipRequest(::google::protobuf::Arena* arena, const UpdateRelationshipRequest& from);
  UpdateRelationshipRequest(::google::protobuf::Arena* arena, UpdateRelationshipRequest&& from) noexcept
      : UpdateRelationshipRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRelationshipFieldNumber = 1,
  };
  // .organization.RelationshipModel relationship = 1;
  bool has_relationship() const;
  void clear_relationship() ;
  const ::organization::RelationshipModel& relationship() const;
  PROTOBUF_NODISCARD ::organization::RelationshipModel* release_relationship();
  ::organization::RelationshipModel* mutable_relationship();
  void set_allocated_relationship(::organization::RelationshipModel* value);
  void unsafe_arena_set_allocated_relationship(::organization::RelationshipModel* value);
  ::organization::RelationshipModel* unsafe_arena_release_relationship();

  private:
  const ::organization::RelationshipModel& _internal_relationship() const;
  ::organization::RelationshipModel* _internal_mutable_relationship();

  public:
  // @@protoc_insertion_point(class_scope:organization.UpdateRelationshipRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateRelationshipRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::RelationshipModel* relationship_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class UpdateOrganizationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.UpdateOrganizationResponse) */ {
 public:
  inline UpdateOrganizationResponse() : UpdateOrganizationResponse(nullptr) {}
  ~UpdateOrganizationResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateOrganizationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateOrganizationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateOrganizationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateOrganizationResponse(const UpdateOrganizationResponse& from) : UpdateOrganizationResponse(nullptr, from) {}
  inline UpdateOrganizationResponse(UpdateOrganizationResponse&& from) noexcept
      : UpdateOrganizationResponse(nullptr, std::move(from)) {}
  inline UpdateOrganizationResponse& operator=(const UpdateOrganizationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateOrganizationResponse& operator=(UpdateOrganizationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateOrganizationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateOrganizationResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateOrganizationResponse*>(
        &_UpdateOrganizationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(UpdateOrganizationResponse& a, UpdateOrganizationResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateOrganizationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateOrganizationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateOrganizationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateOrganizationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateOrganizationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateOrganizationResponse& from) { UpdateOrganizationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateOrganizationResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.UpdateOrganizationResponse"; }

 protected:
  explicit UpdateOrganizationResponse(::google::protobuf::Arena* arena);
  UpdateOrganizationResponse(::google::protobuf::Arena* arena, const UpdateOrganizationResponse& from);
  UpdateOrganizationResponse(::google::protobuf::Arena* arena, UpdateOrganizationResponse&& from) noexcept
      : UpdateOrganizationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrganizationFieldNumber = 1,
  };
  // .organization.OrganizationModel organization = 1;
  bool has_organization() const;
  void clear_organization() ;
  const ::organization::OrganizationModel& organization() const;
  PROTOBUF_NODISCARD ::organization::OrganizationModel* release_organization();
  ::organization::OrganizationModel* mutable_organization();
  void set_allocated_organization(::organization::OrganizationModel* value);
  void unsafe_arena_set_allocated_organization(::organization::OrganizationModel* value);
  ::organization::OrganizationModel* unsafe_arena_release_organization();

  private:
  const ::organization::OrganizationModel& _internal_organization() const;
  ::organization::OrganizationModel* _internal_mutable_organization();

  public:
  // @@protoc_insertion_point(class_scope:organization.UpdateOrganizationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateOrganizationResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::OrganizationModel* organization_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class UpdateOrganizationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.UpdateOrganizationRequest) */ {
 public:
  inline UpdateOrganizationRequest() : UpdateOrganizationRequest(nullptr) {}
  ~UpdateOrganizationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateOrganizationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateOrganizationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateOrganizationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateOrganizationRequest(const UpdateOrganizationRequest& from) : UpdateOrganizationRequest(nullptr, from) {}
  inline UpdateOrganizationRequest(UpdateOrganizationRequest&& from) noexcept
      : UpdateOrganizationRequest(nullptr, std::move(from)) {}
  inline UpdateOrganizationRequest& operator=(const UpdateOrganizationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateOrganizationRequest& operator=(UpdateOrganizationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateOrganizationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateOrganizationRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateOrganizationRequest*>(
        &_UpdateOrganizationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(UpdateOrganizationRequest& a, UpdateOrganizationRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateOrganizationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateOrganizationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateOrganizationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateOrganizationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateOrganizationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateOrganizationRequest& from) { UpdateOrganizationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateOrganizationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.UpdateOrganizationRequest"; }

 protected:
  explicit UpdateOrganizationRequest(::google::protobuf::Arena* arena);
  UpdateOrganizationRequest(::google::protobuf::Arena* arena, const UpdateOrganizationRequest& from);
  UpdateOrganizationRequest(::google::protobuf::Arena* arena, UpdateOrganizationRequest&& from) noexcept
      : UpdateOrganizationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrganizationFieldNumber = 1,
  };
  // .organization.OrganizationModel organization = 1;
  bool has_organization() const;
  void clear_organization() ;
  const ::organization::OrganizationModel& organization() const;
  PROTOBUF_NODISCARD ::organization::OrganizationModel* release_organization();
  ::organization::OrganizationModel* mutable_organization();
  void set_allocated_organization(::organization::OrganizationModel* value);
  void unsafe_arena_set_allocated_organization(::organization::OrganizationModel* value);
  ::organization::OrganizationModel* unsafe_arena_release_organization();

  private:
  const ::organization::OrganizationModel& _internal_organization() const;
  ::organization::OrganizationModel* _internal_mutable_organization();

  public:
  // @@protoc_insertion_point(class_scope:organization.UpdateOrganizationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateOrganizationRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::OrganizationModel* organization_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class UpdateContactResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.UpdateContactResponse) */ {
 public:
  inline UpdateContactResponse() : UpdateContactResponse(nullptr) {}
  ~UpdateContactResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateContactResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateContactResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateContactResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateContactResponse(const UpdateContactResponse& from) : UpdateContactResponse(nullptr, from) {}
  inline UpdateContactResponse(UpdateContactResponse&& from) noexcept
      : UpdateContactResponse(nullptr, std::move(from)) {}
  inline UpdateContactResponse& operator=(const UpdateContactResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateContactResponse& operator=(UpdateContactResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateContactResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateContactResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateContactResponse*>(
        &_UpdateContactResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 76;
  friend void swap(UpdateContactResponse& a, UpdateContactResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateContactResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateContactResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateContactResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateContactResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateContactResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateContactResponse& from) { UpdateContactResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateContactResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.UpdateContactResponse"; }

 protected:
  explicit UpdateContactResponse(::google::protobuf::Arena* arena);
  UpdateContactResponse(::google::protobuf::Arena* arena, const UpdateContactResponse& from);
  UpdateContactResponse(::google::protobuf::Arena* arena, UpdateContactResponse&& from) noexcept
      : UpdateContactResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContactFieldNumber = 1,
  };
  // .organization.ContactModel contact = 1;
  bool has_contact() const;
  void clear_contact() ;
  const ::organization::ContactModel& contact() const;
  PROTOBUF_NODISCARD ::organization::ContactModel* release_contact();
  ::organization::ContactModel* mutable_contact();
  void set_allocated_contact(::organization::ContactModel* value);
  void unsafe_arena_set_allocated_contact(::organization::ContactModel* value);
  ::organization::ContactModel* unsafe_arena_release_contact();

  private:
  const ::organization::ContactModel& _internal_contact() const;
  ::organization::ContactModel* _internal_mutable_contact();

  public:
  // @@protoc_insertion_point(class_scope:organization.UpdateContactResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateContactResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::ContactModel* contact_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class UpdateContactRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.UpdateContactRequest) */ {
 public:
  inline UpdateContactRequest() : UpdateContactRequest(nullptr) {}
  ~UpdateContactRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateContactRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateContactRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateContactRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateContactRequest(const UpdateContactRequest& from) : UpdateContactRequest(nullptr, from) {}
  inline UpdateContactRequest(UpdateContactRequest&& from) noexcept
      : UpdateContactRequest(nullptr, std::move(from)) {}
  inline UpdateContactRequest& operator=(const UpdateContactRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateContactRequest& operator=(UpdateContactRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateContactRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateContactRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateContactRequest*>(
        &_UpdateContactRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 75;
  friend void swap(UpdateContactRequest& a, UpdateContactRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateContactRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateContactRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateContactRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateContactRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateContactRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateContactRequest& from) { UpdateContactRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateContactRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.UpdateContactRequest"; }

 protected:
  explicit UpdateContactRequest(::google::protobuf::Arena* arena);
  UpdateContactRequest(::google::protobuf::Arena* arena, const UpdateContactRequest& from);
  UpdateContactRequest(::google::protobuf::Arena* arena, UpdateContactRequest&& from) noexcept
      : UpdateContactRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContactFieldNumber = 1,
  };
  // .organization.ContactModel contact = 1;
  bool has_contact() const;
  void clear_contact() ;
  const ::organization::ContactModel& contact() const;
  PROTOBUF_NODISCARD ::organization::ContactModel* release_contact();
  ::organization::ContactModel* mutable_contact();
  void set_allocated_contact(::organization::ContactModel* value);
  void unsafe_arena_set_allocated_contact(::organization::ContactModel* value);
  ::organization::ContactModel* unsafe_arena_release_contact();

  private:
  const ::organization::ContactModel& _internal_contact() const;
  ::organization::ContactModel* _internal_mutable_contact();

  public:
  // @@protoc_insertion_point(class_scope:organization.UpdateContactRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateContactRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::ContactModel* contact_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class UpdateBankAccountsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.UpdateBankAccountsResponse) */ {
 public:
  inline UpdateBankAccountsResponse() : UpdateBankAccountsResponse(nullptr) {}
  ~UpdateBankAccountsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateBankAccountsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateBankAccountsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateBankAccountsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateBankAccountsResponse(const UpdateBankAccountsResponse& from) : UpdateBankAccountsResponse(nullptr, from) {}
  inline UpdateBankAccountsResponse(UpdateBankAccountsResponse&& from) noexcept
      : UpdateBankAccountsResponse(nullptr, std::move(from)) {}
  inline UpdateBankAccountsResponse& operator=(const UpdateBankAccountsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateBankAccountsResponse& operator=(UpdateBankAccountsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateBankAccountsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateBankAccountsResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateBankAccountsResponse*>(
        &_UpdateBankAccountsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(UpdateBankAccountsResponse& a, UpdateBankAccountsResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateBankAccountsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateBankAccountsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateBankAccountsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateBankAccountsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateBankAccountsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateBankAccountsResponse& from) { UpdateBankAccountsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateBankAccountsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.UpdateBankAccountsResponse"; }

 protected:
  explicit UpdateBankAccountsResponse(::google::protobuf::Arena* arena);
  UpdateBankAccountsResponse(::google::protobuf::Arena* arena, const UpdateBankAccountsResponse& from);
  UpdateBankAccountsResponse(::google::protobuf::Arena* arena, UpdateBankAccountsResponse&& from) noexcept
      : UpdateBankAccountsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBankAccountsFieldNumber = 1,
  };
  // repeated .organization.BankAccountModel bank_accounts = 1;
  int bank_accounts_size() const;
  private:
  int _internal_bank_accounts_size() const;

  public:
  void clear_bank_accounts() ;
  ::organization::BankAccountModel* mutable_bank_accounts(int index);
  ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>* mutable_bank_accounts();

  private:
  const ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>& _internal_bank_accounts() const;
  ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>* _internal_mutable_bank_accounts();
  public:
  const ::organization::BankAccountModel& bank_accounts(int index) const;
  ::organization::BankAccountModel* add_bank_accounts();
  const ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>& bank_accounts() const;
  // @@protoc_insertion_point(class_scope:organization.UpdateBankAccountsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateBankAccountsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::organization::BankAccountModel > bank_accounts_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class UpdateBankAccountsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.UpdateBankAccountsRequest) */ {
 public:
  inline UpdateBankAccountsRequest() : UpdateBankAccountsRequest(nullptr) {}
  ~UpdateBankAccountsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateBankAccountsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateBankAccountsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateBankAccountsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateBankAccountsRequest(const UpdateBankAccountsRequest& from) : UpdateBankAccountsRequest(nullptr, from) {}
  inline UpdateBankAccountsRequest(UpdateBankAccountsRequest&& from) noexcept
      : UpdateBankAccountsRequest(nullptr, std::move(from)) {}
  inline UpdateBankAccountsRequest& operator=(const UpdateBankAccountsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateBankAccountsRequest& operator=(UpdateBankAccountsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateBankAccountsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateBankAccountsRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateBankAccountsRequest*>(
        &_UpdateBankAccountsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 43;
  friend void swap(UpdateBankAccountsRequest& a, UpdateBankAccountsRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateBankAccountsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateBankAccountsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateBankAccountsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateBankAccountsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateBankAccountsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateBankAccountsRequest& from) { UpdateBankAccountsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateBankAccountsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.UpdateBankAccountsRequest"; }

 protected:
  explicit UpdateBankAccountsRequest(::google::protobuf::Arena* arena);
  UpdateBankAccountsRequest(::google::protobuf::Arena* arena, const UpdateBankAccountsRequest& from);
  UpdateBankAccountsRequest(::google::protobuf::Arena* arena, UpdateBankAccountsRequest&& from) noexcept
      : UpdateBankAccountsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBankAccountsFieldNumber = 1,
    kOrganizationIdFieldNumber = 2,
  };
  // repeated .organization.BankAccountModel bank_accounts = 1;
  int bank_accounts_size() const;
  private:
  int _internal_bank_accounts_size() const;

  public:
  void clear_bank_accounts() ;
  ::organization::BankAccountModel* mutable_bank_accounts(int index);
  ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>* mutable_bank_accounts();

  private:
  const ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>& _internal_bank_accounts() const;
  ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>* _internal_mutable_bank_accounts();
  public:
  const ::organization::BankAccountModel& bank_accounts(int index) const;
  ::organization::BankAccountModel* add_bank_accounts();
  const ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>& bank_accounts() const;
  // int64 organization_id = 2;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.UpdateBankAccountsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateBankAccountsRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::organization::BankAccountModel > bank_accounts_;
    ::int64_t organization_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class UpdateBankAccountResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.UpdateBankAccountResponse) */ {
 public:
  inline UpdateBankAccountResponse() : UpdateBankAccountResponse(nullptr) {}
  ~UpdateBankAccountResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateBankAccountResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateBankAccountResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateBankAccountResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateBankAccountResponse(const UpdateBankAccountResponse& from) : UpdateBankAccountResponse(nullptr, from) {}
  inline UpdateBankAccountResponse(UpdateBankAccountResponse&& from) noexcept
      : UpdateBankAccountResponse(nullptr, std::move(from)) {}
  inline UpdateBankAccountResponse& operator=(const UpdateBankAccountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateBankAccountResponse& operator=(UpdateBankAccountResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateBankAccountResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateBankAccountResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateBankAccountResponse*>(
        &_UpdateBankAccountResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 42;
  friend void swap(UpdateBankAccountResponse& a, UpdateBankAccountResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateBankAccountResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateBankAccountResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateBankAccountResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateBankAccountResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateBankAccountResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateBankAccountResponse& from) { UpdateBankAccountResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateBankAccountResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.UpdateBankAccountResponse"; }

 protected:
  explicit UpdateBankAccountResponse(::google::protobuf::Arena* arena);
  UpdateBankAccountResponse(::google::protobuf::Arena* arena, const UpdateBankAccountResponse& from);
  UpdateBankAccountResponse(::google::protobuf::Arena* arena, UpdateBankAccountResponse&& from) noexcept
      : UpdateBankAccountResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBankAccountFieldNumber = 1,
  };
  // .organization.BankAccountModel bank_account = 1;
  bool has_bank_account() const;
  void clear_bank_account() ;
  const ::organization::BankAccountModel& bank_account() const;
  PROTOBUF_NODISCARD ::organization::BankAccountModel* release_bank_account();
  ::organization::BankAccountModel* mutable_bank_account();
  void set_allocated_bank_account(::organization::BankAccountModel* value);
  void unsafe_arena_set_allocated_bank_account(::organization::BankAccountModel* value);
  ::organization::BankAccountModel* unsafe_arena_release_bank_account();

  private:
  const ::organization::BankAccountModel& _internal_bank_account() const;
  ::organization::BankAccountModel* _internal_mutable_bank_account();

  public:
  // @@protoc_insertion_point(class_scope:organization.UpdateBankAccountResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateBankAccountResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::BankAccountModel* bank_account_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class UpdateBankAccountRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.UpdateBankAccountRequest) */ {
 public:
  inline UpdateBankAccountRequest() : UpdateBankAccountRequest(nullptr) {}
  ~UpdateBankAccountRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateBankAccountRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateBankAccountRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateBankAccountRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateBankAccountRequest(const UpdateBankAccountRequest& from) : UpdateBankAccountRequest(nullptr, from) {}
  inline UpdateBankAccountRequest(UpdateBankAccountRequest&& from) noexcept
      : UpdateBankAccountRequest(nullptr, std::move(from)) {}
  inline UpdateBankAccountRequest& operator=(const UpdateBankAccountRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateBankAccountRequest& operator=(UpdateBankAccountRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateBankAccountRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateBankAccountRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateBankAccountRequest*>(
        &_UpdateBankAccountRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(UpdateBankAccountRequest& a, UpdateBankAccountRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateBankAccountRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateBankAccountRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateBankAccountRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateBankAccountRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateBankAccountRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateBankAccountRequest& from) { UpdateBankAccountRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateBankAccountRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.UpdateBankAccountRequest"; }

 protected:
  explicit UpdateBankAccountRequest(::google::protobuf::Arena* arena);
  UpdateBankAccountRequest(::google::protobuf::Arena* arena, const UpdateBankAccountRequest& from);
  UpdateBankAccountRequest(::google::protobuf::Arena* arena, UpdateBankAccountRequest&& from) noexcept
      : UpdateBankAccountRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBankAccountFieldNumber = 1,
  };
  // .organization.BankAccountModel bank_account = 1;
  bool has_bank_account() const;
  void clear_bank_account() ;
  const ::organization::BankAccountModel& bank_account() const;
  PROTOBUF_NODISCARD ::organization::BankAccountModel* release_bank_account();
  ::organization::BankAccountModel* mutable_bank_account();
  void set_allocated_bank_account(::organization::BankAccountModel* value);
  void unsafe_arena_set_allocated_bank_account(::organization::BankAccountModel* value);
  ::organization::BankAccountModel* unsafe_arena_release_bank_account();

  private:
  const ::organization::BankAccountModel& _internal_bank_account() const;
  ::organization::BankAccountModel* _internal_mutable_bank_account();

  public:
  // @@protoc_insertion_point(class_scope:organization.UpdateBankAccountRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateBankAccountRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::BankAccountModel* bank_account_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class UpdateAddressResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.UpdateAddressResponse) */ {
 public:
  inline UpdateAddressResponse() : UpdateAddressResponse(nullptr) {}
  ~UpdateAddressResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateAddressResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateAddressResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateAddressResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateAddressResponse(const UpdateAddressResponse& from) : UpdateAddressResponse(nullptr, from) {}
  inline UpdateAddressResponse(UpdateAddressResponse&& from) noexcept
      : UpdateAddressResponse(nullptr, std::move(from)) {}
  inline UpdateAddressResponse& operator=(const UpdateAddressResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateAddressResponse& operator=(UpdateAddressResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateAddressResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateAddressResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateAddressResponse*>(
        &_UpdateAddressResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 52;
  friend void swap(UpdateAddressResponse& a, UpdateAddressResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateAddressResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateAddressResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateAddressResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateAddressResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateAddressResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateAddressResponse& from) { UpdateAddressResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateAddressResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.UpdateAddressResponse"; }

 protected:
  explicit UpdateAddressResponse(::google::protobuf::Arena* arena);
  UpdateAddressResponse(::google::protobuf::Arena* arena, const UpdateAddressResponse& from);
  UpdateAddressResponse(::google::protobuf::Arena* arena, UpdateAddressResponse&& from) noexcept
      : UpdateAddressResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
  };
  // .organization.AddressModel address = 1;
  bool has_address() const;
  void clear_address() ;
  const ::organization::AddressModel& address() const;
  PROTOBUF_NODISCARD ::organization::AddressModel* release_address();
  ::organization::AddressModel* mutable_address();
  void set_allocated_address(::organization::AddressModel* value);
  void unsafe_arena_set_allocated_address(::organization::AddressModel* value);
  ::organization::AddressModel* unsafe_arena_release_address();

  private:
  const ::organization::AddressModel& _internal_address() const;
  ::organization::AddressModel* _internal_mutable_address();

  public:
  // @@protoc_insertion_point(class_scope:organization.UpdateAddressResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateAddressResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::AddressModel* address_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class UpdateAddressRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.UpdateAddressRequest) */ {
 public:
  inline UpdateAddressRequest() : UpdateAddressRequest(nullptr) {}
  ~UpdateAddressRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateAddressRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateAddressRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateAddressRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateAddressRequest(const UpdateAddressRequest& from) : UpdateAddressRequest(nullptr, from) {}
  inline UpdateAddressRequest(UpdateAddressRequest&& from) noexcept
      : UpdateAddressRequest(nullptr, std::move(from)) {}
  inline UpdateAddressRequest& operator=(const UpdateAddressRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateAddressRequest& operator=(UpdateAddressRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateAddressRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateAddressRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateAddressRequest*>(
        &_UpdateAddressRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 51;
  friend void swap(UpdateAddressRequest& a, UpdateAddressRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateAddressRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateAddressRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateAddressRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateAddressRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateAddressRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateAddressRequest& from) { UpdateAddressRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateAddressRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.UpdateAddressRequest"; }

 protected:
  explicit UpdateAddressRequest(::google::protobuf::Arena* arena);
  UpdateAddressRequest(::google::protobuf::Arena* arena, const UpdateAddressRequest& from);
  UpdateAddressRequest(::google::protobuf::Arena* arena, UpdateAddressRequest&& from) noexcept
      : UpdateAddressRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
  };
  // .organization.AddressModel address = 1;
  bool has_address() const;
  void clear_address() ;
  const ::organization::AddressModel& address() const;
  PROTOBUF_NODISCARD ::organization::AddressModel* release_address();
  ::organization::AddressModel* mutable_address();
  void set_allocated_address(::organization::AddressModel* value);
  void unsafe_arena_set_allocated_address(::organization::AddressModel* value);
  ::organization::AddressModel* unsafe_arena_release_address();

  private:
  const ::organization::AddressModel& _internal_address() const;
  ::organization::AddressModel* _internal_mutable_address();

  public:
  // @@protoc_insertion_point(class_scope:organization.UpdateAddressRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateAddressRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::AddressModel* address_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class SaleSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.SaleSettings) */ {
 public:
  inline SaleSettings() : SaleSettings(nullptr) {}
  ~SaleSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SaleSettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SaleSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SaleSettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline SaleSettings(const SaleSettings& from) : SaleSettings(nullptr, from) {}
  inline SaleSettings(SaleSettings&& from) noexcept
      : SaleSettings(nullptr, std::move(from)) {}
  inline SaleSettings& operator=(const SaleSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline SaleSettings& operator=(SaleSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SaleSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const SaleSettings* internal_default_instance() {
    return reinterpret_cast<const SaleSettings*>(
        &_SaleSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SaleSettings& a, SaleSettings& b) { a.Swap(&b); }
  inline void Swap(SaleSettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SaleSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SaleSettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SaleSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SaleSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SaleSettings& from) { SaleSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SaleSettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.SaleSettings"; }

 protected:
  explicit SaleSettings(::google::protobuf::Arena* arena);
  SaleSettings(::google::protobuf::Arena* arena, const SaleSettings& from);
  SaleSettings(::google::protobuf::Arena* arena, SaleSettings&& from) noexcept
      : SaleSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExpencesFieldNumber = 4,
    kCategoryIdFieldNumber = 5,
    kCategoryNameFieldNumber = 6,
    kIdFieldNumber = 1,
    kOrganizationIdFieldNumber = 2,
    kProfitPercentFieldNumber = 3,
  };
  // repeated .organization.Expences expences = 4;
  int expences_size() const;
  private:
  int _internal_expences_size() const;

  public:
  void clear_expences() ;
  ::organization::Expences* mutable_expences(int index);
  ::google::protobuf::RepeatedPtrField<::organization::Expences>* mutable_expences();

  private:
  const ::google::protobuf::RepeatedPtrField<::organization::Expences>& _internal_expences() const;
  ::google::protobuf::RepeatedPtrField<::organization::Expences>* _internal_mutable_expences();
  public:
  const ::organization::Expences& expences(int index) const;
  ::organization::Expences* add_expences();
  const ::google::protobuf::RepeatedPtrField<::organization::Expences>& expences() const;
  // string category_id = 5;
  void clear_category_id() ;
  const std::string& category_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_category_id(Arg_&& arg, Args_... args);
  std::string* mutable_category_id();
  PROTOBUF_NODISCARD std::string* release_category_id();
  void set_allocated_category_id(std::string* value);

  private:
  const std::string& _internal_category_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_category_id(
      const std::string& value);
  std::string* _internal_mutable_category_id();

  public:
  // string category_name = 6;
  void clear_category_name() ;
  const std::string& category_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_category_name(Arg_&& arg, Args_... args);
  std::string* mutable_category_name();
  PROTOBUF_NODISCARD std::string* release_category_name();
  void set_allocated_category_name(std::string* value);

  private:
  const std::string& _internal_category_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_category_name(
      const std::string& value);
  std::string* _internal_mutable_category_name();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 organization_id = 2;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // float profit_percent = 3;
  void clear_profit_percent() ;
  float profit_percent() const;
  void set_profit_percent(float value);

  private:
  float _internal_profit_percent() const;
  void _internal_set_profit_percent(float value);

  public:
  // @@protoc_insertion_point(class_scope:organization.SaleSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      58, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SaleSettings& from_msg);
    ::google::protobuf::RepeatedPtrField< ::organization::Expences > expences_;
    ::google::protobuf::internal::ArenaStringPtr category_id_;
    ::google::protobuf::internal::ArenaStringPtr category_name_;
    ::int64_t id_;
    ::int64_t organization_id_;
    float profit_percent_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class Relationship final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.Relationship) */ {
 public:
  inline Relationship() : Relationship(nullptr) {}
  ~Relationship() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Relationship* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Relationship));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Relationship(
      ::google::protobuf::internal::ConstantInitialized);

  inline Relationship(const Relationship& from) : Relationship(nullptr, from) {}
  inline Relationship(Relationship&& from) noexcept
      : Relationship(nullptr, std::move(from)) {}
  inline Relationship& operator=(const Relationship& from) {
    CopyFrom(from);
    return *this;
  }
  inline Relationship& operator=(Relationship&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Relationship& default_instance() {
    return *internal_default_instance();
  }
  static inline const Relationship* internal_default_instance() {
    return reinterpret_cast<const Relationship*>(
        &_Relationship_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(Relationship& a, Relationship& b) { a.Swap(&b); }
  inline void Swap(Relationship* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Relationship* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Relationship* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Relationship>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Relationship& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Relationship& from) { Relationship::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Relationship* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.Relationship"; }

 protected:
  explicit Relationship(::google::protobuf::Arena* arena);
  Relationship(::google::protobuf::Arena* arena, const Relationship& from);
  Relationship(::google::protobuf::Arena* arena, Relationship&& from) noexcept
      : Relationship(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRelationshipTypeFieldNumber = 4,
    kIdFieldNumber = 1,
    kSourceOrganizationIdFieldNumber = 2,
    kTargetOrganizationIdFieldNumber = 3,
  };
  // .organization.RelationshipTypeModel relationship_type = 4;
  bool has_relationship_type() const;
  void clear_relationship_type() ;
  const ::organization::RelationshipTypeModel& relationship_type() const;
  PROTOBUF_NODISCARD ::organization::RelationshipTypeModel* release_relationship_type();
  ::organization::RelationshipTypeModel* mutable_relationship_type();
  void set_allocated_relationship_type(::organization::RelationshipTypeModel* value);
  void unsafe_arena_set_allocated_relationship_type(::organization::RelationshipTypeModel* value);
  ::organization::RelationshipTypeModel* unsafe_arena_release_relationship_type();

  private:
  const ::organization::RelationshipTypeModel& _internal_relationship_type() const;
  ::organization::RelationshipTypeModel* _internal_mutable_relationship_type();

  public:
  // optional int64 id = 1;
  bool has_id() const;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // optional int64 source_organization_id = 2;
  bool has_source_organization_id() const;
  void clear_source_organization_id() ;
  ::int64_t source_organization_id() const;
  void set_source_organization_id(::int64_t value);

  private:
  ::int64_t _internal_source_organization_id() const;
  void _internal_set_source_organization_id(::int64_t value);

  public:
  // optional int64 target_organization_id = 3;
  bool has_target_organization_id() const;
  void clear_target_organization_id() ;
  ::int64_t target_organization_id() const;
  void set_target_organization_id(::int64_t value);

  private:
  ::int64_t _internal_target_organization_id() const;
  void _internal_set_target_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.Relationship)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Relationship& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::RelationshipTypeModel* relationship_type_;
    ::int64_t id_;
    ::int64_t source_organization_id_;
    ::int64_t target_organization_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class PatchAddressResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.PatchAddressResponse) */ {
 public:
  inline PatchAddressResponse() : PatchAddressResponse(nullptr) {}
  ~PatchAddressResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PatchAddressResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PatchAddressResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PatchAddressResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PatchAddressResponse(const PatchAddressResponse& from) : PatchAddressResponse(nullptr, from) {}
  inline PatchAddressResponse(PatchAddressResponse&& from) noexcept
      : PatchAddressResponse(nullptr, std::move(from)) {}
  inline PatchAddressResponse& operator=(const PatchAddressResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PatchAddressResponse& operator=(PatchAddressResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PatchAddressResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PatchAddressResponse* internal_default_instance() {
    return reinterpret_cast<const PatchAddressResponse*>(
        &_PatchAddressResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 54;
  friend void swap(PatchAddressResponse& a, PatchAddressResponse& b) { a.Swap(&b); }
  inline void Swap(PatchAddressResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PatchAddressResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PatchAddressResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PatchAddressResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PatchAddressResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PatchAddressResponse& from) { PatchAddressResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PatchAddressResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.PatchAddressResponse"; }

 protected:
  explicit PatchAddressResponse(::google::protobuf::Arena* arena);
  PatchAddressResponse(::google::protobuf::Arena* arena, const PatchAddressResponse& from);
  PatchAddressResponse(::google::protobuf::Arena* arena, PatchAddressResponse&& from) noexcept
      : PatchAddressResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
  };
  // .organization.AddressModel address = 1;
  bool has_address() const;
  void clear_address() ;
  const ::organization::AddressModel& address() const;
  PROTOBUF_NODISCARD ::organization::AddressModel* release_address();
  ::organization::AddressModel* mutable_address();
  void set_allocated_address(::organization::AddressModel* value);
  void unsafe_arena_set_allocated_address(::organization::AddressModel* value);
  ::organization::AddressModel* unsafe_arena_release_address();

  private:
  const ::organization::AddressModel& _internal_address() const;
  ::organization::AddressModel* _internal_mutable_address();

  public:
  // @@protoc_insertion_point(class_scope:organization.PatchAddressResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PatchAddressResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::AddressModel* address_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class PatchAddressRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.PatchAddressRequest) */ {
 public:
  inline PatchAddressRequest() : PatchAddressRequest(nullptr) {}
  ~PatchAddressRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PatchAddressRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PatchAddressRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PatchAddressRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PatchAddressRequest(const PatchAddressRequest& from) : PatchAddressRequest(nullptr, from) {}
  inline PatchAddressRequest(PatchAddressRequest&& from) noexcept
      : PatchAddressRequest(nullptr, std::move(from)) {}
  inline PatchAddressRequest& operator=(const PatchAddressRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PatchAddressRequest& operator=(PatchAddressRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PatchAddressRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PatchAddressRequest* internal_default_instance() {
    return reinterpret_cast<const PatchAddressRequest*>(
        &_PatchAddressRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 53;
  friend void swap(PatchAddressRequest& a, PatchAddressRequest& b) { a.Swap(&b); }
  inline void Swap(PatchAddressRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PatchAddressRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PatchAddressRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PatchAddressRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PatchAddressRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PatchAddressRequest& from) { PatchAddressRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PatchAddressRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.PatchAddressRequest"; }

 protected:
  explicit PatchAddressRequest(::google::protobuf::Arena* arena);
  PatchAddressRequest(::google::protobuf::Arena* arena, const PatchAddressRequest& from);
  PatchAddressRequest(::google::protobuf::Arena* arena, PatchAddressRequest&& from) noexcept
      : PatchAddressRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
  };
  // .organization.AddressModel address = 1;
  bool has_address() const;
  void clear_address() ;
  const ::organization::AddressModel& address() const;
  PROTOBUF_NODISCARD ::organization::AddressModel* release_address();
  ::organization::AddressModel* mutable_address();
  void set_allocated_address(::organization::AddressModel* value);
  void unsafe_arena_set_allocated_address(::organization::AddressModel* value);
  ::organization::AddressModel* unsafe_arena_release_address();

  private:
  const ::organization::AddressModel& _internal_address() const;
  ::organization::AddressModel* _internal_mutable_address();

  public:
  // @@protoc_insertion_point(class_scope:organization.PatchAddressRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PatchAddressRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::AddressModel* address_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class Organization final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.Organization) */ {
 public:
  inline Organization() : Organization(nullptr) {}
  ~Organization() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Organization* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Organization));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Organization(
      ::google::protobuf::internal::ConstantInitialized);

  inline Organization(const Organization& from) : Organization(nullptr, from) {}
  inline Organization(Organization&& from) noexcept
      : Organization(nullptr, std::move(from)) {}
  inline Organization& operator=(const Organization& from) {
    CopyFrom(from);
    return *this;
  }
  inline Organization& operator=(Organization&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Organization& default_instance() {
    return *internal_default_instance();
  }
  static inline const Organization* internal_default_instance() {
    return reinterpret_cast<const Organization*>(
        &_Organization_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(Organization& a, Organization& b) { a.Swap(&b); }
  inline void Swap(Organization* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Organization* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Organization* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Organization>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Organization& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Organization& from) { Organization::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Organization* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.Organization"; }

 protected:
  explicit Organization(::google::protobuf::Arena* arena);
  Organization(::google::protobuf::Arena* arena, const Organization& from);
  Organization(::google::protobuf::Arena* arena, Organization&& from) noexcept
      : Organization(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kImagesFieldNumber = 11,
    kContactsFieldNumber = 12,
    kNameFieldNumber = 2,
    kImageUrlFieldNumber = 3,
    kTypeFieldNumber = 4,
    kLegalNameFieldNumber = 5,
    kBinFieldNumber = 6,
    kPhoneNumberFieldNumber = 7,
    kEmailFieldNumber = 8,
    kLegalAddressFieldNumber = 10,
    kAddressFieldNumber = 9,
    kIdFieldNumber = 1,
  };
  // repeated .organization.ImageModel images = 11;
  int images_size() const;
  private:
  int _internal_images_size() const;

  public:
  void clear_images() ;
  ::organization::ImageModel* mutable_images(int index);
  ::google::protobuf::RepeatedPtrField<::organization::ImageModel>* mutable_images();

  private:
  const ::google::protobuf::RepeatedPtrField<::organization::ImageModel>& _internal_images() const;
  ::google::protobuf::RepeatedPtrField<::organization::ImageModel>* _internal_mutable_images();
  public:
  const ::organization::ImageModel& images(int index) const;
  ::organization::ImageModel* add_images();
  const ::google::protobuf::RepeatedPtrField<::organization::ImageModel>& images() const;
  // repeated .organization.ContactModel contacts = 12;
  int contacts_size() const;
  private:
  int _internal_contacts_size() const;

  public:
  void clear_contacts() ;
  ::organization::ContactModel* mutable_contacts(int index);
  ::google::protobuf::RepeatedPtrField<::organization::ContactModel>* mutable_contacts();

  private:
  const ::google::protobuf::RepeatedPtrField<::organization::ContactModel>& _internal_contacts() const;
  ::google::protobuf::RepeatedPtrField<::organization::ContactModel>* _internal_mutable_contacts();
  public:
  const ::organization::ContactModel& contacts(int index) const;
  ::organization::ContactModel* add_contacts();
  const ::google::protobuf::RepeatedPtrField<::organization::ContactModel>& contacts() const;
  // optional string name = 2;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string image_url = 3;
  bool has_image_url() const;
  void clear_image_url() ;
  const std::string& image_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_image_url(Arg_&& arg, Args_... args);
  std::string* mutable_image_url();
  PROTOBUF_NODISCARD std::string* release_image_url();
  void set_allocated_image_url(std::string* value);

  private:
  const std::string& _internal_image_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_image_url(
      const std::string& value);
  std::string* _internal_mutable_image_url();

  public:
  // optional string type = 4;
  bool has_type() const;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // optional string legal_name = 5;
  bool has_legal_name() const;
  void clear_legal_name() ;
  const std::string& legal_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_legal_name(Arg_&& arg, Args_... args);
  std::string* mutable_legal_name();
  PROTOBUF_NODISCARD std::string* release_legal_name();
  void set_allocated_legal_name(std::string* value);

  private:
  const std::string& _internal_legal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_legal_name(
      const std::string& value);
  std::string* _internal_mutable_legal_name();

  public:
  // optional string bin = 6;
  bool has_bin() const;
  void clear_bin() ;
  const std::string& bin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bin(Arg_&& arg, Args_... args);
  std::string* mutable_bin();
  PROTOBUF_NODISCARD std::string* release_bin();
  void set_allocated_bin(std::string* value);

  private:
  const std::string& _internal_bin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bin(
      const std::string& value);
  std::string* _internal_mutable_bin();

  public:
  // optional string phone_number = 7;
  bool has_phone_number() const;
  void clear_phone_number() ;
  const std::string& phone_number() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_phone_number(Arg_&& arg, Args_... args);
  std::string* mutable_phone_number();
  PROTOBUF_NODISCARD std::string* release_phone_number();
  void set_allocated_phone_number(std::string* value);

  private:
  const std::string& _internal_phone_number() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_phone_number(
      const std::string& value);
  std::string* _internal_mutable_phone_number();

  public:
  // optional string email = 8;
  bool has_email() const;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // optional string legal_address = 10;
  bool has_legal_address() const;
  void clear_legal_address() ;
  const std::string& legal_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_legal_address(Arg_&& arg, Args_... args);
  std::string* mutable_legal_address();
  PROTOBUF_NODISCARD std::string* release_legal_address();
  void set_allocated_legal_address(std::string* value);

  private:
  const std::string& _internal_legal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_legal_address(
      const std::string& value);
  std::string* _internal_mutable_legal_address();

  public:
  // optional .organization.AddressModel address = 9;
  bool has_address() const;
  void clear_address() ;
  const ::organization::AddressModel& address() const;
  PROTOBUF_NODISCARD ::organization::AddressModel* release_address();
  ::organization::AddressModel* mutable_address();
  void set_allocated_address(::organization::AddressModel* value);
  void unsafe_arena_set_allocated_address(::organization::AddressModel* value);
  ::organization::AddressModel* unsafe_arena_release_address();

  private:
  const ::organization::AddressModel& _internal_address() const;
  ::organization::AddressModel* _internal_mutable_address();

  public:
  // optional int64 id = 1;
  bool has_id() const;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.Organization)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 3,
      102, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Organization& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::organization::ImageModel > images_;
    ::google::protobuf::RepeatedPtrField< ::organization::ContactModel > contacts_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr image_url_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr legal_name_;
    ::google::protobuf::internal::ArenaStringPtr bin_;
    ::google::protobuf::internal::ArenaStringPtr phone_number_;
    ::google::protobuf::internal::ArenaStringPtr email_;
    ::google::protobuf::internal::ArenaStringPtr legal_address_;
    ::organization::AddressModel* address_;
    ::int64_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class ListRelationshipTypesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.ListRelationshipTypesResponse) */ {
 public:
  inline ListRelationshipTypesResponse() : ListRelationshipTypesResponse(nullptr) {}
  ~ListRelationshipTypesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListRelationshipTypesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListRelationshipTypesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListRelationshipTypesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListRelationshipTypesResponse(const ListRelationshipTypesResponse& from) : ListRelationshipTypesResponse(nullptr, from) {}
  inline ListRelationshipTypesResponse(ListRelationshipTypesResponse&& from) noexcept
      : ListRelationshipTypesResponse(nullptr, std::move(from)) {}
  inline ListRelationshipTypesResponse& operator=(const ListRelationshipTypesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListRelationshipTypesResponse& operator=(ListRelationshipTypesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListRelationshipTypesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListRelationshipTypesResponse* internal_default_instance() {
    return reinterpret_cast<const ListRelationshipTypesResponse*>(
        &_ListRelationshipTypesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 68;
  friend void swap(ListRelationshipTypesResponse& a, ListRelationshipTypesResponse& b) { a.Swap(&b); }
  inline void Swap(ListRelationshipTypesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListRelationshipTypesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListRelationshipTypesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListRelationshipTypesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListRelationshipTypesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListRelationshipTypesResponse& from) { ListRelationshipTypesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListRelationshipTypesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.ListRelationshipTypesResponse"; }

 protected:
  explicit ListRelationshipTypesResponse(::google::protobuf::Arena* arena);
  ListRelationshipTypesResponse(::google::protobuf::Arena* arena, const ListRelationshipTypesResponse& from);
  ListRelationshipTypesResponse(::google::protobuf::Arena* arena, ListRelationshipTypesResponse&& from) noexcept
      : ListRelationshipTypesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRelationshipTypesFieldNumber = 1,
  };
  // repeated .organization.RelationshipTypeModel relationship_types = 1;
  int relationship_types_size() const;
  private:
  int _internal_relationship_types_size() const;

  public:
  void clear_relationship_types() ;
  ::organization::RelationshipTypeModel* mutable_relationship_types(int index);
  ::google::protobuf::RepeatedPtrField<::organization::RelationshipTypeModel>* mutable_relationship_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::organization::RelationshipTypeModel>& _internal_relationship_types() const;
  ::google::protobuf::RepeatedPtrField<::organization::RelationshipTypeModel>* _internal_mutable_relationship_types();
  public:
  const ::organization::RelationshipTypeModel& relationship_types(int index) const;
  ::organization::RelationshipTypeModel* add_relationship_types();
  const ::google::protobuf::RepeatedPtrField<::organization::RelationshipTypeModel>& relationship_types() const;
  // @@protoc_insertion_point(class_scope:organization.ListRelationshipTypesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListRelationshipTypesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::organization::RelationshipTypeModel > relationship_types_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class ListContactsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.ListContactsResponse) */ {
 public:
  inline ListContactsResponse() : ListContactsResponse(nullptr) {}
  ~ListContactsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListContactsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListContactsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListContactsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListContactsResponse(const ListContactsResponse& from) : ListContactsResponse(nullptr, from) {}
  inline ListContactsResponse(ListContactsResponse&& from) noexcept
      : ListContactsResponse(nullptr, std::move(from)) {}
  inline ListContactsResponse& operator=(const ListContactsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListContactsResponse& operator=(ListContactsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListContactsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListContactsResponse* internal_default_instance() {
    return reinterpret_cast<const ListContactsResponse*>(
        &_ListContactsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 82;
  friend void swap(ListContactsResponse& a, ListContactsResponse& b) { a.Swap(&b); }
  inline void Swap(ListContactsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListContactsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListContactsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListContactsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListContactsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListContactsResponse& from) { ListContactsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListContactsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.ListContactsResponse"; }

 protected:
  explicit ListContactsResponse(::google::protobuf::Arena* arena);
  ListContactsResponse(::google::protobuf::Arena* arena, const ListContactsResponse& from);
  ListContactsResponse(::google::protobuf::Arena* arena, ListContactsResponse&& from) noexcept
      : ListContactsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContactsFieldNumber = 1,
  };
  // repeated .organization.ContactModel contacts = 1;
  int contacts_size() const;
  private:
  int _internal_contacts_size() const;

  public:
  void clear_contacts() ;
  ::organization::ContactModel* mutable_contacts(int index);
  ::google::protobuf::RepeatedPtrField<::organization::ContactModel>* mutable_contacts();

  private:
  const ::google::protobuf::RepeatedPtrField<::organization::ContactModel>& _internal_contacts() const;
  ::google::protobuf::RepeatedPtrField<::organization::ContactModel>* _internal_mutable_contacts();
  public:
  const ::organization::ContactModel& contacts(int index) const;
  ::organization::ContactModel* add_contacts();
  const ::google::protobuf::RepeatedPtrField<::organization::ContactModel>& contacts() const;
  // @@protoc_insertion_point(class_scope:organization.ListContactsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListContactsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::organization::ContactModel > contacts_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class ListBankAccountsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.ListBankAccountsResponse) */ {
 public:
  inline ListBankAccountsResponse() : ListBankAccountsResponse(nullptr) {}
  ~ListBankAccountsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListBankAccountsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListBankAccountsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListBankAccountsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListBankAccountsResponse(const ListBankAccountsResponse& from) : ListBankAccountsResponse(nullptr, from) {}
  inline ListBankAccountsResponse(ListBankAccountsResponse&& from) noexcept
      : ListBankAccountsResponse(nullptr, std::move(from)) {}
  inline ListBankAccountsResponse& operator=(const ListBankAccountsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListBankAccountsResponse& operator=(ListBankAccountsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListBankAccountsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListBankAccountsResponse* internal_default_instance() {
    return reinterpret_cast<const ListBankAccountsResponse*>(
        &_ListBankAccountsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(ListBankAccountsResponse& a, ListBankAccountsResponse& b) { a.Swap(&b); }
  inline void Swap(ListBankAccountsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListBankAccountsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListBankAccountsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListBankAccountsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListBankAccountsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListBankAccountsResponse& from) { ListBankAccountsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListBankAccountsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.ListBankAccountsResponse"; }

 protected:
  explicit ListBankAccountsResponse(::google::protobuf::Arena* arena);
  ListBankAccountsResponse(::google::protobuf::Arena* arena, const ListBankAccountsResponse& from);
  ListBankAccountsResponse(::google::protobuf::Arena* arena, ListBankAccountsResponse&& from) noexcept
      : ListBankAccountsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBankAccountsFieldNumber = 1,
  };
  // repeated .organization.BankAccountModel bank_accounts = 1;
  int bank_accounts_size() const;
  private:
  int _internal_bank_accounts_size() const;

  public:
  void clear_bank_accounts() ;
  ::organization::BankAccountModel* mutable_bank_accounts(int index);
  ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>* mutable_bank_accounts();

  private:
  const ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>& _internal_bank_accounts() const;
  ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>* _internal_mutable_bank_accounts();
  public:
  const ::organization::BankAccountModel& bank_accounts(int index) const;
  ::organization::BankAccountModel* add_bank_accounts();
  const ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>& bank_accounts() const;
  // @@protoc_insertion_point(class_scope:organization.ListBankAccountsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListBankAccountsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::organization::BankAccountModel > bank_accounts_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class GetRelationshipTypeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.GetRelationshipTypeResponse) */ {
 public:
  inline GetRelationshipTypeResponse() : GetRelationshipTypeResponse(nullptr) {}
  ~GetRelationshipTypeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetRelationshipTypeResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetRelationshipTypeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetRelationshipTypeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetRelationshipTypeResponse(const GetRelationshipTypeResponse& from) : GetRelationshipTypeResponse(nullptr, from) {}
  inline GetRelationshipTypeResponse(GetRelationshipTypeResponse&& from) noexcept
      : GetRelationshipTypeResponse(nullptr, std::move(from)) {}
  inline GetRelationshipTypeResponse& operator=(const GetRelationshipTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRelationshipTypeResponse& operator=(GetRelationshipTypeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRelationshipTypeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRelationshipTypeResponse* internal_default_instance() {
    return reinterpret_cast<const GetRelationshipTypeResponse*>(
        &_GetRelationshipTypeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 66;
  friend void swap(GetRelationshipTypeResponse& a, GetRelationshipTypeResponse& b) { a.Swap(&b); }
  inline void Swap(GetRelationshipTypeResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRelationshipTypeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRelationshipTypeResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetRelationshipTypeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetRelationshipTypeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetRelationshipTypeResponse& from) { GetRelationshipTypeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetRelationshipTypeResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.GetRelationshipTypeResponse"; }

 protected:
  explicit GetRelationshipTypeResponse(::google::protobuf::Arena* arena);
  GetRelationshipTypeResponse(::google::protobuf::Arena* arena, const GetRelationshipTypeResponse& from);
  GetRelationshipTypeResponse(::google::protobuf::Arena* arena, GetRelationshipTypeResponse&& from) noexcept
      : GetRelationshipTypeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRelationshipTypeFieldNumber = 1,
  };
  // .organization.RelationshipTypeModel relationship_type = 1;
  bool has_relationship_type() const;
  void clear_relationship_type() ;
  const ::organization::RelationshipTypeModel& relationship_type() const;
  PROTOBUF_NODISCARD ::organization::RelationshipTypeModel* release_relationship_type();
  ::organization::RelationshipTypeModel* mutable_relationship_type();
  void set_allocated_relationship_type(::organization::RelationshipTypeModel* value);
  void unsafe_arena_set_allocated_relationship_type(::organization::RelationshipTypeModel* value);
  ::organization::RelationshipTypeModel* unsafe_arena_release_relationship_type();

  private:
  const ::organization::RelationshipTypeModel& _internal_relationship_type() const;
  ::organization::RelationshipTypeModel* _internal_mutable_relationship_type();

  public:
  // @@protoc_insertion_point(class_scope:organization.GetRelationshipTypeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetRelationshipTypeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::RelationshipTypeModel* relationship_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class GetDefaultBankAccountResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.GetDefaultBankAccountResponse) */ {
 public:
  inline GetDefaultBankAccountResponse() : GetDefaultBankAccountResponse(nullptr) {}
  ~GetDefaultBankAccountResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetDefaultBankAccountResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetDefaultBankAccountResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetDefaultBankAccountResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetDefaultBankAccountResponse(const GetDefaultBankAccountResponse& from) : GetDefaultBankAccountResponse(nullptr, from) {}
  inline GetDefaultBankAccountResponse(GetDefaultBankAccountResponse&& from) noexcept
      : GetDefaultBankAccountResponse(nullptr, std::move(from)) {}
  inline GetDefaultBankAccountResponse& operator=(const GetDefaultBankAccountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDefaultBankAccountResponse& operator=(GetDefaultBankAccountResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetDefaultBankAccountResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetDefaultBankAccountResponse* internal_default_instance() {
    return reinterpret_cast<const GetDefaultBankAccountResponse*>(
        &_GetDefaultBankAccountResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(GetDefaultBankAccountResponse& a, GetDefaultBankAccountResponse& b) { a.Swap(&b); }
  inline void Swap(GetDefaultBankAccountResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDefaultBankAccountResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetDefaultBankAccountResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetDefaultBankAccountResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetDefaultBankAccountResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetDefaultBankAccountResponse& from) { GetDefaultBankAccountResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetDefaultBankAccountResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.GetDefaultBankAccountResponse"; }

 protected:
  explicit GetDefaultBankAccountResponse(::google::protobuf::Arena* arena);
  GetDefaultBankAccountResponse(::google::protobuf::Arena* arena, const GetDefaultBankAccountResponse& from);
  GetDefaultBankAccountResponse(::google::protobuf::Arena* arena, GetDefaultBankAccountResponse&& from) noexcept
      : GetDefaultBankAccountResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBankAccountFieldNumber = 1,
  };
  // .organization.BankAccountModel bank_account = 1;
  bool has_bank_account() const;
  void clear_bank_account() ;
  const ::organization::BankAccountModel& bank_account() const;
  PROTOBUF_NODISCARD ::organization::BankAccountModel* release_bank_account();
  ::organization::BankAccountModel* mutable_bank_account();
  void set_allocated_bank_account(::organization::BankAccountModel* value);
  void unsafe_arena_set_allocated_bank_account(::organization::BankAccountModel* value);
  ::organization::BankAccountModel* unsafe_arena_release_bank_account();

  private:
  const ::organization::BankAccountModel& _internal_bank_account() const;
  ::organization::BankAccountModel* _internal_mutable_bank_account();

  public:
  // @@protoc_insertion_point(class_scope:organization.GetDefaultBankAccountResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetDefaultBankAccountResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::BankAccountModel* bank_account_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class GetContactResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.GetContactResponse) */ {
 public:
  inline GetContactResponse() : GetContactResponse(nullptr) {}
  ~GetContactResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetContactResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetContactResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetContactResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetContactResponse(const GetContactResponse& from) : GetContactResponse(nullptr, from) {}
  inline GetContactResponse(GetContactResponse&& from) noexcept
      : GetContactResponse(nullptr, std::move(from)) {}
  inline GetContactResponse& operator=(const GetContactResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContactResponse& operator=(GetContactResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContactResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContactResponse* internal_default_instance() {
    return reinterpret_cast<const GetContactResponse*>(
        &_GetContactResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 78;
  friend void swap(GetContactResponse& a, GetContactResponse& b) { a.Swap(&b); }
  inline void Swap(GetContactResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContactResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContactResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetContactResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetContactResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetContactResponse& from) { GetContactResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetContactResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.GetContactResponse"; }

 protected:
  explicit GetContactResponse(::google::protobuf::Arena* arena);
  GetContactResponse(::google::protobuf::Arena* arena, const GetContactResponse& from);
  GetContactResponse(::google::protobuf::Arena* arena, GetContactResponse&& from) noexcept
      : GetContactResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContactFieldNumber = 1,
  };
  // .organization.ContactModel contact = 1;
  bool has_contact() const;
  void clear_contact() ;
  const ::organization::ContactModel& contact() const;
  PROTOBUF_NODISCARD ::organization::ContactModel* release_contact();
  ::organization::ContactModel* mutable_contact();
  void set_allocated_contact(::organization::ContactModel* value);
  void unsafe_arena_set_allocated_contact(::organization::ContactModel* value);
  ::organization::ContactModel* unsafe_arena_release_contact();

  private:
  const ::organization::ContactModel& _internal_contact() const;
  ::organization::ContactModel* _internal_mutable_contact();

  public:
  // @@protoc_insertion_point(class_scope:organization.GetContactResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetContactResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::ContactModel* contact_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class GetAddressResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.GetAddressResponse) */ {
 public:
  inline GetAddressResponse() : GetAddressResponse(nullptr) {}
  ~GetAddressResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetAddressResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetAddressResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetAddressResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetAddressResponse(const GetAddressResponse& from) : GetAddressResponse(nullptr, from) {}
  inline GetAddressResponse(GetAddressResponse&& from) noexcept
      : GetAddressResponse(nullptr, std::move(from)) {}
  inline GetAddressResponse& operator=(const GetAddressResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAddressResponse& operator=(GetAddressResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAddressResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAddressResponse* internal_default_instance() {
    return reinterpret_cast<const GetAddressResponse*>(
        &_GetAddressResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 50;
  friend void swap(GetAddressResponse& a, GetAddressResponse& b) { a.Swap(&b); }
  inline void Swap(GetAddressResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAddressResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAddressResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetAddressResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAddressResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetAddressResponse& from) { GetAddressResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetAddressResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.GetAddressResponse"; }

 protected:
  explicit GetAddressResponse(::google::protobuf::Arena* arena);
  GetAddressResponse(::google::protobuf::Arena* arena, const GetAddressResponse& from);
  GetAddressResponse(::google::protobuf::Arena* arena, GetAddressResponse&& from) noexcept
      : GetAddressResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
  };
  // .organization.AddressModel address = 1;
  bool has_address() const;
  void clear_address() ;
  const ::organization::AddressModel& address() const;
  PROTOBUF_NODISCARD ::organization::AddressModel* release_address();
  ::organization::AddressModel* mutable_address();
  void set_allocated_address(::organization::AddressModel* value);
  void unsafe_arena_set_allocated_address(::organization::AddressModel* value);
  ::organization::AddressModel* unsafe_arena_release_address();

  private:
  const ::organization::AddressModel& _internal_address() const;
  ::organization::AddressModel* _internal_mutable_address();

  public:
  // @@protoc_insertion_point(class_scope:organization.GetAddressResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetAddressResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::AddressModel* address_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class GeneratePresignedURLsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.GeneratePresignedURLsResponse) */ {
 public:
  inline GeneratePresignedURLsResponse() : GeneratePresignedURLsResponse(nullptr) {}
  ~GeneratePresignedURLsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GeneratePresignedURLsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GeneratePresignedURLsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GeneratePresignedURLsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GeneratePresignedURLsResponse(const GeneratePresignedURLsResponse& from) : GeneratePresignedURLsResponse(nullptr, from) {}
  inline GeneratePresignedURLsResponse(GeneratePresignedURLsResponse&& from) noexcept
      : GeneratePresignedURLsResponse(nullptr, std::move(from)) {}
  inline GeneratePresignedURLsResponse& operator=(const GeneratePresignedURLsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeneratePresignedURLsResponse& operator=(GeneratePresignedURLsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GeneratePresignedURLsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GeneratePresignedURLsResponse* internal_default_instance() {
    return reinterpret_cast<const GeneratePresignedURLsResponse*>(
        &_GeneratePresignedURLsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(GeneratePresignedURLsResponse& a, GeneratePresignedURLsResponse& b) { a.Swap(&b); }
  inline void Swap(GeneratePresignedURLsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GeneratePresignedURLsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GeneratePresignedURLsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GeneratePresignedURLsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GeneratePresignedURLsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GeneratePresignedURLsResponse& from) { GeneratePresignedURLsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GeneratePresignedURLsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.GeneratePresignedURLsResponse"; }

 protected:
  explicit GeneratePresignedURLsResponse(::google::protobuf::Arena* arena);
  GeneratePresignedURLsResponse(::google::protobuf::Arena* arena, const GeneratePresignedURLsResponse& from);
  GeneratePresignedURLsResponse(::google::protobuf::Arena* arena, GeneratePresignedURLsResponse&& from) noexcept
      : GeneratePresignedURLsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPresignedUrlsFieldNumber = 1,
  };
  // repeated .organization.PresignedURLInfo presigned_urls = 1;
  int presigned_urls_size() const;
  private:
  int _internal_presigned_urls_size() const;

  public:
  void clear_presigned_urls() ;
  ::organization::PresignedURLInfo* mutable_presigned_urls(int index);
  ::google::protobuf::RepeatedPtrField<::organization::PresignedURLInfo>* mutable_presigned_urls();

  private:
  const ::google::protobuf::RepeatedPtrField<::organization::PresignedURLInfo>& _internal_presigned_urls() const;
  ::google::protobuf::RepeatedPtrField<::organization::PresignedURLInfo>* _internal_mutable_presigned_urls();
  public:
  const ::organization::PresignedURLInfo& presigned_urls(int index) const;
  ::organization::PresignedURLInfo* add_presigned_urls();
  const ::google::protobuf::RepeatedPtrField<::organization::PresignedURLInfo>& presigned_urls() const;
  // @@protoc_insertion_point(class_scope:organization.GeneratePresignedURLsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GeneratePresignedURLsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::organization::PresignedURLInfo > presigned_urls_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class EnsureRelationshipExistsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.EnsureRelationshipExistsResponse) */ {
 public:
  inline EnsureRelationshipExistsResponse() : EnsureRelationshipExistsResponse(nullptr) {}
  ~EnsureRelationshipExistsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EnsureRelationshipExistsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EnsureRelationshipExistsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EnsureRelationshipExistsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline EnsureRelationshipExistsResponse(const EnsureRelationshipExistsResponse& from) : EnsureRelationshipExistsResponse(nullptr, from) {}
  inline EnsureRelationshipExistsResponse(EnsureRelationshipExistsResponse&& from) noexcept
      : EnsureRelationshipExistsResponse(nullptr, std::move(from)) {}
  inline EnsureRelationshipExistsResponse& operator=(const EnsureRelationshipExistsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnsureRelationshipExistsResponse& operator=(EnsureRelationshipExistsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnsureRelationshipExistsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnsureRelationshipExistsResponse* internal_default_instance() {
    return reinterpret_cast<const EnsureRelationshipExistsResponse*>(
        &_EnsureRelationshipExistsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 62;
  friend void swap(EnsureRelationshipExistsResponse& a, EnsureRelationshipExistsResponse& b) { a.Swap(&b); }
  inline void Swap(EnsureRelationshipExistsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnsureRelationshipExistsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnsureRelationshipExistsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EnsureRelationshipExistsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EnsureRelationshipExistsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EnsureRelationshipExistsResponse& from) { EnsureRelationshipExistsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EnsureRelationshipExistsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.EnsureRelationshipExistsResponse"; }

 protected:
  explicit EnsureRelationshipExistsResponse(::google::protobuf::Arena* arena);
  EnsureRelationshipExistsResponse(::google::protobuf::Arena* arena, const EnsureRelationshipExistsResponse& from);
  EnsureRelationshipExistsResponse(::google::protobuf::Arena* arena, EnsureRelationshipExistsResponse&& from) noexcept
      : EnsureRelationshipExistsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRelationshipFieldNumber = 1,
  };
  // .organization.RelationshipModel relationship = 1;
  bool has_relationship() const;
  void clear_relationship() ;
  const ::organization::RelationshipModel& relationship() const;
  PROTOBUF_NODISCARD ::organization::RelationshipModel* release_relationship();
  ::organization::RelationshipModel* mutable_relationship();
  void set_allocated_relationship(::organization::RelationshipModel* value);
  void unsafe_arena_set_allocated_relationship(::organization::RelationshipModel* value);
  ::organization::RelationshipModel* unsafe_arena_release_relationship();

  private:
  const ::organization::RelationshipModel& _internal_relationship() const;
  ::organization::RelationshipModel* _internal_mutable_relationship();

  public:
  // @@protoc_insertion_point(class_scope:organization.EnsureRelationshipExistsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EnsureRelationshipExistsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::RelationshipModel* relationship_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class EnsureRelationshipExistsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.EnsureRelationshipExistsRequest) */ {
 public:
  inline EnsureRelationshipExistsRequest() : EnsureRelationshipExistsRequest(nullptr) {}
  ~EnsureRelationshipExistsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EnsureRelationshipExistsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EnsureRelationshipExistsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EnsureRelationshipExistsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline EnsureRelationshipExistsRequest(const EnsureRelationshipExistsRequest& from) : EnsureRelationshipExistsRequest(nullptr, from) {}
  inline EnsureRelationshipExistsRequest(EnsureRelationshipExistsRequest&& from) noexcept
      : EnsureRelationshipExistsRequest(nullptr, std::move(from)) {}
  inline EnsureRelationshipExistsRequest& operator=(const EnsureRelationshipExistsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnsureRelationshipExistsRequest& operator=(EnsureRelationshipExistsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnsureRelationshipExistsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnsureRelationshipExistsRequest* internal_default_instance() {
    return reinterpret_cast<const EnsureRelationshipExistsRequest*>(
        &_EnsureRelationshipExistsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 61;
  friend void swap(EnsureRelationshipExistsRequest& a, EnsureRelationshipExistsRequest& b) { a.Swap(&b); }
  inline void Swap(EnsureRelationshipExistsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnsureRelationshipExistsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnsureRelationshipExistsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EnsureRelationshipExistsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EnsureRelationshipExistsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EnsureRelationshipExistsRequest& from) { EnsureRelationshipExistsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EnsureRelationshipExistsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.EnsureRelationshipExistsRequest"; }

 protected:
  explicit EnsureRelationshipExistsRequest(::google::protobuf::Arena* arena);
  EnsureRelationshipExistsRequest(::google::protobuf::Arena* arena, const EnsureRelationshipExistsRequest& from);
  EnsureRelationshipExistsRequest(::google::protobuf::Arena* arena, EnsureRelationshipExistsRequest&& from) noexcept
      : EnsureRelationshipExistsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRelationshipFieldNumber = 1,
  };
  // .organization.RelationshipModel relationship = 1;
  bool has_relationship() const;
  void clear_relationship() ;
  const ::organization::RelationshipModel& relationship() const;
  PROTOBUF_NODISCARD ::organization::RelationshipModel* release_relationship();
  ::organization::RelationshipModel* mutable_relationship();
  void set_allocated_relationship(::organization::RelationshipModel* value);
  void unsafe_arena_set_allocated_relationship(::organization::RelationshipModel* value);
  ::organization::RelationshipModel* unsafe_arena_release_relationship();

  private:
  const ::organization::RelationshipModel& _internal_relationship() const;
  ::organization::RelationshipModel* _internal_mutable_relationship();

  public:
  // @@protoc_insertion_point(class_scope:organization.EnsureRelationshipExistsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EnsureRelationshipExistsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::RelationshipModel* relationship_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class CreateRelationshipTypeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.CreateRelationshipTypeResponse) */ {
 public:
  inline CreateRelationshipTypeResponse() : CreateRelationshipTypeResponse(nullptr) {}
  ~CreateRelationshipTypeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateRelationshipTypeResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateRelationshipTypeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateRelationshipTypeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateRelationshipTypeResponse(const CreateRelationshipTypeResponse& from) : CreateRelationshipTypeResponse(nullptr, from) {}
  inline CreateRelationshipTypeResponse(CreateRelationshipTypeResponse&& from) noexcept
      : CreateRelationshipTypeResponse(nullptr, std::move(from)) {}
  inline CreateRelationshipTypeResponse& operator=(const CreateRelationshipTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateRelationshipTypeResponse& operator=(CreateRelationshipTypeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateRelationshipTypeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateRelationshipTypeResponse* internal_default_instance() {
    return reinterpret_cast<const CreateRelationshipTypeResponse*>(
        &_CreateRelationshipTypeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 70;
  friend void swap(CreateRelationshipTypeResponse& a, CreateRelationshipTypeResponse& b) { a.Swap(&b); }
  inline void Swap(CreateRelationshipTypeResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateRelationshipTypeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateRelationshipTypeResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateRelationshipTypeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateRelationshipTypeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateRelationshipTypeResponse& from) { CreateRelationshipTypeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateRelationshipTypeResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.CreateRelationshipTypeResponse"; }

 protected:
  explicit CreateRelationshipTypeResponse(::google::protobuf::Arena* arena);
  CreateRelationshipTypeResponse(::google::protobuf::Arena* arena, const CreateRelationshipTypeResponse& from);
  CreateRelationshipTypeResponse(::google::protobuf::Arena* arena, CreateRelationshipTypeResponse&& from) noexcept
      : CreateRelationshipTypeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRelationshipTypeFieldNumber = 1,
  };
  // .organization.RelationshipTypeModel relationship_type = 1;
  bool has_relationship_type() const;
  void clear_relationship_type() ;
  const ::organization::RelationshipTypeModel& relationship_type() const;
  PROTOBUF_NODISCARD ::organization::RelationshipTypeModel* release_relationship_type();
  ::organization::RelationshipTypeModel* mutable_relationship_type();
  void set_allocated_relationship_type(::organization::RelationshipTypeModel* value);
  void unsafe_arena_set_allocated_relationship_type(::organization::RelationshipTypeModel* value);
  ::organization::RelationshipTypeModel* unsafe_arena_release_relationship_type();

  private:
  const ::organization::RelationshipTypeModel& _internal_relationship_type() const;
  ::organization::RelationshipTypeModel* _internal_mutable_relationship_type();

  public:
  // @@protoc_insertion_point(class_scope:organization.CreateRelationshipTypeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateRelationshipTypeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::RelationshipTypeModel* relationship_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class CreateRelationshipTypeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.CreateRelationshipTypeRequest) */ {
 public:
  inline CreateRelationshipTypeRequest() : CreateRelationshipTypeRequest(nullptr) {}
  ~CreateRelationshipTypeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateRelationshipTypeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateRelationshipTypeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateRelationshipTypeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateRelationshipTypeRequest(const CreateRelationshipTypeRequest& from) : CreateRelationshipTypeRequest(nullptr, from) {}
  inline CreateRelationshipTypeRequest(CreateRelationshipTypeRequest&& from) noexcept
      : CreateRelationshipTypeRequest(nullptr, std::move(from)) {}
  inline CreateRelationshipTypeRequest& operator=(const CreateRelationshipTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateRelationshipTypeRequest& operator=(CreateRelationshipTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateRelationshipTypeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateRelationshipTypeRequest* internal_default_instance() {
    return reinterpret_cast<const CreateRelationshipTypeRequest*>(
        &_CreateRelationshipTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 69;
  friend void swap(CreateRelationshipTypeRequest& a, CreateRelationshipTypeRequest& b) { a.Swap(&b); }
  inline void Swap(CreateRelationshipTypeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateRelationshipTypeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateRelationshipTypeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateRelationshipTypeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateRelationshipTypeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateRelationshipTypeRequest& from) { CreateRelationshipTypeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateRelationshipTypeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.CreateRelationshipTypeRequest"; }

 protected:
  explicit CreateRelationshipTypeRequest(::google::protobuf::Arena* arena);
  CreateRelationshipTypeRequest(::google::protobuf::Arena* arena, const CreateRelationshipTypeRequest& from);
  CreateRelationshipTypeRequest(::google::protobuf::Arena* arena, CreateRelationshipTypeRequest&& from) noexcept
      : CreateRelationshipTypeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRelationshipTypeFieldNumber = 1,
  };
  // .organization.RelationshipTypeModel relationship_type = 1;
  bool has_relationship_type() const;
  void clear_relationship_type() ;
  const ::organization::RelationshipTypeModel& relationship_type() const;
  PROTOBUF_NODISCARD ::organization::RelationshipTypeModel* release_relationship_type();
  ::organization::RelationshipTypeModel* mutable_relationship_type();
  void set_allocated_relationship_type(::organization::RelationshipTypeModel* value);
  void unsafe_arena_set_allocated_relationship_type(::organization::RelationshipTypeModel* value);
  ::organization::RelationshipTypeModel* unsafe_arena_release_relationship_type();

  private:
  const ::organization::RelationshipTypeModel& _internal_relationship_type() const;
  ::organization::RelationshipTypeModel* _internal_mutable_relationship_type();

  public:
  // @@protoc_insertion_point(class_scope:organization.CreateRelationshipTypeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateRelationshipTypeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::RelationshipTypeModel* relationship_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class CreateRelationshipResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.CreateRelationshipResponse) */ {
 public:
  inline CreateRelationshipResponse() : CreateRelationshipResponse(nullptr) {}
  ~CreateRelationshipResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateRelationshipResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateRelationshipResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateRelationshipResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateRelationshipResponse(const CreateRelationshipResponse& from) : CreateRelationshipResponse(nullptr, from) {}
  inline CreateRelationshipResponse(CreateRelationshipResponse&& from) noexcept
      : CreateRelationshipResponse(nullptr, std::move(from)) {}
  inline CreateRelationshipResponse& operator=(const CreateRelationshipResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateRelationshipResponse& operator=(CreateRelationshipResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateRelationshipResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateRelationshipResponse* internal_default_instance() {
    return reinterpret_cast<const CreateRelationshipResponse*>(
        &_CreateRelationshipResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 58;
  friend void swap(CreateRelationshipResponse& a, CreateRelationshipResponse& b) { a.Swap(&b); }
  inline void Swap(CreateRelationshipResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateRelationshipResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateRelationshipResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateRelationshipResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateRelationshipResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateRelationshipResponse& from) { CreateRelationshipResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateRelationshipResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.CreateRelationshipResponse"; }

 protected:
  explicit CreateRelationshipResponse(::google::protobuf::Arena* arena);
  CreateRelationshipResponse(::google::protobuf::Arena* arena, const CreateRelationshipResponse& from);
  CreateRelationshipResponse(::google::protobuf::Arena* arena, CreateRelationshipResponse&& from) noexcept
      : CreateRelationshipResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRelationshipFieldNumber = 1,
  };
  // .organization.RelationshipModel relationship = 1;
  bool has_relationship() const;
  void clear_relationship() ;
  const ::organization::RelationshipModel& relationship() const;
  PROTOBUF_NODISCARD ::organization::RelationshipModel* release_relationship();
  ::organization::RelationshipModel* mutable_relationship();
  void set_allocated_relationship(::organization::RelationshipModel* value);
  void unsafe_arena_set_allocated_relationship(::organization::RelationshipModel* value);
  ::organization::RelationshipModel* unsafe_arena_release_relationship();

  private:
  const ::organization::RelationshipModel& _internal_relationship() const;
  ::organization::RelationshipModel* _internal_mutable_relationship();

  public:
  // @@protoc_insertion_point(class_scope:organization.CreateRelationshipResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateRelationshipResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::RelationshipModel* relationship_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class CreateRelationshipRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.CreateRelationshipRequest) */ {
 public:
  inline CreateRelationshipRequest() : CreateRelationshipRequest(nullptr) {}
  ~CreateRelationshipRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateRelationshipRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateRelationshipRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateRelationshipRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateRelationshipRequest(const CreateRelationshipRequest& from) : CreateRelationshipRequest(nullptr, from) {}
  inline CreateRelationshipRequest(CreateRelationshipRequest&& from) noexcept
      : CreateRelationshipRequest(nullptr, std::move(from)) {}
  inline CreateRelationshipRequest& operator=(const CreateRelationshipRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateRelationshipRequest& operator=(CreateRelationshipRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateRelationshipRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateRelationshipRequest* internal_default_instance() {
    return reinterpret_cast<const CreateRelationshipRequest*>(
        &_CreateRelationshipRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 57;
  friend void swap(CreateRelationshipRequest& a, CreateRelationshipRequest& b) { a.Swap(&b); }
  inline void Swap(CreateRelationshipRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateRelationshipRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateRelationshipRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateRelationshipRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateRelationshipRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateRelationshipRequest& from) { CreateRelationshipRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateRelationshipRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.CreateRelationshipRequest"; }

 protected:
  explicit CreateRelationshipRequest(::google::protobuf::Arena* arena);
  CreateRelationshipRequest(::google::protobuf::Arena* arena, const CreateRelationshipRequest& from);
  CreateRelationshipRequest(::google::protobuf::Arena* arena, CreateRelationshipRequest&& from) noexcept
      : CreateRelationshipRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRelationshipFieldNumber = 1,
  };
  // .organization.RelationshipModel relationship = 1;
  bool has_relationship() const;
  void clear_relationship() ;
  const ::organization::RelationshipModel& relationship() const;
  PROTOBUF_NODISCARD ::organization::RelationshipModel* release_relationship();
  ::organization::RelationshipModel* mutable_relationship();
  void set_allocated_relationship(::organization::RelationshipModel* value);
  void unsafe_arena_set_allocated_relationship(::organization::RelationshipModel* value);
  ::organization::RelationshipModel* unsafe_arena_release_relationship();

  private:
  const ::organization::RelationshipModel& _internal_relationship() const;
  ::organization::RelationshipModel* _internal_mutable_relationship();

  public:
  // @@protoc_insertion_point(class_scope:organization.CreateRelationshipRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateRelationshipRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::RelationshipModel* relationship_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class CreateContactResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.CreateContactResponse) */ {
 public:
  inline CreateContactResponse() : CreateContactResponse(nullptr) {}
  ~CreateContactResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateContactResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateContactResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateContactResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateContactResponse(const CreateContactResponse& from) : CreateContactResponse(nullptr, from) {}
  inline CreateContactResponse(CreateContactResponse&& from) noexcept
      : CreateContactResponse(nullptr, std::move(from)) {}
  inline CreateContactResponse& operator=(const CreateContactResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateContactResponse& operator=(CreateContactResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateContactResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateContactResponse* internal_default_instance() {
    return reinterpret_cast<const CreateContactResponse*>(
        &_CreateContactResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 74;
  friend void swap(CreateContactResponse& a, CreateContactResponse& b) { a.Swap(&b); }
  inline void Swap(CreateContactResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateContactResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateContactResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateContactResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateContactResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateContactResponse& from) { CreateContactResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateContactResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.CreateContactResponse"; }

 protected:
  explicit CreateContactResponse(::google::protobuf::Arena* arena);
  CreateContactResponse(::google::protobuf::Arena* arena, const CreateContactResponse& from);
  CreateContactResponse(::google::protobuf::Arena* arena, CreateContactResponse&& from) noexcept
      : CreateContactResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContactFieldNumber = 1,
  };
  // .organization.ContactModel contact = 1;
  bool has_contact() const;
  void clear_contact() ;
  const ::organization::ContactModel& contact() const;
  PROTOBUF_NODISCARD ::organization::ContactModel* release_contact();
  ::organization::ContactModel* mutable_contact();
  void set_allocated_contact(::organization::ContactModel* value);
  void unsafe_arena_set_allocated_contact(::organization::ContactModel* value);
  ::organization::ContactModel* unsafe_arena_release_contact();

  private:
  const ::organization::ContactModel& _internal_contact() const;
  ::organization::ContactModel* _internal_mutable_contact();

  public:
  // @@protoc_insertion_point(class_scope:organization.CreateContactResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateContactResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::ContactModel* contact_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class CreateContactRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.CreateContactRequest) */ {
 public:
  inline CreateContactRequest() : CreateContactRequest(nullptr) {}
  ~CreateContactRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateContactRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateContactRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateContactRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateContactRequest(const CreateContactRequest& from) : CreateContactRequest(nullptr, from) {}
  inline CreateContactRequest(CreateContactRequest&& from) noexcept
      : CreateContactRequest(nullptr, std::move(from)) {}
  inline CreateContactRequest& operator=(const CreateContactRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateContactRequest& operator=(CreateContactRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateContactRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateContactRequest* internal_default_instance() {
    return reinterpret_cast<const CreateContactRequest*>(
        &_CreateContactRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 73;
  friend void swap(CreateContactRequest& a, CreateContactRequest& b) { a.Swap(&b); }
  inline void Swap(CreateContactRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateContactRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateContactRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateContactRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateContactRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateContactRequest& from) { CreateContactRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateContactRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.CreateContactRequest"; }

 protected:
  explicit CreateContactRequest(::google::protobuf::Arena* arena);
  CreateContactRequest(::google::protobuf::Arena* arena, const CreateContactRequest& from);
  CreateContactRequest(::google::protobuf::Arena* arena, CreateContactRequest&& from) noexcept
      : CreateContactRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContactFieldNumber = 1,
  };
  // .organization.ContactModel contact = 1;
  bool has_contact() const;
  void clear_contact() ;
  const ::organization::ContactModel& contact() const;
  PROTOBUF_NODISCARD ::organization::ContactModel* release_contact();
  ::organization::ContactModel* mutable_contact();
  void set_allocated_contact(::organization::ContactModel* value);
  void unsafe_arena_set_allocated_contact(::organization::ContactModel* value);
  ::organization::ContactModel* unsafe_arena_release_contact();

  private:
  const ::organization::ContactModel& _internal_contact() const;
  ::organization::ContactModel* _internal_mutable_contact();

  public:
  // @@protoc_insertion_point(class_scope:organization.CreateContactRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateContactRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::ContactModel* contact_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class CreateBankAccountResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.CreateBankAccountResponse) */ {
 public:
  inline CreateBankAccountResponse() : CreateBankAccountResponse(nullptr) {}
  ~CreateBankAccountResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateBankAccountResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateBankAccountResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateBankAccountResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateBankAccountResponse(const CreateBankAccountResponse& from) : CreateBankAccountResponse(nullptr, from) {}
  inline CreateBankAccountResponse(CreateBankAccountResponse&& from) noexcept
      : CreateBankAccountResponse(nullptr, std::move(from)) {}
  inline CreateBankAccountResponse& operator=(const CreateBankAccountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateBankAccountResponse& operator=(CreateBankAccountResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateBankAccountResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateBankAccountResponse* internal_default_instance() {
    return reinterpret_cast<const CreateBankAccountResponse*>(
        &_CreateBankAccountResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(CreateBankAccountResponse& a, CreateBankAccountResponse& b) { a.Swap(&b); }
  inline void Swap(CreateBankAccountResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateBankAccountResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateBankAccountResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateBankAccountResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateBankAccountResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateBankAccountResponse& from) { CreateBankAccountResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateBankAccountResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.CreateBankAccountResponse"; }

 protected:
  explicit CreateBankAccountResponse(::google::protobuf::Arena* arena);
  CreateBankAccountResponse(::google::protobuf::Arena* arena, const CreateBankAccountResponse& from);
  CreateBankAccountResponse(::google::protobuf::Arena* arena, CreateBankAccountResponse&& from) noexcept
      : CreateBankAccountResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBankAccountFieldNumber = 1,
  };
  // .organization.BankAccountModel bank_account = 1;
  bool has_bank_account() const;
  void clear_bank_account() ;
  const ::organization::BankAccountModel& bank_account() const;
  PROTOBUF_NODISCARD ::organization::BankAccountModel* release_bank_account();
  ::organization::BankAccountModel* mutable_bank_account();
  void set_allocated_bank_account(::organization::BankAccountModel* value);
  void unsafe_arena_set_allocated_bank_account(::organization::BankAccountModel* value);
  ::organization::BankAccountModel* unsafe_arena_release_bank_account();

  private:
  const ::organization::BankAccountModel& _internal_bank_account() const;
  ::organization::BankAccountModel* _internal_mutable_bank_account();

  public:
  // @@protoc_insertion_point(class_scope:organization.CreateBankAccountResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateBankAccountResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::BankAccountModel* bank_account_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class CreateBankAccountRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.CreateBankAccountRequest) */ {
 public:
  inline CreateBankAccountRequest() : CreateBankAccountRequest(nullptr) {}
  ~CreateBankAccountRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateBankAccountRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateBankAccountRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateBankAccountRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateBankAccountRequest(const CreateBankAccountRequest& from) : CreateBankAccountRequest(nullptr, from) {}
  inline CreateBankAccountRequest(CreateBankAccountRequest&& from) noexcept
      : CreateBankAccountRequest(nullptr, std::move(from)) {}
  inline CreateBankAccountRequest& operator=(const CreateBankAccountRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateBankAccountRequest& operator=(CreateBankAccountRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateBankAccountRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateBankAccountRequest* internal_default_instance() {
    return reinterpret_cast<const CreateBankAccountRequest*>(
        &_CreateBankAccountRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(CreateBankAccountRequest& a, CreateBankAccountRequest& b) { a.Swap(&b); }
  inline void Swap(CreateBankAccountRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateBankAccountRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateBankAccountRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateBankAccountRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateBankAccountRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateBankAccountRequest& from) { CreateBankAccountRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateBankAccountRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.CreateBankAccountRequest"; }

 protected:
  explicit CreateBankAccountRequest(::google::protobuf::Arena* arena);
  CreateBankAccountRequest(::google::protobuf::Arena* arena, const CreateBankAccountRequest& from);
  CreateBankAccountRequest(::google::protobuf::Arena* arena, CreateBankAccountRequest&& from) noexcept
      : CreateBankAccountRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBankAccountFieldNumber = 1,
  };
  // .organization.BankAccountModel bank_account = 1;
  bool has_bank_account() const;
  void clear_bank_account() ;
  const ::organization::BankAccountModel& bank_account() const;
  PROTOBUF_NODISCARD ::organization::BankAccountModel* release_bank_account();
  ::organization::BankAccountModel* mutable_bank_account();
  void set_allocated_bank_account(::organization::BankAccountModel* value);
  void unsafe_arena_set_allocated_bank_account(::organization::BankAccountModel* value);
  ::organization::BankAccountModel* unsafe_arena_release_bank_account();

  private:
  const ::organization::BankAccountModel& _internal_bank_account() const;
  ::organization::BankAccountModel* _internal_mutable_bank_account();

  public:
  // @@protoc_insertion_point(class_scope:organization.CreateBankAccountRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateBankAccountRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::BankAccountModel* bank_account_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class CreateAddressResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.CreateAddressResponse) */ {
 public:
  inline CreateAddressResponse() : CreateAddressResponse(nullptr) {}
  ~CreateAddressResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateAddressResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateAddressResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateAddressResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateAddressResponse(const CreateAddressResponse& from) : CreateAddressResponse(nullptr, from) {}
  inline CreateAddressResponse(CreateAddressResponse&& from) noexcept
      : CreateAddressResponse(nullptr, std::move(from)) {}
  inline CreateAddressResponse& operator=(const CreateAddressResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateAddressResponse& operator=(CreateAddressResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateAddressResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateAddressResponse* internal_default_instance() {
    return reinterpret_cast<const CreateAddressResponse*>(
        &_CreateAddressResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 48;
  friend void swap(CreateAddressResponse& a, CreateAddressResponse& b) { a.Swap(&b); }
  inline void Swap(CreateAddressResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateAddressResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateAddressResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateAddressResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateAddressResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateAddressResponse& from) { CreateAddressResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateAddressResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.CreateAddressResponse"; }

 protected:
  explicit CreateAddressResponse(::google::protobuf::Arena* arena);
  CreateAddressResponse(::google::protobuf::Arena* arena, const CreateAddressResponse& from);
  CreateAddressResponse(::google::protobuf::Arena* arena, CreateAddressResponse&& from) noexcept
      : CreateAddressResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
  };
  // .organization.AddressModel address = 1;
  bool has_address() const;
  void clear_address() ;
  const ::organization::AddressModel& address() const;
  PROTOBUF_NODISCARD ::organization::AddressModel* release_address();
  ::organization::AddressModel* mutable_address();
  void set_allocated_address(::organization::AddressModel* value);
  void unsafe_arena_set_allocated_address(::organization::AddressModel* value);
  ::organization::AddressModel* unsafe_arena_release_address();

  private:
  const ::organization::AddressModel& _internal_address() const;
  ::organization::AddressModel* _internal_mutable_address();

  public:
  // @@protoc_insertion_point(class_scope:organization.CreateAddressResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateAddressResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::AddressModel* address_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class CreateAddressRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.CreateAddressRequest) */ {
 public:
  inline CreateAddressRequest() : CreateAddressRequest(nullptr) {}
  ~CreateAddressRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateAddressRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateAddressRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateAddressRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateAddressRequest(const CreateAddressRequest& from) : CreateAddressRequest(nullptr, from) {}
  inline CreateAddressRequest(CreateAddressRequest&& from) noexcept
      : CreateAddressRequest(nullptr, std::move(from)) {}
  inline CreateAddressRequest& operator=(const CreateAddressRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateAddressRequest& operator=(CreateAddressRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateAddressRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateAddressRequest* internal_default_instance() {
    return reinterpret_cast<const CreateAddressRequest*>(
        &_CreateAddressRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 47;
  friend void swap(CreateAddressRequest& a, CreateAddressRequest& b) { a.Swap(&b); }
  inline void Swap(CreateAddressRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateAddressRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateAddressRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateAddressRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateAddressRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateAddressRequest& from) { CreateAddressRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateAddressRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.CreateAddressRequest"; }

 protected:
  explicit CreateAddressRequest(::google::protobuf::Arena* arena);
  CreateAddressRequest(::google::protobuf::Arena* arena, const CreateAddressRequest& from);
  CreateAddressRequest(::google::protobuf::Arena* arena, CreateAddressRequest&& from) noexcept
      : CreateAddressRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
  };
  // .organization.AddressModel address = 1;
  bool has_address() const;
  void clear_address() ;
  const ::organization::AddressModel& address() const;
  PROTOBUF_NODISCARD ::organization::AddressModel* release_address();
  ::organization::AddressModel* mutable_address();
  void set_allocated_address(::organization::AddressModel* value);
  void unsafe_arena_set_allocated_address(::organization::AddressModel* value);
  ::organization::AddressModel* unsafe_arena_release_address();

  private:
  const ::organization::AddressModel& _internal_address() const;
  ::organization::AddressModel* _internal_mutable_address();

  public:
  // @@protoc_insertion_point(class_scope:organization.CreateAddressRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateAddressRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::AddressModel* address_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class UpdateSaleSettingsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.UpdateSaleSettingsResponse) */ {
 public:
  inline UpdateSaleSettingsResponse() : UpdateSaleSettingsResponse(nullptr) {}
  ~UpdateSaleSettingsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateSaleSettingsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateSaleSettingsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSaleSettingsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateSaleSettingsResponse(const UpdateSaleSettingsResponse& from) : UpdateSaleSettingsResponse(nullptr, from) {}
  inline UpdateSaleSettingsResponse(UpdateSaleSettingsResponse&& from) noexcept
      : UpdateSaleSettingsResponse(nullptr, std::move(from)) {}
  inline UpdateSaleSettingsResponse& operator=(const UpdateSaleSettingsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSaleSettingsResponse& operator=(UpdateSaleSettingsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateSaleSettingsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateSaleSettingsResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateSaleSettingsResponse*>(
        &_UpdateSaleSettingsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 86;
  friend void swap(UpdateSaleSettingsResponse& a, UpdateSaleSettingsResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateSaleSettingsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSaleSettingsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateSaleSettingsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateSaleSettingsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateSaleSettingsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateSaleSettingsResponse& from) { UpdateSaleSettingsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateSaleSettingsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.UpdateSaleSettingsResponse"; }

 protected:
  explicit UpdateSaleSettingsResponse(::google::protobuf::Arena* arena);
  UpdateSaleSettingsResponse(::google::protobuf::Arena* arena, const UpdateSaleSettingsResponse& from);
  UpdateSaleSettingsResponse(::google::protobuf::Arena* arena, UpdateSaleSettingsResponse&& from) noexcept
      : UpdateSaleSettingsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSaleSettingsFieldNumber = 1,
  };
  // repeated .organization.SaleSettings sale_settings = 1;
  int sale_settings_size() const;
  private:
  int _internal_sale_settings_size() const;

  public:
  void clear_sale_settings() ;
  ::organization::SaleSettings* mutable_sale_settings(int index);
  ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>* mutable_sale_settings();

  private:
  const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>& _internal_sale_settings() const;
  ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>* _internal_mutable_sale_settings();
  public:
  const ::organization::SaleSettings& sale_settings(int index) const;
  ::organization::SaleSettings* add_sale_settings();
  const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>& sale_settings() const;
  // @@protoc_insertion_point(class_scope:organization.UpdateSaleSettingsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateSaleSettingsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::organization::SaleSettings > sale_settings_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class UpdateSaleSettingsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.UpdateSaleSettingsRequest) */ {
 public:
  inline UpdateSaleSettingsRequest() : UpdateSaleSettingsRequest(nullptr) {}
  ~UpdateSaleSettingsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateSaleSettingsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateSaleSettingsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSaleSettingsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateSaleSettingsRequest(const UpdateSaleSettingsRequest& from) : UpdateSaleSettingsRequest(nullptr, from) {}
  inline UpdateSaleSettingsRequest(UpdateSaleSettingsRequest&& from) noexcept
      : UpdateSaleSettingsRequest(nullptr, std::move(from)) {}
  inline UpdateSaleSettingsRequest& operator=(const UpdateSaleSettingsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSaleSettingsRequest& operator=(UpdateSaleSettingsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateSaleSettingsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateSaleSettingsRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateSaleSettingsRequest*>(
        &_UpdateSaleSettingsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 85;
  friend void swap(UpdateSaleSettingsRequest& a, UpdateSaleSettingsRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateSaleSettingsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSaleSettingsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateSaleSettingsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateSaleSettingsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateSaleSettingsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateSaleSettingsRequest& from) { UpdateSaleSettingsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateSaleSettingsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.UpdateSaleSettingsRequest"; }

 protected:
  explicit UpdateSaleSettingsRequest(::google::protobuf::Arena* arena);
  UpdateSaleSettingsRequest(::google::protobuf::Arena* arena, const UpdateSaleSettingsRequest& from);
  UpdateSaleSettingsRequest(::google::protobuf::Arena* arena, UpdateSaleSettingsRequest&& from) noexcept
      : UpdateSaleSettingsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSaleSettingsFieldNumber = 1,
  };
  // repeated .organization.SaleSettings sale_settings = 1;
  int sale_settings_size() const;
  private:
  int _internal_sale_settings_size() const;

  public:
  void clear_sale_settings() ;
  ::organization::SaleSettings* mutable_sale_settings(int index);
  ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>* mutable_sale_settings();

  private:
  const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>& _internal_sale_settings() const;
  ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>* _internal_mutable_sale_settings();
  public:
  const ::organization::SaleSettings& sale_settings(int index) const;
  ::organization::SaleSettings* add_sale_settings();
  const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>& sale_settings() const;
  // @@protoc_insertion_point(class_scope:organization.UpdateSaleSettingsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateSaleSettingsRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::organization::SaleSettings > sale_settings_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class PatchOrganizationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.PatchOrganizationResponse) */ {
 public:
  inline PatchOrganizationResponse() : PatchOrganizationResponse(nullptr) {}
  ~PatchOrganizationResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PatchOrganizationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PatchOrganizationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PatchOrganizationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PatchOrganizationResponse(const PatchOrganizationResponse& from) : PatchOrganizationResponse(nullptr, from) {}
  inline PatchOrganizationResponse(PatchOrganizationResponse&& from) noexcept
      : PatchOrganizationResponse(nullptr, std::move(from)) {}
  inline PatchOrganizationResponse& operator=(const PatchOrganizationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PatchOrganizationResponse& operator=(PatchOrganizationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PatchOrganizationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PatchOrganizationResponse* internal_default_instance() {
    return reinterpret_cast<const PatchOrganizationResponse*>(
        &_PatchOrganizationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(PatchOrganizationResponse& a, PatchOrganizationResponse& b) { a.Swap(&b); }
  inline void Swap(PatchOrganizationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PatchOrganizationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PatchOrganizationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PatchOrganizationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PatchOrganizationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PatchOrganizationResponse& from) { PatchOrganizationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PatchOrganizationResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.PatchOrganizationResponse"; }

 protected:
  explicit PatchOrganizationResponse(::google::protobuf::Arena* arena);
  PatchOrganizationResponse(::google::protobuf::Arena* arena, const PatchOrganizationResponse& from);
  PatchOrganizationResponse(::google::protobuf::Arena* arena, PatchOrganizationResponse&& from) noexcept
      : PatchOrganizationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTokenFieldNumber = 1,
    kOrganizationFieldNumber = 2,
  };
  // string token = 1;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // .organization.Organization organization = 2;
  bool has_organization() const;
  void clear_organization() ;
  const ::organization::Organization& organization() const;
  PROTOBUF_NODISCARD ::organization::Organization* release_organization();
  ::organization::Organization* mutable_organization();
  void set_allocated_organization(::organization::Organization* value);
  void unsafe_arena_set_allocated_organization(::organization::Organization* value);
  ::organization::Organization* unsafe_arena_release_organization();

  private:
  const ::organization::Organization& _internal_organization() const;
  ::organization::Organization* _internal_mutable_organization();

  public:
  // @@protoc_insertion_point(class_scope:organization.PatchOrganizationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      52, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PatchOrganizationResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::organization::Organization* organization_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class PatchOrganizationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.PatchOrganizationRequest) */ {
 public:
  inline PatchOrganizationRequest() : PatchOrganizationRequest(nullptr) {}
  ~PatchOrganizationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PatchOrganizationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PatchOrganizationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PatchOrganizationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PatchOrganizationRequest(const PatchOrganizationRequest& from) : PatchOrganizationRequest(nullptr, from) {}
  inline PatchOrganizationRequest(PatchOrganizationRequest&& from) noexcept
      : PatchOrganizationRequest(nullptr, std::move(from)) {}
  inline PatchOrganizationRequest& operator=(const PatchOrganizationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PatchOrganizationRequest& operator=(PatchOrganizationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PatchOrganizationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PatchOrganizationRequest* internal_default_instance() {
    return reinterpret_cast<const PatchOrganizationRequest*>(
        &_PatchOrganizationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(PatchOrganizationRequest& a, PatchOrganizationRequest& b) { a.Swap(&b); }
  inline void Swap(PatchOrganizationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PatchOrganizationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PatchOrganizationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PatchOrganizationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PatchOrganizationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PatchOrganizationRequest& from) { PatchOrganizationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PatchOrganizationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.PatchOrganizationRequest"; }

 protected:
  explicit PatchOrganizationRequest(::google::protobuf::Arena* arena);
  PatchOrganizationRequest(::google::protobuf::Arena* arena, const PatchOrganizationRequest& from);
  PatchOrganizationRequest(::google::protobuf::Arena* arena, PatchOrganizationRequest&& from) noexcept
      : PatchOrganizationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrganizationFieldNumber = 1,
  };
  // .organization.Organization organization = 1;
  bool has_organization() const;
  void clear_organization() ;
  const ::organization::Organization& organization() const;
  PROTOBUF_NODISCARD ::organization::Organization* release_organization();
  ::organization::Organization* mutable_organization();
  void set_allocated_organization(::organization::Organization* value);
  void unsafe_arena_set_allocated_organization(::organization::Organization* value);
  ::organization::Organization* unsafe_arena_release_organization();

  private:
  const ::organization::Organization& _internal_organization() const;
  ::organization::Organization* _internal_mutable_organization();

  public:
  // @@protoc_insertion_point(class_scope:organization.PatchOrganizationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PatchOrganizationRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::Organization* organization_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class ListRelationshipsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.ListRelationshipsResponse) */ {
 public:
  inline ListRelationshipsResponse() : ListRelationshipsResponse(nullptr) {}
  ~ListRelationshipsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListRelationshipsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListRelationshipsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListRelationshipsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListRelationshipsResponse(const ListRelationshipsResponse& from) : ListRelationshipsResponse(nullptr, from) {}
  inline ListRelationshipsResponse(ListRelationshipsResponse&& from) noexcept
      : ListRelationshipsResponse(nullptr, std::move(from)) {}
  inline ListRelationshipsResponse& operator=(const ListRelationshipsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListRelationshipsResponse& operator=(ListRelationshipsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListRelationshipsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListRelationshipsResponse* internal_default_instance() {
    return reinterpret_cast<const ListRelationshipsResponse*>(
        &_ListRelationshipsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 64;
  friend void swap(ListRelationshipsResponse& a, ListRelationshipsResponse& b) { a.Swap(&b); }
  inline void Swap(ListRelationshipsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListRelationshipsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListRelationshipsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListRelationshipsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListRelationshipsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListRelationshipsResponse& from) { ListRelationshipsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListRelationshipsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.ListRelationshipsResponse"; }

 protected:
  explicit ListRelationshipsResponse(::google::protobuf::Arena* arena);
  ListRelationshipsResponse(::google::protobuf::Arena* arena, const ListRelationshipsResponse& from);
  ListRelationshipsResponse(::google::protobuf::Arena* arena, ListRelationshipsResponse&& from) noexcept
      : ListRelationshipsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRelationshipsFieldNumber = 1,
    kTotalCountFieldNumber = 2,
  };
  // repeated .organization.Relationship relationships = 1;
  int relationships_size() const;
  private:
  int _internal_relationships_size() const;

  public:
  void clear_relationships() ;
  ::organization::Relationship* mutable_relationships(int index);
  ::google::protobuf::RepeatedPtrField<::organization::Relationship>* mutable_relationships();

  private:
  const ::google::protobuf::RepeatedPtrField<::organization::Relationship>& _internal_relationships() const;
  ::google::protobuf::RepeatedPtrField<::organization::Relationship>* _internal_mutable_relationships();
  public:
  const ::organization::Relationship& relationships(int index) const;
  ::organization::Relationship* add_relationships();
  const ::google::protobuf::RepeatedPtrField<::organization::Relationship>& relationships() const;
  // int32 total_count = 2;
  void clear_total_count() ;
  ::int32_t total_count() const;
  void set_total_count(::int32_t value);

  private:
  ::int32_t _internal_total_count() const;
  void _internal_set_total_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.ListRelationshipsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListRelationshipsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::organization::Relationship > relationships_;
    ::int32_t total_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class ListOrganizationsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.ListOrganizationsResponse) */ {
 public:
  inline ListOrganizationsResponse() : ListOrganizationsResponse(nullptr) {}
  ~ListOrganizationsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListOrganizationsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListOrganizationsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListOrganizationsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListOrganizationsResponse(const ListOrganizationsResponse& from) : ListOrganizationsResponse(nullptr, from) {}
  inline ListOrganizationsResponse(ListOrganizationsResponse&& from) noexcept
      : ListOrganizationsResponse(nullptr, std::move(from)) {}
  inline ListOrganizationsResponse& operator=(const ListOrganizationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListOrganizationsResponse& operator=(ListOrganizationsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListOrganizationsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListOrganizationsResponse* internal_default_instance() {
    return reinterpret_cast<const ListOrganizationsResponse*>(
        &_ListOrganizationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(ListOrganizationsResponse& a, ListOrganizationsResponse& b) { a.Swap(&b); }
  inline void Swap(ListOrganizationsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListOrganizationsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListOrganizationsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListOrganizationsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListOrganizationsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListOrganizationsResponse& from) { ListOrganizationsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListOrganizationsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.ListOrganizationsResponse"; }

 protected:
  explicit ListOrganizationsResponse(::google::protobuf::Arena* arena);
  ListOrganizationsResponse(::google::protobuf::Arena* arena, const ListOrganizationsResponse& from);
  ListOrganizationsResponse(::google::protobuf::Arena* arena, ListOrganizationsResponse&& from) noexcept
      : ListOrganizationsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrganizationsFieldNumber = 1,
    kTotalCountFieldNumber = 2,
  };
  // repeated .organization.Organization organizations = 1;
  int organizations_size() const;
  private:
  int _internal_organizations_size() const;

  public:
  void clear_organizations() ;
  ::organization::Organization* mutable_organizations(int index);
  ::google::protobuf::RepeatedPtrField<::organization::Organization>* mutable_organizations();

  private:
  const ::google::protobuf::RepeatedPtrField<::organization::Organization>& _internal_organizations() const;
  ::google::protobuf::RepeatedPtrField<::organization::Organization>* _internal_mutable_organizations();
  public:
  const ::organization::Organization& organizations(int index) const;
  ::organization::Organization* add_organizations();
  const ::google::protobuf::RepeatedPtrField<::organization::Organization>& organizations() const;
  // int32 total_count = 2;
  void clear_total_count() ;
  ::int32_t total_count() const;
  void set_total_count(::int32_t value);

  private:
  ::int32_t _internal_total_count() const;
  void _internal_set_total_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.ListOrganizationsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListOrganizationsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::organization::Organization > organizations_;
    ::int32_t total_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class GetSaleSettingsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.GetSaleSettingsResponse) */ {
 public:
  inline GetSaleSettingsResponse() : GetSaleSettingsResponse(nullptr) {}
  ~GetSaleSettingsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSaleSettingsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSaleSettingsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSaleSettingsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSaleSettingsResponse(const GetSaleSettingsResponse& from) : GetSaleSettingsResponse(nullptr, from) {}
  inline GetSaleSettingsResponse(GetSaleSettingsResponse&& from) noexcept
      : GetSaleSettingsResponse(nullptr, std::move(from)) {}
  inline GetSaleSettingsResponse& operator=(const GetSaleSettingsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSaleSettingsResponse& operator=(GetSaleSettingsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSaleSettingsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSaleSettingsResponse* internal_default_instance() {
    return reinterpret_cast<const GetSaleSettingsResponse*>(
        &_GetSaleSettingsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 88;
  friend void swap(GetSaleSettingsResponse& a, GetSaleSettingsResponse& b) { a.Swap(&b); }
  inline void Swap(GetSaleSettingsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSaleSettingsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSaleSettingsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSaleSettingsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSaleSettingsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSaleSettingsResponse& from) { GetSaleSettingsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSaleSettingsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.GetSaleSettingsResponse"; }

 protected:
  explicit GetSaleSettingsResponse(::google::protobuf::Arena* arena);
  GetSaleSettingsResponse(::google::protobuf::Arena* arena, const GetSaleSettingsResponse& from);
  GetSaleSettingsResponse(::google::protobuf::Arena* arena, GetSaleSettingsResponse&& from) noexcept
      : GetSaleSettingsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSaleSettingsFieldNumber = 1,
  };
  // repeated .organization.SaleSettings sale_settings = 1;
  int sale_settings_size() const;
  private:
  int _internal_sale_settings_size() const;

  public:
  void clear_sale_settings() ;
  ::organization::SaleSettings* mutable_sale_settings(int index);
  ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>* mutable_sale_settings();

  private:
  const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>& _internal_sale_settings() const;
  ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>* _internal_mutable_sale_settings();
  public:
  const ::organization::SaleSettings& sale_settings(int index) const;
  ::organization::SaleSettings* add_sale_settings();
  const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>& sale_settings() const;
  // @@protoc_insertion_point(class_scope:organization.GetSaleSettingsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSaleSettingsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::organization::SaleSettings > sale_settings_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class GetOrganizationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.GetOrganizationResponse) */ {
 public:
  inline GetOrganizationResponse() : GetOrganizationResponse(nullptr) {}
  ~GetOrganizationResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetOrganizationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetOrganizationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetOrganizationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetOrganizationResponse(const GetOrganizationResponse& from) : GetOrganizationResponse(nullptr, from) {}
  inline GetOrganizationResponse(GetOrganizationResponse&& from) noexcept
      : GetOrganizationResponse(nullptr, std::move(from)) {}
  inline GetOrganizationResponse& operator=(const GetOrganizationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOrganizationResponse& operator=(GetOrganizationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOrganizationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOrganizationResponse* internal_default_instance() {
    return reinterpret_cast<const GetOrganizationResponse*>(
        &_GetOrganizationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(GetOrganizationResponse& a, GetOrganizationResponse& b) { a.Swap(&b); }
  inline void Swap(GetOrganizationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOrganizationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOrganizationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetOrganizationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOrganizationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetOrganizationResponse& from) { GetOrganizationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetOrganizationResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.GetOrganizationResponse"; }

 protected:
  explicit GetOrganizationResponse(::google::protobuf::Arena* arena);
  GetOrganizationResponse(::google::protobuf::Arena* arena, const GetOrganizationResponse& from);
  GetOrganizationResponse(::google::protobuf::Arena* arena, GetOrganizationResponse&& from) noexcept
      : GetOrganizationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrganizationFieldNumber = 1,
  };
  // .organization.Organization organization = 1;
  bool has_organization() const;
  void clear_organization() ;
  const ::organization::Organization& organization() const;
  PROTOBUF_NODISCARD ::organization::Organization* release_organization();
  ::organization::Organization* mutable_organization();
  void set_allocated_organization(::organization::Organization* value);
  void unsafe_arena_set_allocated_organization(::organization::Organization* value);
  ::organization::Organization* unsafe_arena_release_organization();

  private:
  const ::organization::Organization& _internal_organization() const;
  ::organization::Organization* _internal_mutable_organization();

  public:
  // @@protoc_insertion_point(class_scope:organization.GetOrganizationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetOrganizationResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::Organization* organization_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class CreateSaleSettingsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.CreateSaleSettingsResponse) */ {
 public:
  inline CreateSaleSettingsResponse() : CreateSaleSettingsResponse(nullptr) {}
  ~CreateSaleSettingsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateSaleSettingsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateSaleSettingsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateSaleSettingsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateSaleSettingsResponse(const CreateSaleSettingsResponse& from) : CreateSaleSettingsResponse(nullptr, from) {}
  inline CreateSaleSettingsResponse(CreateSaleSettingsResponse&& from) noexcept
      : CreateSaleSettingsResponse(nullptr, std::move(from)) {}
  inline CreateSaleSettingsResponse& operator=(const CreateSaleSettingsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSaleSettingsResponse& operator=(CreateSaleSettingsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateSaleSettingsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateSaleSettingsResponse* internal_default_instance() {
    return reinterpret_cast<const CreateSaleSettingsResponse*>(
        &_CreateSaleSettingsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 84;
  friend void swap(CreateSaleSettingsResponse& a, CreateSaleSettingsResponse& b) { a.Swap(&b); }
  inline void Swap(CreateSaleSettingsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSaleSettingsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateSaleSettingsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateSaleSettingsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateSaleSettingsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateSaleSettingsResponse& from) { CreateSaleSettingsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateSaleSettingsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.CreateSaleSettingsResponse"; }

 protected:
  explicit CreateSaleSettingsResponse(::google::protobuf::Arena* arena);
  CreateSaleSettingsResponse(::google::protobuf::Arena* arena, const CreateSaleSettingsResponse& from);
  CreateSaleSettingsResponse(::google::protobuf::Arena* arena, CreateSaleSettingsResponse&& from) noexcept
      : CreateSaleSettingsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSaleSettingsFieldNumber = 1,
  };
  // repeated .organization.SaleSettings sale_settings = 1;
  int sale_settings_size() const;
  private:
  int _internal_sale_settings_size() const;

  public:
  void clear_sale_settings() ;
  ::organization::SaleSettings* mutable_sale_settings(int index);
  ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>* mutable_sale_settings();

  private:
  const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>& _internal_sale_settings() const;
  ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>* _internal_mutable_sale_settings();
  public:
  const ::organization::SaleSettings& sale_settings(int index) const;
  ::organization::SaleSettings* add_sale_settings();
  const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>& sale_settings() const;
  // @@protoc_insertion_point(class_scope:organization.CreateSaleSettingsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateSaleSettingsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::organization::SaleSettings > sale_settings_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class CreateSaleSettingsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.CreateSaleSettingsRequest) */ {
 public:
  inline CreateSaleSettingsRequest() : CreateSaleSettingsRequest(nullptr) {}
  ~CreateSaleSettingsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateSaleSettingsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateSaleSettingsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateSaleSettingsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateSaleSettingsRequest(const CreateSaleSettingsRequest& from) : CreateSaleSettingsRequest(nullptr, from) {}
  inline CreateSaleSettingsRequest(CreateSaleSettingsRequest&& from) noexcept
      : CreateSaleSettingsRequest(nullptr, std::move(from)) {}
  inline CreateSaleSettingsRequest& operator=(const CreateSaleSettingsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSaleSettingsRequest& operator=(CreateSaleSettingsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateSaleSettingsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateSaleSettingsRequest* internal_default_instance() {
    return reinterpret_cast<const CreateSaleSettingsRequest*>(
        &_CreateSaleSettingsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 83;
  friend void swap(CreateSaleSettingsRequest& a, CreateSaleSettingsRequest& b) { a.Swap(&b); }
  inline void Swap(CreateSaleSettingsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSaleSettingsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateSaleSettingsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateSaleSettingsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateSaleSettingsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateSaleSettingsRequest& from) { CreateSaleSettingsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateSaleSettingsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.CreateSaleSettingsRequest"; }

 protected:
  explicit CreateSaleSettingsRequest(::google::protobuf::Arena* arena);
  CreateSaleSettingsRequest(::google::protobuf::Arena* arena, const CreateSaleSettingsRequest& from);
  CreateSaleSettingsRequest(::google::protobuf::Arena* arena, CreateSaleSettingsRequest&& from) noexcept
      : CreateSaleSettingsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSaleSettingsFieldNumber = 1,
  };
  // repeated .organization.SaleSettings sale_settings = 1;
  int sale_settings_size() const;
  private:
  int _internal_sale_settings_size() const;

  public:
  void clear_sale_settings() ;
  ::organization::SaleSettings* mutable_sale_settings(int index);
  ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>* mutable_sale_settings();

  private:
  const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>& _internal_sale_settings() const;
  ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>* _internal_mutable_sale_settings();
  public:
  const ::organization::SaleSettings& sale_settings(int index) const;
  ::organization::SaleSettings* add_sale_settings();
  const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>& sale_settings() const;
  // @@protoc_insertion_point(class_scope:organization.CreateSaleSettingsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateSaleSettingsRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::organization::SaleSettings > sale_settings_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class CreateOrganizationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.CreateOrganizationResponse) */ {
 public:
  inline CreateOrganizationResponse() : CreateOrganizationResponse(nullptr) {}
  ~CreateOrganizationResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateOrganizationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateOrganizationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateOrganizationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateOrganizationResponse(const CreateOrganizationResponse& from) : CreateOrganizationResponse(nullptr, from) {}
  inline CreateOrganizationResponse(CreateOrganizationResponse&& from) noexcept
      : CreateOrganizationResponse(nullptr, std::move(from)) {}
  inline CreateOrganizationResponse& operator=(const CreateOrganizationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateOrganizationResponse& operator=(CreateOrganizationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateOrganizationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateOrganizationResponse* internal_default_instance() {
    return reinterpret_cast<const CreateOrganizationResponse*>(
        &_CreateOrganizationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(CreateOrganizationResponse& a, CreateOrganizationResponse& b) { a.Swap(&b); }
  inline void Swap(CreateOrganizationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateOrganizationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateOrganizationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateOrganizationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateOrganizationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateOrganizationResponse& from) { CreateOrganizationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateOrganizationResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.CreateOrganizationResponse"; }

 protected:
  explicit CreateOrganizationResponse(::google::protobuf::Arena* arena);
  CreateOrganizationResponse(::google::protobuf::Arena* arena, const CreateOrganizationResponse& from);
  CreateOrganizationResponse(::google::protobuf::Arena* arena, CreateOrganizationResponse&& from) noexcept
      : CreateOrganizationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTokenFieldNumber = 1,
    kOrganizationFieldNumber = 2,
  };
  // optional string token = 1;
  bool has_token() const;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // .organization.Organization organization = 2;
  bool has_organization() const;
  void clear_organization() ;
  const ::organization::Organization& organization() const;
  PROTOBUF_NODISCARD ::organization::Organization* release_organization();
  ::organization::Organization* mutable_organization();
  void set_allocated_organization(::organization::Organization* value);
  void unsafe_arena_set_allocated_organization(::organization::Organization* value);
  ::organization::Organization* unsafe_arena_release_organization();

  private:
  const ::organization::Organization& _internal_organization() const;
  ::organization::Organization* _internal_mutable_organization();

  public:
  // @@protoc_insertion_point(class_scope:organization.CreateOrganizationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      53, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateOrganizationResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::organization::Organization* organization_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class CreateOrganizationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.CreateOrganizationRequest) */ {
 public:
  inline CreateOrganizationRequest() : CreateOrganizationRequest(nullptr) {}
  ~CreateOrganizationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateOrganizationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateOrganizationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateOrganizationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateOrganizationRequest(const CreateOrganizationRequest& from) : CreateOrganizationRequest(nullptr, from) {}
  inline CreateOrganizationRequest(CreateOrganizationRequest&& from) noexcept
      : CreateOrganizationRequest(nullptr, std::move(from)) {}
  inline CreateOrganizationRequest& operator=(const CreateOrganizationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateOrganizationRequest& operator=(CreateOrganizationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateOrganizationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateOrganizationRequest* internal_default_instance() {
    return reinterpret_cast<const CreateOrganizationRequest*>(
        &_CreateOrganizationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(CreateOrganizationRequest& a, CreateOrganizationRequest& b) { a.Swap(&b); }
  inline void Swap(CreateOrganizationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateOrganizationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateOrganizationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateOrganizationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateOrganizationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateOrganizationRequest& from) { CreateOrganizationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateOrganizationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.CreateOrganizationRequest"; }

 protected:
  explicit CreateOrganizationRequest(::google::protobuf::Arena* arena);
  CreateOrganizationRequest(::google::protobuf::Arena* arena, const CreateOrganizationRequest& from);
  CreateOrganizationRequest(::google::protobuf::Arena* arena, CreateOrganizationRequest&& from) noexcept
      : CreateOrganizationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrganizationFieldNumber = 1,
    kUserIdFieldNumber = 2,
  };
  // .organization.Organization organization = 1;
  bool has_organization() const;
  void clear_organization() ;
  const ::organization::Organization& organization() const;
  PROTOBUF_NODISCARD ::organization::Organization* release_organization();
  ::organization::Organization* mutable_organization();
  void set_allocated_organization(::organization::Organization* value);
  void unsafe_arena_set_allocated_organization(::organization::Organization* value);
  ::organization::Organization* unsafe_arena_release_organization();

  private:
  const ::organization::Organization& _internal_organization() const;
  ::organization::Organization* _internal_mutable_organization();

  public:
  // optional int64 user_id = 2;
  bool has_user_id() const;
  void clear_user_id() ;
  ::int64_t user_id() const;
  void set_user_id(::int64_t value);

  private:
  ::int64_t _internal_user_id() const;
  void _internal_set_user_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.CreateOrganizationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateOrganizationRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::Organization* organization_;
    ::int64_t user_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class Counterparty final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.Counterparty) */ {
 public:
  inline Counterparty() : Counterparty(nullptr) {}
  ~Counterparty() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Counterparty* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Counterparty));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Counterparty(
      ::google::protobuf::internal::ConstantInitialized);

  inline Counterparty(const Counterparty& from) : Counterparty(nullptr, from) {}
  inline Counterparty(Counterparty&& from) noexcept
      : Counterparty(nullptr, std::move(from)) {}
  inline Counterparty& operator=(const Counterparty& from) {
    CopyFrom(from);
    return *this;
  }
  inline Counterparty& operator=(Counterparty&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Counterparty& default_instance() {
    return *internal_default_instance();
  }
  static inline const Counterparty* internal_default_instance() {
    return reinterpret_cast<const Counterparty*>(
        &_Counterparty_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(Counterparty& a, Counterparty& b) { a.Swap(&b); }
  inline void Swap(Counterparty* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Counterparty* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Counterparty* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Counterparty>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Counterparty& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Counterparty& from) { Counterparty::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Counterparty* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.Counterparty"; }

 protected:
  explicit Counterparty(::google::protobuf::Arena* arena);
  Counterparty(::google::protobuf::Arena* arena, const Counterparty& from);
  Counterparty(::google::protobuf::Arena* arena, Counterparty&& from) noexcept
      : Counterparty(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContactsFieldNumber = 6,
    kNameFieldNumber = 2,
    kLegalNameFieldNumber = 3,
    kAddressFieldNumber = 4,
    kRelationshipFieldNumber = 5,
    kIdFieldNumber = 1,
  };
  // repeated .organization.ContactModel contacts = 6;
  int contacts_size() const;
  private:
  int _internal_contacts_size() const;

  public:
  void clear_contacts() ;
  ::organization::ContactModel* mutable_contacts(int index);
  ::google::protobuf::RepeatedPtrField<::organization::ContactModel>* mutable_contacts();

  private:
  const ::google::protobuf::RepeatedPtrField<::organization::ContactModel>& _internal_contacts() const;
  ::google::protobuf::RepeatedPtrField<::organization::ContactModel>* _internal_mutable_contacts();
  public:
  const ::organization::ContactModel& contacts(int index) const;
  ::organization::ContactModel* add_contacts();
  const ::google::protobuf::RepeatedPtrField<::organization::ContactModel>& contacts() const;
  // optional string name = 2;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string legal_name = 3;
  bool has_legal_name() const;
  void clear_legal_name() ;
  const std::string& legal_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_legal_name(Arg_&& arg, Args_... args);
  std::string* mutable_legal_name();
  PROTOBUF_NODISCARD std::string* release_legal_name();
  void set_allocated_legal_name(std::string* value);

  private:
  const std::string& _internal_legal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_legal_name(
      const std::string& value);
  std::string* _internal_mutable_legal_name();

  public:
  // optional .organization.AddressModel address = 4;
  bool has_address() const;
  void clear_address() ;
  const ::organization::AddressModel& address() const;
  PROTOBUF_NODISCARD ::organization::AddressModel* release_address();
  ::organization::AddressModel* mutable_address();
  void set_allocated_address(::organization::AddressModel* value);
  void unsafe_arena_set_allocated_address(::organization::AddressModel* value);
  ::organization::AddressModel* unsafe_arena_release_address();

  private:
  const ::organization::AddressModel& _internal_address() const;
  ::organization::AddressModel* _internal_mutable_address();

  public:
  // optional .organization.Relationship relationship = 5;
  bool has_relationship() const;
  void clear_relationship() ;
  const ::organization::Relationship& relationship() const;
  PROTOBUF_NODISCARD ::organization::Relationship* release_relationship();
  ::organization::Relationship* mutable_relationship();
  void set_allocated_relationship(::organization::Relationship* value);
  void unsafe_arena_set_allocated_relationship(::organization::Relationship* value);
  ::organization::Relationship* unsafe_arena_release_relationship();

  private:
  const ::organization::Relationship& _internal_relationship() const;
  ::organization::Relationship* _internal_mutable_relationship();

  public:
  // optional int64 id = 1;
  bool has_id() const;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.Counterparty)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 3,
      48, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Counterparty& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::organization::ContactModel > contacts_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr legal_name_;
    ::organization::AddressModel* address_;
    ::organization::Relationship* relationship_;
    ::int64_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class PatchCounterpartyResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.PatchCounterpartyResponse) */ {
 public:
  inline PatchCounterpartyResponse() : PatchCounterpartyResponse(nullptr) {}
  ~PatchCounterpartyResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PatchCounterpartyResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PatchCounterpartyResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PatchCounterpartyResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PatchCounterpartyResponse(const PatchCounterpartyResponse& from) : PatchCounterpartyResponse(nullptr, from) {}
  inline PatchCounterpartyResponse(PatchCounterpartyResponse&& from) noexcept
      : PatchCounterpartyResponse(nullptr, std::move(from)) {}
  inline PatchCounterpartyResponse& operator=(const PatchCounterpartyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PatchCounterpartyResponse& operator=(PatchCounterpartyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PatchCounterpartyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PatchCounterpartyResponse* internal_default_instance() {
    return reinterpret_cast<const PatchCounterpartyResponse*>(
        &_PatchCounterpartyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(PatchCounterpartyResponse& a, PatchCounterpartyResponse& b) { a.Swap(&b); }
  inline void Swap(PatchCounterpartyResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PatchCounterpartyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PatchCounterpartyResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PatchCounterpartyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PatchCounterpartyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PatchCounterpartyResponse& from) { PatchCounterpartyResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PatchCounterpartyResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.PatchCounterpartyResponse"; }

 protected:
  explicit PatchCounterpartyResponse(::google::protobuf::Arena* arena);
  PatchCounterpartyResponse(::google::protobuf::Arena* arena, const PatchCounterpartyResponse& from);
  PatchCounterpartyResponse(::google::protobuf::Arena* arena, PatchCounterpartyResponse&& from) noexcept
      : PatchCounterpartyResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCounterpartyFieldNumber = 1,
  };
  // .organization.Counterparty counterparty = 1;
  bool has_counterparty() const;
  void clear_counterparty() ;
  const ::organization::Counterparty& counterparty() const;
  PROTOBUF_NODISCARD ::organization::Counterparty* release_counterparty();
  ::organization::Counterparty* mutable_counterparty();
  void set_allocated_counterparty(::organization::Counterparty* value);
  void unsafe_arena_set_allocated_counterparty(::organization::Counterparty* value);
  ::organization::Counterparty* unsafe_arena_release_counterparty();

  private:
  const ::organization::Counterparty& _internal_counterparty() const;
  ::organization::Counterparty* _internal_mutable_counterparty();

  public:
  // @@protoc_insertion_point(class_scope:organization.PatchCounterpartyResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PatchCounterpartyResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::Counterparty* counterparty_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class PatchCounterpartyRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.PatchCounterpartyRequest) */ {
 public:
  inline PatchCounterpartyRequest() : PatchCounterpartyRequest(nullptr) {}
  ~PatchCounterpartyRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PatchCounterpartyRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PatchCounterpartyRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PatchCounterpartyRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PatchCounterpartyRequest(const PatchCounterpartyRequest& from) : PatchCounterpartyRequest(nullptr, from) {}
  inline PatchCounterpartyRequest(PatchCounterpartyRequest&& from) noexcept
      : PatchCounterpartyRequest(nullptr, std::move(from)) {}
  inline PatchCounterpartyRequest& operator=(const PatchCounterpartyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PatchCounterpartyRequest& operator=(PatchCounterpartyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PatchCounterpartyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PatchCounterpartyRequest* internal_default_instance() {
    return reinterpret_cast<const PatchCounterpartyRequest*>(
        &_PatchCounterpartyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(PatchCounterpartyRequest& a, PatchCounterpartyRequest& b) { a.Swap(&b); }
  inline void Swap(PatchCounterpartyRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PatchCounterpartyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PatchCounterpartyRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PatchCounterpartyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PatchCounterpartyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PatchCounterpartyRequest& from) { PatchCounterpartyRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PatchCounterpartyRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.PatchCounterpartyRequest"; }

 protected:
  explicit PatchCounterpartyRequest(::google::protobuf::Arena* arena);
  PatchCounterpartyRequest(::google::protobuf::Arena* arena, const PatchCounterpartyRequest& from);
  PatchCounterpartyRequest(::google::protobuf::Arena* arena, PatchCounterpartyRequest&& from) noexcept
      : PatchCounterpartyRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCounterpartyFieldNumber = 1,
    kSourceOrganizationIdFieldNumber = 2,
  };
  // .organization.Counterparty counterparty = 1;
  bool has_counterparty() const;
  void clear_counterparty() ;
  const ::organization::Counterparty& counterparty() const;
  PROTOBUF_NODISCARD ::organization::Counterparty* release_counterparty();
  ::organization::Counterparty* mutable_counterparty();
  void set_allocated_counterparty(::organization::Counterparty* value);
  void unsafe_arena_set_allocated_counterparty(::organization::Counterparty* value);
  ::organization::Counterparty* unsafe_arena_release_counterparty();

  private:
  const ::organization::Counterparty& _internal_counterparty() const;
  ::organization::Counterparty* _internal_mutable_counterparty();

  public:
  // int64 source_organization_id = 2;
  void clear_source_organization_id() ;
  ::int64_t source_organization_id() const;
  void set_source_organization_id(::int64_t value);

  private:
  ::int64_t _internal_source_organization_id() const;
  void _internal_set_source_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.PatchCounterpartyRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PatchCounterpartyRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::Counterparty* counterparty_;
    ::int64_t source_organization_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class ListCounterpartiesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.ListCounterpartiesResponse) */ {
 public:
  inline ListCounterpartiesResponse() : ListCounterpartiesResponse(nullptr) {}
  ~ListCounterpartiesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListCounterpartiesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListCounterpartiesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListCounterpartiesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListCounterpartiesResponse(const ListCounterpartiesResponse& from) : ListCounterpartiesResponse(nullptr, from) {}
  inline ListCounterpartiesResponse(ListCounterpartiesResponse&& from) noexcept
      : ListCounterpartiesResponse(nullptr, std::move(from)) {}
  inline ListCounterpartiesResponse& operator=(const ListCounterpartiesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCounterpartiesResponse& operator=(ListCounterpartiesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListCounterpartiesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListCounterpartiesResponse* internal_default_instance() {
    return reinterpret_cast<const ListCounterpartiesResponse*>(
        &_ListCounterpartiesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(ListCounterpartiesResponse& a, ListCounterpartiesResponse& b) { a.Swap(&b); }
  inline void Swap(ListCounterpartiesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCounterpartiesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListCounterpartiesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListCounterpartiesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListCounterpartiesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListCounterpartiesResponse& from) { ListCounterpartiesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListCounterpartiesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.ListCounterpartiesResponse"; }

 protected:
  explicit ListCounterpartiesResponse(::google::protobuf::Arena* arena);
  ListCounterpartiesResponse(::google::protobuf::Arena* arena, const ListCounterpartiesResponse& from);
  ListCounterpartiesResponse(::google::protobuf::Arena* arena, ListCounterpartiesResponse&& from) noexcept
      : ListCounterpartiesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCounterpartiesFieldNumber = 1,
    kTotalCountFieldNumber = 2,
  };
  // repeated .organization.Counterparty counterparties = 1;
  int counterparties_size() const;
  private:
  int _internal_counterparties_size() const;

  public:
  void clear_counterparties() ;
  ::organization::Counterparty* mutable_counterparties(int index);
  ::google::protobuf::RepeatedPtrField<::organization::Counterparty>* mutable_counterparties();

  private:
  const ::google::protobuf::RepeatedPtrField<::organization::Counterparty>& _internal_counterparties() const;
  ::google::protobuf::RepeatedPtrField<::organization::Counterparty>* _internal_mutable_counterparties();
  public:
  const ::organization::Counterparty& counterparties(int index) const;
  ::organization::Counterparty* add_counterparties();
  const ::google::protobuf::RepeatedPtrField<::organization::Counterparty>& counterparties() const;
  // int32 total_count = 2;
  void clear_total_count() ;
  ::int32_t total_count() const;
  void set_total_count(::int32_t value);

  private:
  ::int32_t _internal_total_count() const;
  void _internal_set_total_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.ListCounterpartiesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListCounterpartiesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::organization::Counterparty > counterparties_;
    ::int32_t total_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class GetCounterpartyResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.GetCounterpartyResponse) */ {
 public:
  inline GetCounterpartyResponse() : GetCounterpartyResponse(nullptr) {}
  ~GetCounterpartyResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetCounterpartyResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetCounterpartyResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCounterpartyResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetCounterpartyResponse(const GetCounterpartyResponse& from) : GetCounterpartyResponse(nullptr, from) {}
  inline GetCounterpartyResponse(GetCounterpartyResponse&& from) noexcept
      : GetCounterpartyResponse(nullptr, std::move(from)) {}
  inline GetCounterpartyResponse& operator=(const GetCounterpartyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCounterpartyResponse& operator=(GetCounterpartyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCounterpartyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCounterpartyResponse* internal_default_instance() {
    return reinterpret_cast<const GetCounterpartyResponse*>(
        &_GetCounterpartyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(GetCounterpartyResponse& a, GetCounterpartyResponse& b) { a.Swap(&b); }
  inline void Swap(GetCounterpartyResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCounterpartyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCounterpartyResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetCounterpartyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCounterpartyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCounterpartyResponse& from) { GetCounterpartyResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetCounterpartyResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.GetCounterpartyResponse"; }

 protected:
  explicit GetCounterpartyResponse(::google::protobuf::Arena* arena);
  GetCounterpartyResponse(::google::protobuf::Arena* arena, const GetCounterpartyResponse& from);
  GetCounterpartyResponse(::google::protobuf::Arena* arena, GetCounterpartyResponse&& from) noexcept
      : GetCounterpartyResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCounterpartyFieldNumber = 1,
  };
  // .organization.Counterparty counterparty = 1;
  bool has_counterparty() const;
  void clear_counterparty() ;
  const ::organization::Counterparty& counterparty() const;
  PROTOBUF_NODISCARD ::organization::Counterparty* release_counterparty();
  ::organization::Counterparty* mutable_counterparty();
  void set_allocated_counterparty(::organization::Counterparty* value);
  void unsafe_arena_set_allocated_counterparty(::organization::Counterparty* value);
  ::organization::Counterparty* unsafe_arena_release_counterparty();

  private:
  const ::organization::Counterparty& _internal_counterparty() const;
  ::organization::Counterparty* _internal_mutable_counterparty();

  public:
  // @@protoc_insertion_point(class_scope:organization.GetCounterpartyResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetCounterpartyResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::Counterparty* counterparty_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class CreateCounterpartyResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.CreateCounterpartyResponse) */ {
 public:
  inline CreateCounterpartyResponse() : CreateCounterpartyResponse(nullptr) {}
  ~CreateCounterpartyResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateCounterpartyResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateCounterpartyResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateCounterpartyResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateCounterpartyResponse(const CreateCounterpartyResponse& from) : CreateCounterpartyResponse(nullptr, from) {}
  inline CreateCounterpartyResponse(CreateCounterpartyResponse&& from) noexcept
      : CreateCounterpartyResponse(nullptr, std::move(from)) {}
  inline CreateCounterpartyResponse& operator=(const CreateCounterpartyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateCounterpartyResponse& operator=(CreateCounterpartyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateCounterpartyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateCounterpartyResponse* internal_default_instance() {
    return reinterpret_cast<const CreateCounterpartyResponse*>(
        &_CreateCounterpartyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(CreateCounterpartyResponse& a, CreateCounterpartyResponse& b) { a.Swap(&b); }
  inline void Swap(CreateCounterpartyResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateCounterpartyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateCounterpartyResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateCounterpartyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateCounterpartyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateCounterpartyResponse& from) { CreateCounterpartyResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateCounterpartyResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.CreateCounterpartyResponse"; }

 protected:
  explicit CreateCounterpartyResponse(::google::protobuf::Arena* arena);
  CreateCounterpartyResponse(::google::protobuf::Arena* arena, const CreateCounterpartyResponse& from);
  CreateCounterpartyResponse(::google::protobuf::Arena* arena, CreateCounterpartyResponse&& from) noexcept
      : CreateCounterpartyResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCounterpartyFieldNumber = 1,
  };
  // .organization.Counterparty counterparty = 1;
  bool has_counterparty() const;
  void clear_counterparty() ;
  const ::organization::Counterparty& counterparty() const;
  PROTOBUF_NODISCARD ::organization::Counterparty* release_counterparty();
  ::organization::Counterparty* mutable_counterparty();
  void set_allocated_counterparty(::organization::Counterparty* value);
  void unsafe_arena_set_allocated_counterparty(::organization::Counterparty* value);
  ::organization::Counterparty* unsafe_arena_release_counterparty();

  private:
  const ::organization::Counterparty& _internal_counterparty() const;
  ::organization::Counterparty* _internal_mutable_counterparty();

  public:
  // @@protoc_insertion_point(class_scope:organization.CreateCounterpartyResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateCounterpartyResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::Counterparty* counterparty_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};
// -------------------------------------------------------------------

class CreateCounterpartyRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:organization.CreateCounterpartyRequest) */ {
 public:
  inline CreateCounterpartyRequest() : CreateCounterpartyRequest(nullptr) {}
  ~CreateCounterpartyRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateCounterpartyRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateCounterpartyRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateCounterpartyRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateCounterpartyRequest(const CreateCounterpartyRequest& from) : CreateCounterpartyRequest(nullptr, from) {}
  inline CreateCounterpartyRequest(CreateCounterpartyRequest&& from) noexcept
      : CreateCounterpartyRequest(nullptr, std::move(from)) {}
  inline CreateCounterpartyRequest& operator=(const CreateCounterpartyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateCounterpartyRequest& operator=(CreateCounterpartyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateCounterpartyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateCounterpartyRequest* internal_default_instance() {
    return reinterpret_cast<const CreateCounterpartyRequest*>(
        &_CreateCounterpartyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(CreateCounterpartyRequest& a, CreateCounterpartyRequest& b) { a.Swap(&b); }
  inline void Swap(CreateCounterpartyRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateCounterpartyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateCounterpartyRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateCounterpartyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateCounterpartyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateCounterpartyRequest& from) { CreateCounterpartyRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateCounterpartyRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "organization.CreateCounterpartyRequest"; }

 protected:
  explicit CreateCounterpartyRequest(::google::protobuf::Arena* arena);
  CreateCounterpartyRequest(::google::protobuf::Arena* arena, const CreateCounterpartyRequest& from);
  CreateCounterpartyRequest(::google::protobuf::Arena* arena, CreateCounterpartyRequest&& from) noexcept
      : CreateCounterpartyRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCounterpartyFieldNumber = 1,
    kSourceOrganizationIdFieldNumber = 2,
  };
  // .organization.Counterparty counterparty = 1;
  bool has_counterparty() const;
  void clear_counterparty() ;
  const ::organization::Counterparty& counterparty() const;
  PROTOBUF_NODISCARD ::organization::Counterparty* release_counterparty();
  ::organization::Counterparty* mutable_counterparty();
  void set_allocated_counterparty(::organization::Counterparty* value);
  void unsafe_arena_set_allocated_counterparty(::organization::Counterparty* value);
  ::organization::Counterparty* unsafe_arena_release_counterparty();

  private:
  const ::organization::Counterparty& _internal_counterparty() const;
  ::organization::Counterparty* _internal_mutable_counterparty();

  public:
  // int64 source_organization_id = 2;
  void clear_source_organization_id() ;
  ::int64_t source_organization_id() const;
  void set_source_organization_id(::int64_t value);

  private:
  ::int64_t _internal_source_organization_id() const;
  void _internal_set_source_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:organization.CreateCounterpartyRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateCounterpartyRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::organization::Counterparty* counterparty_;
    ::int64_t source_organization_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_organization_2forganization_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AddressModel

// optional int64 id = 1;
inline bool AddressModel::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void AddressModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int64_t AddressModel::id() const {
  // @@protoc_insertion_point(field_get:organization.AddressModel.id)
  return _internal_id();
}
inline void AddressModel::set_id(::int64_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:organization.AddressModel.id)
}
inline ::int64_t AddressModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void AddressModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// optional string type = 2;
inline bool AddressModel::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AddressModel::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AddressModel::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.AddressModel.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddressModel::set_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.AddressModel.type)
}
inline std::string* AddressModel::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:organization.AddressModel.type)
  return _s;
}
inline const std::string& AddressModel::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void AddressModel::_internal_set_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_.Set(value, GetArena());
}
inline std::string* AddressModel::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* AddressModel::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.AddressModel.type)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.type_.Set("", GetArena());
  }
  return released;
}
inline void AddressModel::set_allocated_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.AddressModel.type)
}

// optional string country = 3;
inline bool AddressModel::has_country() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void AddressModel::clear_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& AddressModel::country() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.AddressModel.country)
  return _internal_country();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddressModel::set_country(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.country_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.AddressModel.country)
}
inline std::string* AddressModel::mutable_country() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_country();
  // @@protoc_insertion_point(field_mutable:organization.AddressModel.country)
  return _s;
}
inline const std::string& AddressModel::_internal_country() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.country_.Get();
}
inline void AddressModel::_internal_set_country(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.country_.Set(value, GetArena());
}
inline std::string* AddressModel::_internal_mutable_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.country_.Mutable( GetArena());
}
inline std::string* AddressModel::release_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.AddressModel.country)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.country_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.country_.Set("", GetArena());
  }
  return released;
}
inline void AddressModel::set_allocated_country(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.country_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.country_.IsDefault()) {
    _impl_.country_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.AddressModel.country)
}

// optional string state = 4;
inline bool AddressModel::has_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void AddressModel::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& AddressModel::state() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.AddressModel.state)
  return _internal_state();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddressModel::set_state(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.state_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.AddressModel.state)
}
inline std::string* AddressModel::mutable_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:organization.AddressModel.state)
  return _s;
}
inline const std::string& AddressModel::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.state_.Get();
}
inline void AddressModel::_internal_set_state(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.state_.Set(value, GetArena());
}
inline std::string* AddressModel::_internal_mutable_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.state_.Mutable( GetArena());
}
inline std::string* AddressModel::release_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.AddressModel.state)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.state_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.state_.Set("", GetArena());
  }
  return released;
}
inline void AddressModel::set_allocated_state(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.state_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.state_.IsDefault()) {
    _impl_.state_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.AddressModel.state)
}

// optional string city = 5;
inline bool AddressModel::has_city() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void AddressModel::clear_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& AddressModel::city() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.AddressModel.city)
  return _internal_city();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddressModel::set_city(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.city_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.AddressModel.city)
}
inline std::string* AddressModel::mutable_city() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_city();
  // @@protoc_insertion_point(field_mutable:organization.AddressModel.city)
  return _s;
}
inline const std::string& AddressModel::_internal_city() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.city_.Get();
}
inline void AddressModel::_internal_set_city(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.city_.Set(value, GetArena());
}
inline std::string* AddressModel::_internal_mutable_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.city_.Mutable( GetArena());
}
inline std::string* AddressModel::release_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.AddressModel.city)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.city_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.city_.Set("", GetArena());
  }
  return released;
}
inline void AddressModel::set_allocated_city(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.city_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.city_.IsDefault()) {
    _impl_.city_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.AddressModel.city)
}

// optional string address_line = 6;
inline bool AddressModel::has_address_line() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void AddressModel::clear_address_line() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_line_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& AddressModel::address_line() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.AddressModel.address_line)
  return _internal_address_line();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddressModel::set_address_line(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.address_line_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.AddressModel.address_line)
}
inline std::string* AddressModel::mutable_address_line() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address_line();
  // @@protoc_insertion_point(field_mutable:organization.AddressModel.address_line)
  return _s;
}
inline const std::string& AddressModel::_internal_address_line() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_line_.Get();
}
inline void AddressModel::_internal_set_address_line(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.address_line_.Set(value, GetArena());
}
inline std::string* AddressModel::_internal_mutable_address_line() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.address_line_.Mutable( GetArena());
}
inline std::string* AddressModel::release_address_line() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.AddressModel.address_line)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.address_line_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.address_line_.Set("", GetArena());
  }
  return released;
}
inline void AddressModel::set_allocated_address_line(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.address_line_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_line_.IsDefault()) {
    _impl_.address_line_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.AddressModel.address_line)
}

// optional float latitude = 7;
inline bool AddressModel::has_latitude() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void AddressModel::clear_latitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline float AddressModel::latitude() const {
  // @@protoc_insertion_point(field_get:organization.AddressModel.latitude)
  return _internal_latitude();
}
inline void AddressModel::set_latitude(float value) {
  _internal_set_latitude(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:organization.AddressModel.latitude)
}
inline float AddressModel::_internal_latitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latitude_;
}
inline void AddressModel::_internal_set_latitude(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_ = value;
}

// optional float longitude = 8;
inline bool AddressModel::has_longitude() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void AddressModel::clear_longitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline float AddressModel::longitude() const {
  // @@protoc_insertion_point(field_get:organization.AddressModel.longitude)
  return _internal_longitude();
}
inline void AddressModel::set_longitude(float value) {
  _internal_set_longitude(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:organization.AddressModel.longitude)
}
inline float AddressModel::_internal_longitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.longitude_;
}
inline void AddressModel::_internal_set_longitude(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_ = value;
}

// optional string created_at = 11;
inline bool AddressModel::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void AddressModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& AddressModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.AddressModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddressModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.AddressModel.created_at)
}
inline std::string* AddressModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:organization.AddressModel.created_at)
  return _s;
}
inline const std::string& AddressModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void AddressModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* AddressModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* AddressModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.AddressModel.created_at)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.created_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.created_at_.Set("", GetArena());
  }
  return released;
}
inline void AddressModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.AddressModel.created_at)
}

// optional string updated_at = 12;
inline bool AddressModel::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void AddressModel::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const std::string& AddressModel::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.AddressModel.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddressModel::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.AddressModel.updated_at)
}
inline std::string* AddressModel::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:organization.AddressModel.updated_at)
  return _s;
}
inline const std::string& AddressModel::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void AddressModel::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* AddressModel::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* AddressModel::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.AddressModel.updated_at)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  auto* released = _impl_.updated_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  return released;
}
inline void AddressModel::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_at_.IsDefault()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.AddressModel.updated_at)
}

// -------------------------------------------------------------------

// ImageModel

// int64 id = 1;
inline void ImageModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t ImageModel::id() const {
  // @@protoc_insertion_point(field_get:organization.ImageModel.id)
  return _internal_id();
}
inline void ImageModel::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:organization.ImageModel.id)
}
inline ::int64_t ImageModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void ImageModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string image_url = 2;
inline void ImageModel::clear_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.ClearToEmpty();
}
inline const std::string& ImageModel::image_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.ImageModel.image_url)
  return _internal_image_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ImageModel::set_image_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.ImageModel.image_url)
}
inline std::string* ImageModel::mutable_image_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_image_url();
  // @@protoc_insertion_point(field_mutable:organization.ImageModel.image_url)
  return _s;
}
inline const std::string& ImageModel::_internal_image_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.image_url_.Get();
}
inline void ImageModel::_internal_set_image_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.Set(value, GetArena());
}
inline std::string* ImageModel::_internal_mutable_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.image_url_.Mutable( GetArena());
}
inline std::string* ImageModel::release_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.ImageModel.image_url)
  return _impl_.image_url_.Release();
}
inline void ImageModel::set_allocated_image_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.image_url_.IsDefault()) {
    _impl_.image_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.ImageModel.image_url)
}

// optional int64 image_index = 3;
inline bool ImageModel::has_image_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ImageModel::clear_image_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_index_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t ImageModel::image_index() const {
  // @@protoc_insertion_point(field_get:organization.ImageModel.image_index)
  return _internal_image_index();
}
inline void ImageModel::set_image_index(::int64_t value) {
  _internal_set_image_index(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:organization.ImageModel.image_index)
}
inline ::int64_t ImageModel::_internal_image_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.image_index_;
}
inline void ImageModel::_internal_set_image_index(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_index_ = value;
}

// string object_key = 4;
inline void ImageModel::clear_object_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_key_.ClearToEmpty();
}
inline const std::string& ImageModel::object_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.ImageModel.object_key)
  return _internal_object_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ImageModel::set_object_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.ImageModel.object_key)
}
inline std::string* ImageModel::mutable_object_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_object_key();
  // @@protoc_insertion_point(field_mutable:organization.ImageModel.object_key)
  return _s;
}
inline const std::string& ImageModel::_internal_object_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.object_key_.Get();
}
inline void ImageModel::_internal_set_object_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_key_.Set(value, GetArena());
}
inline std::string* ImageModel::_internal_mutable_object_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.object_key_.Mutable( GetArena());
}
inline std::string* ImageModel::release_object_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.ImageModel.object_key)
  return _impl_.object_key_.Release();
}
inline void ImageModel::set_allocated_object_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.object_key_.IsDefault()) {
    _impl_.object_key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.ImageModel.object_key)
}

// -------------------------------------------------------------------

// SaleSettings

// int64 id = 1;
inline void SaleSettings::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t SaleSettings::id() const {
  // @@protoc_insertion_point(field_get:organization.SaleSettings.id)
  return _internal_id();
}
inline void SaleSettings::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:organization.SaleSettings.id)
}
inline ::int64_t SaleSettings::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void SaleSettings::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 organization_id = 2;
inline void SaleSettings::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t SaleSettings::organization_id() const {
  // @@protoc_insertion_point(field_get:organization.SaleSettings.organization_id)
  return _internal_organization_id();
}
inline void SaleSettings::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:organization.SaleSettings.organization_id)
}
inline ::int64_t SaleSettings::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void SaleSettings::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// float profit_percent = 3;
inline void SaleSettings::clear_profit_percent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.profit_percent_ = 0;
}
inline float SaleSettings::profit_percent() const {
  // @@protoc_insertion_point(field_get:organization.SaleSettings.profit_percent)
  return _internal_profit_percent();
}
inline void SaleSettings::set_profit_percent(float value) {
  _internal_set_profit_percent(value);
  // @@protoc_insertion_point(field_set:organization.SaleSettings.profit_percent)
}
inline float SaleSettings::_internal_profit_percent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.profit_percent_;
}
inline void SaleSettings::_internal_set_profit_percent(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.profit_percent_ = value;
}

// repeated .organization.Expences expences = 4;
inline int SaleSettings::_internal_expences_size() const {
  return _internal_expences().size();
}
inline int SaleSettings::expences_size() const {
  return _internal_expences_size();
}
inline void SaleSettings::clear_expences() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expences_.Clear();
}
inline ::organization::Expences* SaleSettings::mutable_expences(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:organization.SaleSettings.expences)
  return _internal_mutable_expences()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::organization::Expences>* SaleSettings::mutable_expences()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:organization.SaleSettings.expences)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_expences();
}
inline const ::organization::Expences& SaleSettings::expences(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.SaleSettings.expences)
  return _internal_expences().Get(index);
}
inline ::organization::Expences* SaleSettings::add_expences() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::organization::Expences* _add = _internal_mutable_expences()->Add();
  // @@protoc_insertion_point(field_add:organization.SaleSettings.expences)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::organization::Expences>& SaleSettings::expences() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:organization.SaleSettings.expences)
  return _internal_expences();
}
inline const ::google::protobuf::RepeatedPtrField<::organization::Expences>&
SaleSettings::_internal_expences() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expences_;
}
inline ::google::protobuf::RepeatedPtrField<::organization::Expences>*
SaleSettings::_internal_mutable_expences() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.expences_;
}

// string category_id = 5;
inline void SaleSettings::clear_category_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_id_.ClearToEmpty();
}
inline const std::string& SaleSettings::category_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.SaleSettings.category_id)
  return _internal_category_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaleSettings::set_category_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.SaleSettings.category_id)
}
inline std::string* SaleSettings::mutable_category_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_category_id();
  // @@protoc_insertion_point(field_mutable:organization.SaleSettings.category_id)
  return _s;
}
inline const std::string& SaleSettings::_internal_category_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_id_.Get();
}
inline void SaleSettings::_internal_set_category_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_id_.Set(value, GetArena());
}
inline std::string* SaleSettings::_internal_mutable_category_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.category_id_.Mutable( GetArena());
}
inline std::string* SaleSettings::release_category_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.SaleSettings.category_id)
  return _impl_.category_id_.Release();
}
inline void SaleSettings::set_allocated_category_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_id_.IsDefault()) {
    _impl_.category_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.SaleSettings.category_id)
}

// string category_name = 6;
inline void SaleSettings::clear_category_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_name_.ClearToEmpty();
}
inline const std::string& SaleSettings::category_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.SaleSettings.category_name)
  return _internal_category_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaleSettings::set_category_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.SaleSettings.category_name)
}
inline std::string* SaleSettings::mutable_category_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_category_name();
  // @@protoc_insertion_point(field_mutable:organization.SaleSettings.category_name)
  return _s;
}
inline const std::string& SaleSettings::_internal_category_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_name_.Get();
}
inline void SaleSettings::_internal_set_category_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_name_.Set(value, GetArena());
}
inline std::string* SaleSettings::_internal_mutable_category_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.category_name_.Mutable( GetArena());
}
inline std::string* SaleSettings::release_category_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.SaleSettings.category_name)
  return _impl_.category_name_.Release();
}
inline void SaleSettings::set_allocated_category_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_name_.IsDefault()) {
    _impl_.category_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.SaleSettings.category_name)
}

// -------------------------------------------------------------------

// Expences

// int64 id = 1;
inline void Expences::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t Expences::id() const {
  // @@protoc_insertion_point(field_get:organization.Expences.id)
  return _internal_id();
}
inline void Expences::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:organization.Expences.id)
}
inline ::int64_t Expences::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Expences::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string name = 2;
inline void Expences::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Expences::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.Expences.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Expences::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.Expences.name)
}
inline std::string* Expences::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:organization.Expences.name)
  return _s;
}
inline const std::string& Expences::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Expences::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Expences::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Expences::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.Expences.name)
  return _impl_.name_.Release();
}
inline void Expences::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.Expences.name)
}

// float value = 3;
inline void Expences::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline float Expences::value() const {
  // @@protoc_insertion_point(field_get:organization.Expences.value)
  return _internal_value();
}
inline void Expences::set_value(float value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:organization.Expences.value)
}
inline float Expences::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void Expences::_internal_set_value(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// SaleSettingsModel

// int64 id = 1;
inline void SaleSettingsModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t SaleSettingsModel::id() const {
  // @@protoc_insertion_point(field_get:organization.SaleSettingsModel.id)
  return _internal_id();
}
inline void SaleSettingsModel::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:organization.SaleSettingsModel.id)
}
inline ::int64_t SaleSettingsModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void SaleSettingsModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 organization_id = 2;
inline void SaleSettingsModel::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t SaleSettingsModel::organization_id() const {
  // @@protoc_insertion_point(field_get:organization.SaleSettingsModel.organization_id)
  return _internal_organization_id();
}
inline void SaleSettingsModel::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:organization.SaleSettingsModel.organization_id)
}
inline ::int64_t SaleSettingsModel::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void SaleSettingsModel::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// float profit_percent = 3;
inline void SaleSettingsModel::clear_profit_percent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.profit_percent_ = 0;
}
inline float SaleSettingsModel::profit_percent() const {
  // @@protoc_insertion_point(field_get:organization.SaleSettingsModel.profit_percent)
  return _internal_profit_percent();
}
inline void SaleSettingsModel::set_profit_percent(float value) {
  _internal_set_profit_percent(value);
  // @@protoc_insertion_point(field_set:organization.SaleSettingsModel.profit_percent)
}
inline float SaleSettingsModel::_internal_profit_percent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.profit_percent_;
}
inline void SaleSettingsModel::_internal_set_profit_percent(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.profit_percent_ = value;
}

// string category_id = 4;
inline void SaleSettingsModel::clear_category_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_id_.ClearToEmpty();
}
inline const std::string& SaleSettingsModel::category_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.SaleSettingsModel.category_id)
  return _internal_category_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaleSettingsModel::set_category_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.SaleSettingsModel.category_id)
}
inline std::string* SaleSettingsModel::mutable_category_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_category_id();
  // @@protoc_insertion_point(field_mutable:organization.SaleSettingsModel.category_id)
  return _s;
}
inline const std::string& SaleSettingsModel::_internal_category_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_id_.Get();
}
inline void SaleSettingsModel::_internal_set_category_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_id_.Set(value, GetArena());
}
inline std::string* SaleSettingsModel::_internal_mutable_category_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.category_id_.Mutable( GetArena());
}
inline std::string* SaleSettingsModel::release_category_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.SaleSettingsModel.category_id)
  return _impl_.category_id_.Release();
}
inline void SaleSettingsModel::set_allocated_category_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_id_.IsDefault()) {
    _impl_.category_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.SaleSettingsModel.category_id)
}

// -------------------------------------------------------------------

// ExpencesModel

// int64 id = 1;
inline void ExpencesModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t ExpencesModel::id() const {
  // @@protoc_insertion_point(field_get:organization.ExpencesModel.id)
  return _internal_id();
}
inline void ExpencesModel::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:organization.ExpencesModel.id)
}
inline ::int64_t ExpencesModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void ExpencesModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string name = 2;
inline void ExpencesModel::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ExpencesModel::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.ExpencesModel.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ExpencesModel::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.ExpencesModel.name)
}
inline std::string* ExpencesModel::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:organization.ExpencesModel.name)
  return _s;
}
inline const std::string& ExpencesModel::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ExpencesModel::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ExpencesModel::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ExpencesModel::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.ExpencesModel.name)
  return _impl_.name_.Release();
}
inline void ExpencesModel::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.ExpencesModel.name)
}

// float value = 3;
inline void ExpencesModel::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline float ExpencesModel::value() const {
  // @@protoc_insertion_point(field_get:organization.ExpencesModel.value)
  return _internal_value();
}
inline void ExpencesModel::set_value(float value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:organization.ExpencesModel.value)
}
inline float ExpencesModel::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void ExpencesModel::_internal_set_value(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// int64 sale_settings_id = 4;
inline void ExpencesModel::clear_sale_settings_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sale_settings_id_ = ::int64_t{0};
}
inline ::int64_t ExpencesModel::sale_settings_id() const {
  // @@protoc_insertion_point(field_get:organization.ExpencesModel.sale_settings_id)
  return _internal_sale_settings_id();
}
inline void ExpencesModel::set_sale_settings_id(::int64_t value) {
  _internal_set_sale_settings_id(value);
  // @@protoc_insertion_point(field_set:organization.ExpencesModel.sale_settings_id)
}
inline ::int64_t ExpencesModel::_internal_sale_settings_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sale_settings_id_;
}
inline void ExpencesModel::_internal_set_sale_settings_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sale_settings_id_ = value;
}

// -------------------------------------------------------------------

// Counterparty

// optional int64 id = 1;
inline bool Counterparty::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Counterparty::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t Counterparty::id() const {
  // @@protoc_insertion_point(field_get:organization.Counterparty.id)
  return _internal_id();
}
inline void Counterparty::set_id(::int64_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:organization.Counterparty.id)
}
inline ::int64_t Counterparty::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Counterparty::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// optional string name = 2;
inline bool Counterparty::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Counterparty::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Counterparty::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.Counterparty.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Counterparty::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.Counterparty.name)
}
inline std::string* Counterparty::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:organization.Counterparty.name)
  return _s;
}
inline const std::string& Counterparty::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Counterparty::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Counterparty::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Counterparty::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.Counterparty.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void Counterparty::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.Counterparty.name)
}

// optional string legal_name = 3;
inline bool Counterparty::has_legal_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Counterparty::clear_legal_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legal_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Counterparty::legal_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.Counterparty.legal_name)
  return _internal_legal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Counterparty::set_legal_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.legal_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.Counterparty.legal_name)
}
inline std::string* Counterparty::mutable_legal_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_legal_name();
  // @@protoc_insertion_point(field_mutable:organization.Counterparty.legal_name)
  return _s;
}
inline const std::string& Counterparty::_internal_legal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legal_name_.Get();
}
inline void Counterparty::_internal_set_legal_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.legal_name_.Set(value, GetArena());
}
inline std::string* Counterparty::_internal_mutable_legal_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.legal_name_.Mutable( GetArena());
}
inline std::string* Counterparty::release_legal_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.Counterparty.legal_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.legal_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.legal_name_.Set("", GetArena());
  }
  return released;
}
inline void Counterparty::set_allocated_legal_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.legal_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.legal_name_.IsDefault()) {
    _impl_.legal_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.Counterparty.legal_name)
}

// optional .organization.AddressModel address = 4;
inline bool Counterparty::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline void Counterparty::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ != nullptr) _impl_.address_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::organization::AddressModel& Counterparty::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::AddressModel* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::AddressModel&>(::organization::_AddressModel_default_instance_);
}
inline const ::organization::AddressModel& Counterparty::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.Counterparty.address)
  return _internal_address();
}
inline void Counterparty::unsafe_arena_set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.Counterparty.address)
}
inline ::organization::AddressModel* Counterparty::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::organization::AddressModel* released = _impl_.address_;
  _impl_.address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::AddressModel* Counterparty::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.Counterparty.address)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::organization::AddressModel* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::organization::AddressModel* Counterparty::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::AddressModel>(GetArena());
    _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(p);
  }
  return _impl_.address_;
}
inline ::organization::AddressModel* Counterparty::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::organization::AddressModel* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:organization.Counterparty.address)
  return _msg;
}
inline void Counterparty::set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.Counterparty.address)
}

// optional .organization.Relationship relationship = 5;
inline bool Counterparty::has_relationship() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.relationship_ != nullptr);
  return value;
}
inline void Counterparty::clear_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_ != nullptr) _impl_.relationship_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::organization::Relationship& Counterparty::_internal_relationship() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Relationship* p = _impl_.relationship_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Relationship&>(::organization::_Relationship_default_instance_);
}
inline const ::organization::Relationship& Counterparty::relationship() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.Counterparty.relationship)
  return _internal_relationship();
}
inline void Counterparty::unsafe_arena_set_allocated_relationship(::organization::Relationship* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.relationship_);
  }
  _impl_.relationship_ = reinterpret_cast<::organization::Relationship*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.Counterparty.relationship)
}
inline ::organization::Relationship* Counterparty::release_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::organization::Relationship* released = _impl_.relationship_;
  _impl_.relationship_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Relationship* Counterparty::unsafe_arena_release_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.Counterparty.relationship)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::organization::Relationship* temp = _impl_.relationship_;
  _impl_.relationship_ = nullptr;
  return temp;
}
inline ::organization::Relationship* Counterparty::_internal_mutable_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Relationship>(GetArena());
    _impl_.relationship_ = reinterpret_cast<::organization::Relationship*>(p);
  }
  return _impl_.relationship_;
}
inline ::organization::Relationship* Counterparty::mutable_relationship() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::organization::Relationship* _msg = _internal_mutable_relationship();
  // @@protoc_insertion_point(field_mutable:organization.Counterparty.relationship)
  return _msg;
}
inline void Counterparty::set_allocated_relationship(::organization::Relationship* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.relationship_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.relationship_ = reinterpret_cast<::organization::Relationship*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.Counterparty.relationship)
}

// repeated .organization.ContactModel contacts = 6;
inline int Counterparty::_internal_contacts_size() const {
  return _internal_contacts().size();
}
inline int Counterparty::contacts_size() const {
  return _internal_contacts_size();
}
inline void Counterparty::clear_contacts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contacts_.Clear();
}
inline ::organization::ContactModel* Counterparty::mutable_contacts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:organization.Counterparty.contacts)
  return _internal_mutable_contacts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::organization::ContactModel>* Counterparty::mutable_contacts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:organization.Counterparty.contacts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_contacts();
}
inline const ::organization::ContactModel& Counterparty::contacts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.Counterparty.contacts)
  return _internal_contacts().Get(index);
}
inline ::organization::ContactModel* Counterparty::add_contacts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::organization::ContactModel* _add = _internal_mutable_contacts()->Add();
  // @@protoc_insertion_point(field_add:organization.Counterparty.contacts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::organization::ContactModel>& Counterparty::contacts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:organization.Counterparty.contacts)
  return _internal_contacts();
}
inline const ::google::protobuf::RepeatedPtrField<::organization::ContactModel>&
Counterparty::_internal_contacts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contacts_;
}
inline ::google::protobuf::RepeatedPtrField<::organization::ContactModel>*
Counterparty::_internal_mutable_contacts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.contacts_;
}

// -------------------------------------------------------------------

// Organization

// optional int64 id = 1;
inline bool Organization::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void Organization::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::int64_t Organization::id() const {
  // @@protoc_insertion_point(field_get:organization.Organization.id)
  return _internal_id();
}
inline void Organization::set_id(::int64_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:organization.Organization.id)
}
inline ::int64_t Organization::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Organization::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// optional string name = 2;
inline bool Organization::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Organization::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Organization::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.Organization.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Organization::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.Organization.name)
}
inline std::string* Organization::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:organization.Organization.name)
  return _s;
}
inline const std::string& Organization::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Organization::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Organization::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Organization::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.Organization.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void Organization::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.Organization.name)
}

// optional string image_url = 3;
inline bool Organization::has_image_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Organization::clear_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Organization::image_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.Organization.image_url)
  return _internal_image_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Organization::set_image_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.image_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.Organization.image_url)
}
inline std::string* Organization::mutable_image_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_image_url();
  // @@protoc_insertion_point(field_mutable:organization.Organization.image_url)
  return _s;
}
inline const std::string& Organization::_internal_image_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.image_url_.Get();
}
inline void Organization::_internal_set_image_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.image_url_.Set(value, GetArena());
}
inline std::string* Organization::_internal_mutable_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.image_url_.Mutable( GetArena());
}
inline std::string* Organization::release_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.Organization.image_url)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.image_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.image_url_.Set("", GetArena());
  }
  return released;
}
inline void Organization::set_allocated_image_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.image_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.image_url_.IsDefault()) {
    _impl_.image_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.Organization.image_url)
}

// optional string type = 4;
inline bool Organization::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Organization::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& Organization::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.Organization.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Organization::set_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.Organization.type)
}
inline std::string* Organization::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:organization.Organization.type)
  return _s;
}
inline const std::string& Organization::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void Organization::_internal_set_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.type_.Set(value, GetArena());
}
inline std::string* Organization::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* Organization::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.Organization.type)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.type_.Set("", GetArena());
  }
  return released;
}
inline void Organization::set_allocated_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.Organization.type)
}

// optional string legal_name = 5;
inline bool Organization::has_legal_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Organization::clear_legal_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legal_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& Organization::legal_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.Organization.legal_name)
  return _internal_legal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Organization::set_legal_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.legal_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.Organization.legal_name)
}
inline std::string* Organization::mutable_legal_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_legal_name();
  // @@protoc_insertion_point(field_mutable:organization.Organization.legal_name)
  return _s;
}
inline const std::string& Organization::_internal_legal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legal_name_.Get();
}
inline void Organization::_internal_set_legal_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.legal_name_.Set(value, GetArena());
}
inline std::string* Organization::_internal_mutable_legal_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.legal_name_.Mutable( GetArena());
}
inline std::string* Organization::release_legal_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.Organization.legal_name)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.legal_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.legal_name_.Set("", GetArena());
  }
  return released;
}
inline void Organization::set_allocated_legal_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.legal_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.legal_name_.IsDefault()) {
    _impl_.legal_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.Organization.legal_name)
}

// optional string bin = 6;
inline bool Organization::has_bin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Organization::clear_bin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bin_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& Organization::bin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.Organization.bin)
  return _internal_bin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Organization::set_bin(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.bin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.Organization.bin)
}
inline std::string* Organization::mutable_bin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bin();
  // @@protoc_insertion_point(field_mutable:organization.Organization.bin)
  return _s;
}
inline const std::string& Organization::_internal_bin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bin_.Get();
}
inline void Organization::_internal_set_bin(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.bin_.Set(value, GetArena());
}
inline std::string* Organization::_internal_mutable_bin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.bin_.Mutable( GetArena());
}
inline std::string* Organization::release_bin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.Organization.bin)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.bin_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.bin_.Set("", GetArena());
  }
  return released;
}
inline void Organization::set_allocated_bin(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.bin_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.bin_.IsDefault()) {
    _impl_.bin_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.Organization.bin)
}

// optional string phone_number = 7;
inline bool Organization::has_phone_number() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Organization::clear_phone_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phone_number_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& Organization::phone_number() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.Organization.phone_number)
  return _internal_phone_number();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Organization::set_phone_number(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.phone_number_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.Organization.phone_number)
}
inline std::string* Organization::mutable_phone_number() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_phone_number();
  // @@protoc_insertion_point(field_mutable:organization.Organization.phone_number)
  return _s;
}
inline const std::string& Organization::_internal_phone_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.phone_number_.Get();
}
inline void Organization::_internal_set_phone_number(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.phone_number_.Set(value, GetArena());
}
inline std::string* Organization::_internal_mutable_phone_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.phone_number_.Mutable( GetArena());
}
inline std::string* Organization::release_phone_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.Organization.phone_number)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.phone_number_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.phone_number_.Set("", GetArena());
  }
  return released;
}
inline void Organization::set_allocated_phone_number(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.phone_number_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.phone_number_.IsDefault()) {
    _impl_.phone_number_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.Organization.phone_number)
}

// optional string email = 8;
inline bool Organization::has_email() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Organization::clear_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.email_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const std::string& Organization::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.Organization.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Organization::set_email(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.Organization.email)
}
inline std::string* Organization::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:organization.Organization.email)
  return _s;
}
inline const std::string& Organization::_internal_email() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.email_.Get();
}
inline void Organization::_internal_set_email(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.email_.Set(value, GetArena());
}
inline std::string* Organization::_internal_mutable_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* Organization::release_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.Organization.email)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  auto* released = _impl_.email_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.email_.Set("", GetArena());
  }
  return released;
}
inline void Organization::set_allocated_email(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.email_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.email_.IsDefault()) {
    _impl_.email_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.Organization.email)
}

// optional .organization.AddressModel address = 9;
inline bool Organization::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline void Organization::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ != nullptr) _impl_.address_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const ::organization::AddressModel& Organization::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::AddressModel* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::AddressModel&>(::organization::_AddressModel_default_instance_);
}
inline const ::organization::AddressModel& Organization::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.Organization.address)
  return _internal_address();
}
inline void Organization::unsafe_arena_set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.Organization.address)
}
inline ::organization::AddressModel* Organization::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::organization::AddressModel* released = _impl_.address_;
  _impl_.address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::AddressModel* Organization::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.Organization.address)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::organization::AddressModel* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::organization::AddressModel* Organization::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::AddressModel>(GetArena());
    _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(p);
  }
  return _impl_.address_;
}
inline ::organization::AddressModel* Organization::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100u;
  ::organization::AddressModel* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:organization.Organization.address)
  return _msg;
}
inline void Organization::set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.Organization.address)
}

// optional string legal_address = 10;
inline bool Organization::has_legal_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void Organization::clear_legal_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legal_address_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const std::string& Organization::legal_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.Organization.legal_address)
  return _internal_legal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Organization::set_legal_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.legal_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.Organization.legal_address)
}
inline std::string* Organization::mutable_legal_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_legal_address();
  // @@protoc_insertion_point(field_mutable:organization.Organization.legal_address)
  return _s;
}
inline const std::string& Organization::_internal_legal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legal_address_.Get();
}
inline void Organization::_internal_set_legal_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.legal_address_.Set(value, GetArena());
}
inline std::string* Organization::_internal_mutable_legal_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  return _impl_.legal_address_.Mutable( GetArena());
}
inline std::string* Organization::release_legal_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.Organization.legal_address)
  if ((_impl_._has_bits_[0] & 0x00000080u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000080u;
  auto* released = _impl_.legal_address_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.legal_address_.Set("", GetArena());
  }
  return released;
}
inline void Organization::set_allocated_legal_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  _impl_.legal_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.legal_address_.IsDefault()) {
    _impl_.legal_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.Organization.legal_address)
}

// repeated .organization.ImageModel images = 11;
inline int Organization::_internal_images_size() const {
  return _internal_images().size();
}
inline int Organization::images_size() const {
  return _internal_images_size();
}
inline void Organization::clear_images() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.images_.Clear();
}
inline ::organization::ImageModel* Organization::mutable_images(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:organization.Organization.images)
  return _internal_mutable_images()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::organization::ImageModel>* Organization::mutable_images()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:organization.Organization.images)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_images();
}
inline const ::organization::ImageModel& Organization::images(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.Organization.images)
  return _internal_images().Get(index);
}
inline ::organization::ImageModel* Organization::add_images() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::organization::ImageModel* _add = _internal_mutable_images()->Add();
  // @@protoc_insertion_point(field_add:organization.Organization.images)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::organization::ImageModel>& Organization::images() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:organization.Organization.images)
  return _internal_images();
}
inline const ::google::protobuf::RepeatedPtrField<::organization::ImageModel>&
Organization::_internal_images() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.images_;
}
inline ::google::protobuf::RepeatedPtrField<::organization::ImageModel>*
Organization::_internal_mutable_images() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.images_;
}

// repeated .organization.ContactModel contacts = 12;
inline int Organization::_internal_contacts_size() const {
  return _internal_contacts().size();
}
inline int Organization::contacts_size() const {
  return _internal_contacts_size();
}
inline void Organization::clear_contacts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contacts_.Clear();
}
inline ::organization::ContactModel* Organization::mutable_contacts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:organization.Organization.contacts)
  return _internal_mutable_contacts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::organization::ContactModel>* Organization::mutable_contacts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:organization.Organization.contacts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_contacts();
}
inline const ::organization::ContactModel& Organization::contacts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.Organization.contacts)
  return _internal_contacts().Get(index);
}
inline ::organization::ContactModel* Organization::add_contacts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::organization::ContactModel* _add = _internal_mutable_contacts()->Add();
  // @@protoc_insertion_point(field_add:organization.Organization.contacts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::organization::ContactModel>& Organization::contacts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:organization.Organization.contacts)
  return _internal_contacts();
}
inline const ::google::protobuf::RepeatedPtrField<::organization::ContactModel>&
Organization::_internal_contacts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contacts_;
}
inline ::google::protobuf::RepeatedPtrField<::organization::ContactModel>*
Organization::_internal_mutable_contacts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.contacts_;
}

// -------------------------------------------------------------------

// OrganizationModel

// optional int64 id = 1;
inline bool OrganizationModel::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void OrganizationModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int64_t OrganizationModel::id() const {
  // @@protoc_insertion_point(field_get:organization.OrganizationModel.id)
  return _internal_id();
}
inline void OrganizationModel::set_id(::int64_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:organization.OrganizationModel.id)
}
inline ::int64_t OrganizationModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void OrganizationModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// optional string name = 2;
inline bool OrganizationModel::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OrganizationModel::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& OrganizationModel::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.OrganizationModel.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrganizationModel::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.OrganizationModel.name)
}
inline std::string* OrganizationModel::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:organization.OrganizationModel.name)
  return _s;
}
inline const std::string& OrganizationModel::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void OrganizationModel::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* OrganizationModel::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* OrganizationModel::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.OrganizationModel.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void OrganizationModel::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.OrganizationModel.name)
}

// optional string image_url = 3;
inline bool OrganizationModel::has_image_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void OrganizationModel::clear_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& OrganizationModel::image_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.OrganizationModel.image_url)
  return _internal_image_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrganizationModel::set_image_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.image_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.OrganizationModel.image_url)
}
inline std::string* OrganizationModel::mutable_image_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_image_url();
  // @@protoc_insertion_point(field_mutable:organization.OrganizationModel.image_url)
  return _s;
}
inline const std::string& OrganizationModel::_internal_image_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.image_url_.Get();
}
inline void OrganizationModel::_internal_set_image_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.image_url_.Set(value, GetArena());
}
inline std::string* OrganizationModel::_internal_mutable_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.image_url_.Mutable( GetArena());
}
inline std::string* OrganizationModel::release_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.OrganizationModel.image_url)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.image_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.image_url_.Set("", GetArena());
  }
  return released;
}
inline void OrganizationModel::set_allocated_image_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.image_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.image_url_.IsDefault()) {
    _impl_.image_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.OrganizationModel.image_url)
}

// string type = 4;
inline void OrganizationModel::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& OrganizationModel::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.OrganizationModel.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrganizationModel::set_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.OrganizationModel.type)
}
inline std::string* OrganizationModel::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:organization.OrganizationModel.type)
  return _s;
}
inline const std::string& OrganizationModel::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void OrganizationModel::_internal_set_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(value, GetArena());
}
inline std::string* OrganizationModel::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* OrganizationModel::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.OrganizationModel.type)
  return _impl_.type_.Release();
}
inline void OrganizationModel::set_allocated_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.OrganizationModel.type)
}

// optional string legal_name = 5;
inline bool OrganizationModel::has_legal_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void OrganizationModel::clear_legal_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legal_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& OrganizationModel::legal_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.OrganizationModel.legal_name)
  return _internal_legal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrganizationModel::set_legal_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.legal_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.OrganizationModel.legal_name)
}
inline std::string* OrganizationModel::mutable_legal_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_legal_name();
  // @@protoc_insertion_point(field_mutable:organization.OrganizationModel.legal_name)
  return _s;
}
inline const std::string& OrganizationModel::_internal_legal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legal_name_.Get();
}
inline void OrganizationModel::_internal_set_legal_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.legal_name_.Set(value, GetArena());
}
inline std::string* OrganizationModel::_internal_mutable_legal_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.legal_name_.Mutable( GetArena());
}
inline std::string* OrganizationModel::release_legal_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.OrganizationModel.legal_name)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.legal_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.legal_name_.Set("", GetArena());
  }
  return released;
}
inline void OrganizationModel::set_allocated_legal_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.legal_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.legal_name_.IsDefault()) {
    _impl_.legal_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.OrganizationModel.legal_name)
}

// optional string bin = 6;
inline bool OrganizationModel::has_bin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void OrganizationModel::clear_bin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bin_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& OrganizationModel::bin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.OrganizationModel.bin)
  return _internal_bin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrganizationModel::set_bin(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.bin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.OrganizationModel.bin)
}
inline std::string* OrganizationModel::mutable_bin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bin();
  // @@protoc_insertion_point(field_mutable:organization.OrganizationModel.bin)
  return _s;
}
inline const std::string& OrganizationModel::_internal_bin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bin_.Get();
}
inline void OrganizationModel::_internal_set_bin(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.bin_.Set(value, GetArena());
}
inline std::string* OrganizationModel::_internal_mutable_bin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.bin_.Mutable( GetArena());
}
inline std::string* OrganizationModel::release_bin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.OrganizationModel.bin)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.bin_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.bin_.Set("", GetArena());
  }
  return released;
}
inline void OrganizationModel::set_allocated_bin(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.bin_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.bin_.IsDefault()) {
    _impl_.bin_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.OrganizationModel.bin)
}

// optional string phone_number = 7;
inline bool OrganizationModel::has_phone_number() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void OrganizationModel::clear_phone_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phone_number_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& OrganizationModel::phone_number() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.OrganizationModel.phone_number)
  return _internal_phone_number();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrganizationModel::set_phone_number(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.phone_number_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.OrganizationModel.phone_number)
}
inline std::string* OrganizationModel::mutable_phone_number() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_phone_number();
  // @@protoc_insertion_point(field_mutable:organization.OrganizationModel.phone_number)
  return _s;
}
inline const std::string& OrganizationModel::_internal_phone_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.phone_number_.Get();
}
inline void OrganizationModel::_internal_set_phone_number(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.phone_number_.Set(value, GetArena());
}
inline std::string* OrganizationModel::_internal_mutable_phone_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.phone_number_.Mutable( GetArena());
}
inline std::string* OrganizationModel::release_phone_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.OrganizationModel.phone_number)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.phone_number_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.phone_number_.Set("", GetArena());
  }
  return released;
}
inline void OrganizationModel::set_allocated_phone_number(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.phone_number_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.phone_number_.IsDefault()) {
    _impl_.phone_number_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.OrganizationModel.phone_number)
}

// optional string email = 8;
inline bool OrganizationModel::has_email() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void OrganizationModel::clear_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.email_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& OrganizationModel::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.OrganizationModel.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrganizationModel::set_email(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.OrganizationModel.email)
}
inline std::string* OrganizationModel::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:organization.OrganizationModel.email)
  return _s;
}
inline const std::string& OrganizationModel::_internal_email() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.email_.Get();
}
inline void OrganizationModel::_internal_set_email(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.email_.Set(value, GetArena());
}
inline std::string* OrganizationModel::_internal_mutable_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* OrganizationModel::release_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.OrganizationModel.email)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.email_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.email_.Set("", GetArena());
  }
  return released;
}
inline void OrganizationModel::set_allocated_email(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.email_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.email_.IsDefault()) {
    _impl_.email_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.OrganizationModel.email)
}

// optional int64 address_id = 9;
inline bool OrganizationModel::has_address_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void OrganizationModel::clear_address_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int64_t OrganizationModel::address_id() const {
  // @@protoc_insertion_point(field_get:organization.OrganizationModel.address_id)
  return _internal_address_id();
}
inline void OrganizationModel::set_address_id(::int64_t value) {
  _internal_set_address_id(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:organization.OrganizationModel.address_id)
}
inline ::int64_t OrganizationModel::_internal_address_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_id_;
}
inline void OrganizationModel::_internal_set_address_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_id_ = value;
}

// optional string legal_address = 10;
inline bool OrganizationModel::has_legal_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void OrganizationModel::clear_legal_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legal_address_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const std::string& OrganizationModel::legal_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.OrganizationModel.legal_address)
  return _internal_legal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrganizationModel::set_legal_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.legal_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.OrganizationModel.legal_address)
}
inline std::string* OrganizationModel::mutable_legal_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_legal_address();
  // @@protoc_insertion_point(field_mutable:organization.OrganizationModel.legal_address)
  return _s;
}
inline const std::string& OrganizationModel::_internal_legal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legal_address_.Get();
}
inline void OrganizationModel::_internal_set_legal_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.legal_address_.Set(value, GetArena());
}
inline std::string* OrganizationModel::_internal_mutable_legal_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.legal_address_.Mutable( GetArena());
}
inline std::string* OrganizationModel::release_legal_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.OrganizationModel.legal_address)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  auto* released = _impl_.legal_address_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.legal_address_.Set("", GetArena());
  }
  return released;
}
inline void OrganizationModel::set_allocated_legal_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.legal_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.legal_address_.IsDefault()) {
    _impl_.legal_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.OrganizationModel.legal_address)
}

// string created_at = 11;
inline void OrganizationModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& OrganizationModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.OrganizationModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrganizationModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.OrganizationModel.created_at)
}
inline std::string* OrganizationModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:organization.OrganizationModel.created_at)
  return _s;
}
inline const std::string& OrganizationModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void OrganizationModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* OrganizationModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* OrganizationModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.OrganizationModel.created_at)
  return _impl_.created_at_.Release();
}
inline void OrganizationModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.OrganizationModel.created_at)
}

// string updated_at = 12;
inline void OrganizationModel::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
}
inline const std::string& OrganizationModel::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.OrganizationModel.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrganizationModel::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.OrganizationModel.updated_at)
}
inline std::string* OrganizationModel::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:organization.OrganizationModel.updated_at)
  return _s;
}
inline const std::string& OrganizationModel::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void OrganizationModel::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* OrganizationModel::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* OrganizationModel::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.OrganizationModel.updated_at)
  return _impl_.updated_at_.Release();
}
inline void OrganizationModel::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_at_.IsDefault()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.OrganizationModel.updated_at)
}

// -------------------------------------------------------------------

// BankAccountModel

// int64 id = 1;
inline void BankAccountModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t BankAccountModel::id() const {
  // @@protoc_insertion_point(field_get:organization.BankAccountModel.id)
  return _internal_id();
}
inline void BankAccountModel::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:organization.BankAccountModel.id)
}
inline ::int64_t BankAccountModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void BankAccountModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 organization_id = 2;
inline void BankAccountModel::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t BankAccountModel::organization_id() const {
  // @@protoc_insertion_point(field_get:organization.BankAccountModel.organization_id)
  return _internal_organization_id();
}
inline void BankAccountModel::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:organization.BankAccountModel.organization_id)
}
inline ::int64_t BankAccountModel::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void BankAccountModel::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// string account_number = 3;
inline void BankAccountModel::clear_account_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_number_.ClearToEmpty();
}
inline const std::string& BankAccountModel::account_number() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.BankAccountModel.account_number)
  return _internal_account_number();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BankAccountModel::set_account_number(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_number_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.BankAccountModel.account_number)
}
inline std::string* BankAccountModel::mutable_account_number() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account_number();
  // @@protoc_insertion_point(field_mutable:organization.BankAccountModel.account_number)
  return _s;
}
inline const std::string& BankAccountModel::_internal_account_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_number_.Get();
}
inline void BankAccountModel::_internal_set_account_number(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_number_.Set(value, GetArena());
}
inline std::string* BankAccountModel::_internal_mutable_account_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_number_.Mutable( GetArena());
}
inline std::string* BankAccountModel::release_account_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.BankAccountModel.account_number)
  return _impl_.account_number_.Release();
}
inline void BankAccountModel::set_allocated_account_number(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_number_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.account_number_.IsDefault()) {
    _impl_.account_number_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.BankAccountModel.account_number)
}

// optional string bank_name = 4;
inline bool BankAccountModel::has_bank_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BankAccountModel::clear_bank_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bank_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& BankAccountModel::bank_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.BankAccountModel.bank_name)
  return _internal_bank_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BankAccountModel::set_bank_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.bank_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.BankAccountModel.bank_name)
}
inline std::string* BankAccountModel::mutable_bank_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bank_name();
  // @@protoc_insertion_point(field_mutable:organization.BankAccountModel.bank_name)
  return _s;
}
inline const std::string& BankAccountModel::_internal_bank_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bank_name_.Get();
}
inline void BankAccountModel::_internal_set_bank_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.bank_name_.Set(value, GetArena());
}
inline std::string* BankAccountModel::_internal_mutable_bank_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.bank_name_.Mutable( GetArena());
}
inline std::string* BankAccountModel::release_bank_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.BankAccountModel.bank_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.bank_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.bank_name_.Set("", GetArena());
  }
  return released;
}
inline void BankAccountModel::set_allocated_bank_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.bank_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.bank_name_.IsDefault()) {
    _impl_.bank_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.BankAccountModel.bank_name)
}

// string bic = 5;
inline void BankAccountModel::clear_bic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bic_.ClearToEmpty();
}
inline const std::string& BankAccountModel::bic() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.BankAccountModel.bic)
  return _internal_bic();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BankAccountModel::set_bic(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bic_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.BankAccountModel.bic)
}
inline std::string* BankAccountModel::mutable_bic() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bic();
  // @@protoc_insertion_point(field_mutable:organization.BankAccountModel.bic)
  return _s;
}
inline const std::string& BankAccountModel::_internal_bic() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bic_.Get();
}
inline void BankAccountModel::_internal_set_bic(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bic_.Set(value, GetArena());
}
inline std::string* BankAccountModel::_internal_mutable_bic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bic_.Mutable( GetArena());
}
inline std::string* BankAccountModel::release_bic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.BankAccountModel.bic)
  return _impl_.bic_.Release();
}
inline void BankAccountModel::set_allocated_bic(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bic_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.bic_.IsDefault()) {
    _impl_.bic_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.BankAccountModel.bic)
}

// optional int64 kbe = 6;
inline bool BankAccountModel::has_kbe() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BankAccountModel::clear_kbe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kbe_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t BankAccountModel::kbe() const {
  // @@protoc_insertion_point(field_get:organization.BankAccountModel.kbe)
  return _internal_kbe();
}
inline void BankAccountModel::set_kbe(::int64_t value) {
  _internal_set_kbe(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:organization.BankAccountModel.kbe)
}
inline ::int64_t BankAccountModel::_internal_kbe() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kbe_;
}
inline void BankAccountModel::_internal_set_kbe(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kbe_ = value;
}

// optional bool is_default = 7;
inline bool BankAccountModel::has_is_default() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void BankAccountModel::clear_is_default() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_default_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool BankAccountModel::is_default() const {
  // @@protoc_insertion_point(field_get:organization.BankAccountModel.is_default)
  return _internal_is_default();
}
inline void BankAccountModel::set_is_default(bool value) {
  _internal_set_is_default(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:organization.BankAccountModel.is_default)
}
inline bool BankAccountModel::_internal_is_default() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_default_;
}
inline void BankAccountModel::_internal_set_is_default(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_default_ = value;
}

// string created_at = 8;
inline void BankAccountModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& BankAccountModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.BankAccountModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BankAccountModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.BankAccountModel.created_at)
}
inline std::string* BankAccountModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:organization.BankAccountModel.created_at)
  return _s;
}
inline const std::string& BankAccountModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void BankAccountModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* BankAccountModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* BankAccountModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.BankAccountModel.created_at)
  return _impl_.created_at_.Release();
}
inline void BankAccountModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.BankAccountModel.created_at)
}

// string updated_at = 9;
inline void BankAccountModel::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
}
inline const std::string& BankAccountModel::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.BankAccountModel.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BankAccountModel::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.BankAccountModel.updated_at)
}
inline std::string* BankAccountModel::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:organization.BankAccountModel.updated_at)
  return _s;
}
inline const std::string& BankAccountModel::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void BankAccountModel::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* BankAccountModel::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* BankAccountModel::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.BankAccountModel.updated_at)
  return _impl_.updated_at_.Release();
}
inline void BankAccountModel::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_at_.IsDefault()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.BankAccountModel.updated_at)
}

// -------------------------------------------------------------------

// RelationshipTypeModel

// optional int64 id = 1;
inline bool RelationshipTypeModel::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void RelationshipTypeModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t RelationshipTypeModel::id() const {
  // @@protoc_insertion_point(field_get:organization.RelationshipTypeModel.id)
  return _internal_id();
}
inline void RelationshipTypeModel::set_id(::int64_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:organization.RelationshipTypeModel.id)
}
inline ::int64_t RelationshipTypeModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void RelationshipTypeModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// optional int64 owning_organization_id = 2;
inline bool RelationshipTypeModel::has_owning_organization_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void RelationshipTypeModel::clear_owning_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owning_organization_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t RelationshipTypeModel::owning_organization_id() const {
  // @@protoc_insertion_point(field_get:organization.RelationshipTypeModel.owning_organization_id)
  return _internal_owning_organization_id();
}
inline void RelationshipTypeModel::set_owning_organization_id(::int64_t value) {
  _internal_set_owning_organization_id(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:organization.RelationshipTypeModel.owning_organization_id)
}
inline ::int64_t RelationshipTypeModel::_internal_owning_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.owning_organization_id_;
}
inline void RelationshipTypeModel::_internal_set_owning_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owning_organization_id_ = value;
}

// optional string type_name = 3;
inline bool RelationshipTypeModel::has_type_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void RelationshipTypeModel::clear_type_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& RelationshipTypeModel::type_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.RelationshipTypeModel.type_name)
  return _internal_type_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RelationshipTypeModel::set_type_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.RelationshipTypeModel.type_name)
}
inline std::string* RelationshipTypeModel::mutable_type_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type_name();
  // @@protoc_insertion_point(field_mutable:organization.RelationshipTypeModel.type_name)
  return _s;
}
inline const std::string& RelationshipTypeModel::_internal_type_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_name_.Get();
}
inline void RelationshipTypeModel::_internal_set_type_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_name_.Set(value, GetArena());
}
inline std::string* RelationshipTypeModel::_internal_mutable_type_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.type_name_.Mutable( GetArena());
}
inline std::string* RelationshipTypeModel::release_type_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.RelationshipTypeModel.type_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.type_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.type_name_.Set("", GetArena());
  }
  return released;
}
inline void RelationshipTypeModel::set_allocated_type_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.type_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_name_.IsDefault()) {
    _impl_.type_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.RelationshipTypeModel.type_name)
}

// optional string description = 4;
inline bool RelationshipTypeModel::has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void RelationshipTypeModel::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& RelationshipTypeModel::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.RelationshipTypeModel.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RelationshipTypeModel::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.RelationshipTypeModel.description)
}
inline std::string* RelationshipTypeModel::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:organization.RelationshipTypeModel.description)
  return _s;
}
inline const std::string& RelationshipTypeModel::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void RelationshipTypeModel::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(value, GetArena());
}
inline std::string* RelationshipTypeModel::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* RelationshipTypeModel::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.RelationshipTypeModel.description)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void RelationshipTypeModel::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.RelationshipTypeModel.description)
}

// optional string created_at = 5;
inline bool RelationshipTypeModel::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void RelationshipTypeModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& RelationshipTypeModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.RelationshipTypeModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RelationshipTypeModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.RelationshipTypeModel.created_at)
}
inline std::string* RelationshipTypeModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:organization.RelationshipTypeModel.created_at)
  return _s;
}
inline const std::string& RelationshipTypeModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void RelationshipTypeModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* RelationshipTypeModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* RelationshipTypeModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.RelationshipTypeModel.created_at)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.created_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.created_at_.Set("", GetArena());
  }
  return released;
}
inline void RelationshipTypeModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.RelationshipTypeModel.created_at)
}

// optional string updated_at = 6;
inline bool RelationshipTypeModel::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void RelationshipTypeModel::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& RelationshipTypeModel::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.RelationshipTypeModel.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RelationshipTypeModel::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.RelationshipTypeModel.updated_at)
}
inline std::string* RelationshipTypeModel::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:organization.RelationshipTypeModel.updated_at)
  return _s;
}
inline const std::string& RelationshipTypeModel::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void RelationshipTypeModel::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* RelationshipTypeModel::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* RelationshipTypeModel::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.RelationshipTypeModel.updated_at)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.updated_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  return released;
}
inline void RelationshipTypeModel::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_at_.IsDefault()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.RelationshipTypeModel.updated_at)
}

// -------------------------------------------------------------------

// RelationshipModel

// optional int64 id = 1;
inline bool RelationshipModel::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void RelationshipModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t RelationshipModel::id() const {
  // @@protoc_insertion_point(field_get:organization.RelationshipModel.id)
  return _internal_id();
}
inline void RelationshipModel::set_id(::int64_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:organization.RelationshipModel.id)
}
inline ::int64_t RelationshipModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void RelationshipModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// optional int64 source_organization_id = 2;
inline bool RelationshipModel::has_source_organization_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void RelationshipModel::clear_source_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_organization_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t RelationshipModel::source_organization_id() const {
  // @@protoc_insertion_point(field_get:organization.RelationshipModel.source_organization_id)
  return _internal_source_organization_id();
}
inline void RelationshipModel::set_source_organization_id(::int64_t value) {
  _internal_set_source_organization_id(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:organization.RelationshipModel.source_organization_id)
}
inline ::int64_t RelationshipModel::_internal_source_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_organization_id_;
}
inline void RelationshipModel::_internal_set_source_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_organization_id_ = value;
}

// optional int64 target_organization_id = 3;
inline bool RelationshipModel::has_target_organization_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void RelationshipModel::clear_target_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_organization_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t RelationshipModel::target_organization_id() const {
  // @@protoc_insertion_point(field_get:organization.RelationshipModel.target_organization_id)
  return _internal_target_organization_id();
}
inline void RelationshipModel::set_target_organization_id(::int64_t value) {
  _internal_set_target_organization_id(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:organization.RelationshipModel.target_organization_id)
}
inline ::int64_t RelationshipModel::_internal_target_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_organization_id_;
}
inline void RelationshipModel::_internal_set_target_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_organization_id_ = value;
}

// optional int64 relationship_type_id = 4;
inline bool RelationshipModel::has_relationship_type_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void RelationshipModel::clear_relationship_type_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relationship_type_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t RelationshipModel::relationship_type_id() const {
  // @@protoc_insertion_point(field_get:organization.RelationshipModel.relationship_type_id)
  return _internal_relationship_type_id();
}
inline void RelationshipModel::set_relationship_type_id(::int64_t value) {
  _internal_set_relationship_type_id(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:organization.RelationshipModel.relationship_type_id)
}
inline ::int64_t RelationshipModel::_internal_relationship_type_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.relationship_type_id_;
}
inline void RelationshipModel::_internal_set_relationship_type_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relationship_type_id_ = value;
}

// optional string created_at = 5;
inline bool RelationshipModel::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void RelationshipModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& RelationshipModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.RelationshipModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RelationshipModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.RelationshipModel.created_at)
}
inline std::string* RelationshipModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:organization.RelationshipModel.created_at)
  return _s;
}
inline const std::string& RelationshipModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void RelationshipModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* RelationshipModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* RelationshipModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.RelationshipModel.created_at)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.created_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.created_at_.Set("", GetArena());
  }
  return released;
}
inline void RelationshipModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.RelationshipModel.created_at)
}

// optional string updated_at = 6;
inline bool RelationshipModel::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void RelationshipModel::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& RelationshipModel::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.RelationshipModel.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RelationshipModel::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.RelationshipModel.updated_at)
}
inline std::string* RelationshipModel::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:organization.RelationshipModel.updated_at)
  return _s;
}
inline const std::string& RelationshipModel::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void RelationshipModel::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* RelationshipModel::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* RelationshipModel::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.RelationshipModel.updated_at)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.updated_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  return released;
}
inline void RelationshipModel::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_at_.IsDefault()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.RelationshipModel.updated_at)
}

// -------------------------------------------------------------------

// Relationship

// optional int64 id = 1;
inline bool Relationship::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Relationship::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t Relationship::id() const {
  // @@protoc_insertion_point(field_get:organization.Relationship.id)
  return _internal_id();
}
inline void Relationship::set_id(::int64_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:organization.Relationship.id)
}
inline ::int64_t Relationship::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Relationship::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// optional int64 source_organization_id = 2;
inline bool Relationship::has_source_organization_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Relationship::clear_source_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_organization_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t Relationship::source_organization_id() const {
  // @@protoc_insertion_point(field_get:organization.Relationship.source_organization_id)
  return _internal_source_organization_id();
}
inline void Relationship::set_source_organization_id(::int64_t value) {
  _internal_set_source_organization_id(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:organization.Relationship.source_organization_id)
}
inline ::int64_t Relationship::_internal_source_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_organization_id_;
}
inline void Relationship::_internal_set_source_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_organization_id_ = value;
}

// optional int64 target_organization_id = 3;
inline bool Relationship::has_target_organization_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Relationship::clear_target_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_organization_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t Relationship::target_organization_id() const {
  // @@protoc_insertion_point(field_get:organization.Relationship.target_organization_id)
  return _internal_target_organization_id();
}
inline void Relationship::set_target_organization_id(::int64_t value) {
  _internal_set_target_organization_id(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:organization.Relationship.target_organization_id)
}
inline ::int64_t Relationship::_internal_target_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_organization_id_;
}
inline void Relationship::_internal_set_target_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_organization_id_ = value;
}

// .organization.RelationshipTypeModel relationship_type = 4;
inline bool Relationship::has_relationship_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.relationship_type_ != nullptr);
  return value;
}
inline void Relationship::clear_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_type_ != nullptr) _impl_.relationship_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::RelationshipTypeModel& Relationship::_internal_relationship_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::RelationshipTypeModel* p = _impl_.relationship_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::RelationshipTypeModel&>(::organization::_RelationshipTypeModel_default_instance_);
}
inline const ::organization::RelationshipTypeModel& Relationship::relationship_type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.Relationship.relationship_type)
  return _internal_relationship_type();
}
inline void Relationship::unsafe_arena_set_allocated_relationship_type(::organization::RelationshipTypeModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.relationship_type_);
  }
  _impl_.relationship_type_ = reinterpret_cast<::organization::RelationshipTypeModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.Relationship.relationship_type)
}
inline ::organization::RelationshipTypeModel* Relationship::release_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipTypeModel* released = _impl_.relationship_type_;
  _impl_.relationship_type_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::RelationshipTypeModel* Relationship::unsafe_arena_release_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.Relationship.relationship_type)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipTypeModel* temp = _impl_.relationship_type_;
  _impl_.relationship_type_ = nullptr;
  return temp;
}
inline ::organization::RelationshipTypeModel* Relationship::_internal_mutable_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_type_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::RelationshipTypeModel>(GetArena());
    _impl_.relationship_type_ = reinterpret_cast<::organization::RelationshipTypeModel*>(p);
  }
  return _impl_.relationship_type_;
}
inline ::organization::RelationshipTypeModel* Relationship::mutable_relationship_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::RelationshipTypeModel* _msg = _internal_mutable_relationship_type();
  // @@protoc_insertion_point(field_mutable:organization.Relationship.relationship_type)
  return _msg;
}
inline void Relationship::set_allocated_relationship_type(::organization::RelationshipTypeModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.relationship_type_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.relationship_type_ = reinterpret_cast<::organization::RelationshipTypeModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.Relationship.relationship_type)
}

// -------------------------------------------------------------------

// ContactModel

// optional int64 contact_id = 1;
inline bool ContactModel::has_contact_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void ContactModel::clear_contact_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contact_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int64_t ContactModel::contact_id() const {
  // @@protoc_insertion_point(field_get:organization.ContactModel.contact_id)
  return _internal_contact_id();
}
inline void ContactModel::set_contact_id(::int64_t value) {
  _internal_set_contact_id(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:organization.ContactModel.contact_id)
}
inline ::int64_t ContactModel::_internal_contact_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contact_id_;
}
inline void ContactModel::_internal_set_contact_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contact_id_ = value;
}

// optional int64 organization_id = 2;
inline bool ContactModel::has_organization_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void ContactModel::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int64_t ContactModel::organization_id() const {
  // @@protoc_insertion_point(field_get:organization.ContactModel.organization_id)
  return _internal_organization_id();
}
inline void ContactModel::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:organization.ContactModel.organization_id)
}
inline ::int64_t ContactModel::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void ContactModel::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// optional int64 user_id = 3;
inline bool ContactModel::has_user_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void ContactModel::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int64_t ContactModel::user_id() const {
  // @@protoc_insertion_point(field_get:organization.ContactModel.user_id)
  return _internal_user_id();
}
inline void ContactModel::set_user_id(::int64_t value) {
  _internal_set_user_id(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:organization.ContactModel.user_id)
}
inline ::int64_t ContactModel::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_;
}
inline void ContactModel::_internal_set_user_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = value;
}

// optional int64 lead_id = 4;
inline bool ContactModel::has_lead_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void ContactModel::clear_lead_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::int64_t ContactModel::lead_id() const {
  // @@protoc_insertion_point(field_get:organization.ContactModel.lead_id)
  return _internal_lead_id();
}
inline void ContactModel::set_lead_id(::int64_t value) {
  _internal_set_lead_id(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:organization.ContactModel.lead_id)
}
inline ::int64_t ContactModel::_internal_lead_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_id_;
}
inline void ContactModel::_internal_set_lead_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = value;
}

// optional string contact_type = 5;
inline bool ContactModel::has_contact_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ContactModel::clear_contact_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contact_type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ContactModel::contact_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.ContactModel.contact_type)
  return _internal_contact_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContactModel::set_contact_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.contact_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.ContactModel.contact_type)
}
inline std::string* ContactModel::mutable_contact_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contact_type();
  // @@protoc_insertion_point(field_mutable:organization.ContactModel.contact_type)
  return _s;
}
inline const std::string& ContactModel::_internal_contact_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contact_type_.Get();
}
inline void ContactModel::_internal_set_contact_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.contact_type_.Set(value, GetArena());
}
inline std::string* ContactModel::_internal_mutable_contact_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.contact_type_.Mutable( GetArena());
}
inline std::string* ContactModel::release_contact_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.ContactModel.contact_type)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.contact_type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.contact_type_.Set("", GetArena());
  }
  return released;
}
inline void ContactModel::set_allocated_contact_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.contact_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.contact_type_.IsDefault()) {
    _impl_.contact_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.ContactModel.contact_type)
}

// optional string contact_person = 6;
inline bool ContactModel::has_contact_person() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ContactModel::clear_contact_person() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contact_person_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ContactModel::contact_person() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.ContactModel.contact_person)
  return _internal_contact_person();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContactModel::set_contact_person(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.contact_person_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.ContactModel.contact_person)
}
inline std::string* ContactModel::mutable_contact_person() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contact_person();
  // @@protoc_insertion_point(field_mutable:organization.ContactModel.contact_person)
  return _s;
}
inline const std::string& ContactModel::_internal_contact_person() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contact_person_.Get();
}
inline void ContactModel::_internal_set_contact_person(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.contact_person_.Set(value, GetArena());
}
inline std::string* ContactModel::_internal_mutable_contact_person() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.contact_person_.Mutable( GetArena());
}
inline std::string* ContactModel::release_contact_person() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.ContactModel.contact_person)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.contact_person_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.contact_person_.Set("", GetArena());
  }
  return released;
}
inline void ContactModel::set_allocated_contact_person(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.contact_person_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.contact_person_.IsDefault()) {
    _impl_.contact_person_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.ContactModel.contact_person)
}

// optional string phone_number = 7;
inline bool ContactModel::has_phone_number() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void ContactModel::clear_phone_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phone_number_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& ContactModel::phone_number() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.ContactModel.phone_number)
  return _internal_phone_number();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContactModel::set_phone_number(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.phone_number_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.ContactModel.phone_number)
}
inline std::string* ContactModel::mutable_phone_number() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_phone_number();
  // @@protoc_insertion_point(field_mutable:organization.ContactModel.phone_number)
  return _s;
}
inline const std::string& ContactModel::_internal_phone_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.phone_number_.Get();
}
inline void ContactModel::_internal_set_phone_number(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.phone_number_.Set(value, GetArena());
}
inline std::string* ContactModel::_internal_mutable_phone_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.phone_number_.Mutable( GetArena());
}
inline std::string* ContactModel::release_phone_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.ContactModel.phone_number)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.phone_number_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.phone_number_.Set("", GetArena());
  }
  return released;
}
inline void ContactModel::set_allocated_phone_number(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.phone_number_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.phone_number_.IsDefault()) {
    _impl_.phone_number_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.ContactModel.phone_number)
}

// optional string email = 8;
inline bool ContactModel::has_email() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void ContactModel::clear_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.email_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& ContactModel::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.ContactModel.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContactModel::set_email(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.ContactModel.email)
}
inline std::string* ContactModel::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:organization.ContactModel.email)
  return _s;
}
inline const std::string& ContactModel::_internal_email() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.email_.Get();
}
inline void ContactModel::_internal_set_email(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.email_.Set(value, GetArena());
}
inline std::string* ContactModel::_internal_mutable_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* ContactModel::release_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.ContactModel.email)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.email_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.email_.Set("", GetArena());
  }
  return released;
}
inline void ContactModel::set_allocated_email(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.email_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.email_.IsDefault()) {
    _impl_.email_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.ContactModel.email)
}

// optional string created_at = 9;
inline bool ContactModel::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void ContactModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& ContactModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.ContactModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContactModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.ContactModel.created_at)
}
inline std::string* ContactModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:organization.ContactModel.created_at)
  return _s;
}
inline const std::string& ContactModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void ContactModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* ContactModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* ContactModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.ContactModel.created_at)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.created_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.created_at_.Set("", GetArena());
  }
  return released;
}
inline void ContactModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.ContactModel.created_at)
}

// optional string updated_at = 10;
inline bool ContactModel::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void ContactModel::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& ContactModel::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.ContactModel.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContactModel::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.ContactModel.updated_at)
}
inline std::string* ContactModel::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:organization.ContactModel.updated_at)
  return _s;
}
inline const std::string& ContactModel::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void ContactModel::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* ContactModel::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* ContactModel::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.ContactModel.updated_at)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.updated_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  return released;
}
inline void ContactModel::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_at_.IsDefault()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.ContactModel.updated_at)
}

// -------------------------------------------------------------------

// CreateOrganizationRequest

// .organization.Organization organization = 1;
inline bool CreateOrganizationRequest::has_organization() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.organization_ != nullptr);
  return value;
}
inline void CreateOrganizationRequest::clear_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.organization_ != nullptr) _impl_.organization_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::Organization& CreateOrganizationRequest::_internal_organization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Organization* p = _impl_.organization_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Organization&>(::organization::_Organization_default_instance_);
}
inline const ::organization::Organization& CreateOrganizationRequest::organization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.CreateOrganizationRequest.organization)
  return _internal_organization();
}
inline void CreateOrganizationRequest::unsafe_arena_set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.organization_);
  }
  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.CreateOrganizationRequest.organization)
}
inline ::organization::Organization* CreateOrganizationRequest::release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Organization* released = _impl_.organization_;
  _impl_.organization_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Organization* CreateOrganizationRequest::unsafe_arena_release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.CreateOrganizationRequest.organization)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Organization* temp = _impl_.organization_;
  _impl_.organization_ = nullptr;
  return temp;
}
inline ::organization::Organization* CreateOrganizationRequest::_internal_mutable_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.organization_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Organization>(GetArena());
    _impl_.organization_ = reinterpret_cast<::organization::Organization*>(p);
  }
  return _impl_.organization_;
}
inline ::organization::Organization* CreateOrganizationRequest::mutable_organization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::Organization* _msg = _internal_mutable_organization();
  // @@protoc_insertion_point(field_mutable:organization.CreateOrganizationRequest.organization)
  return _msg;
}
inline void CreateOrganizationRequest::set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.organization_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.CreateOrganizationRequest.organization)
}

// optional int64 user_id = 2;
inline bool CreateOrganizationRequest::has_user_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CreateOrganizationRequest::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t CreateOrganizationRequest::user_id() const {
  // @@protoc_insertion_point(field_get:organization.CreateOrganizationRequest.user_id)
  return _internal_user_id();
}
inline void CreateOrganizationRequest::set_user_id(::int64_t value) {
  _internal_set_user_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:organization.CreateOrganizationRequest.user_id)
}
inline ::int64_t CreateOrganizationRequest::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_;
}
inline void CreateOrganizationRequest::_internal_set_user_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_ = value;
}

// -------------------------------------------------------------------

// CreateOrganizationResponse

// optional string token = 1;
inline bool CreateOrganizationResponse::has_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CreateOrganizationResponse::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CreateOrganizationResponse::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.CreateOrganizationResponse.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateOrganizationResponse::set_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.CreateOrganizationResponse.token)
}
inline std::string* CreateOrganizationResponse::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:organization.CreateOrganizationResponse.token)
  return _s;
}
inline const std::string& CreateOrganizationResponse::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.token_.Get();
}
inline void CreateOrganizationResponse::_internal_set_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.token_.Set(value, GetArena());
}
inline std::string* CreateOrganizationResponse::_internal_mutable_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* CreateOrganizationResponse::release_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.CreateOrganizationResponse.token)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.token_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.token_.Set("", GetArena());
  }
  return released;
}
inline void CreateOrganizationResponse::set_allocated_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.token_.IsDefault()) {
    _impl_.token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.CreateOrganizationResponse.token)
}

// .organization.Organization organization = 2;
inline bool CreateOrganizationResponse::has_organization() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.organization_ != nullptr);
  return value;
}
inline void CreateOrganizationResponse::clear_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.organization_ != nullptr) _impl_.organization_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::organization::Organization& CreateOrganizationResponse::_internal_organization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Organization* p = _impl_.organization_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Organization&>(::organization::_Organization_default_instance_);
}
inline const ::organization::Organization& CreateOrganizationResponse::organization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.CreateOrganizationResponse.organization)
  return _internal_organization();
}
inline void CreateOrganizationResponse::unsafe_arena_set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.organization_);
  }
  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.CreateOrganizationResponse.organization)
}
inline ::organization::Organization* CreateOrganizationResponse::release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::organization::Organization* released = _impl_.organization_;
  _impl_.organization_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Organization* CreateOrganizationResponse::unsafe_arena_release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.CreateOrganizationResponse.organization)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::organization::Organization* temp = _impl_.organization_;
  _impl_.organization_ = nullptr;
  return temp;
}
inline ::organization::Organization* CreateOrganizationResponse::_internal_mutable_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.organization_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Organization>(GetArena());
    _impl_.organization_ = reinterpret_cast<::organization::Organization*>(p);
  }
  return _impl_.organization_;
}
inline ::organization::Organization* CreateOrganizationResponse::mutable_organization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::organization::Organization* _msg = _internal_mutable_organization();
  // @@protoc_insertion_point(field_mutable:organization.CreateOrganizationResponse.organization)
  return _msg;
}
inline void CreateOrganizationResponse::set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.organization_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.CreateOrganizationResponse.organization)
}

// -------------------------------------------------------------------

// GetOrganizationRequest

// int64 id = 1;
inline void GetOrganizationRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t GetOrganizationRequest::id() const {
  // @@protoc_insertion_point(field_get:organization.GetOrganizationRequest.id)
  return _internal_id();
}
inline void GetOrganizationRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:organization.GetOrganizationRequest.id)
}
inline ::int64_t GetOrganizationRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void GetOrganizationRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// GetOrganizationResponse

// .organization.Organization organization = 1;
inline bool GetOrganizationResponse::has_organization() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.organization_ != nullptr);
  return value;
}
inline void GetOrganizationResponse::clear_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.organization_ != nullptr) _impl_.organization_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::Organization& GetOrganizationResponse::_internal_organization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Organization* p = _impl_.organization_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Organization&>(::organization::_Organization_default_instance_);
}
inline const ::organization::Organization& GetOrganizationResponse::organization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.GetOrganizationResponse.organization)
  return _internal_organization();
}
inline void GetOrganizationResponse::unsafe_arena_set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.organization_);
  }
  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.GetOrganizationResponse.organization)
}
inline ::organization::Organization* GetOrganizationResponse::release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Organization* released = _impl_.organization_;
  _impl_.organization_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Organization* GetOrganizationResponse::unsafe_arena_release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.GetOrganizationResponse.organization)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Organization* temp = _impl_.organization_;
  _impl_.organization_ = nullptr;
  return temp;
}
inline ::organization::Organization* GetOrganizationResponse::_internal_mutable_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.organization_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Organization>(GetArena());
    _impl_.organization_ = reinterpret_cast<::organization::Organization*>(p);
  }
  return _impl_.organization_;
}
inline ::organization::Organization* GetOrganizationResponse::mutable_organization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::Organization* _msg = _internal_mutable_organization();
  // @@protoc_insertion_point(field_mutable:organization.GetOrganizationResponse.organization)
  return _msg;
}
inline void GetOrganizationResponse::set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.organization_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.GetOrganizationResponse.organization)
}

// -------------------------------------------------------------------

// GetCounterpartyRequest

// int64 id = 1;
inline void GetCounterpartyRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t GetCounterpartyRequest::id() const {
  // @@protoc_insertion_point(field_get:organization.GetCounterpartyRequest.id)
  return _internal_id();
}
inline void GetCounterpartyRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:organization.GetCounterpartyRequest.id)
}
inline ::int64_t GetCounterpartyRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void GetCounterpartyRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// GetCounterpartyResponse

// .organization.Counterparty counterparty = 1;
inline bool GetCounterpartyResponse::has_counterparty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.counterparty_ != nullptr);
  return value;
}
inline void GetCounterpartyResponse::clear_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counterparty_ != nullptr) _impl_.counterparty_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::Counterparty& GetCounterpartyResponse::_internal_counterparty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Counterparty* p = _impl_.counterparty_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Counterparty&>(::organization::_Counterparty_default_instance_);
}
inline const ::organization::Counterparty& GetCounterpartyResponse::counterparty() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.GetCounterpartyResponse.counterparty)
  return _internal_counterparty();
}
inline void GetCounterpartyResponse::unsafe_arena_set_allocated_counterparty(::organization::Counterparty* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.counterparty_);
  }
  _impl_.counterparty_ = reinterpret_cast<::organization::Counterparty*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.GetCounterpartyResponse.counterparty)
}
inline ::organization::Counterparty* GetCounterpartyResponse::release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Counterparty* released = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Counterparty* GetCounterpartyResponse::unsafe_arena_release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.GetCounterpartyResponse.counterparty)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Counterparty* temp = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  return temp;
}
inline ::organization::Counterparty* GetCounterpartyResponse::_internal_mutable_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counterparty_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Counterparty>(GetArena());
    _impl_.counterparty_ = reinterpret_cast<::organization::Counterparty*>(p);
  }
  return _impl_.counterparty_;
}
inline ::organization::Counterparty* GetCounterpartyResponse::mutable_counterparty() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::Counterparty* _msg = _internal_mutable_counterparty();
  // @@protoc_insertion_point(field_mutable:organization.GetCounterpartyResponse.counterparty)
  return _msg;
}
inline void GetCounterpartyResponse::set_allocated_counterparty(::organization::Counterparty* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.counterparty_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.counterparty_ = reinterpret_cast<::organization::Counterparty*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.GetCounterpartyResponse.counterparty)
}

// -------------------------------------------------------------------

// ListCounterpartiesRequest

// int64 source_organization_id = 1;
inline void ListCounterpartiesRequest::clear_source_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_organization_id_ = ::int64_t{0};
}
inline ::int64_t ListCounterpartiesRequest::source_organization_id() const {
  // @@protoc_insertion_point(field_get:organization.ListCounterpartiesRequest.source_organization_id)
  return _internal_source_organization_id();
}
inline void ListCounterpartiesRequest::set_source_organization_id(::int64_t value) {
  _internal_set_source_organization_id(value);
  // @@protoc_insertion_point(field_set:organization.ListCounterpartiesRequest.source_organization_id)
}
inline ::int64_t ListCounterpartiesRequest::_internal_source_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_organization_id_;
}
inline void ListCounterpartiesRequest::_internal_set_source_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_organization_id_ = value;
}

// int32 limit = 2;
inline void ListCounterpartiesRequest::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = 0;
}
inline ::int32_t ListCounterpartiesRequest::limit() const {
  // @@protoc_insertion_point(field_get:organization.ListCounterpartiesRequest.limit)
  return _internal_limit();
}
inline void ListCounterpartiesRequest::set_limit(::int32_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:organization.ListCounterpartiesRequest.limit)
}
inline ::int32_t ListCounterpartiesRequest::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void ListCounterpartiesRequest::_internal_set_limit(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// int32 offset = 3;
inline void ListCounterpartiesRequest::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0;
}
inline ::int32_t ListCounterpartiesRequest::offset() const {
  // @@protoc_insertion_point(field_get:organization.ListCounterpartiesRequest.offset)
  return _internal_offset();
}
inline void ListCounterpartiesRequest::set_offset(::int32_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:organization.ListCounterpartiesRequest.offset)
}
inline ::int32_t ListCounterpartiesRequest::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void ListCounterpartiesRequest::_internal_set_offset(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// -------------------------------------------------------------------

// ListCounterpartiesResponse

// repeated .organization.Counterparty counterparties = 1;
inline int ListCounterpartiesResponse::_internal_counterparties_size() const {
  return _internal_counterparties().size();
}
inline int ListCounterpartiesResponse::counterparties_size() const {
  return _internal_counterparties_size();
}
inline void ListCounterpartiesResponse::clear_counterparties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counterparties_.Clear();
}
inline ::organization::Counterparty* ListCounterpartiesResponse::mutable_counterparties(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:organization.ListCounterpartiesResponse.counterparties)
  return _internal_mutable_counterparties()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::organization::Counterparty>* ListCounterpartiesResponse::mutable_counterparties()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:organization.ListCounterpartiesResponse.counterparties)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_counterparties();
}
inline const ::organization::Counterparty& ListCounterpartiesResponse::counterparties(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.ListCounterpartiesResponse.counterparties)
  return _internal_counterparties().Get(index);
}
inline ::organization::Counterparty* ListCounterpartiesResponse::add_counterparties() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::organization::Counterparty* _add = _internal_mutable_counterparties()->Add();
  // @@protoc_insertion_point(field_add:organization.ListCounterpartiesResponse.counterparties)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::organization::Counterparty>& ListCounterpartiesResponse::counterparties() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:organization.ListCounterpartiesResponse.counterparties)
  return _internal_counterparties();
}
inline const ::google::protobuf::RepeatedPtrField<::organization::Counterparty>&
ListCounterpartiesResponse::_internal_counterparties() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.counterparties_;
}
inline ::google::protobuf::RepeatedPtrField<::organization::Counterparty>*
ListCounterpartiesResponse::_internal_mutable_counterparties() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.counterparties_;
}

// int32 total_count = 2;
inline void ListCounterpartiesResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = 0;
}
inline ::int32_t ListCounterpartiesResponse::total_count() const {
  // @@protoc_insertion_point(field_get:organization.ListCounterpartiesResponse.total_count)
  return _internal_total_count();
}
inline void ListCounterpartiesResponse::set_total_count(::int32_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:organization.ListCounterpartiesResponse.total_count)
}
inline ::int32_t ListCounterpartiesResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void ListCounterpartiesResponse::_internal_set_total_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// -------------------------------------------------------------------

// CreateCounterpartyRequest

// .organization.Counterparty counterparty = 1;
inline bool CreateCounterpartyRequest::has_counterparty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.counterparty_ != nullptr);
  return value;
}
inline void CreateCounterpartyRequest::clear_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counterparty_ != nullptr) _impl_.counterparty_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::Counterparty& CreateCounterpartyRequest::_internal_counterparty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Counterparty* p = _impl_.counterparty_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Counterparty&>(::organization::_Counterparty_default_instance_);
}
inline const ::organization::Counterparty& CreateCounterpartyRequest::counterparty() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.CreateCounterpartyRequest.counterparty)
  return _internal_counterparty();
}
inline void CreateCounterpartyRequest::unsafe_arena_set_allocated_counterparty(::organization::Counterparty* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.counterparty_);
  }
  _impl_.counterparty_ = reinterpret_cast<::organization::Counterparty*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.CreateCounterpartyRequest.counterparty)
}
inline ::organization::Counterparty* CreateCounterpartyRequest::release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Counterparty* released = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Counterparty* CreateCounterpartyRequest::unsafe_arena_release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.CreateCounterpartyRequest.counterparty)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Counterparty* temp = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  return temp;
}
inline ::organization::Counterparty* CreateCounterpartyRequest::_internal_mutable_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counterparty_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Counterparty>(GetArena());
    _impl_.counterparty_ = reinterpret_cast<::organization::Counterparty*>(p);
  }
  return _impl_.counterparty_;
}
inline ::organization::Counterparty* CreateCounterpartyRequest::mutable_counterparty() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::Counterparty* _msg = _internal_mutable_counterparty();
  // @@protoc_insertion_point(field_mutable:organization.CreateCounterpartyRequest.counterparty)
  return _msg;
}
inline void CreateCounterpartyRequest::set_allocated_counterparty(::organization::Counterparty* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.counterparty_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.counterparty_ = reinterpret_cast<::organization::Counterparty*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.CreateCounterpartyRequest.counterparty)
}

// int64 source_organization_id = 2;
inline void CreateCounterpartyRequest::clear_source_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_organization_id_ = ::int64_t{0};
}
inline ::int64_t CreateCounterpartyRequest::source_organization_id() const {
  // @@protoc_insertion_point(field_get:organization.CreateCounterpartyRequest.source_organization_id)
  return _internal_source_organization_id();
}
inline void CreateCounterpartyRequest::set_source_organization_id(::int64_t value) {
  _internal_set_source_organization_id(value);
  // @@protoc_insertion_point(field_set:organization.CreateCounterpartyRequest.source_organization_id)
}
inline ::int64_t CreateCounterpartyRequest::_internal_source_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_organization_id_;
}
inline void CreateCounterpartyRequest::_internal_set_source_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_organization_id_ = value;
}

// -------------------------------------------------------------------

// CreateCounterpartyResponse

// .organization.Counterparty counterparty = 1;
inline bool CreateCounterpartyResponse::has_counterparty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.counterparty_ != nullptr);
  return value;
}
inline void CreateCounterpartyResponse::clear_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counterparty_ != nullptr) _impl_.counterparty_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::Counterparty& CreateCounterpartyResponse::_internal_counterparty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Counterparty* p = _impl_.counterparty_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Counterparty&>(::organization::_Counterparty_default_instance_);
}
inline const ::organization::Counterparty& CreateCounterpartyResponse::counterparty() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.CreateCounterpartyResponse.counterparty)
  return _internal_counterparty();
}
inline void CreateCounterpartyResponse::unsafe_arena_set_allocated_counterparty(::organization::Counterparty* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.counterparty_);
  }
  _impl_.counterparty_ = reinterpret_cast<::organization::Counterparty*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.CreateCounterpartyResponse.counterparty)
}
inline ::organization::Counterparty* CreateCounterpartyResponse::release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Counterparty* released = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Counterparty* CreateCounterpartyResponse::unsafe_arena_release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.CreateCounterpartyResponse.counterparty)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Counterparty* temp = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  return temp;
}
inline ::organization::Counterparty* CreateCounterpartyResponse::_internal_mutable_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counterparty_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Counterparty>(GetArena());
    _impl_.counterparty_ = reinterpret_cast<::organization::Counterparty*>(p);
  }
  return _impl_.counterparty_;
}
inline ::organization::Counterparty* CreateCounterpartyResponse::mutable_counterparty() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::Counterparty* _msg = _internal_mutable_counterparty();
  // @@protoc_insertion_point(field_mutable:organization.CreateCounterpartyResponse.counterparty)
  return _msg;
}
inline void CreateCounterpartyResponse::set_allocated_counterparty(::organization::Counterparty* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.counterparty_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.counterparty_ = reinterpret_cast<::organization::Counterparty*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.CreateCounterpartyResponse.counterparty)
}

// -------------------------------------------------------------------

// PatchCounterpartyRequest

// .organization.Counterparty counterparty = 1;
inline bool PatchCounterpartyRequest::has_counterparty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.counterparty_ != nullptr);
  return value;
}
inline void PatchCounterpartyRequest::clear_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counterparty_ != nullptr) _impl_.counterparty_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::Counterparty& PatchCounterpartyRequest::_internal_counterparty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Counterparty* p = _impl_.counterparty_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Counterparty&>(::organization::_Counterparty_default_instance_);
}
inline const ::organization::Counterparty& PatchCounterpartyRequest::counterparty() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.PatchCounterpartyRequest.counterparty)
  return _internal_counterparty();
}
inline void PatchCounterpartyRequest::unsafe_arena_set_allocated_counterparty(::organization::Counterparty* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.counterparty_);
  }
  _impl_.counterparty_ = reinterpret_cast<::organization::Counterparty*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.PatchCounterpartyRequest.counterparty)
}
inline ::organization::Counterparty* PatchCounterpartyRequest::release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Counterparty* released = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Counterparty* PatchCounterpartyRequest::unsafe_arena_release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.PatchCounterpartyRequest.counterparty)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Counterparty* temp = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  return temp;
}
inline ::organization::Counterparty* PatchCounterpartyRequest::_internal_mutable_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counterparty_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Counterparty>(GetArena());
    _impl_.counterparty_ = reinterpret_cast<::organization::Counterparty*>(p);
  }
  return _impl_.counterparty_;
}
inline ::organization::Counterparty* PatchCounterpartyRequest::mutable_counterparty() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::Counterparty* _msg = _internal_mutable_counterparty();
  // @@protoc_insertion_point(field_mutable:organization.PatchCounterpartyRequest.counterparty)
  return _msg;
}
inline void PatchCounterpartyRequest::set_allocated_counterparty(::organization::Counterparty* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.counterparty_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.counterparty_ = reinterpret_cast<::organization::Counterparty*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.PatchCounterpartyRequest.counterparty)
}

// int64 source_organization_id = 2;
inline void PatchCounterpartyRequest::clear_source_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_organization_id_ = ::int64_t{0};
}
inline ::int64_t PatchCounterpartyRequest::source_organization_id() const {
  // @@protoc_insertion_point(field_get:organization.PatchCounterpartyRequest.source_organization_id)
  return _internal_source_organization_id();
}
inline void PatchCounterpartyRequest::set_source_organization_id(::int64_t value) {
  _internal_set_source_organization_id(value);
  // @@protoc_insertion_point(field_set:organization.PatchCounterpartyRequest.source_organization_id)
}
inline ::int64_t PatchCounterpartyRequest::_internal_source_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_organization_id_;
}
inline void PatchCounterpartyRequest::_internal_set_source_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_organization_id_ = value;
}

// -------------------------------------------------------------------

// PatchCounterpartyResponse

// .organization.Counterparty counterparty = 1;
inline bool PatchCounterpartyResponse::has_counterparty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.counterparty_ != nullptr);
  return value;
}
inline void PatchCounterpartyResponse::clear_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counterparty_ != nullptr) _impl_.counterparty_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::Counterparty& PatchCounterpartyResponse::_internal_counterparty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Counterparty* p = _impl_.counterparty_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Counterparty&>(::organization::_Counterparty_default_instance_);
}
inline const ::organization::Counterparty& PatchCounterpartyResponse::counterparty() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.PatchCounterpartyResponse.counterparty)
  return _internal_counterparty();
}
inline void PatchCounterpartyResponse::unsafe_arena_set_allocated_counterparty(::organization::Counterparty* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.counterparty_);
  }
  _impl_.counterparty_ = reinterpret_cast<::organization::Counterparty*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.PatchCounterpartyResponse.counterparty)
}
inline ::organization::Counterparty* PatchCounterpartyResponse::release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Counterparty* released = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Counterparty* PatchCounterpartyResponse::unsafe_arena_release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.PatchCounterpartyResponse.counterparty)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Counterparty* temp = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  return temp;
}
inline ::organization::Counterparty* PatchCounterpartyResponse::_internal_mutable_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counterparty_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Counterparty>(GetArena());
    _impl_.counterparty_ = reinterpret_cast<::organization::Counterparty*>(p);
  }
  return _impl_.counterparty_;
}
inline ::organization::Counterparty* PatchCounterpartyResponse::mutable_counterparty() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::Counterparty* _msg = _internal_mutable_counterparty();
  // @@protoc_insertion_point(field_mutable:organization.PatchCounterpartyResponse.counterparty)
  return _msg;
}
inline void PatchCounterpartyResponse::set_allocated_counterparty(::organization::Counterparty* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.counterparty_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.counterparty_ = reinterpret_cast<::organization::Counterparty*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.PatchCounterpartyResponse.counterparty)
}

// -------------------------------------------------------------------

// ListOrganizationsRequest

// int32 limit = 1;
inline void ListOrganizationsRequest::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = 0;
}
inline ::int32_t ListOrganizationsRequest::limit() const {
  // @@protoc_insertion_point(field_get:organization.ListOrganizationsRequest.limit)
  return _internal_limit();
}
inline void ListOrganizationsRequest::set_limit(::int32_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:organization.ListOrganizationsRequest.limit)
}
inline ::int32_t ListOrganizationsRequest::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void ListOrganizationsRequest::_internal_set_limit(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// int32 offset = 2;
inline void ListOrganizationsRequest::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0;
}
inline ::int32_t ListOrganizationsRequest::offset() const {
  // @@protoc_insertion_point(field_get:organization.ListOrganizationsRequest.offset)
  return _internal_offset();
}
inline void ListOrganizationsRequest::set_offset(::int32_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:organization.ListOrganizationsRequest.offset)
}
inline ::int32_t ListOrganizationsRequest::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void ListOrganizationsRequest::_internal_set_offset(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// string type = 3;
inline void ListOrganizationsRequest::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& ListOrganizationsRequest::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.ListOrganizationsRequest.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListOrganizationsRequest::set_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.ListOrganizationsRequest.type)
}
inline std::string* ListOrganizationsRequest::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:organization.ListOrganizationsRequest.type)
  return _s;
}
inline const std::string& ListOrganizationsRequest::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void ListOrganizationsRequest::_internal_set_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(value, GetArena());
}
inline std::string* ListOrganizationsRequest::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* ListOrganizationsRequest::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.ListOrganizationsRequest.type)
  return _impl_.type_.Release();
}
inline void ListOrganizationsRequest::set_allocated_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.ListOrganizationsRequest.type)
}

// string name = 4;
inline void ListOrganizationsRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ListOrganizationsRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.ListOrganizationsRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListOrganizationsRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.ListOrganizationsRequest.name)
}
inline std::string* ListOrganizationsRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:organization.ListOrganizationsRequest.name)
  return _s;
}
inline const std::string& ListOrganizationsRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ListOrganizationsRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ListOrganizationsRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ListOrganizationsRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.ListOrganizationsRequest.name)
  return _impl_.name_.Release();
}
inline void ListOrganizationsRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.ListOrganizationsRequest.name)
}

// -------------------------------------------------------------------

// ListOrganizationsResponse

// repeated .organization.Organization organizations = 1;
inline int ListOrganizationsResponse::_internal_organizations_size() const {
  return _internal_organizations().size();
}
inline int ListOrganizationsResponse::organizations_size() const {
  return _internal_organizations_size();
}
inline void ListOrganizationsResponse::clear_organizations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organizations_.Clear();
}
inline ::organization::Organization* ListOrganizationsResponse::mutable_organizations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:organization.ListOrganizationsResponse.organizations)
  return _internal_mutable_organizations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::organization::Organization>* ListOrganizationsResponse::mutable_organizations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:organization.ListOrganizationsResponse.organizations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_organizations();
}
inline const ::organization::Organization& ListOrganizationsResponse::organizations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.ListOrganizationsResponse.organizations)
  return _internal_organizations().Get(index);
}
inline ::organization::Organization* ListOrganizationsResponse::add_organizations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::organization::Organization* _add = _internal_mutable_organizations()->Add();
  // @@protoc_insertion_point(field_add:organization.ListOrganizationsResponse.organizations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::organization::Organization>& ListOrganizationsResponse::organizations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:organization.ListOrganizationsResponse.organizations)
  return _internal_organizations();
}
inline const ::google::protobuf::RepeatedPtrField<::organization::Organization>&
ListOrganizationsResponse::_internal_organizations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organizations_;
}
inline ::google::protobuf::RepeatedPtrField<::organization::Organization>*
ListOrganizationsResponse::_internal_mutable_organizations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.organizations_;
}

// int32 total_count = 2;
inline void ListOrganizationsResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = 0;
}
inline ::int32_t ListOrganizationsResponse::total_count() const {
  // @@protoc_insertion_point(field_get:organization.ListOrganizationsResponse.total_count)
  return _internal_total_count();
}
inline void ListOrganizationsResponse::set_total_count(::int32_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:organization.ListOrganizationsResponse.total_count)
}
inline ::int32_t ListOrganizationsResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void ListOrganizationsResponse::_internal_set_total_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// -------------------------------------------------------------------

// PatchOrganizationRequest

// .organization.Organization organization = 1;
inline bool PatchOrganizationRequest::has_organization() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.organization_ != nullptr);
  return value;
}
inline void PatchOrganizationRequest::clear_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.organization_ != nullptr) _impl_.organization_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::Organization& PatchOrganizationRequest::_internal_organization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Organization* p = _impl_.organization_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Organization&>(::organization::_Organization_default_instance_);
}
inline const ::organization::Organization& PatchOrganizationRequest::organization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.PatchOrganizationRequest.organization)
  return _internal_organization();
}
inline void PatchOrganizationRequest::unsafe_arena_set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.organization_);
  }
  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.PatchOrganizationRequest.organization)
}
inline ::organization::Organization* PatchOrganizationRequest::release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Organization* released = _impl_.organization_;
  _impl_.organization_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Organization* PatchOrganizationRequest::unsafe_arena_release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.PatchOrganizationRequest.organization)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Organization* temp = _impl_.organization_;
  _impl_.organization_ = nullptr;
  return temp;
}
inline ::organization::Organization* PatchOrganizationRequest::_internal_mutable_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.organization_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Organization>(GetArena());
    _impl_.organization_ = reinterpret_cast<::organization::Organization*>(p);
  }
  return _impl_.organization_;
}
inline ::organization::Organization* PatchOrganizationRequest::mutable_organization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::Organization* _msg = _internal_mutable_organization();
  // @@protoc_insertion_point(field_mutable:organization.PatchOrganizationRequest.organization)
  return _msg;
}
inline void PatchOrganizationRequest::set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.organization_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.PatchOrganizationRequest.organization)
}

// -------------------------------------------------------------------

// PatchOrganizationResponse

// string token = 1;
inline void PatchOrganizationResponse::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& PatchOrganizationResponse::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.PatchOrganizationResponse.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PatchOrganizationResponse::set_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.PatchOrganizationResponse.token)
}
inline std::string* PatchOrganizationResponse::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:organization.PatchOrganizationResponse.token)
  return _s;
}
inline const std::string& PatchOrganizationResponse::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.token_.Get();
}
inline void PatchOrganizationResponse::_internal_set_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(value, GetArena());
}
inline std::string* PatchOrganizationResponse::_internal_mutable_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* PatchOrganizationResponse::release_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.PatchOrganizationResponse.token)
  return _impl_.token_.Release();
}
inline void PatchOrganizationResponse::set_allocated_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.token_.IsDefault()) {
    _impl_.token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.PatchOrganizationResponse.token)
}

// .organization.Organization organization = 2;
inline bool PatchOrganizationResponse::has_organization() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.organization_ != nullptr);
  return value;
}
inline void PatchOrganizationResponse::clear_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.organization_ != nullptr) _impl_.organization_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::Organization& PatchOrganizationResponse::_internal_organization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Organization* p = _impl_.organization_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Organization&>(::organization::_Organization_default_instance_);
}
inline const ::organization::Organization& PatchOrganizationResponse::organization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.PatchOrganizationResponse.organization)
  return _internal_organization();
}
inline void PatchOrganizationResponse::unsafe_arena_set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.organization_);
  }
  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.PatchOrganizationResponse.organization)
}
inline ::organization::Organization* PatchOrganizationResponse::release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Organization* released = _impl_.organization_;
  _impl_.organization_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Organization* PatchOrganizationResponse::unsafe_arena_release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.PatchOrganizationResponse.organization)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Organization* temp = _impl_.organization_;
  _impl_.organization_ = nullptr;
  return temp;
}
inline ::organization::Organization* PatchOrganizationResponse::_internal_mutable_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.organization_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Organization>(GetArena());
    _impl_.organization_ = reinterpret_cast<::organization::Organization*>(p);
  }
  return _impl_.organization_;
}
inline ::organization::Organization* PatchOrganizationResponse::mutable_organization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::Organization* _msg = _internal_mutable_organization();
  // @@protoc_insertion_point(field_mutable:organization.PatchOrganizationResponse.organization)
  return _msg;
}
inline void PatchOrganizationResponse::set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.organization_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.PatchOrganizationResponse.organization)
}

// -------------------------------------------------------------------

// UpdateOrganizationRequest

// .organization.OrganizationModel organization = 1;
inline bool UpdateOrganizationRequest::has_organization() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.organization_ != nullptr);
  return value;
}
inline void UpdateOrganizationRequest::clear_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.organization_ != nullptr) _impl_.organization_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::OrganizationModel& UpdateOrganizationRequest::_internal_organization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::OrganizationModel* p = _impl_.organization_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::OrganizationModel&>(::organization::_OrganizationModel_default_instance_);
}
inline const ::organization::OrganizationModel& UpdateOrganizationRequest::organization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.UpdateOrganizationRequest.organization)
  return _internal_organization();
}
inline void UpdateOrganizationRequest::unsafe_arena_set_allocated_organization(::organization::OrganizationModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.organization_);
  }
  _impl_.organization_ = reinterpret_cast<::organization::OrganizationModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.UpdateOrganizationRequest.organization)
}
inline ::organization::OrganizationModel* UpdateOrganizationRequest::release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::OrganizationModel* released = _impl_.organization_;
  _impl_.organization_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::OrganizationModel* UpdateOrganizationRequest::unsafe_arena_release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.UpdateOrganizationRequest.organization)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::OrganizationModel* temp = _impl_.organization_;
  _impl_.organization_ = nullptr;
  return temp;
}
inline ::organization::OrganizationModel* UpdateOrganizationRequest::_internal_mutable_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.organization_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::OrganizationModel>(GetArena());
    _impl_.organization_ = reinterpret_cast<::organization::OrganizationModel*>(p);
  }
  return _impl_.organization_;
}
inline ::organization::OrganizationModel* UpdateOrganizationRequest::mutable_organization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::OrganizationModel* _msg = _internal_mutable_organization();
  // @@protoc_insertion_point(field_mutable:organization.UpdateOrganizationRequest.organization)
  return _msg;
}
inline void UpdateOrganizationRequest::set_allocated_organization(::organization::OrganizationModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.organization_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.organization_ = reinterpret_cast<::organization::OrganizationModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.UpdateOrganizationRequest.organization)
}

// -------------------------------------------------------------------

// UpdateOrganizationResponse

// .organization.OrganizationModel organization = 1;
inline bool UpdateOrganizationResponse::has_organization() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.organization_ != nullptr);
  return value;
}
inline void UpdateOrganizationResponse::clear_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.organization_ != nullptr) _impl_.organization_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::OrganizationModel& UpdateOrganizationResponse::_internal_organization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::OrganizationModel* p = _impl_.organization_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::OrganizationModel&>(::organization::_OrganizationModel_default_instance_);
}
inline const ::organization::OrganizationModel& UpdateOrganizationResponse::organization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.UpdateOrganizationResponse.organization)
  return _internal_organization();
}
inline void UpdateOrganizationResponse::unsafe_arena_set_allocated_organization(::organization::OrganizationModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.organization_);
  }
  _impl_.organization_ = reinterpret_cast<::organization::OrganizationModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.UpdateOrganizationResponse.organization)
}
inline ::organization::OrganizationModel* UpdateOrganizationResponse::release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::OrganizationModel* released = _impl_.organization_;
  _impl_.organization_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::OrganizationModel* UpdateOrganizationResponse::unsafe_arena_release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.UpdateOrganizationResponse.organization)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::OrganizationModel* temp = _impl_.organization_;
  _impl_.organization_ = nullptr;
  return temp;
}
inline ::organization::OrganizationModel* UpdateOrganizationResponse::_internal_mutable_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.organization_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::OrganizationModel>(GetArena());
    _impl_.organization_ = reinterpret_cast<::organization::OrganizationModel*>(p);
  }
  return _impl_.organization_;
}
inline ::organization::OrganizationModel* UpdateOrganizationResponse::mutable_organization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::OrganizationModel* _msg = _internal_mutable_organization();
  // @@protoc_insertion_point(field_mutable:organization.UpdateOrganizationResponse.organization)
  return _msg;
}
inline void UpdateOrganizationResponse::set_allocated_organization(::organization::OrganizationModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.organization_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.organization_ = reinterpret_cast<::organization::OrganizationModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.UpdateOrganizationResponse.organization)
}

// -------------------------------------------------------------------

// GeneratePresignedURLsRequest

// int64 organization_id = 1;
inline void GeneratePresignedURLsRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t GeneratePresignedURLsRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:organization.GeneratePresignedURLsRequest.organization_id)
  return _internal_organization_id();
}
inline void GeneratePresignedURLsRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:organization.GeneratePresignedURLsRequest.organization_id)
}
inline ::int64_t GeneratePresignedURLsRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void GeneratePresignedURLsRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// repeated string file_names = 2;
inline int GeneratePresignedURLsRequest::_internal_file_names_size() const {
  return _internal_file_names().size();
}
inline int GeneratePresignedURLsRequest::file_names_size() const {
  return _internal_file_names_size();
}
inline void GeneratePresignedURLsRequest::clear_file_names() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_names_.Clear();
}
inline std::string* GeneratePresignedURLsRequest::add_file_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_file_names()->Add();
  // @@protoc_insertion_point(field_add_mutable:organization.GeneratePresignedURLsRequest.file_names)
  return _s;
}
inline const std::string& GeneratePresignedURLsRequest::file_names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.GeneratePresignedURLsRequest.file_names)
  return _internal_file_names().Get(index);
}
inline std::string* GeneratePresignedURLsRequest::mutable_file_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:organization.GeneratePresignedURLsRequest.file_names)
  return _internal_mutable_file_names()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GeneratePresignedURLsRequest::set_file_names(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_file_names()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:organization.GeneratePresignedURLsRequest.file_names)
}
template <typename Arg_, typename... Args_>
inline void GeneratePresignedURLsRequest::add_file_names(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_file_names(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:organization.GeneratePresignedURLsRequest.file_names)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GeneratePresignedURLsRequest::file_names() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:organization.GeneratePresignedURLsRequest.file_names)
  return _internal_file_names();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GeneratePresignedURLsRequest::mutable_file_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:organization.GeneratePresignedURLsRequest.file_names)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_file_names();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GeneratePresignedURLsRequest::_internal_file_names() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_names_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GeneratePresignedURLsRequest::_internal_mutable_file_names() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.file_names_;
}

// -------------------------------------------------------------------

// PresignedURLInfo

// string file_name = 1;
inline void PresignedURLInfo::clear_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_name_.ClearToEmpty();
}
inline const std::string& PresignedURLInfo::file_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.PresignedURLInfo.file_name)
  return _internal_file_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PresignedURLInfo::set_file_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.PresignedURLInfo.file_name)
}
inline std::string* PresignedURLInfo::mutable_file_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_file_name();
  // @@protoc_insertion_point(field_mutable:organization.PresignedURLInfo.file_name)
  return _s;
}
inline const std::string& PresignedURLInfo::_internal_file_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_name_.Get();
}
inline void PresignedURLInfo::_internal_set_file_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_name_.Set(value, GetArena());
}
inline std::string* PresignedURLInfo::_internal_mutable_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.file_name_.Mutable( GetArena());
}
inline std::string* PresignedURLInfo::release_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.PresignedURLInfo.file_name)
  return _impl_.file_name_.Release();
}
inline void PresignedURLInfo::set_allocated_file_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.file_name_.IsDefault()) {
    _impl_.file_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.PresignedURLInfo.file_name)
}

// string presigned_url = 2;
inline void PresignedURLInfo::clear_presigned_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.presigned_url_.ClearToEmpty();
}
inline const std::string& PresignedURLInfo::presigned_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.PresignedURLInfo.presigned_url)
  return _internal_presigned_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PresignedURLInfo::set_presigned_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.presigned_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.PresignedURLInfo.presigned_url)
}
inline std::string* PresignedURLInfo::mutable_presigned_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_presigned_url();
  // @@protoc_insertion_point(field_mutable:organization.PresignedURLInfo.presigned_url)
  return _s;
}
inline const std::string& PresignedURLInfo::_internal_presigned_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.presigned_url_.Get();
}
inline void PresignedURLInfo::_internal_set_presigned_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.presigned_url_.Set(value, GetArena());
}
inline std::string* PresignedURLInfo::_internal_mutable_presigned_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.presigned_url_.Mutable( GetArena());
}
inline std::string* PresignedURLInfo::release_presigned_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.PresignedURLInfo.presigned_url)
  return _impl_.presigned_url_.Release();
}
inline void PresignedURLInfo::set_allocated_presigned_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.presigned_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.presigned_url_.IsDefault()) {
    _impl_.presigned_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.PresignedURLInfo.presigned_url)
}

// string object_key = 3;
inline void PresignedURLInfo::clear_object_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_key_.ClearToEmpty();
}
inline const std::string& PresignedURLInfo::object_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.PresignedURLInfo.object_key)
  return _internal_object_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PresignedURLInfo::set_object_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:organization.PresignedURLInfo.object_key)
}
inline std::string* PresignedURLInfo::mutable_object_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_object_key();
  // @@protoc_insertion_point(field_mutable:organization.PresignedURLInfo.object_key)
  return _s;
}
inline const std::string& PresignedURLInfo::_internal_object_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.object_key_.Get();
}
inline void PresignedURLInfo::_internal_set_object_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_key_.Set(value, GetArena());
}
inline std::string* PresignedURLInfo::_internal_mutable_object_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.object_key_.Mutable( GetArena());
}
inline std::string* PresignedURLInfo::release_object_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.PresignedURLInfo.object_key)
  return _impl_.object_key_.Release();
}
inline void PresignedURLInfo::set_allocated_object_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.object_key_.IsDefault()) {
    _impl_.object_key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:organization.PresignedURLInfo.object_key)
}

// -------------------------------------------------------------------

// GeneratePresignedURLsResponse

// repeated .organization.PresignedURLInfo presigned_urls = 1;
inline int GeneratePresignedURLsResponse::_internal_presigned_urls_size() const {
  return _internal_presigned_urls().size();
}
inline int GeneratePresignedURLsResponse::presigned_urls_size() const {
  return _internal_presigned_urls_size();
}
inline void GeneratePresignedURLsResponse::clear_presigned_urls() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.presigned_urls_.Clear();
}
inline ::organization::PresignedURLInfo* GeneratePresignedURLsResponse::mutable_presigned_urls(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:organization.GeneratePresignedURLsResponse.presigned_urls)
  return _internal_mutable_presigned_urls()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::organization::PresignedURLInfo>* GeneratePresignedURLsResponse::mutable_presigned_urls()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:organization.GeneratePresignedURLsResponse.presigned_urls)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_presigned_urls();
}
inline const ::organization::PresignedURLInfo& GeneratePresignedURLsResponse::presigned_urls(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.GeneratePresignedURLsResponse.presigned_urls)
  return _internal_presigned_urls().Get(index);
}
inline ::organization::PresignedURLInfo* GeneratePresignedURLsResponse::add_presigned_urls() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::organization::PresignedURLInfo* _add = _internal_mutable_presigned_urls()->Add();
  // @@protoc_insertion_point(field_add:organization.GeneratePresignedURLsResponse.presigned_urls)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::organization::PresignedURLInfo>& GeneratePresignedURLsResponse::presigned_urls() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:organization.GeneratePresignedURLsResponse.presigned_urls)
  return _internal_presigned_urls();
}
inline const ::google::protobuf::RepeatedPtrField<::organization::PresignedURLInfo>&
GeneratePresignedURLsResponse::_internal_presigned_urls() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.presigned_urls_;
}
inline ::google::protobuf::RepeatedPtrField<::organization::PresignedURLInfo>*
GeneratePresignedURLsResponse::_internal_mutable_presigned_urls() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.presigned_urls_;
}

// -------------------------------------------------------------------

// ListBankAccountsRequest

// int64 organization_id = 1;
inline void ListBankAccountsRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t ListBankAccountsRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:organization.ListBankAccountsRequest.organization_id)
  return _internal_organization_id();
}
inline void ListBankAccountsRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:organization.ListBankAccountsRequest.organization_id)
}
inline ::int64_t ListBankAccountsRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void ListBankAccountsRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// -------------------------------------------------------------------

// ListBankAccountsResponse

// repeated .organization.BankAccountModel bank_accounts = 1;
inline int ListBankAccountsResponse::_internal_bank_accounts_size() const {
  return _internal_bank_accounts().size();
}
inline int ListBankAccountsResponse::bank_accounts_size() const {
  return _internal_bank_accounts_size();
}
inline void ListBankAccountsResponse::clear_bank_accounts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bank_accounts_.Clear();
}
inline ::organization::BankAccountModel* ListBankAccountsResponse::mutable_bank_accounts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:organization.ListBankAccountsResponse.bank_accounts)
  return _internal_mutable_bank_accounts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>* ListBankAccountsResponse::mutable_bank_accounts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:organization.ListBankAccountsResponse.bank_accounts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_bank_accounts();
}
inline const ::organization::BankAccountModel& ListBankAccountsResponse::bank_accounts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.ListBankAccountsResponse.bank_accounts)
  return _internal_bank_accounts().Get(index);
}
inline ::organization::BankAccountModel* ListBankAccountsResponse::add_bank_accounts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::organization::BankAccountModel* _add = _internal_mutable_bank_accounts()->Add();
  // @@protoc_insertion_point(field_add:organization.ListBankAccountsResponse.bank_accounts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>& ListBankAccountsResponse::bank_accounts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:organization.ListBankAccountsResponse.bank_accounts)
  return _internal_bank_accounts();
}
inline const ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>&
ListBankAccountsResponse::_internal_bank_accounts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bank_accounts_;
}
inline ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>*
ListBankAccountsResponse::_internal_mutable_bank_accounts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.bank_accounts_;
}

// -------------------------------------------------------------------

// GetDefaultBankAccountRequest

// int64 organization_id = 1;
inline void GetDefaultBankAccountRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t GetDefaultBankAccountRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:organization.GetDefaultBankAccountRequest.organization_id)
  return _internal_organization_id();
}
inline void GetDefaultBankAccountRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:organization.GetDefaultBankAccountRequest.organization_id)
}
inline ::int64_t GetDefaultBankAccountRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void GetDefaultBankAccountRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// -------------------------------------------------------------------

// GetDefaultBankAccountResponse

// .organization.BankAccountModel bank_account = 1;
inline bool GetDefaultBankAccountResponse::has_bank_account() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bank_account_ != nullptr);
  return value;
}
inline void GetDefaultBankAccountResponse::clear_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bank_account_ != nullptr) _impl_.bank_account_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::BankAccountModel& GetDefaultBankAccountResponse::_internal_bank_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::BankAccountModel* p = _impl_.bank_account_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::BankAccountModel&>(::organization::_BankAccountModel_default_instance_);
}
inline const ::organization::BankAccountModel& GetDefaultBankAccountResponse::bank_account() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.GetDefaultBankAccountResponse.bank_account)
  return _internal_bank_account();
}
inline void GetDefaultBankAccountResponse::unsafe_arena_set_allocated_bank_account(::organization::BankAccountModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bank_account_);
  }
  _impl_.bank_account_ = reinterpret_cast<::organization::BankAccountModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.GetDefaultBankAccountResponse.bank_account)
}
inline ::organization::BankAccountModel* GetDefaultBankAccountResponse::release_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::BankAccountModel* released = _impl_.bank_account_;
  _impl_.bank_account_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::BankAccountModel* GetDefaultBankAccountResponse::unsafe_arena_release_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.GetDefaultBankAccountResponse.bank_account)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::BankAccountModel* temp = _impl_.bank_account_;
  _impl_.bank_account_ = nullptr;
  return temp;
}
inline ::organization::BankAccountModel* GetDefaultBankAccountResponse::_internal_mutable_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bank_account_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::BankAccountModel>(GetArena());
    _impl_.bank_account_ = reinterpret_cast<::organization::BankAccountModel*>(p);
  }
  return _impl_.bank_account_;
}
inline ::organization::BankAccountModel* GetDefaultBankAccountResponse::mutable_bank_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::BankAccountModel* _msg = _internal_mutable_bank_account();
  // @@protoc_insertion_point(field_mutable:organization.GetDefaultBankAccountResponse.bank_account)
  return _msg;
}
inline void GetDefaultBankAccountResponse::set_allocated_bank_account(::organization::BankAccountModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.bank_account_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.bank_account_ = reinterpret_cast<::organization::BankAccountModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.GetDefaultBankAccountResponse.bank_account)
}

// -------------------------------------------------------------------

// CreateBankAccountRequest

// .organization.BankAccountModel bank_account = 1;
inline bool CreateBankAccountRequest::has_bank_account() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bank_account_ != nullptr);
  return value;
}
inline void CreateBankAccountRequest::clear_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bank_account_ != nullptr) _impl_.bank_account_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::BankAccountModel& CreateBankAccountRequest::_internal_bank_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::BankAccountModel* p = _impl_.bank_account_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::BankAccountModel&>(::organization::_BankAccountModel_default_instance_);
}
inline const ::organization::BankAccountModel& CreateBankAccountRequest::bank_account() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.CreateBankAccountRequest.bank_account)
  return _internal_bank_account();
}
inline void CreateBankAccountRequest::unsafe_arena_set_allocated_bank_account(::organization::BankAccountModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bank_account_);
  }
  _impl_.bank_account_ = reinterpret_cast<::organization::BankAccountModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.CreateBankAccountRequest.bank_account)
}
inline ::organization::BankAccountModel* CreateBankAccountRequest::release_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::BankAccountModel* released = _impl_.bank_account_;
  _impl_.bank_account_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::BankAccountModel* CreateBankAccountRequest::unsafe_arena_release_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.CreateBankAccountRequest.bank_account)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::BankAccountModel* temp = _impl_.bank_account_;
  _impl_.bank_account_ = nullptr;
  return temp;
}
inline ::organization::BankAccountModel* CreateBankAccountRequest::_internal_mutable_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bank_account_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::BankAccountModel>(GetArena());
    _impl_.bank_account_ = reinterpret_cast<::organization::BankAccountModel*>(p);
  }
  return _impl_.bank_account_;
}
inline ::organization::BankAccountModel* CreateBankAccountRequest::mutable_bank_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::BankAccountModel* _msg = _internal_mutable_bank_account();
  // @@protoc_insertion_point(field_mutable:organization.CreateBankAccountRequest.bank_account)
  return _msg;
}
inline void CreateBankAccountRequest::set_allocated_bank_account(::organization::BankAccountModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.bank_account_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.bank_account_ = reinterpret_cast<::organization::BankAccountModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.CreateBankAccountRequest.bank_account)
}

// -------------------------------------------------------------------

// CreateBankAccountResponse

// .organization.BankAccountModel bank_account = 1;
inline bool CreateBankAccountResponse::has_bank_account() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bank_account_ != nullptr);
  return value;
}
inline void CreateBankAccountResponse::clear_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bank_account_ != nullptr) _impl_.bank_account_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::BankAccountModel& CreateBankAccountResponse::_internal_bank_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::BankAccountModel* p = _impl_.bank_account_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::BankAccountModel&>(::organization::_BankAccountModel_default_instance_);
}
inline const ::organization::BankAccountModel& CreateBankAccountResponse::bank_account() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.CreateBankAccountResponse.bank_account)
  return _internal_bank_account();
}
inline void CreateBankAccountResponse::unsafe_arena_set_allocated_bank_account(::organization::BankAccountModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bank_account_);
  }
  _impl_.bank_account_ = reinterpret_cast<::organization::BankAccountModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.CreateBankAccountResponse.bank_account)
}
inline ::organization::BankAccountModel* CreateBankAccountResponse::release_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::BankAccountModel* released = _impl_.bank_account_;
  _impl_.bank_account_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::BankAccountModel* CreateBankAccountResponse::unsafe_arena_release_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.CreateBankAccountResponse.bank_account)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::BankAccountModel* temp = _impl_.bank_account_;
  _impl_.bank_account_ = nullptr;
  return temp;
}
inline ::organization::BankAccountModel* CreateBankAccountResponse::_internal_mutable_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bank_account_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::BankAccountModel>(GetArena());
    _impl_.bank_account_ = reinterpret_cast<::organization::BankAccountModel*>(p);
  }
  return _impl_.bank_account_;
}
inline ::organization::BankAccountModel* CreateBankAccountResponse::mutable_bank_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::BankAccountModel* _msg = _internal_mutable_bank_account();
  // @@protoc_insertion_point(field_mutable:organization.CreateBankAccountResponse.bank_account)
  return _msg;
}
inline void CreateBankAccountResponse::set_allocated_bank_account(::organization::BankAccountModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.bank_account_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.bank_account_ = reinterpret_cast<::organization::BankAccountModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.CreateBankAccountResponse.bank_account)
}

// -------------------------------------------------------------------

// UpdateBankAccountRequest

// .organization.BankAccountModel bank_account = 1;
inline bool UpdateBankAccountRequest::has_bank_account() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bank_account_ != nullptr);
  return value;
}
inline void UpdateBankAccountRequest::clear_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bank_account_ != nullptr) _impl_.bank_account_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::BankAccountModel& UpdateBankAccountRequest::_internal_bank_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::BankAccountModel* p = _impl_.bank_account_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::BankAccountModel&>(::organization::_BankAccountModel_default_instance_);
}
inline const ::organization::BankAccountModel& UpdateBankAccountRequest::bank_account() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.UpdateBankAccountRequest.bank_account)
  return _internal_bank_account();
}
inline void UpdateBankAccountRequest::unsafe_arena_set_allocated_bank_account(::organization::BankAccountModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bank_account_);
  }
  _impl_.bank_account_ = reinterpret_cast<::organization::BankAccountModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.UpdateBankAccountRequest.bank_account)
}
inline ::organization::BankAccountModel* UpdateBankAccountRequest::release_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::BankAccountModel* released = _impl_.bank_account_;
  _impl_.bank_account_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::BankAccountModel* UpdateBankAccountRequest::unsafe_arena_release_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.UpdateBankAccountRequest.bank_account)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::BankAccountModel* temp = _impl_.bank_account_;
  _impl_.bank_account_ = nullptr;
  return temp;
}
inline ::organization::BankAccountModel* UpdateBankAccountRequest::_internal_mutable_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bank_account_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::BankAccountModel>(GetArena());
    _impl_.bank_account_ = reinterpret_cast<::organization::BankAccountModel*>(p);
  }
  return _impl_.bank_account_;
}
inline ::organization::BankAccountModel* UpdateBankAccountRequest::mutable_bank_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::BankAccountModel* _msg = _internal_mutable_bank_account();
  // @@protoc_insertion_point(field_mutable:organization.UpdateBankAccountRequest.bank_account)
  return _msg;
}
inline void UpdateBankAccountRequest::set_allocated_bank_account(::organization::BankAccountModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.bank_account_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.bank_account_ = reinterpret_cast<::organization::BankAccountModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.UpdateBankAccountRequest.bank_account)
}

// -------------------------------------------------------------------

// UpdateBankAccountResponse

// .organization.BankAccountModel bank_account = 1;
inline bool UpdateBankAccountResponse::has_bank_account() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bank_account_ != nullptr);
  return value;
}
inline void UpdateBankAccountResponse::clear_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bank_account_ != nullptr) _impl_.bank_account_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::BankAccountModel& UpdateBankAccountResponse::_internal_bank_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::BankAccountModel* p = _impl_.bank_account_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::BankAccountModel&>(::organization::_BankAccountModel_default_instance_);
}
inline const ::organization::BankAccountModel& UpdateBankAccountResponse::bank_account() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.UpdateBankAccountResponse.bank_account)
  return _internal_bank_account();
}
inline void UpdateBankAccountResponse::unsafe_arena_set_allocated_bank_account(::organization::BankAccountModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bank_account_);
  }
  _impl_.bank_account_ = reinterpret_cast<::organization::BankAccountModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.UpdateBankAccountResponse.bank_account)
}
inline ::organization::BankAccountModel* UpdateBankAccountResponse::release_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::BankAccountModel* released = _impl_.bank_account_;
  _impl_.bank_account_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::BankAccountModel* UpdateBankAccountResponse::unsafe_arena_release_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.UpdateBankAccountResponse.bank_account)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::BankAccountModel* temp = _impl_.bank_account_;
  _impl_.bank_account_ = nullptr;
  return temp;
}
inline ::organization::BankAccountModel* UpdateBankAccountResponse::_internal_mutable_bank_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bank_account_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::BankAccountModel>(GetArena());
    _impl_.bank_account_ = reinterpret_cast<::organization::BankAccountModel*>(p);
  }
  return _impl_.bank_account_;
}
inline ::organization::BankAccountModel* UpdateBankAccountResponse::mutable_bank_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::BankAccountModel* _msg = _internal_mutable_bank_account();
  // @@protoc_insertion_point(field_mutable:organization.UpdateBankAccountResponse.bank_account)
  return _msg;
}
inline void UpdateBankAccountResponse::set_allocated_bank_account(::organization::BankAccountModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.bank_account_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.bank_account_ = reinterpret_cast<::organization::BankAccountModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.UpdateBankAccountResponse.bank_account)
}

// -------------------------------------------------------------------

// UpdateBankAccountsRequest

// repeated .organization.BankAccountModel bank_accounts = 1;
inline int UpdateBankAccountsRequest::_internal_bank_accounts_size() const {
  return _internal_bank_accounts().size();
}
inline int UpdateBankAccountsRequest::bank_accounts_size() const {
  return _internal_bank_accounts_size();
}
inline void UpdateBankAccountsRequest::clear_bank_accounts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bank_accounts_.Clear();
}
inline ::organization::BankAccountModel* UpdateBankAccountsRequest::mutable_bank_accounts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:organization.UpdateBankAccountsRequest.bank_accounts)
  return _internal_mutable_bank_accounts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>* UpdateBankAccountsRequest::mutable_bank_accounts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:organization.UpdateBankAccountsRequest.bank_accounts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_bank_accounts();
}
inline const ::organization::BankAccountModel& UpdateBankAccountsRequest::bank_accounts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.UpdateBankAccountsRequest.bank_accounts)
  return _internal_bank_accounts().Get(index);
}
inline ::organization::BankAccountModel* UpdateBankAccountsRequest::add_bank_accounts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::organization::BankAccountModel* _add = _internal_mutable_bank_accounts()->Add();
  // @@protoc_insertion_point(field_add:organization.UpdateBankAccountsRequest.bank_accounts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>& UpdateBankAccountsRequest::bank_accounts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:organization.UpdateBankAccountsRequest.bank_accounts)
  return _internal_bank_accounts();
}
inline const ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>&
UpdateBankAccountsRequest::_internal_bank_accounts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bank_accounts_;
}
inline ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>*
UpdateBankAccountsRequest::_internal_mutable_bank_accounts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.bank_accounts_;
}

// int64 organization_id = 2;
inline void UpdateBankAccountsRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t UpdateBankAccountsRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:organization.UpdateBankAccountsRequest.organization_id)
  return _internal_organization_id();
}
inline void UpdateBankAccountsRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:organization.UpdateBankAccountsRequest.organization_id)
}
inline ::int64_t UpdateBankAccountsRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void UpdateBankAccountsRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// -------------------------------------------------------------------

// UpdateBankAccountsResponse

// repeated .organization.BankAccountModel bank_accounts = 1;
inline int UpdateBankAccountsResponse::_internal_bank_accounts_size() const {
  return _internal_bank_accounts().size();
}
inline int UpdateBankAccountsResponse::bank_accounts_size() const {
  return _internal_bank_accounts_size();
}
inline void UpdateBankAccountsResponse::clear_bank_accounts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bank_accounts_.Clear();
}
inline ::organization::BankAccountModel* UpdateBankAccountsResponse::mutable_bank_accounts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:organization.UpdateBankAccountsResponse.bank_accounts)
  return _internal_mutable_bank_accounts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>* UpdateBankAccountsResponse::mutable_bank_accounts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:organization.UpdateBankAccountsResponse.bank_accounts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_bank_accounts();
}
inline const ::organization::BankAccountModel& UpdateBankAccountsResponse::bank_accounts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.UpdateBankAccountsResponse.bank_accounts)
  return _internal_bank_accounts().Get(index);
}
inline ::organization::BankAccountModel* UpdateBankAccountsResponse::add_bank_accounts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::organization::BankAccountModel* _add = _internal_mutable_bank_accounts()->Add();
  // @@protoc_insertion_point(field_add:organization.UpdateBankAccountsResponse.bank_accounts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>& UpdateBankAccountsResponse::bank_accounts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:organization.UpdateBankAccountsResponse.bank_accounts)
  return _internal_bank_accounts();
}
inline const ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>&
UpdateBankAccountsResponse::_internal_bank_accounts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bank_accounts_;
}
inline ::google::protobuf::RepeatedPtrField<::organization::BankAccountModel>*
UpdateBankAccountsResponse::_internal_mutable_bank_accounts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.bank_accounts_;
}

// -------------------------------------------------------------------

// DeleteBankAccountRequest

// int64 id = 1;
inline void DeleteBankAccountRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t DeleteBankAccountRequest::id() const {
  // @@protoc_insertion_point(field_get:organization.DeleteBankAccountRequest.id)
  return _internal_id();
}
inline void DeleteBankAccountRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:organization.DeleteBankAccountRequest.id)
}
inline ::int64_t DeleteBankAccountRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void DeleteBankAccountRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// DeleteBankAccountResponse

// bool success = 1;
inline void DeleteBankAccountResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool DeleteBankAccountResponse::success() const {
  // @@protoc_insertion_point(field_get:organization.DeleteBankAccountResponse.success)
  return _internal_success();
}
inline void DeleteBankAccountResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:organization.DeleteBankAccountResponse.success)
}
inline bool DeleteBankAccountResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void DeleteBankAccountResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// CreateAddressRequest

// .organization.AddressModel address = 1;
inline bool CreateAddressRequest::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline void CreateAddressRequest::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ != nullptr) _impl_.address_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::AddressModel& CreateAddressRequest::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::AddressModel* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::AddressModel&>(::organization::_AddressModel_default_instance_);
}
inline const ::organization::AddressModel& CreateAddressRequest::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.CreateAddressRequest.address)
  return _internal_address();
}
inline void CreateAddressRequest::unsafe_arena_set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.CreateAddressRequest.address)
}
inline ::organization::AddressModel* CreateAddressRequest::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* released = _impl_.address_;
  _impl_.address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::AddressModel* CreateAddressRequest::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.CreateAddressRequest.address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::organization::AddressModel* CreateAddressRequest::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::AddressModel>(GetArena());
    _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(p);
  }
  return _impl_.address_;
}
inline ::organization::AddressModel* CreateAddressRequest::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::AddressModel* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:organization.CreateAddressRequest.address)
  return _msg;
}
inline void CreateAddressRequest::set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.CreateAddressRequest.address)
}

// -------------------------------------------------------------------

// CreateAddressResponse

// .organization.AddressModel address = 1;
inline bool CreateAddressResponse::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline void CreateAddressResponse::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ != nullptr) _impl_.address_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::AddressModel& CreateAddressResponse::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::AddressModel* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::AddressModel&>(::organization::_AddressModel_default_instance_);
}
inline const ::organization::AddressModel& CreateAddressResponse::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.CreateAddressResponse.address)
  return _internal_address();
}
inline void CreateAddressResponse::unsafe_arena_set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.CreateAddressResponse.address)
}
inline ::organization::AddressModel* CreateAddressResponse::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* released = _impl_.address_;
  _impl_.address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::AddressModel* CreateAddressResponse::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.CreateAddressResponse.address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::organization::AddressModel* CreateAddressResponse::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::AddressModel>(GetArena());
    _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(p);
  }
  return _impl_.address_;
}
inline ::organization::AddressModel* CreateAddressResponse::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::AddressModel* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:organization.CreateAddressResponse.address)
  return _msg;
}
inline void CreateAddressResponse::set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.CreateAddressResponse.address)
}

// -------------------------------------------------------------------

// GetAddressRequest

// int64 id = 1;
inline void GetAddressRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t GetAddressRequest::id() const {
  // @@protoc_insertion_point(field_get:organization.GetAddressRequest.id)
  return _internal_id();
}
inline void GetAddressRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:organization.GetAddressRequest.id)
}
inline ::int64_t GetAddressRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void GetAddressRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// GetAddressResponse

// .organization.AddressModel address = 1;
inline bool GetAddressResponse::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline void GetAddressResponse::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ != nullptr) _impl_.address_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::AddressModel& GetAddressResponse::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::AddressModel* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::AddressModel&>(::organization::_AddressModel_default_instance_);
}
inline const ::organization::AddressModel& GetAddressResponse::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.GetAddressResponse.address)
  return _internal_address();
}
inline void GetAddressResponse::unsafe_arena_set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.GetAddressResponse.address)
}
inline ::organization::AddressModel* GetAddressResponse::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* released = _impl_.address_;
  _impl_.address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::AddressModel* GetAddressResponse::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.GetAddressResponse.address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::organization::AddressModel* GetAddressResponse::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::AddressModel>(GetArena());
    _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(p);
  }
  return _impl_.address_;
}
inline ::organization::AddressModel* GetAddressResponse::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::AddressModel* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:organization.GetAddressResponse.address)
  return _msg;
}
inline void GetAddressResponse::set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.GetAddressResponse.address)
}

// -------------------------------------------------------------------

// UpdateAddressRequest

// .organization.AddressModel address = 1;
inline bool UpdateAddressRequest::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline void UpdateAddressRequest::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ != nullptr) _impl_.address_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::AddressModel& UpdateAddressRequest::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::AddressModel* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::AddressModel&>(::organization::_AddressModel_default_instance_);
}
inline const ::organization::AddressModel& UpdateAddressRequest::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.UpdateAddressRequest.address)
  return _internal_address();
}
inline void UpdateAddressRequest::unsafe_arena_set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.UpdateAddressRequest.address)
}
inline ::organization::AddressModel* UpdateAddressRequest::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* released = _impl_.address_;
  _impl_.address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::AddressModel* UpdateAddressRequest::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.UpdateAddressRequest.address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::organization::AddressModel* UpdateAddressRequest::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::AddressModel>(GetArena());
    _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(p);
  }
  return _impl_.address_;
}
inline ::organization::AddressModel* UpdateAddressRequest::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::AddressModel* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:organization.UpdateAddressRequest.address)
  return _msg;
}
inline void UpdateAddressRequest::set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.UpdateAddressRequest.address)
}

// -------------------------------------------------------------------

// UpdateAddressResponse

// .organization.AddressModel address = 1;
inline bool UpdateAddressResponse::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline void UpdateAddressResponse::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ != nullptr) _impl_.address_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::AddressModel& UpdateAddressResponse::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::AddressModel* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::AddressModel&>(::organization::_AddressModel_default_instance_);
}
inline const ::organization::AddressModel& UpdateAddressResponse::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.UpdateAddressResponse.address)
  return _internal_address();
}
inline void UpdateAddressResponse::unsafe_arena_set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.UpdateAddressResponse.address)
}
inline ::organization::AddressModel* UpdateAddressResponse::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* released = _impl_.address_;
  _impl_.address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::AddressModel* UpdateAddressResponse::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.UpdateAddressResponse.address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::organization::AddressModel* UpdateAddressResponse::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::AddressModel>(GetArena());
    _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(p);
  }
  return _impl_.address_;
}
inline ::organization::AddressModel* UpdateAddressResponse::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::AddressModel* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:organization.UpdateAddressResponse.address)
  return _msg;
}
inline void UpdateAddressResponse::set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.UpdateAddressResponse.address)
}

// -------------------------------------------------------------------

// PatchAddressRequest

// .organization.AddressModel address = 1;
inline bool PatchAddressRequest::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline void PatchAddressRequest::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ != nullptr) _impl_.address_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::AddressModel& PatchAddressRequest::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::AddressModel* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::AddressModel&>(::organization::_AddressModel_default_instance_);
}
inline const ::organization::AddressModel& PatchAddressRequest::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.PatchAddressRequest.address)
  return _internal_address();
}
inline void PatchAddressRequest::unsafe_arena_set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.PatchAddressRequest.address)
}
inline ::organization::AddressModel* PatchAddressRequest::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* released = _impl_.address_;
  _impl_.address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::AddressModel* PatchAddressRequest::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.PatchAddressRequest.address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::organization::AddressModel* PatchAddressRequest::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::AddressModel>(GetArena());
    _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(p);
  }
  return _impl_.address_;
}
inline ::organization::AddressModel* PatchAddressRequest::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::AddressModel* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:organization.PatchAddressRequest.address)
  return _msg;
}
inline void PatchAddressRequest::set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.PatchAddressRequest.address)
}

// -------------------------------------------------------------------

// PatchAddressResponse

// .organization.AddressModel address = 1;
inline bool PatchAddressResponse::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline void PatchAddressResponse::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ != nullptr) _impl_.address_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::AddressModel& PatchAddressResponse::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::AddressModel* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::AddressModel&>(::organization::_AddressModel_default_instance_);
}
inline const ::organization::AddressModel& PatchAddressResponse::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.PatchAddressResponse.address)
  return _internal_address();
}
inline void PatchAddressResponse::unsafe_arena_set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.PatchAddressResponse.address)
}
inline ::organization::AddressModel* PatchAddressResponse::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* released = _impl_.address_;
  _impl_.address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::AddressModel* PatchAddressResponse::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.PatchAddressResponse.address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::AddressModel* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::organization::AddressModel* PatchAddressResponse::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::AddressModel>(GetArena());
    _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(p);
  }
  return _impl_.address_;
}
inline ::organization::AddressModel* PatchAddressResponse::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::AddressModel* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:organization.PatchAddressResponse.address)
  return _msg;
}
inline void PatchAddressResponse::set_allocated_address(::organization::AddressModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.address_ = reinterpret_cast<::organization::AddressModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.PatchAddressResponse.address)
}

// -------------------------------------------------------------------

// DeleteAddressRequest

// int64 id = 1;
inline void DeleteAddressRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t DeleteAddressRequest::id() const {
  // @@protoc_insertion_point(field_get:organization.DeleteAddressRequest.id)
  return _internal_id();
}
inline void DeleteAddressRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:organization.DeleteAddressRequest.id)
}
inline ::int64_t DeleteAddressRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void DeleteAddressRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// DeleteAddressResponse

// bool success = 1;
inline void DeleteAddressResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool DeleteAddressResponse::success() const {
  // @@protoc_insertion_point(field_get:organization.DeleteAddressResponse.success)
  return _internal_success();
}
inline void DeleteAddressResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:organization.DeleteAddressResponse.success)
}
inline bool DeleteAddressResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void DeleteAddressResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// CreateRelationshipRequest

// .organization.RelationshipModel relationship = 1;
inline bool CreateRelationshipRequest::has_relationship() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.relationship_ != nullptr);
  return value;
}
inline void CreateRelationshipRequest::clear_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_ != nullptr) _impl_.relationship_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::RelationshipModel& CreateRelationshipRequest::_internal_relationship() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::RelationshipModel* p = _impl_.relationship_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::RelationshipModel&>(::organization::_RelationshipModel_default_instance_);
}
inline const ::organization::RelationshipModel& CreateRelationshipRequest::relationship() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.CreateRelationshipRequest.relationship)
  return _internal_relationship();
}
inline void CreateRelationshipRequest::unsafe_arena_set_allocated_relationship(::organization::RelationshipModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.relationship_);
  }
  _impl_.relationship_ = reinterpret_cast<::organization::RelationshipModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.CreateRelationshipRequest.relationship)
}
inline ::organization::RelationshipModel* CreateRelationshipRequest::release_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipModel* released = _impl_.relationship_;
  _impl_.relationship_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::RelationshipModel* CreateRelationshipRequest::unsafe_arena_release_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.CreateRelationshipRequest.relationship)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipModel* temp = _impl_.relationship_;
  _impl_.relationship_ = nullptr;
  return temp;
}
inline ::organization::RelationshipModel* CreateRelationshipRequest::_internal_mutable_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::RelationshipModel>(GetArena());
    _impl_.relationship_ = reinterpret_cast<::organization::RelationshipModel*>(p);
  }
  return _impl_.relationship_;
}
inline ::organization::RelationshipModel* CreateRelationshipRequest::mutable_relationship() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::RelationshipModel* _msg = _internal_mutable_relationship();
  // @@protoc_insertion_point(field_mutable:organization.CreateRelationshipRequest.relationship)
  return _msg;
}
inline void CreateRelationshipRequest::set_allocated_relationship(::organization::RelationshipModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.relationship_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.relationship_ = reinterpret_cast<::organization::RelationshipModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.CreateRelationshipRequest.relationship)
}

// -------------------------------------------------------------------

// CreateRelationshipResponse

// .organization.RelationshipModel relationship = 1;
inline bool CreateRelationshipResponse::has_relationship() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.relationship_ != nullptr);
  return value;
}
inline void CreateRelationshipResponse::clear_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_ != nullptr) _impl_.relationship_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::RelationshipModel& CreateRelationshipResponse::_internal_relationship() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::RelationshipModel* p = _impl_.relationship_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::RelationshipModel&>(::organization::_RelationshipModel_default_instance_);
}
inline const ::organization::RelationshipModel& CreateRelationshipResponse::relationship() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.CreateRelationshipResponse.relationship)
  return _internal_relationship();
}
inline void CreateRelationshipResponse::unsafe_arena_set_allocated_relationship(::organization::RelationshipModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.relationship_);
  }
  _impl_.relationship_ = reinterpret_cast<::organization::RelationshipModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.CreateRelationshipResponse.relationship)
}
inline ::organization::RelationshipModel* CreateRelationshipResponse::release_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipModel* released = _impl_.relationship_;
  _impl_.relationship_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::RelationshipModel* CreateRelationshipResponse::unsafe_arena_release_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.CreateRelationshipResponse.relationship)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipModel* temp = _impl_.relationship_;
  _impl_.relationship_ = nullptr;
  return temp;
}
inline ::organization::RelationshipModel* CreateRelationshipResponse::_internal_mutable_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::RelationshipModel>(GetArena());
    _impl_.relationship_ = reinterpret_cast<::organization::RelationshipModel*>(p);
  }
  return _impl_.relationship_;
}
inline ::organization::RelationshipModel* CreateRelationshipResponse::mutable_relationship() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::RelationshipModel* _msg = _internal_mutable_relationship();
  // @@protoc_insertion_point(field_mutable:organization.CreateRelationshipResponse.relationship)
  return _msg;
}
inline void CreateRelationshipResponse::set_allocated_relationship(::organization::RelationshipModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.relationship_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.relationship_ = reinterpret_cast<::organization::RelationshipModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.CreateRelationshipResponse.relationship)
}

// -------------------------------------------------------------------

// UpdateRelationshipRequest

// .organization.RelationshipModel relationship = 1;
inline bool UpdateRelationshipRequest::has_relationship() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.relationship_ != nullptr);
  return value;
}
inline void UpdateRelationshipRequest::clear_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_ != nullptr) _impl_.relationship_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::RelationshipModel& UpdateRelationshipRequest::_internal_relationship() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::RelationshipModel* p = _impl_.relationship_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::RelationshipModel&>(::organization::_RelationshipModel_default_instance_);
}
inline const ::organization::RelationshipModel& UpdateRelationshipRequest::relationship() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.UpdateRelationshipRequest.relationship)
  return _internal_relationship();
}
inline void UpdateRelationshipRequest::unsafe_arena_set_allocated_relationship(::organization::RelationshipModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.relationship_);
  }
  _impl_.relationship_ = reinterpret_cast<::organization::RelationshipModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.UpdateRelationshipRequest.relationship)
}
inline ::organization::RelationshipModel* UpdateRelationshipRequest::release_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipModel* released = _impl_.relationship_;
  _impl_.relationship_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::RelationshipModel* UpdateRelationshipRequest::unsafe_arena_release_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.UpdateRelationshipRequest.relationship)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipModel* temp = _impl_.relationship_;
  _impl_.relationship_ = nullptr;
  return temp;
}
inline ::organization::RelationshipModel* UpdateRelationshipRequest::_internal_mutable_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::RelationshipModel>(GetArena());
    _impl_.relationship_ = reinterpret_cast<::organization::RelationshipModel*>(p);
  }
  return _impl_.relationship_;
}
inline ::organization::RelationshipModel* UpdateRelationshipRequest::mutable_relationship() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::RelationshipModel* _msg = _internal_mutable_relationship();
  // @@protoc_insertion_point(field_mutable:organization.UpdateRelationshipRequest.relationship)
  return _msg;
}
inline void UpdateRelationshipRequest::set_allocated_relationship(::organization::RelationshipModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.relationship_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.relationship_ = reinterpret_cast<::organization::RelationshipModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.UpdateRelationshipRequest.relationship)
}

// -------------------------------------------------------------------

// UpdateRelationshipResponse

// .organization.RelationshipModel relationship = 1;
inline bool UpdateRelationshipResponse::has_relationship() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.relationship_ != nullptr);
  return value;
}
inline void UpdateRelationshipResponse::clear_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_ != nullptr) _impl_.relationship_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::RelationshipModel& UpdateRelationshipResponse::_internal_relationship() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::RelationshipModel* p = _impl_.relationship_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::RelationshipModel&>(::organization::_RelationshipModel_default_instance_);
}
inline const ::organization::RelationshipModel& UpdateRelationshipResponse::relationship() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.UpdateRelationshipResponse.relationship)
  return _internal_relationship();
}
inline void UpdateRelationshipResponse::unsafe_arena_set_allocated_relationship(::organization::RelationshipModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.relationship_);
  }
  _impl_.relationship_ = reinterpret_cast<::organization::RelationshipModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.UpdateRelationshipResponse.relationship)
}
inline ::organization::RelationshipModel* UpdateRelationshipResponse::release_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipModel* released = _impl_.relationship_;
  _impl_.relationship_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::RelationshipModel* UpdateRelationshipResponse::unsafe_arena_release_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.UpdateRelationshipResponse.relationship)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipModel* temp = _impl_.relationship_;
  _impl_.relationship_ = nullptr;
  return temp;
}
inline ::organization::RelationshipModel* UpdateRelationshipResponse::_internal_mutable_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::RelationshipModel>(GetArena());
    _impl_.relationship_ = reinterpret_cast<::organization::RelationshipModel*>(p);
  }
  return _impl_.relationship_;
}
inline ::organization::RelationshipModel* UpdateRelationshipResponse::mutable_relationship() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::RelationshipModel* _msg = _internal_mutable_relationship();
  // @@protoc_insertion_point(field_mutable:organization.UpdateRelationshipResponse.relationship)
  return _msg;
}
inline void UpdateRelationshipResponse::set_allocated_relationship(::organization::RelationshipModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.relationship_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.relationship_ = reinterpret_cast<::organization::RelationshipModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.UpdateRelationshipResponse.relationship)
}

// -------------------------------------------------------------------

// EnsureRelationshipExistsRequest

// .organization.RelationshipModel relationship = 1;
inline bool EnsureRelationshipExistsRequest::has_relationship() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.relationship_ != nullptr);
  return value;
}
inline void EnsureRelationshipExistsRequest::clear_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_ != nullptr) _impl_.relationship_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::RelationshipModel& EnsureRelationshipExistsRequest::_internal_relationship() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::RelationshipModel* p = _impl_.relationship_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::RelationshipModel&>(::organization::_RelationshipModel_default_instance_);
}
inline const ::organization::RelationshipModel& EnsureRelationshipExistsRequest::relationship() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.EnsureRelationshipExistsRequest.relationship)
  return _internal_relationship();
}
inline void EnsureRelationshipExistsRequest::unsafe_arena_set_allocated_relationship(::organization::RelationshipModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.relationship_);
  }
  _impl_.relationship_ = reinterpret_cast<::organization::RelationshipModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.EnsureRelationshipExistsRequest.relationship)
}
inline ::organization::RelationshipModel* EnsureRelationshipExistsRequest::release_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipModel* released = _impl_.relationship_;
  _impl_.relationship_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::RelationshipModel* EnsureRelationshipExistsRequest::unsafe_arena_release_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.EnsureRelationshipExistsRequest.relationship)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipModel* temp = _impl_.relationship_;
  _impl_.relationship_ = nullptr;
  return temp;
}
inline ::organization::RelationshipModel* EnsureRelationshipExistsRequest::_internal_mutable_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::RelationshipModel>(GetArena());
    _impl_.relationship_ = reinterpret_cast<::organization::RelationshipModel*>(p);
  }
  return _impl_.relationship_;
}
inline ::organization::RelationshipModel* EnsureRelationshipExistsRequest::mutable_relationship() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::RelationshipModel* _msg = _internal_mutable_relationship();
  // @@protoc_insertion_point(field_mutable:organization.EnsureRelationshipExistsRequest.relationship)
  return _msg;
}
inline void EnsureRelationshipExistsRequest::set_allocated_relationship(::organization::RelationshipModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.relationship_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.relationship_ = reinterpret_cast<::organization::RelationshipModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.EnsureRelationshipExistsRequest.relationship)
}

// -------------------------------------------------------------------

// EnsureRelationshipExistsResponse

// .organization.RelationshipModel relationship = 1;
inline bool EnsureRelationshipExistsResponse::has_relationship() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.relationship_ != nullptr);
  return value;
}
inline void EnsureRelationshipExistsResponse::clear_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_ != nullptr) _impl_.relationship_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::RelationshipModel& EnsureRelationshipExistsResponse::_internal_relationship() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::RelationshipModel* p = _impl_.relationship_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::RelationshipModel&>(::organization::_RelationshipModel_default_instance_);
}
inline const ::organization::RelationshipModel& EnsureRelationshipExistsResponse::relationship() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.EnsureRelationshipExistsResponse.relationship)
  return _internal_relationship();
}
inline void EnsureRelationshipExistsResponse::unsafe_arena_set_allocated_relationship(::organization::RelationshipModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.relationship_);
  }
  _impl_.relationship_ = reinterpret_cast<::organization::RelationshipModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.EnsureRelationshipExistsResponse.relationship)
}
inline ::organization::RelationshipModel* EnsureRelationshipExistsResponse::release_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipModel* released = _impl_.relationship_;
  _impl_.relationship_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::RelationshipModel* EnsureRelationshipExistsResponse::unsafe_arena_release_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.EnsureRelationshipExistsResponse.relationship)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipModel* temp = _impl_.relationship_;
  _impl_.relationship_ = nullptr;
  return temp;
}
inline ::organization::RelationshipModel* EnsureRelationshipExistsResponse::_internal_mutable_relationship() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::RelationshipModel>(GetArena());
    _impl_.relationship_ = reinterpret_cast<::organization::RelationshipModel*>(p);
  }
  return _impl_.relationship_;
}
inline ::organization::RelationshipModel* EnsureRelationshipExistsResponse::mutable_relationship() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::RelationshipModel* _msg = _internal_mutable_relationship();
  // @@protoc_insertion_point(field_mutable:organization.EnsureRelationshipExistsResponse.relationship)
  return _msg;
}
inline void EnsureRelationshipExistsResponse::set_allocated_relationship(::organization::RelationshipModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.relationship_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.relationship_ = reinterpret_cast<::organization::RelationshipModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.EnsureRelationshipExistsResponse.relationship)
}

// -------------------------------------------------------------------

// ListRelationshipsRequest

// int64 organization_id = 1;
inline void ListRelationshipsRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t ListRelationshipsRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:organization.ListRelationshipsRequest.organization_id)
  return _internal_organization_id();
}
inline void ListRelationshipsRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:organization.ListRelationshipsRequest.organization_id)
}
inline ::int64_t ListRelationshipsRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void ListRelationshipsRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// int32 limit = 2;
inline void ListRelationshipsRequest::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = 0;
}
inline ::int32_t ListRelationshipsRequest::limit() const {
  // @@protoc_insertion_point(field_get:organization.ListRelationshipsRequest.limit)
  return _internal_limit();
}
inline void ListRelationshipsRequest::set_limit(::int32_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:organization.ListRelationshipsRequest.limit)
}
inline ::int32_t ListRelationshipsRequest::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void ListRelationshipsRequest::_internal_set_limit(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// int32 offset = 3;
inline void ListRelationshipsRequest::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0;
}
inline ::int32_t ListRelationshipsRequest::offset() const {
  // @@protoc_insertion_point(field_get:organization.ListRelationshipsRequest.offset)
  return _internal_offset();
}
inline void ListRelationshipsRequest::set_offset(::int32_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:organization.ListRelationshipsRequest.offset)
}
inline ::int32_t ListRelationshipsRequest::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void ListRelationshipsRequest::_internal_set_offset(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// -------------------------------------------------------------------

// ListRelationshipsResponse

// repeated .organization.Relationship relationships = 1;
inline int ListRelationshipsResponse::_internal_relationships_size() const {
  return _internal_relationships().size();
}
inline int ListRelationshipsResponse::relationships_size() const {
  return _internal_relationships_size();
}
inline void ListRelationshipsResponse::clear_relationships() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relationships_.Clear();
}
inline ::organization::Relationship* ListRelationshipsResponse::mutable_relationships(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:organization.ListRelationshipsResponse.relationships)
  return _internal_mutable_relationships()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::organization::Relationship>* ListRelationshipsResponse::mutable_relationships()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:organization.ListRelationshipsResponse.relationships)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_relationships();
}
inline const ::organization::Relationship& ListRelationshipsResponse::relationships(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.ListRelationshipsResponse.relationships)
  return _internal_relationships().Get(index);
}
inline ::organization::Relationship* ListRelationshipsResponse::add_relationships() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::organization::Relationship* _add = _internal_mutable_relationships()->Add();
  // @@protoc_insertion_point(field_add:organization.ListRelationshipsResponse.relationships)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::organization::Relationship>& ListRelationshipsResponse::relationships() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:organization.ListRelationshipsResponse.relationships)
  return _internal_relationships();
}
inline const ::google::protobuf::RepeatedPtrField<::organization::Relationship>&
ListRelationshipsResponse::_internal_relationships() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.relationships_;
}
inline ::google::protobuf::RepeatedPtrField<::organization::Relationship>*
ListRelationshipsResponse::_internal_mutable_relationships() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.relationships_;
}

// int32 total_count = 2;
inline void ListRelationshipsResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = 0;
}
inline ::int32_t ListRelationshipsResponse::total_count() const {
  // @@protoc_insertion_point(field_get:organization.ListRelationshipsResponse.total_count)
  return _internal_total_count();
}
inline void ListRelationshipsResponse::set_total_count(::int32_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:organization.ListRelationshipsResponse.total_count)
}
inline ::int32_t ListRelationshipsResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void ListRelationshipsResponse::_internal_set_total_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// -------------------------------------------------------------------

// GetRelationshipTypeRequest

// int64 id = 1;
inline void GetRelationshipTypeRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t GetRelationshipTypeRequest::id() const {
  // @@protoc_insertion_point(field_get:organization.GetRelationshipTypeRequest.id)
  return _internal_id();
}
inline void GetRelationshipTypeRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:organization.GetRelationshipTypeRequest.id)
}
inline ::int64_t GetRelationshipTypeRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void GetRelationshipTypeRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// GetRelationshipTypeResponse

// .organization.RelationshipTypeModel relationship_type = 1;
inline bool GetRelationshipTypeResponse::has_relationship_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.relationship_type_ != nullptr);
  return value;
}
inline void GetRelationshipTypeResponse::clear_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_type_ != nullptr) _impl_.relationship_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::RelationshipTypeModel& GetRelationshipTypeResponse::_internal_relationship_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::RelationshipTypeModel* p = _impl_.relationship_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::RelationshipTypeModel&>(::organization::_RelationshipTypeModel_default_instance_);
}
inline const ::organization::RelationshipTypeModel& GetRelationshipTypeResponse::relationship_type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.GetRelationshipTypeResponse.relationship_type)
  return _internal_relationship_type();
}
inline void GetRelationshipTypeResponse::unsafe_arena_set_allocated_relationship_type(::organization::RelationshipTypeModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.relationship_type_);
  }
  _impl_.relationship_type_ = reinterpret_cast<::organization::RelationshipTypeModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.GetRelationshipTypeResponse.relationship_type)
}
inline ::organization::RelationshipTypeModel* GetRelationshipTypeResponse::release_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipTypeModel* released = _impl_.relationship_type_;
  _impl_.relationship_type_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::RelationshipTypeModel* GetRelationshipTypeResponse::unsafe_arena_release_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.GetRelationshipTypeResponse.relationship_type)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipTypeModel* temp = _impl_.relationship_type_;
  _impl_.relationship_type_ = nullptr;
  return temp;
}
inline ::organization::RelationshipTypeModel* GetRelationshipTypeResponse::_internal_mutable_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_type_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::RelationshipTypeModel>(GetArena());
    _impl_.relationship_type_ = reinterpret_cast<::organization::RelationshipTypeModel*>(p);
  }
  return _impl_.relationship_type_;
}
inline ::organization::RelationshipTypeModel* GetRelationshipTypeResponse::mutable_relationship_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::RelationshipTypeModel* _msg = _internal_mutable_relationship_type();
  // @@protoc_insertion_point(field_mutable:organization.GetRelationshipTypeResponse.relationship_type)
  return _msg;
}
inline void GetRelationshipTypeResponse::set_allocated_relationship_type(::organization::RelationshipTypeModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.relationship_type_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.relationship_type_ = reinterpret_cast<::organization::RelationshipTypeModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.GetRelationshipTypeResponse.relationship_type)
}

// -------------------------------------------------------------------

// ListRelationshipTypesRequest

// int64 organization_id = 1;
inline void ListRelationshipTypesRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t ListRelationshipTypesRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:organization.ListRelationshipTypesRequest.organization_id)
  return _internal_organization_id();
}
inline void ListRelationshipTypesRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:organization.ListRelationshipTypesRequest.organization_id)
}
inline ::int64_t ListRelationshipTypesRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void ListRelationshipTypesRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// -------------------------------------------------------------------

// ListRelationshipTypesResponse

// repeated .organization.RelationshipTypeModel relationship_types = 1;
inline int ListRelationshipTypesResponse::_internal_relationship_types_size() const {
  return _internal_relationship_types().size();
}
inline int ListRelationshipTypesResponse::relationship_types_size() const {
  return _internal_relationship_types_size();
}
inline void ListRelationshipTypesResponse::clear_relationship_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relationship_types_.Clear();
}
inline ::organization::RelationshipTypeModel* ListRelationshipTypesResponse::mutable_relationship_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:organization.ListRelationshipTypesResponse.relationship_types)
  return _internal_mutable_relationship_types()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::organization::RelationshipTypeModel>* ListRelationshipTypesResponse::mutable_relationship_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:organization.ListRelationshipTypesResponse.relationship_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_relationship_types();
}
inline const ::organization::RelationshipTypeModel& ListRelationshipTypesResponse::relationship_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.ListRelationshipTypesResponse.relationship_types)
  return _internal_relationship_types().Get(index);
}
inline ::organization::RelationshipTypeModel* ListRelationshipTypesResponse::add_relationship_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::organization::RelationshipTypeModel* _add = _internal_mutable_relationship_types()->Add();
  // @@protoc_insertion_point(field_add:organization.ListRelationshipTypesResponse.relationship_types)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::organization::RelationshipTypeModel>& ListRelationshipTypesResponse::relationship_types() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:organization.ListRelationshipTypesResponse.relationship_types)
  return _internal_relationship_types();
}
inline const ::google::protobuf::RepeatedPtrField<::organization::RelationshipTypeModel>&
ListRelationshipTypesResponse::_internal_relationship_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.relationship_types_;
}
inline ::google::protobuf::RepeatedPtrField<::organization::RelationshipTypeModel>*
ListRelationshipTypesResponse::_internal_mutable_relationship_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.relationship_types_;
}

// -------------------------------------------------------------------

// CreateRelationshipTypeRequest

// .organization.RelationshipTypeModel relationship_type = 1;
inline bool CreateRelationshipTypeRequest::has_relationship_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.relationship_type_ != nullptr);
  return value;
}
inline void CreateRelationshipTypeRequest::clear_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_type_ != nullptr) _impl_.relationship_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::RelationshipTypeModel& CreateRelationshipTypeRequest::_internal_relationship_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::RelationshipTypeModel* p = _impl_.relationship_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::RelationshipTypeModel&>(::organization::_RelationshipTypeModel_default_instance_);
}
inline const ::organization::RelationshipTypeModel& CreateRelationshipTypeRequest::relationship_type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.CreateRelationshipTypeRequest.relationship_type)
  return _internal_relationship_type();
}
inline void CreateRelationshipTypeRequest::unsafe_arena_set_allocated_relationship_type(::organization::RelationshipTypeModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.relationship_type_);
  }
  _impl_.relationship_type_ = reinterpret_cast<::organization::RelationshipTypeModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.CreateRelationshipTypeRequest.relationship_type)
}
inline ::organization::RelationshipTypeModel* CreateRelationshipTypeRequest::release_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipTypeModel* released = _impl_.relationship_type_;
  _impl_.relationship_type_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::RelationshipTypeModel* CreateRelationshipTypeRequest::unsafe_arena_release_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.CreateRelationshipTypeRequest.relationship_type)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipTypeModel* temp = _impl_.relationship_type_;
  _impl_.relationship_type_ = nullptr;
  return temp;
}
inline ::organization::RelationshipTypeModel* CreateRelationshipTypeRequest::_internal_mutable_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_type_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::RelationshipTypeModel>(GetArena());
    _impl_.relationship_type_ = reinterpret_cast<::organization::RelationshipTypeModel*>(p);
  }
  return _impl_.relationship_type_;
}
inline ::organization::RelationshipTypeModel* CreateRelationshipTypeRequest::mutable_relationship_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::RelationshipTypeModel* _msg = _internal_mutable_relationship_type();
  // @@protoc_insertion_point(field_mutable:organization.CreateRelationshipTypeRequest.relationship_type)
  return _msg;
}
inline void CreateRelationshipTypeRequest::set_allocated_relationship_type(::organization::RelationshipTypeModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.relationship_type_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.relationship_type_ = reinterpret_cast<::organization::RelationshipTypeModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.CreateRelationshipTypeRequest.relationship_type)
}

// -------------------------------------------------------------------

// CreateRelationshipTypeResponse

// .organization.RelationshipTypeModel relationship_type = 1;
inline bool CreateRelationshipTypeResponse::has_relationship_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.relationship_type_ != nullptr);
  return value;
}
inline void CreateRelationshipTypeResponse::clear_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_type_ != nullptr) _impl_.relationship_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::RelationshipTypeModel& CreateRelationshipTypeResponse::_internal_relationship_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::RelationshipTypeModel* p = _impl_.relationship_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::RelationshipTypeModel&>(::organization::_RelationshipTypeModel_default_instance_);
}
inline const ::organization::RelationshipTypeModel& CreateRelationshipTypeResponse::relationship_type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.CreateRelationshipTypeResponse.relationship_type)
  return _internal_relationship_type();
}
inline void CreateRelationshipTypeResponse::unsafe_arena_set_allocated_relationship_type(::organization::RelationshipTypeModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.relationship_type_);
  }
  _impl_.relationship_type_ = reinterpret_cast<::organization::RelationshipTypeModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.CreateRelationshipTypeResponse.relationship_type)
}
inline ::organization::RelationshipTypeModel* CreateRelationshipTypeResponse::release_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipTypeModel* released = _impl_.relationship_type_;
  _impl_.relationship_type_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::RelationshipTypeModel* CreateRelationshipTypeResponse::unsafe_arena_release_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.CreateRelationshipTypeResponse.relationship_type)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipTypeModel* temp = _impl_.relationship_type_;
  _impl_.relationship_type_ = nullptr;
  return temp;
}
inline ::organization::RelationshipTypeModel* CreateRelationshipTypeResponse::_internal_mutable_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_type_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::RelationshipTypeModel>(GetArena());
    _impl_.relationship_type_ = reinterpret_cast<::organization::RelationshipTypeModel*>(p);
  }
  return _impl_.relationship_type_;
}
inline ::organization::RelationshipTypeModel* CreateRelationshipTypeResponse::mutable_relationship_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::RelationshipTypeModel* _msg = _internal_mutable_relationship_type();
  // @@protoc_insertion_point(field_mutable:organization.CreateRelationshipTypeResponse.relationship_type)
  return _msg;
}
inline void CreateRelationshipTypeResponse::set_allocated_relationship_type(::organization::RelationshipTypeModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.relationship_type_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.relationship_type_ = reinterpret_cast<::organization::RelationshipTypeModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.CreateRelationshipTypeResponse.relationship_type)
}

// -------------------------------------------------------------------

// UpdateRelationshipTypeRequest

// .organization.RelationshipTypeModel relationship_type = 1;
inline bool UpdateRelationshipTypeRequest::has_relationship_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.relationship_type_ != nullptr);
  return value;
}
inline void UpdateRelationshipTypeRequest::clear_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_type_ != nullptr) _impl_.relationship_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::RelationshipTypeModel& UpdateRelationshipTypeRequest::_internal_relationship_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::RelationshipTypeModel* p = _impl_.relationship_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::RelationshipTypeModel&>(::organization::_RelationshipTypeModel_default_instance_);
}
inline const ::organization::RelationshipTypeModel& UpdateRelationshipTypeRequest::relationship_type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.UpdateRelationshipTypeRequest.relationship_type)
  return _internal_relationship_type();
}
inline void UpdateRelationshipTypeRequest::unsafe_arena_set_allocated_relationship_type(::organization::RelationshipTypeModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.relationship_type_);
  }
  _impl_.relationship_type_ = reinterpret_cast<::organization::RelationshipTypeModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.UpdateRelationshipTypeRequest.relationship_type)
}
inline ::organization::RelationshipTypeModel* UpdateRelationshipTypeRequest::release_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipTypeModel* released = _impl_.relationship_type_;
  _impl_.relationship_type_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::RelationshipTypeModel* UpdateRelationshipTypeRequest::unsafe_arena_release_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.UpdateRelationshipTypeRequest.relationship_type)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipTypeModel* temp = _impl_.relationship_type_;
  _impl_.relationship_type_ = nullptr;
  return temp;
}
inline ::organization::RelationshipTypeModel* UpdateRelationshipTypeRequest::_internal_mutable_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_type_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::RelationshipTypeModel>(GetArena());
    _impl_.relationship_type_ = reinterpret_cast<::organization::RelationshipTypeModel*>(p);
  }
  return _impl_.relationship_type_;
}
inline ::organization::RelationshipTypeModel* UpdateRelationshipTypeRequest::mutable_relationship_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::RelationshipTypeModel* _msg = _internal_mutable_relationship_type();
  // @@protoc_insertion_point(field_mutable:organization.UpdateRelationshipTypeRequest.relationship_type)
  return _msg;
}
inline void UpdateRelationshipTypeRequest::set_allocated_relationship_type(::organization::RelationshipTypeModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.relationship_type_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.relationship_type_ = reinterpret_cast<::organization::RelationshipTypeModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.UpdateRelationshipTypeRequest.relationship_type)
}

// -------------------------------------------------------------------

// UpdateRelationshipTypeResponse

// .organization.RelationshipTypeModel relationship_type = 1;
inline bool UpdateRelationshipTypeResponse::has_relationship_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.relationship_type_ != nullptr);
  return value;
}
inline void UpdateRelationshipTypeResponse::clear_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_type_ != nullptr) _impl_.relationship_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::RelationshipTypeModel& UpdateRelationshipTypeResponse::_internal_relationship_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::RelationshipTypeModel* p = _impl_.relationship_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::RelationshipTypeModel&>(::organization::_RelationshipTypeModel_default_instance_);
}
inline const ::organization::RelationshipTypeModel& UpdateRelationshipTypeResponse::relationship_type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.UpdateRelationshipTypeResponse.relationship_type)
  return _internal_relationship_type();
}
inline void UpdateRelationshipTypeResponse::unsafe_arena_set_allocated_relationship_type(::organization::RelationshipTypeModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.relationship_type_);
  }
  _impl_.relationship_type_ = reinterpret_cast<::organization::RelationshipTypeModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.UpdateRelationshipTypeResponse.relationship_type)
}
inline ::organization::RelationshipTypeModel* UpdateRelationshipTypeResponse::release_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipTypeModel* released = _impl_.relationship_type_;
  _impl_.relationship_type_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::RelationshipTypeModel* UpdateRelationshipTypeResponse::unsafe_arena_release_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.UpdateRelationshipTypeResponse.relationship_type)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::RelationshipTypeModel* temp = _impl_.relationship_type_;
  _impl_.relationship_type_ = nullptr;
  return temp;
}
inline ::organization::RelationshipTypeModel* UpdateRelationshipTypeResponse::_internal_mutable_relationship_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relationship_type_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::RelationshipTypeModel>(GetArena());
    _impl_.relationship_type_ = reinterpret_cast<::organization::RelationshipTypeModel*>(p);
  }
  return _impl_.relationship_type_;
}
inline ::organization::RelationshipTypeModel* UpdateRelationshipTypeResponse::mutable_relationship_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::RelationshipTypeModel* _msg = _internal_mutable_relationship_type();
  // @@protoc_insertion_point(field_mutable:organization.UpdateRelationshipTypeResponse.relationship_type)
  return _msg;
}
inline void UpdateRelationshipTypeResponse::set_allocated_relationship_type(::organization::RelationshipTypeModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.relationship_type_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.relationship_type_ = reinterpret_cast<::organization::RelationshipTypeModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.UpdateRelationshipTypeResponse.relationship_type)
}

// -------------------------------------------------------------------

// CreateContactRequest

// .organization.ContactModel contact = 1;
inline bool CreateContactRequest::has_contact() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.contact_ != nullptr);
  return value;
}
inline void CreateContactRequest::clear_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.contact_ != nullptr) _impl_.contact_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::ContactModel& CreateContactRequest::_internal_contact() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::ContactModel* p = _impl_.contact_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::ContactModel&>(::organization::_ContactModel_default_instance_);
}
inline const ::organization::ContactModel& CreateContactRequest::contact() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.CreateContactRequest.contact)
  return _internal_contact();
}
inline void CreateContactRequest::unsafe_arena_set_allocated_contact(::organization::ContactModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.contact_);
  }
  _impl_.contact_ = reinterpret_cast<::organization::ContactModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.CreateContactRequest.contact)
}
inline ::organization::ContactModel* CreateContactRequest::release_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::ContactModel* released = _impl_.contact_;
  _impl_.contact_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::ContactModel* CreateContactRequest::unsafe_arena_release_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.CreateContactRequest.contact)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::ContactModel* temp = _impl_.contact_;
  _impl_.contact_ = nullptr;
  return temp;
}
inline ::organization::ContactModel* CreateContactRequest::_internal_mutable_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.contact_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::ContactModel>(GetArena());
    _impl_.contact_ = reinterpret_cast<::organization::ContactModel*>(p);
  }
  return _impl_.contact_;
}
inline ::organization::ContactModel* CreateContactRequest::mutable_contact() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::ContactModel* _msg = _internal_mutable_contact();
  // @@protoc_insertion_point(field_mutable:organization.CreateContactRequest.contact)
  return _msg;
}
inline void CreateContactRequest::set_allocated_contact(::organization::ContactModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.contact_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.contact_ = reinterpret_cast<::organization::ContactModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.CreateContactRequest.contact)
}

// -------------------------------------------------------------------

// CreateContactResponse

// .organization.ContactModel contact = 1;
inline bool CreateContactResponse::has_contact() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.contact_ != nullptr);
  return value;
}
inline void CreateContactResponse::clear_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.contact_ != nullptr) _impl_.contact_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::ContactModel& CreateContactResponse::_internal_contact() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::ContactModel* p = _impl_.contact_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::ContactModel&>(::organization::_ContactModel_default_instance_);
}
inline const ::organization::ContactModel& CreateContactResponse::contact() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.CreateContactResponse.contact)
  return _internal_contact();
}
inline void CreateContactResponse::unsafe_arena_set_allocated_contact(::organization::ContactModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.contact_);
  }
  _impl_.contact_ = reinterpret_cast<::organization::ContactModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.CreateContactResponse.contact)
}
inline ::organization::ContactModel* CreateContactResponse::release_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::ContactModel* released = _impl_.contact_;
  _impl_.contact_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::ContactModel* CreateContactResponse::unsafe_arena_release_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.CreateContactResponse.contact)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::ContactModel* temp = _impl_.contact_;
  _impl_.contact_ = nullptr;
  return temp;
}
inline ::organization::ContactModel* CreateContactResponse::_internal_mutable_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.contact_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::ContactModel>(GetArena());
    _impl_.contact_ = reinterpret_cast<::organization::ContactModel*>(p);
  }
  return _impl_.contact_;
}
inline ::organization::ContactModel* CreateContactResponse::mutable_contact() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::ContactModel* _msg = _internal_mutable_contact();
  // @@protoc_insertion_point(field_mutable:organization.CreateContactResponse.contact)
  return _msg;
}
inline void CreateContactResponse::set_allocated_contact(::organization::ContactModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.contact_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.contact_ = reinterpret_cast<::organization::ContactModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.CreateContactResponse.contact)
}

// -------------------------------------------------------------------

// UpdateContactRequest

// .organization.ContactModel contact = 1;
inline bool UpdateContactRequest::has_contact() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.contact_ != nullptr);
  return value;
}
inline void UpdateContactRequest::clear_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.contact_ != nullptr) _impl_.contact_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::ContactModel& UpdateContactRequest::_internal_contact() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::ContactModel* p = _impl_.contact_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::ContactModel&>(::organization::_ContactModel_default_instance_);
}
inline const ::organization::ContactModel& UpdateContactRequest::contact() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.UpdateContactRequest.contact)
  return _internal_contact();
}
inline void UpdateContactRequest::unsafe_arena_set_allocated_contact(::organization::ContactModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.contact_);
  }
  _impl_.contact_ = reinterpret_cast<::organization::ContactModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.UpdateContactRequest.contact)
}
inline ::organization::ContactModel* UpdateContactRequest::release_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::ContactModel* released = _impl_.contact_;
  _impl_.contact_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::ContactModel* UpdateContactRequest::unsafe_arena_release_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.UpdateContactRequest.contact)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::ContactModel* temp = _impl_.contact_;
  _impl_.contact_ = nullptr;
  return temp;
}
inline ::organization::ContactModel* UpdateContactRequest::_internal_mutable_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.contact_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::ContactModel>(GetArena());
    _impl_.contact_ = reinterpret_cast<::organization::ContactModel*>(p);
  }
  return _impl_.contact_;
}
inline ::organization::ContactModel* UpdateContactRequest::mutable_contact() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::ContactModel* _msg = _internal_mutable_contact();
  // @@protoc_insertion_point(field_mutable:organization.UpdateContactRequest.contact)
  return _msg;
}
inline void UpdateContactRequest::set_allocated_contact(::organization::ContactModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.contact_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.contact_ = reinterpret_cast<::organization::ContactModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.UpdateContactRequest.contact)
}

// -------------------------------------------------------------------

// UpdateContactResponse

// .organization.ContactModel contact = 1;
inline bool UpdateContactResponse::has_contact() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.contact_ != nullptr);
  return value;
}
inline void UpdateContactResponse::clear_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.contact_ != nullptr) _impl_.contact_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::ContactModel& UpdateContactResponse::_internal_contact() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::ContactModel* p = _impl_.contact_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::ContactModel&>(::organization::_ContactModel_default_instance_);
}
inline const ::organization::ContactModel& UpdateContactResponse::contact() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.UpdateContactResponse.contact)
  return _internal_contact();
}
inline void UpdateContactResponse::unsafe_arena_set_allocated_contact(::organization::ContactModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.contact_);
  }
  _impl_.contact_ = reinterpret_cast<::organization::ContactModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.UpdateContactResponse.contact)
}
inline ::organization::ContactModel* UpdateContactResponse::release_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::ContactModel* released = _impl_.contact_;
  _impl_.contact_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::ContactModel* UpdateContactResponse::unsafe_arena_release_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.UpdateContactResponse.contact)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::ContactModel* temp = _impl_.contact_;
  _impl_.contact_ = nullptr;
  return temp;
}
inline ::organization::ContactModel* UpdateContactResponse::_internal_mutable_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.contact_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::ContactModel>(GetArena());
    _impl_.contact_ = reinterpret_cast<::organization::ContactModel*>(p);
  }
  return _impl_.contact_;
}
inline ::organization::ContactModel* UpdateContactResponse::mutable_contact() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::ContactModel* _msg = _internal_mutable_contact();
  // @@protoc_insertion_point(field_mutable:organization.UpdateContactResponse.contact)
  return _msg;
}
inline void UpdateContactResponse::set_allocated_contact(::organization::ContactModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.contact_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.contact_ = reinterpret_cast<::organization::ContactModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.UpdateContactResponse.contact)
}

// -------------------------------------------------------------------

// GetContactRequest

// int64 id = 1;
inline void GetContactRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t GetContactRequest::id() const {
  // @@protoc_insertion_point(field_get:organization.GetContactRequest.id)
  return _internal_id();
}
inline void GetContactRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:organization.GetContactRequest.id)
}
inline ::int64_t GetContactRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void GetContactRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// GetContactResponse

// .organization.ContactModel contact = 1;
inline bool GetContactResponse::has_contact() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.contact_ != nullptr);
  return value;
}
inline void GetContactResponse::clear_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.contact_ != nullptr) _impl_.contact_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::organization::ContactModel& GetContactResponse::_internal_contact() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::ContactModel* p = _impl_.contact_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::ContactModel&>(::organization::_ContactModel_default_instance_);
}
inline const ::organization::ContactModel& GetContactResponse::contact() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.GetContactResponse.contact)
  return _internal_contact();
}
inline void GetContactResponse::unsafe_arena_set_allocated_contact(::organization::ContactModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.contact_);
  }
  _impl_.contact_ = reinterpret_cast<::organization::ContactModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:organization.GetContactResponse.contact)
}
inline ::organization::ContactModel* GetContactResponse::release_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::ContactModel* released = _impl_.contact_;
  _impl_.contact_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::ContactModel* GetContactResponse::unsafe_arena_release_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:organization.GetContactResponse.contact)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::ContactModel* temp = _impl_.contact_;
  _impl_.contact_ = nullptr;
  return temp;
}
inline ::organization::ContactModel* GetContactResponse::_internal_mutable_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.contact_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::ContactModel>(GetArena());
    _impl_.contact_ = reinterpret_cast<::organization::ContactModel*>(p);
  }
  return _impl_.contact_;
}
inline ::organization::ContactModel* GetContactResponse::mutable_contact() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::ContactModel* _msg = _internal_mutable_contact();
  // @@protoc_insertion_point(field_mutable:organization.GetContactResponse.contact)
  return _msg;
}
inline void GetContactResponse::set_allocated_contact(::organization::ContactModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.contact_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.contact_ = reinterpret_cast<::organization::ContactModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:organization.GetContactResponse.contact)
}

// -------------------------------------------------------------------

// DeleteContactRequest

// int64 id = 1;
inline void DeleteContactRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t DeleteContactRequest::id() const {
  // @@protoc_insertion_point(field_get:organization.DeleteContactRequest.id)
  return _internal_id();
}
inline void DeleteContactRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:organization.DeleteContactRequest.id)
}
inline ::int64_t DeleteContactRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void DeleteContactRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// DeleteContactResponse

// bool success = 1;
inline void DeleteContactResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool DeleteContactResponse::success() const {
  // @@protoc_insertion_point(field_get:organization.DeleteContactResponse.success)
  return _internal_success();
}
inline void DeleteContactResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:organization.DeleteContactResponse.success)
}
inline bool DeleteContactResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void DeleteContactResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// ListContactsRequest

// int64 lead_id = 1;
inline void ListContactsRequest::clear_lead_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = ::int64_t{0};
}
inline ::int64_t ListContactsRequest::lead_id() const {
  // @@protoc_insertion_point(field_get:organization.ListContactsRequest.lead_id)
  return _internal_lead_id();
}
inline void ListContactsRequest::set_lead_id(::int64_t value) {
  _internal_set_lead_id(value);
  // @@protoc_insertion_point(field_set:organization.ListContactsRequest.lead_id)
}
inline ::int64_t ListContactsRequest::_internal_lead_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lead_id_;
}
inline void ListContactsRequest::_internal_set_lead_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lead_id_ = value;
}

// int64 organization_id = 2;
inline void ListContactsRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t ListContactsRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:organization.ListContactsRequest.organization_id)
  return _internal_organization_id();
}
inline void ListContactsRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:organization.ListContactsRequest.organization_id)
}
inline ::int64_t ListContactsRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void ListContactsRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// -------------------------------------------------------------------

// ListContactsResponse

// repeated .organization.ContactModel contacts = 1;
inline int ListContactsResponse::_internal_contacts_size() const {
  return _internal_contacts().size();
}
inline int ListContactsResponse::contacts_size() const {
  return _internal_contacts_size();
}
inline void ListContactsResponse::clear_contacts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contacts_.Clear();
}
inline ::organization::ContactModel* ListContactsResponse::mutable_contacts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:organization.ListContactsResponse.contacts)
  return _internal_mutable_contacts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::organization::ContactModel>* ListContactsResponse::mutable_contacts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:organization.ListContactsResponse.contacts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_contacts();
}
inline const ::organization::ContactModel& ListContactsResponse::contacts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.ListContactsResponse.contacts)
  return _internal_contacts().Get(index);
}
inline ::organization::ContactModel* ListContactsResponse::add_contacts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::organization::ContactModel* _add = _internal_mutable_contacts()->Add();
  // @@protoc_insertion_point(field_add:organization.ListContactsResponse.contacts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::organization::ContactModel>& ListContactsResponse::contacts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:organization.ListContactsResponse.contacts)
  return _internal_contacts();
}
inline const ::google::protobuf::RepeatedPtrField<::organization::ContactModel>&
ListContactsResponse::_internal_contacts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contacts_;
}
inline ::google::protobuf::RepeatedPtrField<::organization::ContactModel>*
ListContactsResponse::_internal_mutable_contacts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.contacts_;
}

// -------------------------------------------------------------------

// CreateSaleSettingsRequest

// repeated .organization.SaleSettings sale_settings = 1;
inline int CreateSaleSettingsRequest::_internal_sale_settings_size() const {
  return _internal_sale_settings().size();
}
inline int CreateSaleSettingsRequest::sale_settings_size() const {
  return _internal_sale_settings_size();
}
inline void CreateSaleSettingsRequest::clear_sale_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sale_settings_.Clear();
}
inline ::organization::SaleSettings* CreateSaleSettingsRequest::mutable_sale_settings(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:organization.CreateSaleSettingsRequest.sale_settings)
  return _internal_mutable_sale_settings()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>* CreateSaleSettingsRequest::mutable_sale_settings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:organization.CreateSaleSettingsRequest.sale_settings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_sale_settings();
}
inline const ::organization::SaleSettings& CreateSaleSettingsRequest::sale_settings(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.CreateSaleSettingsRequest.sale_settings)
  return _internal_sale_settings().Get(index);
}
inline ::organization::SaleSettings* CreateSaleSettingsRequest::add_sale_settings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::organization::SaleSettings* _add = _internal_mutable_sale_settings()->Add();
  // @@protoc_insertion_point(field_add:organization.CreateSaleSettingsRequest.sale_settings)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>& CreateSaleSettingsRequest::sale_settings() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:organization.CreateSaleSettingsRequest.sale_settings)
  return _internal_sale_settings();
}
inline const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>&
CreateSaleSettingsRequest::_internal_sale_settings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sale_settings_;
}
inline ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>*
CreateSaleSettingsRequest::_internal_mutable_sale_settings() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.sale_settings_;
}

// -------------------------------------------------------------------

// CreateSaleSettingsResponse

// repeated .organization.SaleSettings sale_settings = 1;
inline int CreateSaleSettingsResponse::_internal_sale_settings_size() const {
  return _internal_sale_settings().size();
}
inline int CreateSaleSettingsResponse::sale_settings_size() const {
  return _internal_sale_settings_size();
}
inline void CreateSaleSettingsResponse::clear_sale_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sale_settings_.Clear();
}
inline ::organization::SaleSettings* CreateSaleSettingsResponse::mutable_sale_settings(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:organization.CreateSaleSettingsResponse.sale_settings)
  return _internal_mutable_sale_settings()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>* CreateSaleSettingsResponse::mutable_sale_settings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:organization.CreateSaleSettingsResponse.sale_settings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_sale_settings();
}
inline const ::organization::SaleSettings& CreateSaleSettingsResponse::sale_settings(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.CreateSaleSettingsResponse.sale_settings)
  return _internal_sale_settings().Get(index);
}
inline ::organization::SaleSettings* CreateSaleSettingsResponse::add_sale_settings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::organization::SaleSettings* _add = _internal_mutable_sale_settings()->Add();
  // @@protoc_insertion_point(field_add:organization.CreateSaleSettingsResponse.sale_settings)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>& CreateSaleSettingsResponse::sale_settings() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:organization.CreateSaleSettingsResponse.sale_settings)
  return _internal_sale_settings();
}
inline const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>&
CreateSaleSettingsResponse::_internal_sale_settings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sale_settings_;
}
inline ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>*
CreateSaleSettingsResponse::_internal_mutable_sale_settings() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.sale_settings_;
}

// -------------------------------------------------------------------

// UpdateSaleSettingsRequest

// repeated .organization.SaleSettings sale_settings = 1;
inline int UpdateSaleSettingsRequest::_internal_sale_settings_size() const {
  return _internal_sale_settings().size();
}
inline int UpdateSaleSettingsRequest::sale_settings_size() const {
  return _internal_sale_settings_size();
}
inline void UpdateSaleSettingsRequest::clear_sale_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sale_settings_.Clear();
}
inline ::organization::SaleSettings* UpdateSaleSettingsRequest::mutable_sale_settings(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:organization.UpdateSaleSettingsRequest.sale_settings)
  return _internal_mutable_sale_settings()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>* UpdateSaleSettingsRequest::mutable_sale_settings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:organization.UpdateSaleSettingsRequest.sale_settings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_sale_settings();
}
inline const ::organization::SaleSettings& UpdateSaleSettingsRequest::sale_settings(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.UpdateSaleSettingsRequest.sale_settings)
  return _internal_sale_settings().Get(index);
}
inline ::organization::SaleSettings* UpdateSaleSettingsRequest::add_sale_settings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::organization::SaleSettings* _add = _internal_mutable_sale_settings()->Add();
  // @@protoc_insertion_point(field_add:organization.UpdateSaleSettingsRequest.sale_settings)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>& UpdateSaleSettingsRequest::sale_settings() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:organization.UpdateSaleSettingsRequest.sale_settings)
  return _internal_sale_settings();
}
inline const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>&
UpdateSaleSettingsRequest::_internal_sale_settings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sale_settings_;
}
inline ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>*
UpdateSaleSettingsRequest::_internal_mutable_sale_settings() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.sale_settings_;
}

// -------------------------------------------------------------------

// UpdateSaleSettingsResponse

// repeated .organization.SaleSettings sale_settings = 1;
inline int UpdateSaleSettingsResponse::_internal_sale_settings_size() const {
  return _internal_sale_settings().size();
}
inline int UpdateSaleSettingsResponse::sale_settings_size() const {
  return _internal_sale_settings_size();
}
inline void UpdateSaleSettingsResponse::clear_sale_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sale_settings_.Clear();
}
inline ::organization::SaleSettings* UpdateSaleSettingsResponse::mutable_sale_settings(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:organization.UpdateSaleSettingsResponse.sale_settings)
  return _internal_mutable_sale_settings()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>* UpdateSaleSettingsResponse::mutable_sale_settings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:organization.UpdateSaleSettingsResponse.sale_settings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_sale_settings();
}
inline const ::organization::SaleSettings& UpdateSaleSettingsResponse::sale_settings(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.UpdateSaleSettingsResponse.sale_settings)
  return _internal_sale_settings().Get(index);
}
inline ::organization::SaleSettings* UpdateSaleSettingsResponse::add_sale_settings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::organization::SaleSettings* _add = _internal_mutable_sale_settings()->Add();
  // @@protoc_insertion_point(field_add:organization.UpdateSaleSettingsResponse.sale_settings)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>& UpdateSaleSettingsResponse::sale_settings() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:organization.UpdateSaleSettingsResponse.sale_settings)
  return _internal_sale_settings();
}
inline const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>&
UpdateSaleSettingsResponse::_internal_sale_settings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sale_settings_;
}
inline ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>*
UpdateSaleSettingsResponse::_internal_mutable_sale_settings() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.sale_settings_;
}

// -------------------------------------------------------------------

// GetSaleSettingsRequest

// int64 organization_id = 1;
inline void GetSaleSettingsRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t GetSaleSettingsRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:organization.GetSaleSettingsRequest.organization_id)
  return _internal_organization_id();
}
inline void GetSaleSettingsRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:organization.GetSaleSettingsRequest.organization_id)
}
inline ::int64_t GetSaleSettingsRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void GetSaleSettingsRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// -------------------------------------------------------------------

// GetSaleSettingsResponse

// repeated .organization.SaleSettings sale_settings = 1;
inline int GetSaleSettingsResponse::_internal_sale_settings_size() const {
  return _internal_sale_settings().size();
}
inline int GetSaleSettingsResponse::sale_settings_size() const {
  return _internal_sale_settings_size();
}
inline void GetSaleSettingsResponse::clear_sale_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sale_settings_.Clear();
}
inline ::organization::SaleSettings* GetSaleSettingsResponse::mutable_sale_settings(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:organization.GetSaleSettingsResponse.sale_settings)
  return _internal_mutable_sale_settings()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>* GetSaleSettingsResponse::mutable_sale_settings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:organization.GetSaleSettingsResponse.sale_settings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_sale_settings();
}
inline const ::organization::SaleSettings& GetSaleSettingsResponse::sale_settings(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:organization.GetSaleSettingsResponse.sale_settings)
  return _internal_sale_settings().Get(index);
}
inline ::organization::SaleSettings* GetSaleSettingsResponse::add_sale_settings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::organization::SaleSettings* _add = _internal_mutable_sale_settings()->Add();
  // @@protoc_insertion_point(field_add:organization.GetSaleSettingsResponse.sale_settings)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>& GetSaleSettingsResponse::sale_settings() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:organization.GetSaleSettingsResponse.sale_settings)
  return _internal_sale_settings();
}
inline const ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>&
GetSaleSettingsResponse::_internal_sale_settings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sale_settings_;
}
inline ::google::protobuf::RepeatedPtrField<::organization::SaleSettings>*
GetSaleSettingsResponse::_internal_mutable_sale_settings() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.sale_settings_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace organization


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // organization_2forganization_2eproto_2epb_2eh

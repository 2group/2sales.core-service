// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: organization/organization.proto
#ifndef GRPC_organization_2forganization_2eproto__INCLUDED
#define GRPC_organization_2forganization_2eproto__INCLUDED

#include "organization/organization.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace organization {

class OrganizationService final {
 public:
  static constexpr char const* service_full_name() {
    return "organization.OrganizationService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status CreateOrganization(::grpc::ClientContext* context, const ::organization::CreateOrganizationRequest& request, ::organization::CreateOrganizationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateOrganizationResponse>> AsyncCreateOrganization(::grpc::ClientContext* context, const ::organization::CreateOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateOrganizationResponse>>(AsyncCreateOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateOrganizationResponse>> PrepareAsyncCreateOrganization(::grpc::ClientContext* context, const ::organization::CreateOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateOrganizationResponse>>(PrepareAsyncCreateOrganizationRaw(context, request, cq));
    }
    virtual ::grpc::Status GetOrganization(::grpc::ClientContext* context, const ::organization::GetOrganizationRequest& request, ::organization::GetOrganizationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetOrganizationResponse>> AsyncGetOrganization(::grpc::ClientContext* context, const ::organization::GetOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetOrganizationResponse>>(AsyncGetOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetOrganizationResponse>> PrepareAsyncGetOrganization(::grpc::ClientContext* context, const ::organization::GetOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetOrganizationResponse>>(PrepareAsyncGetOrganizationRaw(context, request, cq));
    }
    virtual ::grpc::Status ListOrganizations(::grpc::ClientContext* context, const ::organization::ListOrganizationsRequest& request, ::organization::ListOrganizationsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListOrganizationsResponse>> AsyncListOrganizations(::grpc::ClientContext* context, const ::organization::ListOrganizationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListOrganizationsResponse>>(AsyncListOrganizationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListOrganizationsResponse>> PrepareAsyncListOrganizations(::grpc::ClientContext* context, const ::organization::ListOrganizationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListOrganizationsResponse>>(PrepareAsyncListOrganizationsRaw(context, request, cq));
    }
    virtual ::grpc::Status PatchOrganization(::grpc::ClientContext* context, const ::organization::PatchOrganizationRequest& request, ::organization::PatchOrganizationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::PatchOrganizationResponse>> AsyncPatchOrganization(::grpc::ClientContext* context, const ::organization::PatchOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::PatchOrganizationResponse>>(AsyncPatchOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::PatchOrganizationResponse>> PrepareAsyncPatchOrganization(::grpc::ClientContext* context, const ::organization::PatchOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::PatchOrganizationResponse>>(PrepareAsyncPatchOrganizationRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateOrganization(::grpc::ClientContext* context, const ::organization::UpdateOrganizationRequest& request, ::organization::UpdateOrganizationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateOrganizationResponse>> AsyncUpdateOrganization(::grpc::ClientContext* context, const ::organization::UpdateOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateOrganizationResponse>>(AsyncUpdateOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateOrganizationResponse>> PrepareAsyncUpdateOrganization(::grpc::ClientContext* context, const ::organization::UpdateOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateOrganizationResponse>>(PrepareAsyncUpdateOrganizationRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateCounterparty(::grpc::ClientContext* context, const ::organization::CreateCounterpartyRequest& request, ::organization::CreateCounterpartyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateCounterpartyResponse>> AsyncCreateCounterparty(::grpc::ClientContext* context, const ::organization::CreateCounterpartyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateCounterpartyResponse>>(AsyncCreateCounterpartyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateCounterpartyResponse>> PrepareAsyncCreateCounterparty(::grpc::ClientContext* context, const ::organization::CreateCounterpartyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateCounterpartyResponse>>(PrepareAsyncCreateCounterpartyRaw(context, request, cq));
    }
    virtual ::grpc::Status GetCounterparty(::grpc::ClientContext* context, const ::organization::GetCounterpartyRequest& request, ::organization::GetCounterpartyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetCounterpartyResponse>> AsyncGetCounterparty(::grpc::ClientContext* context, const ::organization::GetCounterpartyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetCounterpartyResponse>>(AsyncGetCounterpartyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetCounterpartyResponse>> PrepareAsyncGetCounterparty(::grpc::ClientContext* context, const ::organization::GetCounterpartyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetCounterpartyResponse>>(PrepareAsyncGetCounterpartyRaw(context, request, cq));
    }
    virtual ::grpc::Status ListCounterparties(::grpc::ClientContext* context, const ::organization::ListCounterpartiesRequest& request, ::organization::ListCounterpartiesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListCounterpartiesResponse>> AsyncListCounterparties(::grpc::ClientContext* context, const ::organization::ListCounterpartiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListCounterpartiesResponse>>(AsyncListCounterpartiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListCounterpartiesResponse>> PrepareAsyncListCounterparties(::grpc::ClientContext* context, const ::organization::ListCounterpartiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListCounterpartiesResponse>>(PrepareAsyncListCounterpartiesRaw(context, request, cq));
    }
    virtual ::grpc::Status PatchCounterparty(::grpc::ClientContext* context, const ::organization::PatchCounterpartyRequest& request, ::organization::PatchCounterpartyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::PatchCounterpartyResponse>> AsyncPatchCounterparty(::grpc::ClientContext* context, const ::organization::PatchCounterpartyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::PatchCounterpartyResponse>>(AsyncPatchCounterpartyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::PatchCounterpartyResponse>> PrepareAsyncPatchCounterparty(::grpc::ClientContext* context, const ::organization::PatchCounterpartyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::PatchCounterpartyResponse>>(PrepareAsyncPatchCounterpartyRaw(context, request, cq));
    }
    virtual ::grpc::Status ListBankAccounts(::grpc::ClientContext* context, const ::organization::ListBankAccountsRequest& request, ::organization::ListBankAccountsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListBankAccountsResponse>> AsyncListBankAccounts(::grpc::ClientContext* context, const ::organization::ListBankAccountsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListBankAccountsResponse>>(AsyncListBankAccountsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListBankAccountsResponse>> PrepareAsyncListBankAccounts(::grpc::ClientContext* context, const ::organization::ListBankAccountsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListBankAccountsResponse>>(PrepareAsyncListBankAccountsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetDefaultBankAccount(::grpc::ClientContext* context, const ::organization::GetDefaultBankAccountRequest& request, ::organization::GetDefaultBankAccountResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetDefaultBankAccountResponse>> AsyncGetDefaultBankAccount(::grpc::ClientContext* context, const ::organization::GetDefaultBankAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetDefaultBankAccountResponse>>(AsyncGetDefaultBankAccountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetDefaultBankAccountResponse>> PrepareAsyncGetDefaultBankAccount(::grpc::ClientContext* context, const ::organization::GetDefaultBankAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetDefaultBankAccountResponse>>(PrepareAsyncGetDefaultBankAccountRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateBankAccount(::grpc::ClientContext* context, const ::organization::CreateBankAccountRequest& request, ::organization::CreateBankAccountResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateBankAccountResponse>> AsyncCreateBankAccount(::grpc::ClientContext* context, const ::organization::CreateBankAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateBankAccountResponse>>(AsyncCreateBankAccountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateBankAccountResponse>> PrepareAsyncCreateBankAccount(::grpc::ClientContext* context, const ::organization::CreateBankAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateBankAccountResponse>>(PrepareAsyncCreateBankAccountRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateBankAccount(::grpc::ClientContext* context, const ::organization::UpdateBankAccountRequest& request, ::organization::UpdateBankAccountResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateBankAccountResponse>> AsyncUpdateBankAccount(::grpc::ClientContext* context, const ::organization::UpdateBankAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateBankAccountResponse>>(AsyncUpdateBankAccountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateBankAccountResponse>> PrepareAsyncUpdateBankAccount(::grpc::ClientContext* context, const ::organization::UpdateBankAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateBankAccountResponse>>(PrepareAsyncUpdateBankAccountRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateBankAccounts(::grpc::ClientContext* context, const ::organization::UpdateBankAccountsRequest& request, ::organization::UpdateBankAccountsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateBankAccountsResponse>> AsyncUpdateBankAccounts(::grpc::ClientContext* context, const ::organization::UpdateBankAccountsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateBankAccountsResponse>>(AsyncUpdateBankAccountsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateBankAccountsResponse>> PrepareAsyncUpdateBankAccounts(::grpc::ClientContext* context, const ::organization::UpdateBankAccountsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateBankAccountsResponse>>(PrepareAsyncUpdateBankAccountsRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteBankAccount(::grpc::ClientContext* context, const ::organization::DeleteBankAccountRequest& request, ::organization::DeleteBankAccountResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::DeleteBankAccountResponse>> AsyncDeleteBankAccount(::grpc::ClientContext* context, const ::organization::DeleteBankAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::DeleteBankAccountResponse>>(AsyncDeleteBankAccountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::DeleteBankAccountResponse>> PrepareAsyncDeleteBankAccount(::grpc::ClientContext* context, const ::organization::DeleteBankAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::DeleteBankAccountResponse>>(PrepareAsyncDeleteBankAccountRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateAddress(::grpc::ClientContext* context, const ::organization::CreateAddressRequest& request, ::organization::CreateAddressResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateAddressResponse>> AsyncCreateAddress(::grpc::ClientContext* context, const ::organization::CreateAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateAddressResponse>>(AsyncCreateAddressRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateAddressResponse>> PrepareAsyncCreateAddress(::grpc::ClientContext* context, const ::organization::CreateAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateAddressResponse>>(PrepareAsyncCreateAddressRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAddress(::grpc::ClientContext* context, const ::organization::GetAddressRequest& request, ::organization::GetAddressResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetAddressResponse>> AsyncGetAddress(::grpc::ClientContext* context, const ::organization::GetAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetAddressResponse>>(AsyncGetAddressRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetAddressResponse>> PrepareAsyncGetAddress(::grpc::ClientContext* context, const ::organization::GetAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetAddressResponse>>(PrepareAsyncGetAddressRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateAddress(::grpc::ClientContext* context, const ::organization::UpdateAddressRequest& request, ::organization::UpdateAddressResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateAddressResponse>> AsyncUpdateAddress(::grpc::ClientContext* context, const ::organization::UpdateAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateAddressResponse>>(AsyncUpdateAddressRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateAddressResponse>> PrepareAsyncUpdateAddress(::grpc::ClientContext* context, const ::organization::UpdateAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateAddressResponse>>(PrepareAsyncUpdateAddressRaw(context, request, cq));
    }
    virtual ::grpc::Status PatchAddress(::grpc::ClientContext* context, const ::organization::PatchAddressRequest& request, ::organization::PatchAddressResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::PatchAddressResponse>> AsyncPatchAddress(::grpc::ClientContext* context, const ::organization::PatchAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::PatchAddressResponse>>(AsyncPatchAddressRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::PatchAddressResponse>> PrepareAsyncPatchAddress(::grpc::ClientContext* context, const ::organization::PatchAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::PatchAddressResponse>>(PrepareAsyncPatchAddressRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteAddress(::grpc::ClientContext* context, const ::organization::DeleteAddressRequest& request, ::organization::DeleteAddressResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::DeleteAddressResponse>> AsyncDeleteAddress(::grpc::ClientContext* context, const ::organization::DeleteAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::DeleteAddressResponse>>(AsyncDeleteAddressRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::DeleteAddressResponse>> PrepareAsyncDeleteAddress(::grpc::ClientContext* context, const ::organization::DeleteAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::DeleteAddressResponse>>(PrepareAsyncDeleteAddressRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateRelationship(::grpc::ClientContext* context, const ::organization::CreateRelationshipRequest& request, ::organization::CreateRelationshipResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateRelationshipResponse>> AsyncCreateRelationship(::grpc::ClientContext* context, const ::organization::CreateRelationshipRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateRelationshipResponse>>(AsyncCreateRelationshipRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateRelationshipResponse>> PrepareAsyncCreateRelationship(::grpc::ClientContext* context, const ::organization::CreateRelationshipRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateRelationshipResponse>>(PrepareAsyncCreateRelationshipRaw(context, request, cq));
    }
    virtual ::grpc::Status ListRelationships(::grpc::ClientContext* context, const ::organization::ListRelationshipsRequest& request, ::organization::ListRelationshipsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListRelationshipsResponse>> AsyncListRelationships(::grpc::ClientContext* context, const ::organization::ListRelationshipsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListRelationshipsResponse>>(AsyncListRelationshipsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListRelationshipsResponse>> PrepareAsyncListRelationships(::grpc::ClientContext* context, const ::organization::ListRelationshipsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListRelationshipsResponse>>(PrepareAsyncListRelationshipsRaw(context, request, cq));
    }
    virtual ::grpc::Status EnsureRelationshipExists(::grpc::ClientContext* context, const ::organization::EnsureRelationshipExistsRequest& request, ::organization::EnsureRelationshipExistsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::EnsureRelationshipExistsResponse>> AsyncEnsureRelationshipExists(::grpc::ClientContext* context, const ::organization::EnsureRelationshipExistsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::EnsureRelationshipExistsResponse>>(AsyncEnsureRelationshipExistsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::EnsureRelationshipExistsResponse>> PrepareAsyncEnsureRelationshipExists(::grpc::ClientContext* context, const ::organization::EnsureRelationshipExistsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::EnsureRelationshipExistsResponse>>(PrepareAsyncEnsureRelationshipExistsRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateRelationship(::grpc::ClientContext* context, const ::organization::UpdateRelationshipRequest& request, ::organization::UpdateRelationshipResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateRelationshipResponse>> AsyncUpdateRelationship(::grpc::ClientContext* context, const ::organization::UpdateRelationshipRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateRelationshipResponse>>(AsyncUpdateRelationshipRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateRelationshipResponse>> PrepareAsyncUpdateRelationship(::grpc::ClientContext* context, const ::organization::UpdateRelationshipRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateRelationshipResponse>>(PrepareAsyncUpdateRelationshipRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRelationshipType(::grpc::ClientContext* context, const ::organization::GetRelationshipTypeRequest& request, ::organization::GetRelationshipTypeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetRelationshipTypeResponse>> AsyncGetRelationshipType(::grpc::ClientContext* context, const ::organization::GetRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetRelationshipTypeResponse>>(AsyncGetRelationshipTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetRelationshipTypeResponse>> PrepareAsyncGetRelationshipType(::grpc::ClientContext* context, const ::organization::GetRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetRelationshipTypeResponse>>(PrepareAsyncGetRelationshipTypeRaw(context, request, cq));
    }
    virtual ::grpc::Status ListRelationshipTypes(::grpc::ClientContext* context, const ::organization::ListRelationshipTypesRequest& request, ::organization::ListRelationshipTypesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListRelationshipTypesResponse>> AsyncListRelationshipTypes(::grpc::ClientContext* context, const ::organization::ListRelationshipTypesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListRelationshipTypesResponse>>(AsyncListRelationshipTypesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListRelationshipTypesResponse>> PrepareAsyncListRelationshipTypes(::grpc::ClientContext* context, const ::organization::ListRelationshipTypesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListRelationshipTypesResponse>>(PrepareAsyncListRelationshipTypesRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateRelationshipType(::grpc::ClientContext* context, const ::organization::CreateRelationshipTypeRequest& request, ::organization::CreateRelationshipTypeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateRelationshipTypeResponse>> AsyncCreateRelationshipType(::grpc::ClientContext* context, const ::organization::CreateRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateRelationshipTypeResponse>>(AsyncCreateRelationshipTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateRelationshipTypeResponse>> PrepareAsyncCreateRelationshipType(::grpc::ClientContext* context, const ::organization::CreateRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateRelationshipTypeResponse>>(PrepareAsyncCreateRelationshipTypeRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateRelationshipType(::grpc::ClientContext* context, const ::organization::UpdateRelationshipTypeRequest& request, ::organization::UpdateRelationshipTypeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateRelationshipTypeResponse>> AsyncUpdateRelationshipType(::grpc::ClientContext* context, const ::organization::UpdateRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateRelationshipTypeResponse>>(AsyncUpdateRelationshipTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateRelationshipTypeResponse>> PrepareAsyncUpdateRelationshipType(::grpc::ClientContext* context, const ::organization::UpdateRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateRelationshipTypeResponse>>(PrepareAsyncUpdateRelationshipTypeRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateContact(::grpc::ClientContext* context, const ::organization::CreateContactRequest& request, ::organization::CreateContactResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateContactResponse>> AsyncCreateContact(::grpc::ClientContext* context, const ::organization::CreateContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateContactResponse>>(AsyncCreateContactRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateContactResponse>> PrepareAsyncCreateContact(::grpc::ClientContext* context, const ::organization::CreateContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateContactResponse>>(PrepareAsyncCreateContactRaw(context, request, cq));
    }
    virtual ::grpc::Status GetContact(::grpc::ClientContext* context, const ::organization::GetContactRequest& request, ::organization::GetContactResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetContactResponse>> AsyncGetContact(::grpc::ClientContext* context, const ::organization::GetContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetContactResponse>>(AsyncGetContactRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetContactResponse>> PrepareAsyncGetContact(::grpc::ClientContext* context, const ::organization::GetContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetContactResponse>>(PrepareAsyncGetContactRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateContact(::grpc::ClientContext* context, const ::organization::UpdateContactRequest& request, ::organization::UpdateContactResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateContactResponse>> AsyncUpdateContact(::grpc::ClientContext* context, const ::organization::UpdateContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateContactResponse>>(AsyncUpdateContactRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateContactResponse>> PrepareAsyncUpdateContact(::grpc::ClientContext* context, const ::organization::UpdateContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateContactResponse>>(PrepareAsyncUpdateContactRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteContact(::grpc::ClientContext* context, const ::organization::DeleteContactRequest& request, ::organization::DeleteContactResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::DeleteContactResponse>> AsyncDeleteContact(::grpc::ClientContext* context, const ::organization::DeleteContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::DeleteContactResponse>>(AsyncDeleteContactRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::DeleteContactResponse>> PrepareAsyncDeleteContact(::grpc::ClientContext* context, const ::organization::DeleteContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::DeleteContactResponse>>(PrepareAsyncDeleteContactRaw(context, request, cq));
    }
    virtual ::grpc::Status ListContacts(::grpc::ClientContext* context, const ::organization::ListContactsRequest& request, ::organization::ListContactsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListContactsResponse>> AsyncListContacts(::grpc::ClientContext* context, const ::organization::ListContactsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListContactsResponse>>(AsyncListContactsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListContactsResponse>> PrepareAsyncListContacts(::grpc::ClientContext* context, const ::organization::ListContactsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListContactsResponse>>(PrepareAsyncListContactsRaw(context, request, cq));
    }
    virtual ::grpc::Status GeneratePresignedURLs(::grpc::ClientContext* context, const ::organization::GeneratePresignedURLsRequest& request, ::organization::GeneratePresignedURLsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GeneratePresignedURLsResponse>> AsyncGeneratePresignedURLs(::grpc::ClientContext* context, const ::organization::GeneratePresignedURLsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GeneratePresignedURLsResponse>>(AsyncGeneratePresignedURLsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GeneratePresignedURLsResponse>> PrepareAsyncGeneratePresignedURLs(::grpc::ClientContext* context, const ::organization::GeneratePresignedURLsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GeneratePresignedURLsResponse>>(PrepareAsyncGeneratePresignedURLsRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateSaleSettings(::grpc::ClientContext* context, const ::organization::CreateSaleSettingsRequest& request, ::organization::CreateSaleSettingsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateSaleSettingsResponse>> AsyncCreateSaleSettings(::grpc::ClientContext* context, const ::organization::CreateSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateSaleSettingsResponse>>(AsyncCreateSaleSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateSaleSettingsResponse>> PrepareAsyncCreateSaleSettings(::grpc::ClientContext* context, const ::organization::CreateSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateSaleSettingsResponse>>(PrepareAsyncCreateSaleSettingsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetSaleSettings(::grpc::ClientContext* context, const ::organization::GetSaleSettingsRequest& request, ::organization::GetSaleSettingsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetSaleSettingsResponse>> AsyncGetSaleSettings(::grpc::ClientContext* context, const ::organization::GetSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetSaleSettingsResponse>>(AsyncGetSaleSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetSaleSettingsResponse>> PrepareAsyncGetSaleSettings(::grpc::ClientContext* context, const ::organization::GetSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetSaleSettingsResponse>>(PrepareAsyncGetSaleSettingsRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateSaleSettings(::grpc::ClientContext* context, const ::organization::UpdateSaleSettingsRequest& request, ::organization::UpdateSaleSettingsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateSaleSettingsResponse>> AsyncUpdateSaleSettings(::grpc::ClientContext* context, const ::organization::UpdateSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateSaleSettingsResponse>>(AsyncUpdateSaleSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateSaleSettingsResponse>> PrepareAsyncUpdateSaleSettings(::grpc::ClientContext* context, const ::organization::UpdateSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateSaleSettingsResponse>>(PrepareAsyncUpdateSaleSettingsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void CreateOrganization(::grpc::ClientContext* context, const ::organization::CreateOrganizationRequest* request, ::organization::CreateOrganizationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateOrganization(::grpc::ClientContext* context, const ::organization::CreateOrganizationRequest* request, ::organization::CreateOrganizationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetOrganization(::grpc::ClientContext* context, const ::organization::GetOrganizationRequest* request, ::organization::GetOrganizationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetOrganization(::grpc::ClientContext* context, const ::organization::GetOrganizationRequest* request, ::organization::GetOrganizationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListOrganizations(::grpc::ClientContext* context, const ::organization::ListOrganizationsRequest* request, ::organization::ListOrganizationsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListOrganizations(::grpc::ClientContext* context, const ::organization::ListOrganizationsRequest* request, ::organization::ListOrganizationsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void PatchOrganization(::grpc::ClientContext* context, const ::organization::PatchOrganizationRequest* request, ::organization::PatchOrganizationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PatchOrganization(::grpc::ClientContext* context, const ::organization::PatchOrganizationRequest* request, ::organization::PatchOrganizationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateOrganization(::grpc::ClientContext* context, const ::organization::UpdateOrganizationRequest* request, ::organization::UpdateOrganizationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateOrganization(::grpc::ClientContext* context, const ::organization::UpdateOrganizationRequest* request, ::organization::UpdateOrganizationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateCounterparty(::grpc::ClientContext* context, const ::organization::CreateCounterpartyRequest* request, ::organization::CreateCounterpartyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateCounterparty(::grpc::ClientContext* context, const ::organization::CreateCounterpartyRequest* request, ::organization::CreateCounterpartyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetCounterparty(::grpc::ClientContext* context, const ::organization::GetCounterpartyRequest* request, ::organization::GetCounterpartyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetCounterparty(::grpc::ClientContext* context, const ::organization::GetCounterpartyRequest* request, ::organization::GetCounterpartyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListCounterparties(::grpc::ClientContext* context, const ::organization::ListCounterpartiesRequest* request, ::organization::ListCounterpartiesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListCounterparties(::grpc::ClientContext* context, const ::organization::ListCounterpartiesRequest* request, ::organization::ListCounterpartiesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void PatchCounterparty(::grpc::ClientContext* context, const ::organization::PatchCounterpartyRequest* request, ::organization::PatchCounterpartyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PatchCounterparty(::grpc::ClientContext* context, const ::organization::PatchCounterpartyRequest* request, ::organization::PatchCounterpartyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListBankAccounts(::grpc::ClientContext* context, const ::organization::ListBankAccountsRequest* request, ::organization::ListBankAccountsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListBankAccounts(::grpc::ClientContext* context, const ::organization::ListBankAccountsRequest* request, ::organization::ListBankAccountsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetDefaultBankAccount(::grpc::ClientContext* context, const ::organization::GetDefaultBankAccountRequest* request, ::organization::GetDefaultBankAccountResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDefaultBankAccount(::grpc::ClientContext* context, const ::organization::GetDefaultBankAccountRequest* request, ::organization::GetDefaultBankAccountResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateBankAccount(::grpc::ClientContext* context, const ::organization::CreateBankAccountRequest* request, ::organization::CreateBankAccountResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateBankAccount(::grpc::ClientContext* context, const ::organization::CreateBankAccountRequest* request, ::organization::CreateBankAccountResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateBankAccount(::grpc::ClientContext* context, const ::organization::UpdateBankAccountRequest* request, ::organization::UpdateBankAccountResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateBankAccount(::grpc::ClientContext* context, const ::organization::UpdateBankAccountRequest* request, ::organization::UpdateBankAccountResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateBankAccounts(::grpc::ClientContext* context, const ::organization::UpdateBankAccountsRequest* request, ::organization::UpdateBankAccountsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateBankAccounts(::grpc::ClientContext* context, const ::organization::UpdateBankAccountsRequest* request, ::organization::UpdateBankAccountsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteBankAccount(::grpc::ClientContext* context, const ::organization::DeleteBankAccountRequest* request, ::organization::DeleteBankAccountResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteBankAccount(::grpc::ClientContext* context, const ::organization::DeleteBankAccountRequest* request, ::organization::DeleteBankAccountResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateAddress(::grpc::ClientContext* context, const ::organization::CreateAddressRequest* request, ::organization::CreateAddressResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateAddress(::grpc::ClientContext* context, const ::organization::CreateAddressRequest* request, ::organization::CreateAddressResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetAddress(::grpc::ClientContext* context, const ::organization::GetAddressRequest* request, ::organization::GetAddressResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAddress(::grpc::ClientContext* context, const ::organization::GetAddressRequest* request, ::organization::GetAddressResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateAddress(::grpc::ClientContext* context, const ::organization::UpdateAddressRequest* request, ::organization::UpdateAddressResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateAddress(::grpc::ClientContext* context, const ::organization::UpdateAddressRequest* request, ::organization::UpdateAddressResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void PatchAddress(::grpc::ClientContext* context, const ::organization::PatchAddressRequest* request, ::organization::PatchAddressResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PatchAddress(::grpc::ClientContext* context, const ::organization::PatchAddressRequest* request, ::organization::PatchAddressResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteAddress(::grpc::ClientContext* context, const ::organization::DeleteAddressRequest* request, ::organization::DeleteAddressResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteAddress(::grpc::ClientContext* context, const ::organization::DeleteAddressRequest* request, ::organization::DeleteAddressResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateRelationship(::grpc::ClientContext* context, const ::organization::CreateRelationshipRequest* request, ::organization::CreateRelationshipResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateRelationship(::grpc::ClientContext* context, const ::organization::CreateRelationshipRequest* request, ::organization::CreateRelationshipResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListRelationships(::grpc::ClientContext* context, const ::organization::ListRelationshipsRequest* request, ::organization::ListRelationshipsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListRelationships(::grpc::ClientContext* context, const ::organization::ListRelationshipsRequest* request, ::organization::ListRelationshipsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void EnsureRelationshipExists(::grpc::ClientContext* context, const ::organization::EnsureRelationshipExistsRequest* request, ::organization::EnsureRelationshipExistsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void EnsureRelationshipExists(::grpc::ClientContext* context, const ::organization::EnsureRelationshipExistsRequest* request, ::organization::EnsureRelationshipExistsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateRelationship(::grpc::ClientContext* context, const ::organization::UpdateRelationshipRequest* request, ::organization::UpdateRelationshipResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateRelationship(::grpc::ClientContext* context, const ::organization::UpdateRelationshipRequest* request, ::organization::UpdateRelationshipResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetRelationshipType(::grpc::ClientContext* context, const ::organization::GetRelationshipTypeRequest* request, ::organization::GetRelationshipTypeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRelationshipType(::grpc::ClientContext* context, const ::organization::GetRelationshipTypeRequest* request, ::organization::GetRelationshipTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListRelationshipTypes(::grpc::ClientContext* context, const ::organization::ListRelationshipTypesRequest* request, ::organization::ListRelationshipTypesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListRelationshipTypes(::grpc::ClientContext* context, const ::organization::ListRelationshipTypesRequest* request, ::organization::ListRelationshipTypesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateRelationshipType(::grpc::ClientContext* context, const ::organization::CreateRelationshipTypeRequest* request, ::organization::CreateRelationshipTypeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateRelationshipType(::grpc::ClientContext* context, const ::organization::CreateRelationshipTypeRequest* request, ::organization::CreateRelationshipTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateRelationshipType(::grpc::ClientContext* context, const ::organization::UpdateRelationshipTypeRequest* request, ::organization::UpdateRelationshipTypeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateRelationshipType(::grpc::ClientContext* context, const ::organization::UpdateRelationshipTypeRequest* request, ::organization::UpdateRelationshipTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateContact(::grpc::ClientContext* context, const ::organization::CreateContactRequest* request, ::organization::CreateContactResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateContact(::grpc::ClientContext* context, const ::organization::CreateContactRequest* request, ::organization::CreateContactResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetContact(::grpc::ClientContext* context, const ::organization::GetContactRequest* request, ::organization::GetContactResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetContact(::grpc::ClientContext* context, const ::organization::GetContactRequest* request, ::organization::GetContactResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateContact(::grpc::ClientContext* context, const ::organization::UpdateContactRequest* request, ::organization::UpdateContactResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateContact(::grpc::ClientContext* context, const ::organization::UpdateContactRequest* request, ::organization::UpdateContactResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteContact(::grpc::ClientContext* context, const ::organization::DeleteContactRequest* request, ::organization::DeleteContactResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteContact(::grpc::ClientContext* context, const ::organization::DeleteContactRequest* request, ::organization::DeleteContactResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListContacts(::grpc::ClientContext* context, const ::organization::ListContactsRequest* request, ::organization::ListContactsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListContacts(::grpc::ClientContext* context, const ::organization::ListContactsRequest* request, ::organization::ListContactsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GeneratePresignedURLs(::grpc::ClientContext* context, const ::organization::GeneratePresignedURLsRequest* request, ::organization::GeneratePresignedURLsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GeneratePresignedURLs(::grpc::ClientContext* context, const ::organization::GeneratePresignedURLsRequest* request, ::organization::GeneratePresignedURLsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateSaleSettings(::grpc::ClientContext* context, const ::organization::CreateSaleSettingsRequest* request, ::organization::CreateSaleSettingsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateSaleSettings(::grpc::ClientContext* context, const ::organization::CreateSaleSettingsRequest* request, ::organization::CreateSaleSettingsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetSaleSettings(::grpc::ClientContext* context, const ::organization::GetSaleSettingsRequest* request, ::organization::GetSaleSettingsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSaleSettings(::grpc::ClientContext* context, const ::organization::GetSaleSettingsRequest* request, ::organization::GetSaleSettingsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateSaleSettings(::grpc::ClientContext* context, const ::organization::UpdateSaleSettingsRequest* request, ::organization::UpdateSaleSettingsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateSaleSettings(::grpc::ClientContext* context, const ::organization::UpdateSaleSettingsRequest* request, ::organization::UpdateSaleSettingsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateOrganizationResponse>* AsyncCreateOrganizationRaw(::grpc::ClientContext* context, const ::organization::CreateOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateOrganizationResponse>* PrepareAsyncCreateOrganizationRaw(::grpc::ClientContext* context, const ::organization::CreateOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetOrganizationResponse>* AsyncGetOrganizationRaw(::grpc::ClientContext* context, const ::organization::GetOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetOrganizationResponse>* PrepareAsyncGetOrganizationRaw(::grpc::ClientContext* context, const ::organization::GetOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListOrganizationsResponse>* AsyncListOrganizationsRaw(::grpc::ClientContext* context, const ::organization::ListOrganizationsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListOrganizationsResponse>* PrepareAsyncListOrganizationsRaw(::grpc::ClientContext* context, const ::organization::ListOrganizationsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::PatchOrganizationResponse>* AsyncPatchOrganizationRaw(::grpc::ClientContext* context, const ::organization::PatchOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::PatchOrganizationResponse>* PrepareAsyncPatchOrganizationRaw(::grpc::ClientContext* context, const ::organization::PatchOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateOrganizationResponse>* AsyncUpdateOrganizationRaw(::grpc::ClientContext* context, const ::organization::UpdateOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateOrganizationResponse>* PrepareAsyncUpdateOrganizationRaw(::grpc::ClientContext* context, const ::organization::UpdateOrganizationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateCounterpartyResponse>* AsyncCreateCounterpartyRaw(::grpc::ClientContext* context, const ::organization::CreateCounterpartyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateCounterpartyResponse>* PrepareAsyncCreateCounterpartyRaw(::grpc::ClientContext* context, const ::organization::CreateCounterpartyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetCounterpartyResponse>* AsyncGetCounterpartyRaw(::grpc::ClientContext* context, const ::organization::GetCounterpartyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetCounterpartyResponse>* PrepareAsyncGetCounterpartyRaw(::grpc::ClientContext* context, const ::organization::GetCounterpartyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListCounterpartiesResponse>* AsyncListCounterpartiesRaw(::grpc::ClientContext* context, const ::organization::ListCounterpartiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListCounterpartiesResponse>* PrepareAsyncListCounterpartiesRaw(::grpc::ClientContext* context, const ::organization::ListCounterpartiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::PatchCounterpartyResponse>* AsyncPatchCounterpartyRaw(::grpc::ClientContext* context, const ::organization::PatchCounterpartyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::PatchCounterpartyResponse>* PrepareAsyncPatchCounterpartyRaw(::grpc::ClientContext* context, const ::organization::PatchCounterpartyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListBankAccountsResponse>* AsyncListBankAccountsRaw(::grpc::ClientContext* context, const ::organization::ListBankAccountsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListBankAccountsResponse>* PrepareAsyncListBankAccountsRaw(::grpc::ClientContext* context, const ::organization::ListBankAccountsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetDefaultBankAccountResponse>* AsyncGetDefaultBankAccountRaw(::grpc::ClientContext* context, const ::organization::GetDefaultBankAccountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetDefaultBankAccountResponse>* PrepareAsyncGetDefaultBankAccountRaw(::grpc::ClientContext* context, const ::organization::GetDefaultBankAccountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateBankAccountResponse>* AsyncCreateBankAccountRaw(::grpc::ClientContext* context, const ::organization::CreateBankAccountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateBankAccountResponse>* PrepareAsyncCreateBankAccountRaw(::grpc::ClientContext* context, const ::organization::CreateBankAccountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateBankAccountResponse>* AsyncUpdateBankAccountRaw(::grpc::ClientContext* context, const ::organization::UpdateBankAccountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateBankAccountResponse>* PrepareAsyncUpdateBankAccountRaw(::grpc::ClientContext* context, const ::organization::UpdateBankAccountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateBankAccountsResponse>* AsyncUpdateBankAccountsRaw(::grpc::ClientContext* context, const ::organization::UpdateBankAccountsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateBankAccountsResponse>* PrepareAsyncUpdateBankAccountsRaw(::grpc::ClientContext* context, const ::organization::UpdateBankAccountsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::DeleteBankAccountResponse>* AsyncDeleteBankAccountRaw(::grpc::ClientContext* context, const ::organization::DeleteBankAccountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::DeleteBankAccountResponse>* PrepareAsyncDeleteBankAccountRaw(::grpc::ClientContext* context, const ::organization::DeleteBankAccountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateAddressResponse>* AsyncCreateAddressRaw(::grpc::ClientContext* context, const ::organization::CreateAddressRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateAddressResponse>* PrepareAsyncCreateAddressRaw(::grpc::ClientContext* context, const ::organization::CreateAddressRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetAddressResponse>* AsyncGetAddressRaw(::grpc::ClientContext* context, const ::organization::GetAddressRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetAddressResponse>* PrepareAsyncGetAddressRaw(::grpc::ClientContext* context, const ::organization::GetAddressRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateAddressResponse>* AsyncUpdateAddressRaw(::grpc::ClientContext* context, const ::organization::UpdateAddressRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateAddressResponse>* PrepareAsyncUpdateAddressRaw(::grpc::ClientContext* context, const ::organization::UpdateAddressRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::PatchAddressResponse>* AsyncPatchAddressRaw(::grpc::ClientContext* context, const ::organization::PatchAddressRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::PatchAddressResponse>* PrepareAsyncPatchAddressRaw(::grpc::ClientContext* context, const ::organization::PatchAddressRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::DeleteAddressResponse>* AsyncDeleteAddressRaw(::grpc::ClientContext* context, const ::organization::DeleteAddressRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::DeleteAddressResponse>* PrepareAsyncDeleteAddressRaw(::grpc::ClientContext* context, const ::organization::DeleteAddressRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateRelationshipResponse>* AsyncCreateRelationshipRaw(::grpc::ClientContext* context, const ::organization::CreateRelationshipRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateRelationshipResponse>* PrepareAsyncCreateRelationshipRaw(::grpc::ClientContext* context, const ::organization::CreateRelationshipRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListRelationshipsResponse>* AsyncListRelationshipsRaw(::grpc::ClientContext* context, const ::organization::ListRelationshipsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListRelationshipsResponse>* PrepareAsyncListRelationshipsRaw(::grpc::ClientContext* context, const ::organization::ListRelationshipsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::EnsureRelationshipExistsResponse>* AsyncEnsureRelationshipExistsRaw(::grpc::ClientContext* context, const ::organization::EnsureRelationshipExistsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::EnsureRelationshipExistsResponse>* PrepareAsyncEnsureRelationshipExistsRaw(::grpc::ClientContext* context, const ::organization::EnsureRelationshipExistsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateRelationshipResponse>* AsyncUpdateRelationshipRaw(::grpc::ClientContext* context, const ::organization::UpdateRelationshipRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateRelationshipResponse>* PrepareAsyncUpdateRelationshipRaw(::grpc::ClientContext* context, const ::organization::UpdateRelationshipRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetRelationshipTypeResponse>* AsyncGetRelationshipTypeRaw(::grpc::ClientContext* context, const ::organization::GetRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetRelationshipTypeResponse>* PrepareAsyncGetRelationshipTypeRaw(::grpc::ClientContext* context, const ::organization::GetRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListRelationshipTypesResponse>* AsyncListRelationshipTypesRaw(::grpc::ClientContext* context, const ::organization::ListRelationshipTypesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListRelationshipTypesResponse>* PrepareAsyncListRelationshipTypesRaw(::grpc::ClientContext* context, const ::organization::ListRelationshipTypesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateRelationshipTypeResponse>* AsyncCreateRelationshipTypeRaw(::grpc::ClientContext* context, const ::organization::CreateRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateRelationshipTypeResponse>* PrepareAsyncCreateRelationshipTypeRaw(::grpc::ClientContext* context, const ::organization::CreateRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateRelationshipTypeResponse>* AsyncUpdateRelationshipTypeRaw(::grpc::ClientContext* context, const ::organization::UpdateRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateRelationshipTypeResponse>* PrepareAsyncUpdateRelationshipTypeRaw(::grpc::ClientContext* context, const ::organization::UpdateRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateContactResponse>* AsyncCreateContactRaw(::grpc::ClientContext* context, const ::organization::CreateContactRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateContactResponse>* PrepareAsyncCreateContactRaw(::grpc::ClientContext* context, const ::organization::CreateContactRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetContactResponse>* AsyncGetContactRaw(::grpc::ClientContext* context, const ::organization::GetContactRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetContactResponse>* PrepareAsyncGetContactRaw(::grpc::ClientContext* context, const ::organization::GetContactRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateContactResponse>* AsyncUpdateContactRaw(::grpc::ClientContext* context, const ::organization::UpdateContactRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateContactResponse>* PrepareAsyncUpdateContactRaw(::grpc::ClientContext* context, const ::organization::UpdateContactRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::DeleteContactResponse>* AsyncDeleteContactRaw(::grpc::ClientContext* context, const ::organization::DeleteContactRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::DeleteContactResponse>* PrepareAsyncDeleteContactRaw(::grpc::ClientContext* context, const ::organization::DeleteContactRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListContactsResponse>* AsyncListContactsRaw(::grpc::ClientContext* context, const ::organization::ListContactsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::ListContactsResponse>* PrepareAsyncListContactsRaw(::grpc::ClientContext* context, const ::organization::ListContactsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::GeneratePresignedURLsResponse>* AsyncGeneratePresignedURLsRaw(::grpc::ClientContext* context, const ::organization::GeneratePresignedURLsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::GeneratePresignedURLsResponse>* PrepareAsyncGeneratePresignedURLsRaw(::grpc::ClientContext* context, const ::organization::GeneratePresignedURLsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateSaleSettingsResponse>* AsyncCreateSaleSettingsRaw(::grpc::ClientContext* context, const ::organization::CreateSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::CreateSaleSettingsResponse>* PrepareAsyncCreateSaleSettingsRaw(::grpc::ClientContext* context, const ::organization::CreateSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetSaleSettingsResponse>* AsyncGetSaleSettingsRaw(::grpc::ClientContext* context, const ::organization::GetSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::GetSaleSettingsResponse>* PrepareAsyncGetSaleSettingsRaw(::grpc::ClientContext* context, const ::organization::GetSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateSaleSettingsResponse>* AsyncUpdateSaleSettingsRaw(::grpc::ClientContext* context, const ::organization::UpdateSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::organization::UpdateSaleSettingsResponse>* PrepareAsyncUpdateSaleSettingsRaw(::grpc::ClientContext* context, const ::organization::UpdateSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateOrganization(::grpc::ClientContext* context, const ::organization::CreateOrganizationRequest& request, ::organization::CreateOrganizationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateOrganizationResponse>> AsyncCreateOrganization(::grpc::ClientContext* context, const ::organization::CreateOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateOrganizationResponse>>(AsyncCreateOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateOrganizationResponse>> PrepareAsyncCreateOrganization(::grpc::ClientContext* context, const ::organization::CreateOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateOrganizationResponse>>(PrepareAsyncCreateOrganizationRaw(context, request, cq));
    }
    ::grpc::Status GetOrganization(::grpc::ClientContext* context, const ::organization::GetOrganizationRequest& request, ::organization::GetOrganizationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetOrganizationResponse>> AsyncGetOrganization(::grpc::ClientContext* context, const ::organization::GetOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetOrganizationResponse>>(AsyncGetOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetOrganizationResponse>> PrepareAsyncGetOrganization(::grpc::ClientContext* context, const ::organization::GetOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetOrganizationResponse>>(PrepareAsyncGetOrganizationRaw(context, request, cq));
    }
    ::grpc::Status ListOrganizations(::grpc::ClientContext* context, const ::organization::ListOrganizationsRequest& request, ::organization::ListOrganizationsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListOrganizationsResponse>> AsyncListOrganizations(::grpc::ClientContext* context, const ::organization::ListOrganizationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListOrganizationsResponse>>(AsyncListOrganizationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListOrganizationsResponse>> PrepareAsyncListOrganizations(::grpc::ClientContext* context, const ::organization::ListOrganizationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListOrganizationsResponse>>(PrepareAsyncListOrganizationsRaw(context, request, cq));
    }
    ::grpc::Status PatchOrganization(::grpc::ClientContext* context, const ::organization::PatchOrganizationRequest& request, ::organization::PatchOrganizationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::PatchOrganizationResponse>> AsyncPatchOrganization(::grpc::ClientContext* context, const ::organization::PatchOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::PatchOrganizationResponse>>(AsyncPatchOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::PatchOrganizationResponse>> PrepareAsyncPatchOrganization(::grpc::ClientContext* context, const ::organization::PatchOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::PatchOrganizationResponse>>(PrepareAsyncPatchOrganizationRaw(context, request, cq));
    }
    ::grpc::Status UpdateOrganization(::grpc::ClientContext* context, const ::organization::UpdateOrganizationRequest& request, ::organization::UpdateOrganizationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateOrganizationResponse>> AsyncUpdateOrganization(::grpc::ClientContext* context, const ::organization::UpdateOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateOrganizationResponse>>(AsyncUpdateOrganizationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateOrganizationResponse>> PrepareAsyncUpdateOrganization(::grpc::ClientContext* context, const ::organization::UpdateOrganizationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateOrganizationResponse>>(PrepareAsyncUpdateOrganizationRaw(context, request, cq));
    }
    ::grpc::Status CreateCounterparty(::grpc::ClientContext* context, const ::organization::CreateCounterpartyRequest& request, ::organization::CreateCounterpartyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateCounterpartyResponse>> AsyncCreateCounterparty(::grpc::ClientContext* context, const ::organization::CreateCounterpartyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateCounterpartyResponse>>(AsyncCreateCounterpartyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateCounterpartyResponse>> PrepareAsyncCreateCounterparty(::grpc::ClientContext* context, const ::organization::CreateCounterpartyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateCounterpartyResponse>>(PrepareAsyncCreateCounterpartyRaw(context, request, cq));
    }
    ::grpc::Status GetCounterparty(::grpc::ClientContext* context, const ::organization::GetCounterpartyRequest& request, ::organization::GetCounterpartyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetCounterpartyResponse>> AsyncGetCounterparty(::grpc::ClientContext* context, const ::organization::GetCounterpartyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetCounterpartyResponse>>(AsyncGetCounterpartyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetCounterpartyResponse>> PrepareAsyncGetCounterparty(::grpc::ClientContext* context, const ::organization::GetCounterpartyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetCounterpartyResponse>>(PrepareAsyncGetCounterpartyRaw(context, request, cq));
    }
    ::grpc::Status ListCounterparties(::grpc::ClientContext* context, const ::organization::ListCounterpartiesRequest& request, ::organization::ListCounterpartiesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListCounterpartiesResponse>> AsyncListCounterparties(::grpc::ClientContext* context, const ::organization::ListCounterpartiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListCounterpartiesResponse>>(AsyncListCounterpartiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListCounterpartiesResponse>> PrepareAsyncListCounterparties(::grpc::ClientContext* context, const ::organization::ListCounterpartiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListCounterpartiesResponse>>(PrepareAsyncListCounterpartiesRaw(context, request, cq));
    }
    ::grpc::Status PatchCounterparty(::grpc::ClientContext* context, const ::organization::PatchCounterpartyRequest& request, ::organization::PatchCounterpartyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::PatchCounterpartyResponse>> AsyncPatchCounterparty(::grpc::ClientContext* context, const ::organization::PatchCounterpartyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::PatchCounterpartyResponse>>(AsyncPatchCounterpartyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::PatchCounterpartyResponse>> PrepareAsyncPatchCounterparty(::grpc::ClientContext* context, const ::organization::PatchCounterpartyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::PatchCounterpartyResponse>>(PrepareAsyncPatchCounterpartyRaw(context, request, cq));
    }
    ::grpc::Status ListBankAccounts(::grpc::ClientContext* context, const ::organization::ListBankAccountsRequest& request, ::organization::ListBankAccountsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListBankAccountsResponse>> AsyncListBankAccounts(::grpc::ClientContext* context, const ::organization::ListBankAccountsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListBankAccountsResponse>>(AsyncListBankAccountsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListBankAccountsResponse>> PrepareAsyncListBankAccounts(::grpc::ClientContext* context, const ::organization::ListBankAccountsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListBankAccountsResponse>>(PrepareAsyncListBankAccountsRaw(context, request, cq));
    }
    ::grpc::Status GetDefaultBankAccount(::grpc::ClientContext* context, const ::organization::GetDefaultBankAccountRequest& request, ::organization::GetDefaultBankAccountResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetDefaultBankAccountResponse>> AsyncGetDefaultBankAccount(::grpc::ClientContext* context, const ::organization::GetDefaultBankAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetDefaultBankAccountResponse>>(AsyncGetDefaultBankAccountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetDefaultBankAccountResponse>> PrepareAsyncGetDefaultBankAccount(::grpc::ClientContext* context, const ::organization::GetDefaultBankAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetDefaultBankAccountResponse>>(PrepareAsyncGetDefaultBankAccountRaw(context, request, cq));
    }
    ::grpc::Status CreateBankAccount(::grpc::ClientContext* context, const ::organization::CreateBankAccountRequest& request, ::organization::CreateBankAccountResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateBankAccountResponse>> AsyncCreateBankAccount(::grpc::ClientContext* context, const ::organization::CreateBankAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateBankAccountResponse>>(AsyncCreateBankAccountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateBankAccountResponse>> PrepareAsyncCreateBankAccount(::grpc::ClientContext* context, const ::organization::CreateBankAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateBankAccountResponse>>(PrepareAsyncCreateBankAccountRaw(context, request, cq));
    }
    ::grpc::Status UpdateBankAccount(::grpc::ClientContext* context, const ::organization::UpdateBankAccountRequest& request, ::organization::UpdateBankAccountResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateBankAccountResponse>> AsyncUpdateBankAccount(::grpc::ClientContext* context, const ::organization::UpdateBankAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateBankAccountResponse>>(AsyncUpdateBankAccountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateBankAccountResponse>> PrepareAsyncUpdateBankAccount(::grpc::ClientContext* context, const ::organization::UpdateBankAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateBankAccountResponse>>(PrepareAsyncUpdateBankAccountRaw(context, request, cq));
    }
    ::grpc::Status UpdateBankAccounts(::grpc::ClientContext* context, const ::organization::UpdateBankAccountsRequest& request, ::organization::UpdateBankAccountsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateBankAccountsResponse>> AsyncUpdateBankAccounts(::grpc::ClientContext* context, const ::organization::UpdateBankAccountsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateBankAccountsResponse>>(AsyncUpdateBankAccountsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateBankAccountsResponse>> PrepareAsyncUpdateBankAccounts(::grpc::ClientContext* context, const ::organization::UpdateBankAccountsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateBankAccountsResponse>>(PrepareAsyncUpdateBankAccountsRaw(context, request, cq));
    }
    ::grpc::Status DeleteBankAccount(::grpc::ClientContext* context, const ::organization::DeleteBankAccountRequest& request, ::organization::DeleteBankAccountResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::DeleteBankAccountResponse>> AsyncDeleteBankAccount(::grpc::ClientContext* context, const ::organization::DeleteBankAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::DeleteBankAccountResponse>>(AsyncDeleteBankAccountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::DeleteBankAccountResponse>> PrepareAsyncDeleteBankAccount(::grpc::ClientContext* context, const ::organization::DeleteBankAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::DeleteBankAccountResponse>>(PrepareAsyncDeleteBankAccountRaw(context, request, cq));
    }
    ::grpc::Status CreateAddress(::grpc::ClientContext* context, const ::organization::CreateAddressRequest& request, ::organization::CreateAddressResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateAddressResponse>> AsyncCreateAddress(::grpc::ClientContext* context, const ::organization::CreateAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateAddressResponse>>(AsyncCreateAddressRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateAddressResponse>> PrepareAsyncCreateAddress(::grpc::ClientContext* context, const ::organization::CreateAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateAddressResponse>>(PrepareAsyncCreateAddressRaw(context, request, cq));
    }
    ::grpc::Status GetAddress(::grpc::ClientContext* context, const ::organization::GetAddressRequest& request, ::organization::GetAddressResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetAddressResponse>> AsyncGetAddress(::grpc::ClientContext* context, const ::organization::GetAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetAddressResponse>>(AsyncGetAddressRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetAddressResponse>> PrepareAsyncGetAddress(::grpc::ClientContext* context, const ::organization::GetAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetAddressResponse>>(PrepareAsyncGetAddressRaw(context, request, cq));
    }
    ::grpc::Status UpdateAddress(::grpc::ClientContext* context, const ::organization::UpdateAddressRequest& request, ::organization::UpdateAddressResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateAddressResponse>> AsyncUpdateAddress(::grpc::ClientContext* context, const ::organization::UpdateAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateAddressResponse>>(AsyncUpdateAddressRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateAddressResponse>> PrepareAsyncUpdateAddress(::grpc::ClientContext* context, const ::organization::UpdateAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateAddressResponse>>(PrepareAsyncUpdateAddressRaw(context, request, cq));
    }
    ::grpc::Status PatchAddress(::grpc::ClientContext* context, const ::organization::PatchAddressRequest& request, ::organization::PatchAddressResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::PatchAddressResponse>> AsyncPatchAddress(::grpc::ClientContext* context, const ::organization::PatchAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::PatchAddressResponse>>(AsyncPatchAddressRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::PatchAddressResponse>> PrepareAsyncPatchAddress(::grpc::ClientContext* context, const ::organization::PatchAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::PatchAddressResponse>>(PrepareAsyncPatchAddressRaw(context, request, cq));
    }
    ::grpc::Status DeleteAddress(::grpc::ClientContext* context, const ::organization::DeleteAddressRequest& request, ::organization::DeleteAddressResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::DeleteAddressResponse>> AsyncDeleteAddress(::grpc::ClientContext* context, const ::organization::DeleteAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::DeleteAddressResponse>>(AsyncDeleteAddressRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::DeleteAddressResponse>> PrepareAsyncDeleteAddress(::grpc::ClientContext* context, const ::organization::DeleteAddressRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::DeleteAddressResponse>>(PrepareAsyncDeleteAddressRaw(context, request, cq));
    }
    ::grpc::Status CreateRelationship(::grpc::ClientContext* context, const ::organization::CreateRelationshipRequest& request, ::organization::CreateRelationshipResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateRelationshipResponse>> AsyncCreateRelationship(::grpc::ClientContext* context, const ::organization::CreateRelationshipRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateRelationshipResponse>>(AsyncCreateRelationshipRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateRelationshipResponse>> PrepareAsyncCreateRelationship(::grpc::ClientContext* context, const ::organization::CreateRelationshipRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateRelationshipResponse>>(PrepareAsyncCreateRelationshipRaw(context, request, cq));
    }
    ::grpc::Status ListRelationships(::grpc::ClientContext* context, const ::organization::ListRelationshipsRequest& request, ::organization::ListRelationshipsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListRelationshipsResponse>> AsyncListRelationships(::grpc::ClientContext* context, const ::organization::ListRelationshipsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListRelationshipsResponse>>(AsyncListRelationshipsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListRelationshipsResponse>> PrepareAsyncListRelationships(::grpc::ClientContext* context, const ::organization::ListRelationshipsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListRelationshipsResponse>>(PrepareAsyncListRelationshipsRaw(context, request, cq));
    }
    ::grpc::Status EnsureRelationshipExists(::grpc::ClientContext* context, const ::organization::EnsureRelationshipExistsRequest& request, ::organization::EnsureRelationshipExistsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::EnsureRelationshipExistsResponse>> AsyncEnsureRelationshipExists(::grpc::ClientContext* context, const ::organization::EnsureRelationshipExistsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::EnsureRelationshipExistsResponse>>(AsyncEnsureRelationshipExistsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::EnsureRelationshipExistsResponse>> PrepareAsyncEnsureRelationshipExists(::grpc::ClientContext* context, const ::organization::EnsureRelationshipExistsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::EnsureRelationshipExistsResponse>>(PrepareAsyncEnsureRelationshipExistsRaw(context, request, cq));
    }
    ::grpc::Status UpdateRelationship(::grpc::ClientContext* context, const ::organization::UpdateRelationshipRequest& request, ::organization::UpdateRelationshipResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateRelationshipResponse>> AsyncUpdateRelationship(::grpc::ClientContext* context, const ::organization::UpdateRelationshipRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateRelationshipResponse>>(AsyncUpdateRelationshipRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateRelationshipResponse>> PrepareAsyncUpdateRelationship(::grpc::ClientContext* context, const ::organization::UpdateRelationshipRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateRelationshipResponse>>(PrepareAsyncUpdateRelationshipRaw(context, request, cq));
    }
    ::grpc::Status GetRelationshipType(::grpc::ClientContext* context, const ::organization::GetRelationshipTypeRequest& request, ::organization::GetRelationshipTypeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetRelationshipTypeResponse>> AsyncGetRelationshipType(::grpc::ClientContext* context, const ::organization::GetRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetRelationshipTypeResponse>>(AsyncGetRelationshipTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetRelationshipTypeResponse>> PrepareAsyncGetRelationshipType(::grpc::ClientContext* context, const ::organization::GetRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetRelationshipTypeResponse>>(PrepareAsyncGetRelationshipTypeRaw(context, request, cq));
    }
    ::grpc::Status ListRelationshipTypes(::grpc::ClientContext* context, const ::organization::ListRelationshipTypesRequest& request, ::organization::ListRelationshipTypesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListRelationshipTypesResponse>> AsyncListRelationshipTypes(::grpc::ClientContext* context, const ::organization::ListRelationshipTypesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListRelationshipTypesResponse>>(AsyncListRelationshipTypesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListRelationshipTypesResponse>> PrepareAsyncListRelationshipTypes(::grpc::ClientContext* context, const ::organization::ListRelationshipTypesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListRelationshipTypesResponse>>(PrepareAsyncListRelationshipTypesRaw(context, request, cq));
    }
    ::grpc::Status CreateRelationshipType(::grpc::ClientContext* context, const ::organization::CreateRelationshipTypeRequest& request, ::organization::CreateRelationshipTypeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateRelationshipTypeResponse>> AsyncCreateRelationshipType(::grpc::ClientContext* context, const ::organization::CreateRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateRelationshipTypeResponse>>(AsyncCreateRelationshipTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateRelationshipTypeResponse>> PrepareAsyncCreateRelationshipType(::grpc::ClientContext* context, const ::organization::CreateRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateRelationshipTypeResponse>>(PrepareAsyncCreateRelationshipTypeRaw(context, request, cq));
    }
    ::grpc::Status UpdateRelationshipType(::grpc::ClientContext* context, const ::organization::UpdateRelationshipTypeRequest& request, ::organization::UpdateRelationshipTypeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateRelationshipTypeResponse>> AsyncUpdateRelationshipType(::grpc::ClientContext* context, const ::organization::UpdateRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateRelationshipTypeResponse>>(AsyncUpdateRelationshipTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateRelationshipTypeResponse>> PrepareAsyncUpdateRelationshipType(::grpc::ClientContext* context, const ::organization::UpdateRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateRelationshipTypeResponse>>(PrepareAsyncUpdateRelationshipTypeRaw(context, request, cq));
    }
    ::grpc::Status CreateContact(::grpc::ClientContext* context, const ::organization::CreateContactRequest& request, ::organization::CreateContactResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateContactResponse>> AsyncCreateContact(::grpc::ClientContext* context, const ::organization::CreateContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateContactResponse>>(AsyncCreateContactRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateContactResponse>> PrepareAsyncCreateContact(::grpc::ClientContext* context, const ::organization::CreateContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateContactResponse>>(PrepareAsyncCreateContactRaw(context, request, cq));
    }
    ::grpc::Status GetContact(::grpc::ClientContext* context, const ::organization::GetContactRequest& request, ::organization::GetContactResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetContactResponse>> AsyncGetContact(::grpc::ClientContext* context, const ::organization::GetContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetContactResponse>>(AsyncGetContactRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetContactResponse>> PrepareAsyncGetContact(::grpc::ClientContext* context, const ::organization::GetContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetContactResponse>>(PrepareAsyncGetContactRaw(context, request, cq));
    }
    ::grpc::Status UpdateContact(::grpc::ClientContext* context, const ::organization::UpdateContactRequest& request, ::organization::UpdateContactResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateContactResponse>> AsyncUpdateContact(::grpc::ClientContext* context, const ::organization::UpdateContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateContactResponse>>(AsyncUpdateContactRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateContactResponse>> PrepareAsyncUpdateContact(::grpc::ClientContext* context, const ::organization::UpdateContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateContactResponse>>(PrepareAsyncUpdateContactRaw(context, request, cq));
    }
    ::grpc::Status DeleteContact(::grpc::ClientContext* context, const ::organization::DeleteContactRequest& request, ::organization::DeleteContactResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::DeleteContactResponse>> AsyncDeleteContact(::grpc::ClientContext* context, const ::organization::DeleteContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::DeleteContactResponse>>(AsyncDeleteContactRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::DeleteContactResponse>> PrepareAsyncDeleteContact(::grpc::ClientContext* context, const ::organization::DeleteContactRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::DeleteContactResponse>>(PrepareAsyncDeleteContactRaw(context, request, cq));
    }
    ::grpc::Status ListContacts(::grpc::ClientContext* context, const ::organization::ListContactsRequest& request, ::organization::ListContactsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListContactsResponse>> AsyncListContacts(::grpc::ClientContext* context, const ::organization::ListContactsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListContactsResponse>>(AsyncListContactsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListContactsResponse>> PrepareAsyncListContacts(::grpc::ClientContext* context, const ::organization::ListContactsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::ListContactsResponse>>(PrepareAsyncListContactsRaw(context, request, cq));
    }
    ::grpc::Status GeneratePresignedURLs(::grpc::ClientContext* context, const ::organization::GeneratePresignedURLsRequest& request, ::organization::GeneratePresignedURLsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GeneratePresignedURLsResponse>> AsyncGeneratePresignedURLs(::grpc::ClientContext* context, const ::organization::GeneratePresignedURLsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GeneratePresignedURLsResponse>>(AsyncGeneratePresignedURLsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GeneratePresignedURLsResponse>> PrepareAsyncGeneratePresignedURLs(::grpc::ClientContext* context, const ::organization::GeneratePresignedURLsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GeneratePresignedURLsResponse>>(PrepareAsyncGeneratePresignedURLsRaw(context, request, cq));
    }
    ::grpc::Status CreateSaleSettings(::grpc::ClientContext* context, const ::organization::CreateSaleSettingsRequest& request, ::organization::CreateSaleSettingsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateSaleSettingsResponse>> AsyncCreateSaleSettings(::grpc::ClientContext* context, const ::organization::CreateSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateSaleSettingsResponse>>(AsyncCreateSaleSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateSaleSettingsResponse>> PrepareAsyncCreateSaleSettings(::grpc::ClientContext* context, const ::organization::CreateSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::CreateSaleSettingsResponse>>(PrepareAsyncCreateSaleSettingsRaw(context, request, cq));
    }
    ::grpc::Status GetSaleSettings(::grpc::ClientContext* context, const ::organization::GetSaleSettingsRequest& request, ::organization::GetSaleSettingsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetSaleSettingsResponse>> AsyncGetSaleSettings(::grpc::ClientContext* context, const ::organization::GetSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetSaleSettingsResponse>>(AsyncGetSaleSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetSaleSettingsResponse>> PrepareAsyncGetSaleSettings(::grpc::ClientContext* context, const ::organization::GetSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::GetSaleSettingsResponse>>(PrepareAsyncGetSaleSettingsRaw(context, request, cq));
    }
    ::grpc::Status UpdateSaleSettings(::grpc::ClientContext* context, const ::organization::UpdateSaleSettingsRequest& request, ::organization::UpdateSaleSettingsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateSaleSettingsResponse>> AsyncUpdateSaleSettings(::grpc::ClientContext* context, const ::organization::UpdateSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateSaleSettingsResponse>>(AsyncUpdateSaleSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateSaleSettingsResponse>> PrepareAsyncUpdateSaleSettings(::grpc::ClientContext* context, const ::organization::UpdateSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::organization::UpdateSaleSettingsResponse>>(PrepareAsyncUpdateSaleSettingsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateOrganization(::grpc::ClientContext* context, const ::organization::CreateOrganizationRequest* request, ::organization::CreateOrganizationResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateOrganization(::grpc::ClientContext* context, const ::organization::CreateOrganizationRequest* request, ::organization::CreateOrganizationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetOrganization(::grpc::ClientContext* context, const ::organization::GetOrganizationRequest* request, ::organization::GetOrganizationResponse* response, std::function<void(::grpc::Status)>) override;
      void GetOrganization(::grpc::ClientContext* context, const ::organization::GetOrganizationRequest* request, ::organization::GetOrganizationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListOrganizations(::grpc::ClientContext* context, const ::organization::ListOrganizationsRequest* request, ::organization::ListOrganizationsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListOrganizations(::grpc::ClientContext* context, const ::organization::ListOrganizationsRequest* request, ::organization::ListOrganizationsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PatchOrganization(::grpc::ClientContext* context, const ::organization::PatchOrganizationRequest* request, ::organization::PatchOrganizationResponse* response, std::function<void(::grpc::Status)>) override;
      void PatchOrganization(::grpc::ClientContext* context, const ::organization::PatchOrganizationRequest* request, ::organization::PatchOrganizationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateOrganization(::grpc::ClientContext* context, const ::organization::UpdateOrganizationRequest* request, ::organization::UpdateOrganizationResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateOrganization(::grpc::ClientContext* context, const ::organization::UpdateOrganizationRequest* request, ::organization::UpdateOrganizationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateCounterparty(::grpc::ClientContext* context, const ::organization::CreateCounterpartyRequest* request, ::organization::CreateCounterpartyResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateCounterparty(::grpc::ClientContext* context, const ::organization::CreateCounterpartyRequest* request, ::organization::CreateCounterpartyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetCounterparty(::grpc::ClientContext* context, const ::organization::GetCounterpartyRequest* request, ::organization::GetCounterpartyResponse* response, std::function<void(::grpc::Status)>) override;
      void GetCounterparty(::grpc::ClientContext* context, const ::organization::GetCounterpartyRequest* request, ::organization::GetCounterpartyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListCounterparties(::grpc::ClientContext* context, const ::organization::ListCounterpartiesRequest* request, ::organization::ListCounterpartiesResponse* response, std::function<void(::grpc::Status)>) override;
      void ListCounterparties(::grpc::ClientContext* context, const ::organization::ListCounterpartiesRequest* request, ::organization::ListCounterpartiesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PatchCounterparty(::grpc::ClientContext* context, const ::organization::PatchCounterpartyRequest* request, ::organization::PatchCounterpartyResponse* response, std::function<void(::grpc::Status)>) override;
      void PatchCounterparty(::grpc::ClientContext* context, const ::organization::PatchCounterpartyRequest* request, ::organization::PatchCounterpartyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListBankAccounts(::grpc::ClientContext* context, const ::organization::ListBankAccountsRequest* request, ::organization::ListBankAccountsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListBankAccounts(::grpc::ClientContext* context, const ::organization::ListBankAccountsRequest* request, ::organization::ListBankAccountsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDefaultBankAccount(::grpc::ClientContext* context, const ::organization::GetDefaultBankAccountRequest* request, ::organization::GetDefaultBankAccountResponse* response, std::function<void(::grpc::Status)>) override;
      void GetDefaultBankAccount(::grpc::ClientContext* context, const ::organization::GetDefaultBankAccountRequest* request, ::organization::GetDefaultBankAccountResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateBankAccount(::grpc::ClientContext* context, const ::organization::CreateBankAccountRequest* request, ::organization::CreateBankAccountResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateBankAccount(::grpc::ClientContext* context, const ::organization::CreateBankAccountRequest* request, ::organization::CreateBankAccountResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateBankAccount(::grpc::ClientContext* context, const ::organization::UpdateBankAccountRequest* request, ::organization::UpdateBankAccountResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateBankAccount(::grpc::ClientContext* context, const ::organization::UpdateBankAccountRequest* request, ::organization::UpdateBankAccountResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateBankAccounts(::grpc::ClientContext* context, const ::organization::UpdateBankAccountsRequest* request, ::organization::UpdateBankAccountsResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateBankAccounts(::grpc::ClientContext* context, const ::organization::UpdateBankAccountsRequest* request, ::organization::UpdateBankAccountsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteBankAccount(::grpc::ClientContext* context, const ::organization::DeleteBankAccountRequest* request, ::organization::DeleteBankAccountResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteBankAccount(::grpc::ClientContext* context, const ::organization::DeleteBankAccountRequest* request, ::organization::DeleteBankAccountResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateAddress(::grpc::ClientContext* context, const ::organization::CreateAddressRequest* request, ::organization::CreateAddressResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateAddress(::grpc::ClientContext* context, const ::organization::CreateAddressRequest* request, ::organization::CreateAddressResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAddress(::grpc::ClientContext* context, const ::organization::GetAddressRequest* request, ::organization::GetAddressResponse* response, std::function<void(::grpc::Status)>) override;
      void GetAddress(::grpc::ClientContext* context, const ::organization::GetAddressRequest* request, ::organization::GetAddressResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateAddress(::grpc::ClientContext* context, const ::organization::UpdateAddressRequest* request, ::organization::UpdateAddressResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateAddress(::grpc::ClientContext* context, const ::organization::UpdateAddressRequest* request, ::organization::UpdateAddressResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PatchAddress(::grpc::ClientContext* context, const ::organization::PatchAddressRequest* request, ::organization::PatchAddressResponse* response, std::function<void(::grpc::Status)>) override;
      void PatchAddress(::grpc::ClientContext* context, const ::organization::PatchAddressRequest* request, ::organization::PatchAddressResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteAddress(::grpc::ClientContext* context, const ::organization::DeleteAddressRequest* request, ::organization::DeleteAddressResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteAddress(::grpc::ClientContext* context, const ::organization::DeleteAddressRequest* request, ::organization::DeleteAddressResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateRelationship(::grpc::ClientContext* context, const ::organization::CreateRelationshipRequest* request, ::organization::CreateRelationshipResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateRelationship(::grpc::ClientContext* context, const ::organization::CreateRelationshipRequest* request, ::organization::CreateRelationshipResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListRelationships(::grpc::ClientContext* context, const ::organization::ListRelationshipsRequest* request, ::organization::ListRelationshipsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListRelationships(::grpc::ClientContext* context, const ::organization::ListRelationshipsRequest* request, ::organization::ListRelationshipsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void EnsureRelationshipExists(::grpc::ClientContext* context, const ::organization::EnsureRelationshipExistsRequest* request, ::organization::EnsureRelationshipExistsResponse* response, std::function<void(::grpc::Status)>) override;
      void EnsureRelationshipExists(::grpc::ClientContext* context, const ::organization::EnsureRelationshipExistsRequest* request, ::organization::EnsureRelationshipExistsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateRelationship(::grpc::ClientContext* context, const ::organization::UpdateRelationshipRequest* request, ::organization::UpdateRelationshipResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateRelationship(::grpc::ClientContext* context, const ::organization::UpdateRelationshipRequest* request, ::organization::UpdateRelationshipResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRelationshipType(::grpc::ClientContext* context, const ::organization::GetRelationshipTypeRequest* request, ::organization::GetRelationshipTypeResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRelationshipType(::grpc::ClientContext* context, const ::organization::GetRelationshipTypeRequest* request, ::organization::GetRelationshipTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListRelationshipTypes(::grpc::ClientContext* context, const ::organization::ListRelationshipTypesRequest* request, ::organization::ListRelationshipTypesResponse* response, std::function<void(::grpc::Status)>) override;
      void ListRelationshipTypes(::grpc::ClientContext* context, const ::organization::ListRelationshipTypesRequest* request, ::organization::ListRelationshipTypesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateRelationshipType(::grpc::ClientContext* context, const ::organization::CreateRelationshipTypeRequest* request, ::organization::CreateRelationshipTypeResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateRelationshipType(::grpc::ClientContext* context, const ::organization::CreateRelationshipTypeRequest* request, ::organization::CreateRelationshipTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateRelationshipType(::grpc::ClientContext* context, const ::organization::UpdateRelationshipTypeRequest* request, ::organization::UpdateRelationshipTypeResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateRelationshipType(::grpc::ClientContext* context, const ::organization::UpdateRelationshipTypeRequest* request, ::organization::UpdateRelationshipTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateContact(::grpc::ClientContext* context, const ::organization::CreateContactRequest* request, ::organization::CreateContactResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateContact(::grpc::ClientContext* context, const ::organization::CreateContactRequest* request, ::organization::CreateContactResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetContact(::grpc::ClientContext* context, const ::organization::GetContactRequest* request, ::organization::GetContactResponse* response, std::function<void(::grpc::Status)>) override;
      void GetContact(::grpc::ClientContext* context, const ::organization::GetContactRequest* request, ::organization::GetContactResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateContact(::grpc::ClientContext* context, const ::organization::UpdateContactRequest* request, ::organization::UpdateContactResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateContact(::grpc::ClientContext* context, const ::organization::UpdateContactRequest* request, ::organization::UpdateContactResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteContact(::grpc::ClientContext* context, const ::organization::DeleteContactRequest* request, ::organization::DeleteContactResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteContact(::grpc::ClientContext* context, const ::organization::DeleteContactRequest* request, ::organization::DeleteContactResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListContacts(::grpc::ClientContext* context, const ::organization::ListContactsRequest* request, ::organization::ListContactsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListContacts(::grpc::ClientContext* context, const ::organization::ListContactsRequest* request, ::organization::ListContactsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GeneratePresignedURLs(::grpc::ClientContext* context, const ::organization::GeneratePresignedURLsRequest* request, ::organization::GeneratePresignedURLsResponse* response, std::function<void(::grpc::Status)>) override;
      void GeneratePresignedURLs(::grpc::ClientContext* context, const ::organization::GeneratePresignedURLsRequest* request, ::organization::GeneratePresignedURLsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateSaleSettings(::grpc::ClientContext* context, const ::organization::CreateSaleSettingsRequest* request, ::organization::CreateSaleSettingsResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateSaleSettings(::grpc::ClientContext* context, const ::organization::CreateSaleSettingsRequest* request, ::organization::CreateSaleSettingsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSaleSettings(::grpc::ClientContext* context, const ::organization::GetSaleSettingsRequest* request, ::organization::GetSaleSettingsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetSaleSettings(::grpc::ClientContext* context, const ::organization::GetSaleSettingsRequest* request, ::organization::GetSaleSettingsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateSaleSettings(::grpc::ClientContext* context, const ::organization::UpdateSaleSettingsRequest* request, ::organization::UpdateSaleSettingsResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateSaleSettings(::grpc::ClientContext* context, const ::organization::UpdateSaleSettingsRequest* request, ::organization::UpdateSaleSettingsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::organization::CreateOrganizationResponse>* AsyncCreateOrganizationRaw(::grpc::ClientContext* context, const ::organization::CreateOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::CreateOrganizationResponse>* PrepareAsyncCreateOrganizationRaw(::grpc::ClientContext* context, const ::organization::CreateOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::GetOrganizationResponse>* AsyncGetOrganizationRaw(::grpc::ClientContext* context, const ::organization::GetOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::GetOrganizationResponse>* PrepareAsyncGetOrganizationRaw(::grpc::ClientContext* context, const ::organization::GetOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::ListOrganizationsResponse>* AsyncListOrganizationsRaw(::grpc::ClientContext* context, const ::organization::ListOrganizationsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::ListOrganizationsResponse>* PrepareAsyncListOrganizationsRaw(::grpc::ClientContext* context, const ::organization::ListOrganizationsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::PatchOrganizationResponse>* AsyncPatchOrganizationRaw(::grpc::ClientContext* context, const ::organization::PatchOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::PatchOrganizationResponse>* PrepareAsyncPatchOrganizationRaw(::grpc::ClientContext* context, const ::organization::PatchOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::UpdateOrganizationResponse>* AsyncUpdateOrganizationRaw(::grpc::ClientContext* context, const ::organization::UpdateOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::UpdateOrganizationResponse>* PrepareAsyncUpdateOrganizationRaw(::grpc::ClientContext* context, const ::organization::UpdateOrganizationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::CreateCounterpartyResponse>* AsyncCreateCounterpartyRaw(::grpc::ClientContext* context, const ::organization::CreateCounterpartyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::CreateCounterpartyResponse>* PrepareAsyncCreateCounterpartyRaw(::grpc::ClientContext* context, const ::organization::CreateCounterpartyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::GetCounterpartyResponse>* AsyncGetCounterpartyRaw(::grpc::ClientContext* context, const ::organization::GetCounterpartyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::GetCounterpartyResponse>* PrepareAsyncGetCounterpartyRaw(::grpc::ClientContext* context, const ::organization::GetCounterpartyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::ListCounterpartiesResponse>* AsyncListCounterpartiesRaw(::grpc::ClientContext* context, const ::organization::ListCounterpartiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::ListCounterpartiesResponse>* PrepareAsyncListCounterpartiesRaw(::grpc::ClientContext* context, const ::organization::ListCounterpartiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::PatchCounterpartyResponse>* AsyncPatchCounterpartyRaw(::grpc::ClientContext* context, const ::organization::PatchCounterpartyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::PatchCounterpartyResponse>* PrepareAsyncPatchCounterpartyRaw(::grpc::ClientContext* context, const ::organization::PatchCounterpartyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::ListBankAccountsResponse>* AsyncListBankAccountsRaw(::grpc::ClientContext* context, const ::organization::ListBankAccountsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::ListBankAccountsResponse>* PrepareAsyncListBankAccountsRaw(::grpc::ClientContext* context, const ::organization::ListBankAccountsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::GetDefaultBankAccountResponse>* AsyncGetDefaultBankAccountRaw(::grpc::ClientContext* context, const ::organization::GetDefaultBankAccountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::GetDefaultBankAccountResponse>* PrepareAsyncGetDefaultBankAccountRaw(::grpc::ClientContext* context, const ::organization::GetDefaultBankAccountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::CreateBankAccountResponse>* AsyncCreateBankAccountRaw(::grpc::ClientContext* context, const ::organization::CreateBankAccountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::CreateBankAccountResponse>* PrepareAsyncCreateBankAccountRaw(::grpc::ClientContext* context, const ::organization::CreateBankAccountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::UpdateBankAccountResponse>* AsyncUpdateBankAccountRaw(::grpc::ClientContext* context, const ::organization::UpdateBankAccountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::UpdateBankAccountResponse>* PrepareAsyncUpdateBankAccountRaw(::grpc::ClientContext* context, const ::organization::UpdateBankAccountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::UpdateBankAccountsResponse>* AsyncUpdateBankAccountsRaw(::grpc::ClientContext* context, const ::organization::UpdateBankAccountsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::UpdateBankAccountsResponse>* PrepareAsyncUpdateBankAccountsRaw(::grpc::ClientContext* context, const ::organization::UpdateBankAccountsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::DeleteBankAccountResponse>* AsyncDeleteBankAccountRaw(::grpc::ClientContext* context, const ::organization::DeleteBankAccountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::DeleteBankAccountResponse>* PrepareAsyncDeleteBankAccountRaw(::grpc::ClientContext* context, const ::organization::DeleteBankAccountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::CreateAddressResponse>* AsyncCreateAddressRaw(::grpc::ClientContext* context, const ::organization::CreateAddressRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::CreateAddressResponse>* PrepareAsyncCreateAddressRaw(::grpc::ClientContext* context, const ::organization::CreateAddressRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::GetAddressResponse>* AsyncGetAddressRaw(::grpc::ClientContext* context, const ::organization::GetAddressRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::GetAddressResponse>* PrepareAsyncGetAddressRaw(::grpc::ClientContext* context, const ::organization::GetAddressRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::UpdateAddressResponse>* AsyncUpdateAddressRaw(::grpc::ClientContext* context, const ::organization::UpdateAddressRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::UpdateAddressResponse>* PrepareAsyncUpdateAddressRaw(::grpc::ClientContext* context, const ::organization::UpdateAddressRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::PatchAddressResponse>* AsyncPatchAddressRaw(::grpc::ClientContext* context, const ::organization::PatchAddressRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::PatchAddressResponse>* PrepareAsyncPatchAddressRaw(::grpc::ClientContext* context, const ::organization::PatchAddressRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::DeleteAddressResponse>* AsyncDeleteAddressRaw(::grpc::ClientContext* context, const ::organization::DeleteAddressRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::DeleteAddressResponse>* PrepareAsyncDeleteAddressRaw(::grpc::ClientContext* context, const ::organization::DeleteAddressRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::CreateRelationshipResponse>* AsyncCreateRelationshipRaw(::grpc::ClientContext* context, const ::organization::CreateRelationshipRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::CreateRelationshipResponse>* PrepareAsyncCreateRelationshipRaw(::grpc::ClientContext* context, const ::organization::CreateRelationshipRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::ListRelationshipsResponse>* AsyncListRelationshipsRaw(::grpc::ClientContext* context, const ::organization::ListRelationshipsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::ListRelationshipsResponse>* PrepareAsyncListRelationshipsRaw(::grpc::ClientContext* context, const ::organization::ListRelationshipsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::EnsureRelationshipExistsResponse>* AsyncEnsureRelationshipExistsRaw(::grpc::ClientContext* context, const ::organization::EnsureRelationshipExistsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::EnsureRelationshipExistsResponse>* PrepareAsyncEnsureRelationshipExistsRaw(::grpc::ClientContext* context, const ::organization::EnsureRelationshipExistsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::UpdateRelationshipResponse>* AsyncUpdateRelationshipRaw(::grpc::ClientContext* context, const ::organization::UpdateRelationshipRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::UpdateRelationshipResponse>* PrepareAsyncUpdateRelationshipRaw(::grpc::ClientContext* context, const ::organization::UpdateRelationshipRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::GetRelationshipTypeResponse>* AsyncGetRelationshipTypeRaw(::grpc::ClientContext* context, const ::organization::GetRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::GetRelationshipTypeResponse>* PrepareAsyncGetRelationshipTypeRaw(::grpc::ClientContext* context, const ::organization::GetRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::ListRelationshipTypesResponse>* AsyncListRelationshipTypesRaw(::grpc::ClientContext* context, const ::organization::ListRelationshipTypesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::ListRelationshipTypesResponse>* PrepareAsyncListRelationshipTypesRaw(::grpc::ClientContext* context, const ::organization::ListRelationshipTypesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::CreateRelationshipTypeResponse>* AsyncCreateRelationshipTypeRaw(::grpc::ClientContext* context, const ::organization::CreateRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::CreateRelationshipTypeResponse>* PrepareAsyncCreateRelationshipTypeRaw(::grpc::ClientContext* context, const ::organization::CreateRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::UpdateRelationshipTypeResponse>* AsyncUpdateRelationshipTypeRaw(::grpc::ClientContext* context, const ::organization::UpdateRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::UpdateRelationshipTypeResponse>* PrepareAsyncUpdateRelationshipTypeRaw(::grpc::ClientContext* context, const ::organization::UpdateRelationshipTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::CreateContactResponse>* AsyncCreateContactRaw(::grpc::ClientContext* context, const ::organization::CreateContactRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::CreateContactResponse>* PrepareAsyncCreateContactRaw(::grpc::ClientContext* context, const ::organization::CreateContactRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::GetContactResponse>* AsyncGetContactRaw(::grpc::ClientContext* context, const ::organization::GetContactRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::GetContactResponse>* PrepareAsyncGetContactRaw(::grpc::ClientContext* context, const ::organization::GetContactRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::UpdateContactResponse>* AsyncUpdateContactRaw(::grpc::ClientContext* context, const ::organization::UpdateContactRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::UpdateContactResponse>* PrepareAsyncUpdateContactRaw(::grpc::ClientContext* context, const ::organization::UpdateContactRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::DeleteContactResponse>* AsyncDeleteContactRaw(::grpc::ClientContext* context, const ::organization::DeleteContactRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::DeleteContactResponse>* PrepareAsyncDeleteContactRaw(::grpc::ClientContext* context, const ::organization::DeleteContactRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::ListContactsResponse>* AsyncListContactsRaw(::grpc::ClientContext* context, const ::organization::ListContactsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::ListContactsResponse>* PrepareAsyncListContactsRaw(::grpc::ClientContext* context, const ::organization::ListContactsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::GeneratePresignedURLsResponse>* AsyncGeneratePresignedURLsRaw(::grpc::ClientContext* context, const ::organization::GeneratePresignedURLsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::GeneratePresignedURLsResponse>* PrepareAsyncGeneratePresignedURLsRaw(::grpc::ClientContext* context, const ::organization::GeneratePresignedURLsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::CreateSaleSettingsResponse>* AsyncCreateSaleSettingsRaw(::grpc::ClientContext* context, const ::organization::CreateSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::CreateSaleSettingsResponse>* PrepareAsyncCreateSaleSettingsRaw(::grpc::ClientContext* context, const ::organization::CreateSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::GetSaleSettingsResponse>* AsyncGetSaleSettingsRaw(::grpc::ClientContext* context, const ::organization::GetSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::GetSaleSettingsResponse>* PrepareAsyncGetSaleSettingsRaw(::grpc::ClientContext* context, const ::organization::GetSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::UpdateSaleSettingsResponse>* AsyncUpdateSaleSettingsRaw(::grpc::ClientContext* context, const ::organization::UpdateSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::organization::UpdateSaleSettingsResponse>* PrepareAsyncUpdateSaleSettingsRaw(::grpc::ClientContext* context, const ::organization::UpdateSaleSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateOrganization_;
    const ::grpc::internal::RpcMethod rpcmethod_GetOrganization_;
    const ::grpc::internal::RpcMethod rpcmethod_ListOrganizations_;
    const ::grpc::internal::RpcMethod rpcmethod_PatchOrganization_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateOrganization_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateCounterparty_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCounterparty_;
    const ::grpc::internal::RpcMethod rpcmethod_ListCounterparties_;
    const ::grpc::internal::RpcMethod rpcmethod_PatchCounterparty_;
    const ::grpc::internal::RpcMethod rpcmethod_ListBankAccounts_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDefaultBankAccount_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateBankAccount_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateBankAccount_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateBankAccounts_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteBankAccount_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateAddress_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAddress_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateAddress_;
    const ::grpc::internal::RpcMethod rpcmethod_PatchAddress_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteAddress_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateRelationship_;
    const ::grpc::internal::RpcMethod rpcmethod_ListRelationships_;
    const ::grpc::internal::RpcMethod rpcmethod_EnsureRelationshipExists_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateRelationship_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRelationshipType_;
    const ::grpc::internal::RpcMethod rpcmethod_ListRelationshipTypes_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateRelationshipType_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateRelationshipType_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateContact_;
    const ::grpc::internal::RpcMethod rpcmethod_GetContact_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateContact_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteContact_;
    const ::grpc::internal::RpcMethod rpcmethod_ListContacts_;
    const ::grpc::internal::RpcMethod rpcmethod_GeneratePresignedURLs_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateSaleSettings_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSaleSettings_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateSaleSettings_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status CreateOrganization(::grpc::ServerContext* context, const ::organization::CreateOrganizationRequest* request, ::organization::CreateOrganizationResponse* response);
    virtual ::grpc::Status GetOrganization(::grpc::ServerContext* context, const ::organization::GetOrganizationRequest* request, ::organization::GetOrganizationResponse* response);
    virtual ::grpc::Status ListOrganizations(::grpc::ServerContext* context, const ::organization::ListOrganizationsRequest* request, ::organization::ListOrganizationsResponse* response);
    virtual ::grpc::Status PatchOrganization(::grpc::ServerContext* context, const ::organization::PatchOrganizationRequest* request, ::organization::PatchOrganizationResponse* response);
    virtual ::grpc::Status UpdateOrganization(::grpc::ServerContext* context, const ::organization::UpdateOrganizationRequest* request, ::organization::UpdateOrganizationResponse* response);
    virtual ::grpc::Status CreateCounterparty(::grpc::ServerContext* context, const ::organization::CreateCounterpartyRequest* request, ::organization::CreateCounterpartyResponse* response);
    virtual ::grpc::Status GetCounterparty(::grpc::ServerContext* context, const ::organization::GetCounterpartyRequest* request, ::organization::GetCounterpartyResponse* response);
    virtual ::grpc::Status ListCounterparties(::grpc::ServerContext* context, const ::organization::ListCounterpartiesRequest* request, ::organization::ListCounterpartiesResponse* response);
    virtual ::grpc::Status PatchCounterparty(::grpc::ServerContext* context, const ::organization::PatchCounterpartyRequest* request, ::organization::PatchCounterpartyResponse* response);
    virtual ::grpc::Status ListBankAccounts(::grpc::ServerContext* context, const ::organization::ListBankAccountsRequest* request, ::organization::ListBankAccountsResponse* response);
    virtual ::grpc::Status GetDefaultBankAccount(::grpc::ServerContext* context, const ::organization::GetDefaultBankAccountRequest* request, ::organization::GetDefaultBankAccountResponse* response);
    virtual ::grpc::Status CreateBankAccount(::grpc::ServerContext* context, const ::organization::CreateBankAccountRequest* request, ::organization::CreateBankAccountResponse* response);
    virtual ::grpc::Status UpdateBankAccount(::grpc::ServerContext* context, const ::organization::UpdateBankAccountRequest* request, ::organization::UpdateBankAccountResponse* response);
    virtual ::grpc::Status UpdateBankAccounts(::grpc::ServerContext* context, const ::organization::UpdateBankAccountsRequest* request, ::organization::UpdateBankAccountsResponse* response);
    virtual ::grpc::Status DeleteBankAccount(::grpc::ServerContext* context, const ::organization::DeleteBankAccountRequest* request, ::organization::DeleteBankAccountResponse* response);
    virtual ::grpc::Status CreateAddress(::grpc::ServerContext* context, const ::organization::CreateAddressRequest* request, ::organization::CreateAddressResponse* response);
    virtual ::grpc::Status GetAddress(::grpc::ServerContext* context, const ::organization::GetAddressRequest* request, ::organization::GetAddressResponse* response);
    virtual ::grpc::Status UpdateAddress(::grpc::ServerContext* context, const ::organization::UpdateAddressRequest* request, ::organization::UpdateAddressResponse* response);
    virtual ::grpc::Status PatchAddress(::grpc::ServerContext* context, const ::organization::PatchAddressRequest* request, ::organization::PatchAddressResponse* response);
    virtual ::grpc::Status DeleteAddress(::grpc::ServerContext* context, const ::organization::DeleteAddressRequest* request, ::organization::DeleteAddressResponse* response);
    virtual ::grpc::Status CreateRelationship(::grpc::ServerContext* context, const ::organization::CreateRelationshipRequest* request, ::organization::CreateRelationshipResponse* response);
    virtual ::grpc::Status ListRelationships(::grpc::ServerContext* context, const ::organization::ListRelationshipsRequest* request, ::organization::ListRelationshipsResponse* response);
    virtual ::grpc::Status EnsureRelationshipExists(::grpc::ServerContext* context, const ::organization::EnsureRelationshipExistsRequest* request, ::organization::EnsureRelationshipExistsResponse* response);
    virtual ::grpc::Status UpdateRelationship(::grpc::ServerContext* context, const ::organization::UpdateRelationshipRequest* request, ::organization::UpdateRelationshipResponse* response);
    virtual ::grpc::Status GetRelationshipType(::grpc::ServerContext* context, const ::organization::GetRelationshipTypeRequest* request, ::organization::GetRelationshipTypeResponse* response);
    virtual ::grpc::Status ListRelationshipTypes(::grpc::ServerContext* context, const ::organization::ListRelationshipTypesRequest* request, ::organization::ListRelationshipTypesResponse* response);
    virtual ::grpc::Status CreateRelationshipType(::grpc::ServerContext* context, const ::organization::CreateRelationshipTypeRequest* request, ::organization::CreateRelationshipTypeResponse* response);
    virtual ::grpc::Status UpdateRelationshipType(::grpc::ServerContext* context, const ::organization::UpdateRelationshipTypeRequest* request, ::organization::UpdateRelationshipTypeResponse* response);
    virtual ::grpc::Status CreateContact(::grpc::ServerContext* context, const ::organization::CreateContactRequest* request, ::organization::CreateContactResponse* response);
    virtual ::grpc::Status GetContact(::grpc::ServerContext* context, const ::organization::GetContactRequest* request, ::organization::GetContactResponse* response);
    virtual ::grpc::Status UpdateContact(::grpc::ServerContext* context, const ::organization::UpdateContactRequest* request, ::organization::UpdateContactResponse* response);
    virtual ::grpc::Status DeleteContact(::grpc::ServerContext* context, const ::organization::DeleteContactRequest* request, ::organization::DeleteContactResponse* response);
    virtual ::grpc::Status ListContacts(::grpc::ServerContext* context, const ::organization::ListContactsRequest* request, ::organization::ListContactsResponse* response);
    virtual ::grpc::Status GeneratePresignedURLs(::grpc::ServerContext* context, const ::organization::GeneratePresignedURLsRequest* request, ::organization::GeneratePresignedURLsResponse* response);
    virtual ::grpc::Status CreateSaleSettings(::grpc::ServerContext* context, const ::organization::CreateSaleSettingsRequest* request, ::organization::CreateSaleSettingsResponse* response);
    virtual ::grpc::Status GetSaleSettings(::grpc::ServerContext* context, const ::organization::GetSaleSettingsRequest* request, ::organization::GetSaleSettingsResponse* response);
    virtual ::grpc::Status UpdateSaleSettings(::grpc::ServerContext* context, const ::organization::UpdateSaleSettingsRequest* request, ::organization::UpdateSaleSettingsResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateOrganization() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateOrganization(::grpc::ServerContext* /*context*/, const ::organization::CreateOrganizationRequest* /*request*/, ::organization::CreateOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateOrganization(::grpc::ServerContext* context, ::organization::CreateOrganizationRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::CreateOrganizationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetOrganization() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOrganization(::grpc::ServerContext* /*context*/, const ::organization::GetOrganizationRequest* /*request*/, ::organization::GetOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOrganization(::grpc::ServerContext* context, ::organization::GetOrganizationRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::GetOrganizationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListOrganizations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListOrganizations() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ListOrganizations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListOrganizations(::grpc::ServerContext* /*context*/, const ::organization::ListOrganizationsRequest* /*request*/, ::organization::ListOrganizationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListOrganizations(::grpc::ServerContext* context, ::organization::ListOrganizationsRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::ListOrganizationsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PatchOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PatchOrganization() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_PatchOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchOrganization(::grpc::ServerContext* /*context*/, const ::organization::PatchOrganizationRequest* /*request*/, ::organization::PatchOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPatchOrganization(::grpc::ServerContext* context, ::organization::PatchOrganizationRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::PatchOrganizationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateOrganization() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_UpdateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateOrganization(::grpc::ServerContext* /*context*/, const ::organization::UpdateOrganizationRequest* /*request*/, ::organization::UpdateOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateOrganization(::grpc::ServerContext* context, ::organization::UpdateOrganizationRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::UpdateOrganizationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateCounterparty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateCounterparty() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_CreateCounterparty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCounterparty(::grpc::ServerContext* /*context*/, const ::organization::CreateCounterpartyRequest* /*request*/, ::organization::CreateCounterpartyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateCounterparty(::grpc::ServerContext* context, ::organization::CreateCounterpartyRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::CreateCounterpartyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCounterparty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCounterparty() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetCounterparty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCounterparty(::grpc::ServerContext* /*context*/, const ::organization::GetCounterpartyRequest* /*request*/, ::organization::GetCounterpartyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCounterparty(::grpc::ServerContext* context, ::organization::GetCounterpartyRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::GetCounterpartyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListCounterparties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListCounterparties() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_ListCounterparties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCounterparties(::grpc::ServerContext* /*context*/, const ::organization::ListCounterpartiesRequest* /*request*/, ::organization::ListCounterpartiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCounterparties(::grpc::ServerContext* context, ::organization::ListCounterpartiesRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::ListCounterpartiesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PatchCounterparty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PatchCounterparty() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_PatchCounterparty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchCounterparty(::grpc::ServerContext* /*context*/, const ::organization::PatchCounterpartyRequest* /*request*/, ::organization::PatchCounterpartyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPatchCounterparty(::grpc::ServerContext* context, ::organization::PatchCounterpartyRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::PatchCounterpartyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListBankAccounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListBankAccounts() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_ListBankAccounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBankAccounts(::grpc::ServerContext* /*context*/, const ::organization::ListBankAccountsRequest* /*request*/, ::organization::ListBankAccountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListBankAccounts(::grpc::ServerContext* context, ::organization::ListBankAccountsRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::ListBankAccountsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDefaultBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDefaultBankAccount() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_GetDefaultBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDefaultBankAccount(::grpc::ServerContext* /*context*/, const ::organization::GetDefaultBankAccountRequest* /*request*/, ::organization::GetDefaultBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDefaultBankAccount(::grpc::ServerContext* context, ::organization::GetDefaultBankAccountRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::GetDefaultBankAccountResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateBankAccount() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_CreateBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateBankAccount(::grpc::ServerContext* /*context*/, const ::organization::CreateBankAccountRequest* /*request*/, ::organization::CreateBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateBankAccount(::grpc::ServerContext* context, ::organization::CreateBankAccountRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::CreateBankAccountResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateBankAccount() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_UpdateBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBankAccount(::grpc::ServerContext* /*context*/, const ::organization::UpdateBankAccountRequest* /*request*/, ::organization::UpdateBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateBankAccount(::grpc::ServerContext* context, ::organization::UpdateBankAccountRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::UpdateBankAccountResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateBankAccounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateBankAccounts() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_UpdateBankAccounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBankAccounts(::grpc::ServerContext* /*context*/, const ::organization::UpdateBankAccountsRequest* /*request*/, ::organization::UpdateBankAccountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateBankAccounts(::grpc::ServerContext* context, ::organization::UpdateBankAccountsRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::UpdateBankAccountsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteBankAccount() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_DeleteBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBankAccount(::grpc::ServerContext* /*context*/, const ::organization::DeleteBankAccountRequest* /*request*/, ::organization::DeleteBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteBankAccount(::grpc::ServerContext* context, ::organization::DeleteBankAccountRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::DeleteBankAccountResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateAddress() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_CreateAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAddress(::grpc::ServerContext* /*context*/, const ::organization::CreateAddressRequest* /*request*/, ::organization::CreateAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateAddress(::grpc::ServerContext* context, ::organization::CreateAddressRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::CreateAddressResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAddress() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_GetAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAddress(::grpc::ServerContext* /*context*/, const ::organization::GetAddressRequest* /*request*/, ::organization::GetAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAddress(::grpc::ServerContext* context, ::organization::GetAddressRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::GetAddressResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateAddress() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_UpdateAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAddress(::grpc::ServerContext* /*context*/, const ::organization::UpdateAddressRequest* /*request*/, ::organization::UpdateAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateAddress(::grpc::ServerContext* context, ::organization::UpdateAddressRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::UpdateAddressResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PatchAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PatchAddress() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_PatchAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchAddress(::grpc::ServerContext* /*context*/, const ::organization::PatchAddressRequest* /*request*/, ::organization::PatchAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPatchAddress(::grpc::ServerContext* context, ::organization::PatchAddressRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::PatchAddressResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteAddress() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_DeleteAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAddress(::grpc::ServerContext* /*context*/, const ::organization::DeleteAddressRequest* /*request*/, ::organization::DeleteAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteAddress(::grpc::ServerContext* context, ::organization::DeleteAddressRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::DeleteAddressResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateRelationship() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_CreateRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRelationship(::grpc::ServerContext* /*context*/, const ::organization::CreateRelationshipRequest* /*request*/, ::organization::CreateRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateRelationship(::grpc::ServerContext* context, ::organization::CreateRelationshipRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::CreateRelationshipResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListRelationships : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListRelationships() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_ListRelationships() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRelationships(::grpc::ServerContext* /*context*/, const ::organization::ListRelationshipsRequest* /*request*/, ::organization::ListRelationshipsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRelationships(::grpc::ServerContext* context, ::organization::ListRelationshipsRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::ListRelationshipsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EnsureRelationshipExists : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_EnsureRelationshipExists() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_EnsureRelationshipExists() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnsureRelationshipExists(::grpc::ServerContext* /*context*/, const ::organization::EnsureRelationshipExistsRequest* /*request*/, ::organization::EnsureRelationshipExistsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEnsureRelationshipExists(::grpc::ServerContext* context, ::organization::EnsureRelationshipExistsRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::EnsureRelationshipExistsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateRelationship() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_UpdateRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRelationship(::grpc::ServerContext* /*context*/, const ::organization::UpdateRelationshipRequest* /*request*/, ::organization::UpdateRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateRelationship(::grpc::ServerContext* context, ::organization::UpdateRelationshipRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::UpdateRelationshipResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRelationshipType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRelationshipType() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_GetRelationshipType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRelationshipType(::grpc::ServerContext* /*context*/, const ::organization::GetRelationshipTypeRequest* /*request*/, ::organization::GetRelationshipTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRelationshipType(::grpc::ServerContext* context, ::organization::GetRelationshipTypeRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::GetRelationshipTypeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListRelationshipTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListRelationshipTypes() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_ListRelationshipTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRelationshipTypes(::grpc::ServerContext* /*context*/, const ::organization::ListRelationshipTypesRequest* /*request*/, ::organization::ListRelationshipTypesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRelationshipTypes(::grpc::ServerContext* context, ::organization::ListRelationshipTypesRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::ListRelationshipTypesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateRelationshipType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateRelationshipType() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_CreateRelationshipType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRelationshipType(::grpc::ServerContext* /*context*/, const ::organization::CreateRelationshipTypeRequest* /*request*/, ::organization::CreateRelationshipTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateRelationshipType(::grpc::ServerContext* context, ::organization::CreateRelationshipTypeRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::CreateRelationshipTypeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateRelationshipType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateRelationshipType() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_UpdateRelationshipType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRelationshipType(::grpc::ServerContext* /*context*/, const ::organization::UpdateRelationshipTypeRequest* /*request*/, ::organization::UpdateRelationshipTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateRelationshipType(::grpc::ServerContext* context, ::organization::UpdateRelationshipTypeRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::UpdateRelationshipTypeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateContact() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_CreateContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateContact(::grpc::ServerContext* /*context*/, const ::organization::CreateContactRequest* /*request*/, ::organization::CreateContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateContact(::grpc::ServerContext* context, ::organization::CreateContactRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::CreateContactResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetContact() {
      ::grpc::Service::MarkMethodAsync(29);
    }
    ~WithAsyncMethod_GetContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetContact(::grpc::ServerContext* /*context*/, const ::organization::GetContactRequest* /*request*/, ::organization::GetContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetContact(::grpc::ServerContext* context, ::organization::GetContactRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::GetContactResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateContact() {
      ::grpc::Service::MarkMethodAsync(30);
    }
    ~WithAsyncMethod_UpdateContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateContact(::grpc::ServerContext* /*context*/, const ::organization::UpdateContactRequest* /*request*/, ::organization::UpdateContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateContact(::grpc::ServerContext* context, ::organization::UpdateContactRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::UpdateContactResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteContact() {
      ::grpc::Service::MarkMethodAsync(31);
    }
    ~WithAsyncMethod_DeleteContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteContact(::grpc::ServerContext* /*context*/, const ::organization::DeleteContactRequest* /*request*/, ::organization::DeleteContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteContact(::grpc::ServerContext* context, ::organization::DeleteContactRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::DeleteContactResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListContacts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListContacts() {
      ::grpc::Service::MarkMethodAsync(32);
    }
    ~WithAsyncMethod_ListContacts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListContacts(::grpc::ServerContext* /*context*/, const ::organization::ListContactsRequest* /*request*/, ::organization::ListContactsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListContacts(::grpc::ServerContext* context, ::organization::ListContactsRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::ListContactsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GeneratePresignedURLs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GeneratePresignedURLs() {
      ::grpc::Service::MarkMethodAsync(33);
    }
    ~WithAsyncMethod_GeneratePresignedURLs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GeneratePresignedURLs(::grpc::ServerContext* /*context*/, const ::organization::GeneratePresignedURLsRequest* /*request*/, ::organization::GeneratePresignedURLsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGeneratePresignedURLs(::grpc::ServerContext* context, ::organization::GeneratePresignedURLsRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::GeneratePresignedURLsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateSaleSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateSaleSettings() {
      ::grpc::Service::MarkMethodAsync(34);
    }
    ~WithAsyncMethod_CreateSaleSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSaleSettings(::grpc::ServerContext* /*context*/, const ::organization::CreateSaleSettingsRequest* /*request*/, ::organization::CreateSaleSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSaleSettings(::grpc::ServerContext* context, ::organization::CreateSaleSettingsRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::CreateSaleSettingsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSaleSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSaleSettings() {
      ::grpc::Service::MarkMethodAsync(35);
    }
    ~WithAsyncMethod_GetSaleSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSaleSettings(::grpc::ServerContext* /*context*/, const ::organization::GetSaleSettingsRequest* /*request*/, ::organization::GetSaleSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSaleSettings(::grpc::ServerContext* context, ::organization::GetSaleSettingsRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::GetSaleSettingsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateSaleSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateSaleSettings() {
      ::grpc::Service::MarkMethodAsync(36);
    }
    ~WithAsyncMethod_UpdateSaleSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSaleSettings(::grpc::ServerContext* /*context*/, const ::organization::UpdateSaleSettingsRequest* /*request*/, ::organization::UpdateSaleSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSaleSettings(::grpc::ServerContext* context, ::organization::UpdateSaleSettingsRequest* request, ::grpc::ServerAsyncResponseWriter< ::organization::UpdateSaleSettingsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateOrganization<WithAsyncMethod_GetOrganization<WithAsyncMethod_ListOrganizations<WithAsyncMethod_PatchOrganization<WithAsyncMethod_UpdateOrganization<WithAsyncMethod_CreateCounterparty<WithAsyncMethod_GetCounterparty<WithAsyncMethod_ListCounterparties<WithAsyncMethod_PatchCounterparty<WithAsyncMethod_ListBankAccounts<WithAsyncMethod_GetDefaultBankAccount<WithAsyncMethod_CreateBankAccount<WithAsyncMethod_UpdateBankAccount<WithAsyncMethod_UpdateBankAccounts<WithAsyncMethod_DeleteBankAccount<WithAsyncMethod_CreateAddress<WithAsyncMethod_GetAddress<WithAsyncMethod_UpdateAddress<WithAsyncMethod_PatchAddress<WithAsyncMethod_DeleteAddress<WithAsyncMethod_CreateRelationship<WithAsyncMethod_ListRelationships<WithAsyncMethod_EnsureRelationshipExists<WithAsyncMethod_UpdateRelationship<WithAsyncMethod_GetRelationshipType<WithAsyncMethod_ListRelationshipTypes<WithAsyncMethod_CreateRelationshipType<WithAsyncMethod_UpdateRelationshipType<WithAsyncMethod_CreateContact<WithAsyncMethod_GetContact<WithAsyncMethod_UpdateContact<WithAsyncMethod_DeleteContact<WithAsyncMethod_ListContacts<WithAsyncMethod_GeneratePresignedURLs<WithAsyncMethod_CreateSaleSettings<WithAsyncMethod_GetSaleSettings<WithAsyncMethod_UpdateSaleSettings<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateOrganization() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::CreateOrganizationRequest, ::organization::CreateOrganizationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::CreateOrganizationRequest* request, ::organization::CreateOrganizationResponse* response) { return this->CreateOrganization(context, request, response); }));}
    void SetMessageAllocatorFor_CreateOrganization(
        ::grpc::MessageAllocator< ::organization::CreateOrganizationRequest, ::organization::CreateOrganizationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::CreateOrganizationRequest, ::organization::CreateOrganizationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateOrganization(::grpc::ServerContext* /*context*/, const ::organization::CreateOrganizationRequest* /*request*/, ::organization::CreateOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateOrganization(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::CreateOrganizationRequest* /*request*/, ::organization::CreateOrganizationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetOrganization() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::GetOrganizationRequest, ::organization::GetOrganizationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::GetOrganizationRequest* request, ::organization::GetOrganizationResponse* response) { return this->GetOrganization(context, request, response); }));}
    void SetMessageAllocatorFor_GetOrganization(
        ::grpc::MessageAllocator< ::organization::GetOrganizationRequest, ::organization::GetOrganizationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::GetOrganizationRequest, ::organization::GetOrganizationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOrganization(::grpc::ServerContext* /*context*/, const ::organization::GetOrganizationRequest* /*request*/, ::organization::GetOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetOrganization(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::GetOrganizationRequest* /*request*/, ::organization::GetOrganizationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListOrganizations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListOrganizations() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::ListOrganizationsRequest, ::organization::ListOrganizationsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::ListOrganizationsRequest* request, ::organization::ListOrganizationsResponse* response) { return this->ListOrganizations(context, request, response); }));}
    void SetMessageAllocatorFor_ListOrganizations(
        ::grpc::MessageAllocator< ::organization::ListOrganizationsRequest, ::organization::ListOrganizationsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::ListOrganizationsRequest, ::organization::ListOrganizationsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListOrganizations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListOrganizations(::grpc::ServerContext* /*context*/, const ::organization::ListOrganizationsRequest* /*request*/, ::organization::ListOrganizationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListOrganizations(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::ListOrganizationsRequest* /*request*/, ::organization::ListOrganizationsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PatchOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PatchOrganization() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::PatchOrganizationRequest, ::organization::PatchOrganizationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::PatchOrganizationRequest* request, ::organization::PatchOrganizationResponse* response) { return this->PatchOrganization(context, request, response); }));}
    void SetMessageAllocatorFor_PatchOrganization(
        ::grpc::MessageAllocator< ::organization::PatchOrganizationRequest, ::organization::PatchOrganizationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::PatchOrganizationRequest, ::organization::PatchOrganizationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PatchOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchOrganization(::grpc::ServerContext* /*context*/, const ::organization::PatchOrganizationRequest* /*request*/, ::organization::PatchOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PatchOrganization(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::PatchOrganizationRequest* /*request*/, ::organization::PatchOrganizationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateOrganization() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::UpdateOrganizationRequest, ::organization::UpdateOrganizationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::UpdateOrganizationRequest* request, ::organization::UpdateOrganizationResponse* response) { return this->UpdateOrganization(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateOrganization(
        ::grpc::MessageAllocator< ::organization::UpdateOrganizationRequest, ::organization::UpdateOrganizationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::UpdateOrganizationRequest, ::organization::UpdateOrganizationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateOrganization(::grpc::ServerContext* /*context*/, const ::organization::UpdateOrganizationRequest* /*request*/, ::organization::UpdateOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateOrganization(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::UpdateOrganizationRequest* /*request*/, ::organization::UpdateOrganizationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateCounterparty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateCounterparty() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::CreateCounterpartyRequest, ::organization::CreateCounterpartyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::CreateCounterpartyRequest* request, ::organization::CreateCounterpartyResponse* response) { return this->CreateCounterparty(context, request, response); }));}
    void SetMessageAllocatorFor_CreateCounterparty(
        ::grpc::MessageAllocator< ::organization::CreateCounterpartyRequest, ::organization::CreateCounterpartyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::CreateCounterpartyRequest, ::organization::CreateCounterpartyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateCounterparty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCounterparty(::grpc::ServerContext* /*context*/, const ::organization::CreateCounterpartyRequest* /*request*/, ::organization::CreateCounterpartyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateCounterparty(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::CreateCounterpartyRequest* /*request*/, ::organization::CreateCounterpartyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetCounterparty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetCounterparty() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::GetCounterpartyRequest, ::organization::GetCounterpartyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::GetCounterpartyRequest* request, ::organization::GetCounterpartyResponse* response) { return this->GetCounterparty(context, request, response); }));}
    void SetMessageAllocatorFor_GetCounterparty(
        ::grpc::MessageAllocator< ::organization::GetCounterpartyRequest, ::organization::GetCounterpartyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::GetCounterpartyRequest, ::organization::GetCounterpartyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetCounterparty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCounterparty(::grpc::ServerContext* /*context*/, const ::organization::GetCounterpartyRequest* /*request*/, ::organization::GetCounterpartyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCounterparty(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::GetCounterpartyRequest* /*request*/, ::organization::GetCounterpartyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListCounterparties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListCounterparties() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::ListCounterpartiesRequest, ::organization::ListCounterpartiesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::ListCounterpartiesRequest* request, ::organization::ListCounterpartiesResponse* response) { return this->ListCounterparties(context, request, response); }));}
    void SetMessageAllocatorFor_ListCounterparties(
        ::grpc::MessageAllocator< ::organization::ListCounterpartiesRequest, ::organization::ListCounterpartiesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::ListCounterpartiesRequest, ::organization::ListCounterpartiesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListCounterparties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCounterparties(::grpc::ServerContext* /*context*/, const ::organization::ListCounterpartiesRequest* /*request*/, ::organization::ListCounterpartiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListCounterparties(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::ListCounterpartiesRequest* /*request*/, ::organization::ListCounterpartiesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PatchCounterparty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PatchCounterparty() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::PatchCounterpartyRequest, ::organization::PatchCounterpartyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::PatchCounterpartyRequest* request, ::organization::PatchCounterpartyResponse* response) { return this->PatchCounterparty(context, request, response); }));}
    void SetMessageAllocatorFor_PatchCounterparty(
        ::grpc::MessageAllocator< ::organization::PatchCounterpartyRequest, ::organization::PatchCounterpartyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::PatchCounterpartyRequest, ::organization::PatchCounterpartyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PatchCounterparty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchCounterparty(::grpc::ServerContext* /*context*/, const ::organization::PatchCounterpartyRequest* /*request*/, ::organization::PatchCounterpartyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PatchCounterparty(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::PatchCounterpartyRequest* /*request*/, ::organization::PatchCounterpartyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListBankAccounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListBankAccounts() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::ListBankAccountsRequest, ::organization::ListBankAccountsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::ListBankAccountsRequest* request, ::organization::ListBankAccountsResponse* response) { return this->ListBankAccounts(context, request, response); }));}
    void SetMessageAllocatorFor_ListBankAccounts(
        ::grpc::MessageAllocator< ::organization::ListBankAccountsRequest, ::organization::ListBankAccountsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::ListBankAccountsRequest, ::organization::ListBankAccountsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListBankAccounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBankAccounts(::grpc::ServerContext* /*context*/, const ::organization::ListBankAccountsRequest* /*request*/, ::organization::ListBankAccountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListBankAccounts(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::ListBankAccountsRequest* /*request*/, ::organization::ListBankAccountsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDefaultBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDefaultBankAccount() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::GetDefaultBankAccountRequest, ::organization::GetDefaultBankAccountResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::GetDefaultBankAccountRequest* request, ::organization::GetDefaultBankAccountResponse* response) { return this->GetDefaultBankAccount(context, request, response); }));}
    void SetMessageAllocatorFor_GetDefaultBankAccount(
        ::grpc::MessageAllocator< ::organization::GetDefaultBankAccountRequest, ::organization::GetDefaultBankAccountResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::GetDefaultBankAccountRequest, ::organization::GetDefaultBankAccountResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDefaultBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDefaultBankAccount(::grpc::ServerContext* /*context*/, const ::organization::GetDefaultBankAccountRequest* /*request*/, ::organization::GetDefaultBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDefaultBankAccount(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::GetDefaultBankAccountRequest* /*request*/, ::organization::GetDefaultBankAccountResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateBankAccount() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::CreateBankAccountRequest, ::organization::CreateBankAccountResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::CreateBankAccountRequest* request, ::organization::CreateBankAccountResponse* response) { return this->CreateBankAccount(context, request, response); }));}
    void SetMessageAllocatorFor_CreateBankAccount(
        ::grpc::MessageAllocator< ::organization::CreateBankAccountRequest, ::organization::CreateBankAccountResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::CreateBankAccountRequest, ::organization::CreateBankAccountResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateBankAccount(::grpc::ServerContext* /*context*/, const ::organization::CreateBankAccountRequest* /*request*/, ::organization::CreateBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateBankAccount(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::CreateBankAccountRequest* /*request*/, ::organization::CreateBankAccountResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateBankAccount() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::UpdateBankAccountRequest, ::organization::UpdateBankAccountResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::UpdateBankAccountRequest* request, ::organization::UpdateBankAccountResponse* response) { return this->UpdateBankAccount(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateBankAccount(
        ::grpc::MessageAllocator< ::organization::UpdateBankAccountRequest, ::organization::UpdateBankAccountResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::UpdateBankAccountRequest, ::organization::UpdateBankAccountResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBankAccount(::grpc::ServerContext* /*context*/, const ::organization::UpdateBankAccountRequest* /*request*/, ::organization::UpdateBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateBankAccount(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::UpdateBankAccountRequest* /*request*/, ::organization::UpdateBankAccountResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateBankAccounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateBankAccounts() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::UpdateBankAccountsRequest, ::organization::UpdateBankAccountsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::UpdateBankAccountsRequest* request, ::organization::UpdateBankAccountsResponse* response) { return this->UpdateBankAccounts(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateBankAccounts(
        ::grpc::MessageAllocator< ::organization::UpdateBankAccountsRequest, ::organization::UpdateBankAccountsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::UpdateBankAccountsRequest, ::organization::UpdateBankAccountsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateBankAccounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBankAccounts(::grpc::ServerContext* /*context*/, const ::organization::UpdateBankAccountsRequest* /*request*/, ::organization::UpdateBankAccountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateBankAccounts(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::UpdateBankAccountsRequest* /*request*/, ::organization::UpdateBankAccountsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteBankAccount() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::DeleteBankAccountRequest, ::organization::DeleteBankAccountResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::DeleteBankAccountRequest* request, ::organization::DeleteBankAccountResponse* response) { return this->DeleteBankAccount(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteBankAccount(
        ::grpc::MessageAllocator< ::organization::DeleteBankAccountRequest, ::organization::DeleteBankAccountResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::DeleteBankAccountRequest, ::organization::DeleteBankAccountResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBankAccount(::grpc::ServerContext* /*context*/, const ::organization::DeleteBankAccountRequest* /*request*/, ::organization::DeleteBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteBankAccount(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::DeleteBankAccountRequest* /*request*/, ::organization::DeleteBankAccountResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateAddress() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::CreateAddressRequest, ::organization::CreateAddressResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::CreateAddressRequest* request, ::organization::CreateAddressResponse* response) { return this->CreateAddress(context, request, response); }));}
    void SetMessageAllocatorFor_CreateAddress(
        ::grpc::MessageAllocator< ::organization::CreateAddressRequest, ::organization::CreateAddressResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::CreateAddressRequest, ::organization::CreateAddressResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAddress(::grpc::ServerContext* /*context*/, const ::organization::CreateAddressRequest* /*request*/, ::organization::CreateAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateAddress(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::CreateAddressRequest* /*request*/, ::organization::CreateAddressResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAddress() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::GetAddressRequest, ::organization::GetAddressResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::GetAddressRequest* request, ::organization::GetAddressResponse* response) { return this->GetAddress(context, request, response); }));}
    void SetMessageAllocatorFor_GetAddress(
        ::grpc::MessageAllocator< ::organization::GetAddressRequest, ::organization::GetAddressResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::GetAddressRequest, ::organization::GetAddressResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAddress(::grpc::ServerContext* /*context*/, const ::organization::GetAddressRequest* /*request*/, ::organization::GetAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAddress(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::GetAddressRequest* /*request*/, ::organization::GetAddressResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateAddress() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::UpdateAddressRequest, ::organization::UpdateAddressResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::UpdateAddressRequest* request, ::organization::UpdateAddressResponse* response) { return this->UpdateAddress(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateAddress(
        ::grpc::MessageAllocator< ::organization::UpdateAddressRequest, ::organization::UpdateAddressResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::UpdateAddressRequest, ::organization::UpdateAddressResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAddress(::grpc::ServerContext* /*context*/, const ::organization::UpdateAddressRequest* /*request*/, ::organization::UpdateAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateAddress(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::UpdateAddressRequest* /*request*/, ::organization::UpdateAddressResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PatchAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PatchAddress() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::PatchAddressRequest, ::organization::PatchAddressResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::PatchAddressRequest* request, ::organization::PatchAddressResponse* response) { return this->PatchAddress(context, request, response); }));}
    void SetMessageAllocatorFor_PatchAddress(
        ::grpc::MessageAllocator< ::organization::PatchAddressRequest, ::organization::PatchAddressResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::PatchAddressRequest, ::organization::PatchAddressResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PatchAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchAddress(::grpc::ServerContext* /*context*/, const ::organization::PatchAddressRequest* /*request*/, ::organization::PatchAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PatchAddress(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::PatchAddressRequest* /*request*/, ::organization::PatchAddressResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteAddress() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::DeleteAddressRequest, ::organization::DeleteAddressResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::DeleteAddressRequest* request, ::organization::DeleteAddressResponse* response) { return this->DeleteAddress(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteAddress(
        ::grpc::MessageAllocator< ::organization::DeleteAddressRequest, ::organization::DeleteAddressResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::DeleteAddressRequest, ::organization::DeleteAddressResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAddress(::grpc::ServerContext* /*context*/, const ::organization::DeleteAddressRequest* /*request*/, ::organization::DeleteAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteAddress(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::DeleteAddressRequest* /*request*/, ::organization::DeleteAddressResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateRelationship() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::CreateRelationshipRequest, ::organization::CreateRelationshipResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::CreateRelationshipRequest* request, ::organization::CreateRelationshipResponse* response) { return this->CreateRelationship(context, request, response); }));}
    void SetMessageAllocatorFor_CreateRelationship(
        ::grpc::MessageAllocator< ::organization::CreateRelationshipRequest, ::organization::CreateRelationshipResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::CreateRelationshipRequest, ::organization::CreateRelationshipResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRelationship(::grpc::ServerContext* /*context*/, const ::organization::CreateRelationshipRequest* /*request*/, ::organization::CreateRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateRelationship(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::CreateRelationshipRequest* /*request*/, ::organization::CreateRelationshipResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListRelationships : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListRelationships() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::ListRelationshipsRequest, ::organization::ListRelationshipsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::ListRelationshipsRequest* request, ::organization::ListRelationshipsResponse* response) { return this->ListRelationships(context, request, response); }));}
    void SetMessageAllocatorFor_ListRelationships(
        ::grpc::MessageAllocator< ::organization::ListRelationshipsRequest, ::organization::ListRelationshipsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::ListRelationshipsRequest, ::organization::ListRelationshipsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListRelationships() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRelationships(::grpc::ServerContext* /*context*/, const ::organization::ListRelationshipsRequest* /*request*/, ::organization::ListRelationshipsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListRelationships(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::ListRelationshipsRequest* /*request*/, ::organization::ListRelationshipsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_EnsureRelationshipExists : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_EnsureRelationshipExists() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::EnsureRelationshipExistsRequest, ::organization::EnsureRelationshipExistsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::EnsureRelationshipExistsRequest* request, ::organization::EnsureRelationshipExistsResponse* response) { return this->EnsureRelationshipExists(context, request, response); }));}
    void SetMessageAllocatorFor_EnsureRelationshipExists(
        ::grpc::MessageAllocator< ::organization::EnsureRelationshipExistsRequest, ::organization::EnsureRelationshipExistsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::EnsureRelationshipExistsRequest, ::organization::EnsureRelationshipExistsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_EnsureRelationshipExists() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnsureRelationshipExists(::grpc::ServerContext* /*context*/, const ::organization::EnsureRelationshipExistsRequest* /*request*/, ::organization::EnsureRelationshipExistsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* EnsureRelationshipExists(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::EnsureRelationshipExistsRequest* /*request*/, ::organization::EnsureRelationshipExistsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateRelationship() {
      ::grpc::Service::MarkMethodCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::UpdateRelationshipRequest, ::organization::UpdateRelationshipResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::UpdateRelationshipRequest* request, ::organization::UpdateRelationshipResponse* response) { return this->UpdateRelationship(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateRelationship(
        ::grpc::MessageAllocator< ::organization::UpdateRelationshipRequest, ::organization::UpdateRelationshipResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(23);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::UpdateRelationshipRequest, ::organization::UpdateRelationshipResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRelationship(::grpc::ServerContext* /*context*/, const ::organization::UpdateRelationshipRequest* /*request*/, ::organization::UpdateRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateRelationship(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::UpdateRelationshipRequest* /*request*/, ::organization::UpdateRelationshipResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRelationshipType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRelationshipType() {
      ::grpc::Service::MarkMethodCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::GetRelationshipTypeRequest, ::organization::GetRelationshipTypeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::GetRelationshipTypeRequest* request, ::organization::GetRelationshipTypeResponse* response) { return this->GetRelationshipType(context, request, response); }));}
    void SetMessageAllocatorFor_GetRelationshipType(
        ::grpc::MessageAllocator< ::organization::GetRelationshipTypeRequest, ::organization::GetRelationshipTypeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(24);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::GetRelationshipTypeRequest, ::organization::GetRelationshipTypeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRelationshipType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRelationshipType(::grpc::ServerContext* /*context*/, const ::organization::GetRelationshipTypeRequest* /*request*/, ::organization::GetRelationshipTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRelationshipType(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::GetRelationshipTypeRequest* /*request*/, ::organization::GetRelationshipTypeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListRelationshipTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListRelationshipTypes() {
      ::grpc::Service::MarkMethodCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::ListRelationshipTypesRequest, ::organization::ListRelationshipTypesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::ListRelationshipTypesRequest* request, ::organization::ListRelationshipTypesResponse* response) { return this->ListRelationshipTypes(context, request, response); }));}
    void SetMessageAllocatorFor_ListRelationshipTypes(
        ::grpc::MessageAllocator< ::organization::ListRelationshipTypesRequest, ::organization::ListRelationshipTypesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::ListRelationshipTypesRequest, ::organization::ListRelationshipTypesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListRelationshipTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRelationshipTypes(::grpc::ServerContext* /*context*/, const ::organization::ListRelationshipTypesRequest* /*request*/, ::organization::ListRelationshipTypesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListRelationshipTypes(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::ListRelationshipTypesRequest* /*request*/, ::organization::ListRelationshipTypesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateRelationshipType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateRelationshipType() {
      ::grpc::Service::MarkMethodCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::CreateRelationshipTypeRequest, ::organization::CreateRelationshipTypeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::CreateRelationshipTypeRequest* request, ::organization::CreateRelationshipTypeResponse* response) { return this->CreateRelationshipType(context, request, response); }));}
    void SetMessageAllocatorFor_CreateRelationshipType(
        ::grpc::MessageAllocator< ::organization::CreateRelationshipTypeRequest, ::organization::CreateRelationshipTypeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(26);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::CreateRelationshipTypeRequest, ::organization::CreateRelationshipTypeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateRelationshipType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRelationshipType(::grpc::ServerContext* /*context*/, const ::organization::CreateRelationshipTypeRequest* /*request*/, ::organization::CreateRelationshipTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateRelationshipType(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::CreateRelationshipTypeRequest* /*request*/, ::organization::CreateRelationshipTypeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateRelationshipType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateRelationshipType() {
      ::grpc::Service::MarkMethodCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::UpdateRelationshipTypeRequest, ::organization::UpdateRelationshipTypeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::UpdateRelationshipTypeRequest* request, ::organization::UpdateRelationshipTypeResponse* response) { return this->UpdateRelationshipType(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateRelationshipType(
        ::grpc::MessageAllocator< ::organization::UpdateRelationshipTypeRequest, ::organization::UpdateRelationshipTypeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(27);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::UpdateRelationshipTypeRequest, ::organization::UpdateRelationshipTypeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateRelationshipType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRelationshipType(::grpc::ServerContext* /*context*/, const ::organization::UpdateRelationshipTypeRequest* /*request*/, ::organization::UpdateRelationshipTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateRelationshipType(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::UpdateRelationshipTypeRequest* /*request*/, ::organization::UpdateRelationshipTypeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateContact() {
      ::grpc::Service::MarkMethodCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::CreateContactRequest, ::organization::CreateContactResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::CreateContactRequest* request, ::organization::CreateContactResponse* response) { return this->CreateContact(context, request, response); }));}
    void SetMessageAllocatorFor_CreateContact(
        ::grpc::MessageAllocator< ::organization::CreateContactRequest, ::organization::CreateContactResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(28);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::CreateContactRequest, ::organization::CreateContactResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateContact(::grpc::ServerContext* /*context*/, const ::organization::CreateContactRequest* /*request*/, ::organization::CreateContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateContact(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::CreateContactRequest* /*request*/, ::organization::CreateContactResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetContact() {
      ::grpc::Service::MarkMethodCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::GetContactRequest, ::organization::GetContactResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::GetContactRequest* request, ::organization::GetContactResponse* response) { return this->GetContact(context, request, response); }));}
    void SetMessageAllocatorFor_GetContact(
        ::grpc::MessageAllocator< ::organization::GetContactRequest, ::organization::GetContactResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(29);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::GetContactRequest, ::organization::GetContactResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetContact(::grpc::ServerContext* /*context*/, const ::organization::GetContactRequest* /*request*/, ::organization::GetContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetContact(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::GetContactRequest* /*request*/, ::organization::GetContactResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateContact() {
      ::grpc::Service::MarkMethodCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::UpdateContactRequest, ::organization::UpdateContactResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::UpdateContactRequest* request, ::organization::UpdateContactResponse* response) { return this->UpdateContact(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateContact(
        ::grpc::MessageAllocator< ::organization::UpdateContactRequest, ::organization::UpdateContactResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(30);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::UpdateContactRequest, ::organization::UpdateContactResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateContact(::grpc::ServerContext* /*context*/, const ::organization::UpdateContactRequest* /*request*/, ::organization::UpdateContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateContact(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::UpdateContactRequest* /*request*/, ::organization::UpdateContactResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteContact() {
      ::grpc::Service::MarkMethodCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::DeleteContactRequest, ::organization::DeleteContactResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::DeleteContactRequest* request, ::organization::DeleteContactResponse* response) { return this->DeleteContact(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteContact(
        ::grpc::MessageAllocator< ::organization::DeleteContactRequest, ::organization::DeleteContactResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(31);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::DeleteContactRequest, ::organization::DeleteContactResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteContact(::grpc::ServerContext* /*context*/, const ::organization::DeleteContactRequest* /*request*/, ::organization::DeleteContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteContact(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::DeleteContactRequest* /*request*/, ::organization::DeleteContactResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListContacts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListContacts() {
      ::grpc::Service::MarkMethodCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::ListContactsRequest, ::organization::ListContactsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::ListContactsRequest* request, ::organization::ListContactsResponse* response) { return this->ListContacts(context, request, response); }));}
    void SetMessageAllocatorFor_ListContacts(
        ::grpc::MessageAllocator< ::organization::ListContactsRequest, ::organization::ListContactsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(32);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::ListContactsRequest, ::organization::ListContactsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListContacts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListContacts(::grpc::ServerContext* /*context*/, const ::organization::ListContactsRequest* /*request*/, ::organization::ListContactsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListContacts(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::ListContactsRequest* /*request*/, ::organization::ListContactsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GeneratePresignedURLs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GeneratePresignedURLs() {
      ::grpc::Service::MarkMethodCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::GeneratePresignedURLsRequest, ::organization::GeneratePresignedURLsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::GeneratePresignedURLsRequest* request, ::organization::GeneratePresignedURLsResponse* response) { return this->GeneratePresignedURLs(context, request, response); }));}
    void SetMessageAllocatorFor_GeneratePresignedURLs(
        ::grpc::MessageAllocator< ::organization::GeneratePresignedURLsRequest, ::organization::GeneratePresignedURLsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(33);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::GeneratePresignedURLsRequest, ::organization::GeneratePresignedURLsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GeneratePresignedURLs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GeneratePresignedURLs(::grpc::ServerContext* /*context*/, const ::organization::GeneratePresignedURLsRequest* /*request*/, ::organization::GeneratePresignedURLsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GeneratePresignedURLs(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::GeneratePresignedURLsRequest* /*request*/, ::organization::GeneratePresignedURLsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateSaleSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateSaleSettings() {
      ::grpc::Service::MarkMethodCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::CreateSaleSettingsRequest, ::organization::CreateSaleSettingsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::CreateSaleSettingsRequest* request, ::organization::CreateSaleSettingsResponse* response) { return this->CreateSaleSettings(context, request, response); }));}
    void SetMessageAllocatorFor_CreateSaleSettings(
        ::grpc::MessageAllocator< ::organization::CreateSaleSettingsRequest, ::organization::CreateSaleSettingsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(34);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::CreateSaleSettingsRequest, ::organization::CreateSaleSettingsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateSaleSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSaleSettings(::grpc::ServerContext* /*context*/, const ::organization::CreateSaleSettingsRequest* /*request*/, ::organization::CreateSaleSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSaleSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::CreateSaleSettingsRequest* /*request*/, ::organization::CreateSaleSettingsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSaleSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSaleSettings() {
      ::grpc::Service::MarkMethodCallback(35,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::GetSaleSettingsRequest, ::organization::GetSaleSettingsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::GetSaleSettingsRequest* request, ::organization::GetSaleSettingsResponse* response) { return this->GetSaleSettings(context, request, response); }));}
    void SetMessageAllocatorFor_GetSaleSettings(
        ::grpc::MessageAllocator< ::organization::GetSaleSettingsRequest, ::organization::GetSaleSettingsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(35);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::GetSaleSettingsRequest, ::organization::GetSaleSettingsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSaleSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSaleSettings(::grpc::ServerContext* /*context*/, const ::organization::GetSaleSettingsRequest* /*request*/, ::organization::GetSaleSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSaleSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::GetSaleSettingsRequest* /*request*/, ::organization::GetSaleSettingsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateSaleSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateSaleSettings() {
      ::grpc::Service::MarkMethodCallback(36,
          new ::grpc::internal::CallbackUnaryHandler< ::organization::UpdateSaleSettingsRequest, ::organization::UpdateSaleSettingsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::organization::UpdateSaleSettingsRequest* request, ::organization::UpdateSaleSettingsResponse* response) { return this->UpdateSaleSettings(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateSaleSettings(
        ::grpc::MessageAllocator< ::organization::UpdateSaleSettingsRequest, ::organization::UpdateSaleSettingsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(36);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::organization::UpdateSaleSettingsRequest, ::organization::UpdateSaleSettingsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateSaleSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSaleSettings(::grpc::ServerContext* /*context*/, const ::organization::UpdateSaleSettingsRequest* /*request*/, ::organization::UpdateSaleSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSaleSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::organization::UpdateSaleSettingsRequest* /*request*/, ::organization::UpdateSaleSettingsResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateOrganization<WithCallbackMethod_GetOrganization<WithCallbackMethod_ListOrganizations<WithCallbackMethod_PatchOrganization<WithCallbackMethod_UpdateOrganization<WithCallbackMethod_CreateCounterparty<WithCallbackMethod_GetCounterparty<WithCallbackMethod_ListCounterparties<WithCallbackMethod_PatchCounterparty<WithCallbackMethod_ListBankAccounts<WithCallbackMethod_GetDefaultBankAccount<WithCallbackMethod_CreateBankAccount<WithCallbackMethod_UpdateBankAccount<WithCallbackMethod_UpdateBankAccounts<WithCallbackMethod_DeleteBankAccount<WithCallbackMethod_CreateAddress<WithCallbackMethod_GetAddress<WithCallbackMethod_UpdateAddress<WithCallbackMethod_PatchAddress<WithCallbackMethod_DeleteAddress<WithCallbackMethod_CreateRelationship<WithCallbackMethod_ListRelationships<WithCallbackMethod_EnsureRelationshipExists<WithCallbackMethod_UpdateRelationship<WithCallbackMethod_GetRelationshipType<WithCallbackMethod_ListRelationshipTypes<WithCallbackMethod_CreateRelationshipType<WithCallbackMethod_UpdateRelationshipType<WithCallbackMethod_CreateContact<WithCallbackMethod_GetContact<WithCallbackMethod_UpdateContact<WithCallbackMethod_DeleteContact<WithCallbackMethod_ListContacts<WithCallbackMethod_GeneratePresignedURLs<WithCallbackMethod_CreateSaleSettings<WithCallbackMethod_GetSaleSettings<WithCallbackMethod_UpdateSaleSettings<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateOrganization() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateOrganization(::grpc::ServerContext* /*context*/, const ::organization::CreateOrganizationRequest* /*request*/, ::organization::CreateOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetOrganization() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOrganization(::grpc::ServerContext* /*context*/, const ::organization::GetOrganizationRequest* /*request*/, ::organization::GetOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListOrganizations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListOrganizations() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ListOrganizations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListOrganizations(::grpc::ServerContext* /*context*/, const ::organization::ListOrganizationsRequest* /*request*/, ::organization::ListOrganizationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PatchOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PatchOrganization() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_PatchOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchOrganization(::grpc::ServerContext* /*context*/, const ::organization::PatchOrganizationRequest* /*request*/, ::organization::PatchOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateOrganization() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_UpdateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateOrganization(::grpc::ServerContext* /*context*/, const ::organization::UpdateOrganizationRequest* /*request*/, ::organization::UpdateOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateCounterparty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateCounterparty() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_CreateCounterparty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCounterparty(::grpc::ServerContext* /*context*/, const ::organization::CreateCounterpartyRequest* /*request*/, ::organization::CreateCounterpartyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCounterparty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCounterparty() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetCounterparty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCounterparty(::grpc::ServerContext* /*context*/, const ::organization::GetCounterpartyRequest* /*request*/, ::organization::GetCounterpartyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListCounterparties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListCounterparties() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_ListCounterparties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCounterparties(::grpc::ServerContext* /*context*/, const ::organization::ListCounterpartiesRequest* /*request*/, ::organization::ListCounterpartiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PatchCounterparty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PatchCounterparty() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_PatchCounterparty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchCounterparty(::grpc::ServerContext* /*context*/, const ::organization::PatchCounterpartyRequest* /*request*/, ::organization::PatchCounterpartyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListBankAccounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListBankAccounts() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_ListBankAccounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBankAccounts(::grpc::ServerContext* /*context*/, const ::organization::ListBankAccountsRequest* /*request*/, ::organization::ListBankAccountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDefaultBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDefaultBankAccount() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_GetDefaultBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDefaultBankAccount(::grpc::ServerContext* /*context*/, const ::organization::GetDefaultBankAccountRequest* /*request*/, ::organization::GetDefaultBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateBankAccount() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_CreateBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateBankAccount(::grpc::ServerContext* /*context*/, const ::organization::CreateBankAccountRequest* /*request*/, ::organization::CreateBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateBankAccount() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_UpdateBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBankAccount(::grpc::ServerContext* /*context*/, const ::organization::UpdateBankAccountRequest* /*request*/, ::organization::UpdateBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateBankAccounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateBankAccounts() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_UpdateBankAccounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBankAccounts(::grpc::ServerContext* /*context*/, const ::organization::UpdateBankAccountsRequest* /*request*/, ::organization::UpdateBankAccountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteBankAccount() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_DeleteBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBankAccount(::grpc::ServerContext* /*context*/, const ::organization::DeleteBankAccountRequest* /*request*/, ::organization::DeleteBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateAddress() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_CreateAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAddress(::grpc::ServerContext* /*context*/, const ::organization::CreateAddressRequest* /*request*/, ::organization::CreateAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAddress() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_GetAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAddress(::grpc::ServerContext* /*context*/, const ::organization::GetAddressRequest* /*request*/, ::organization::GetAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateAddress() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_UpdateAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAddress(::grpc::ServerContext* /*context*/, const ::organization::UpdateAddressRequest* /*request*/, ::organization::UpdateAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PatchAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PatchAddress() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_PatchAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchAddress(::grpc::ServerContext* /*context*/, const ::organization::PatchAddressRequest* /*request*/, ::organization::PatchAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteAddress() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_DeleteAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAddress(::grpc::ServerContext* /*context*/, const ::organization::DeleteAddressRequest* /*request*/, ::organization::DeleteAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateRelationship() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_CreateRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRelationship(::grpc::ServerContext* /*context*/, const ::organization::CreateRelationshipRequest* /*request*/, ::organization::CreateRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListRelationships : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListRelationships() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_ListRelationships() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRelationships(::grpc::ServerContext* /*context*/, const ::organization::ListRelationshipsRequest* /*request*/, ::organization::ListRelationshipsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EnsureRelationshipExists : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_EnsureRelationshipExists() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_EnsureRelationshipExists() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnsureRelationshipExists(::grpc::ServerContext* /*context*/, const ::organization::EnsureRelationshipExistsRequest* /*request*/, ::organization::EnsureRelationshipExistsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateRelationship() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_UpdateRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRelationship(::grpc::ServerContext* /*context*/, const ::organization::UpdateRelationshipRequest* /*request*/, ::organization::UpdateRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRelationshipType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRelationshipType() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_GetRelationshipType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRelationshipType(::grpc::ServerContext* /*context*/, const ::organization::GetRelationshipTypeRequest* /*request*/, ::organization::GetRelationshipTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListRelationshipTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListRelationshipTypes() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_ListRelationshipTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRelationshipTypes(::grpc::ServerContext* /*context*/, const ::organization::ListRelationshipTypesRequest* /*request*/, ::organization::ListRelationshipTypesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateRelationshipType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateRelationshipType() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_CreateRelationshipType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRelationshipType(::grpc::ServerContext* /*context*/, const ::organization::CreateRelationshipTypeRequest* /*request*/, ::organization::CreateRelationshipTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateRelationshipType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateRelationshipType() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_UpdateRelationshipType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRelationshipType(::grpc::ServerContext* /*context*/, const ::organization::UpdateRelationshipTypeRequest* /*request*/, ::organization::UpdateRelationshipTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateContact() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_CreateContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateContact(::grpc::ServerContext* /*context*/, const ::organization::CreateContactRequest* /*request*/, ::organization::CreateContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetContact() {
      ::grpc::Service::MarkMethodGeneric(29);
    }
    ~WithGenericMethod_GetContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetContact(::grpc::ServerContext* /*context*/, const ::organization::GetContactRequest* /*request*/, ::organization::GetContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateContact() {
      ::grpc::Service::MarkMethodGeneric(30);
    }
    ~WithGenericMethod_UpdateContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateContact(::grpc::ServerContext* /*context*/, const ::organization::UpdateContactRequest* /*request*/, ::organization::UpdateContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteContact() {
      ::grpc::Service::MarkMethodGeneric(31);
    }
    ~WithGenericMethod_DeleteContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteContact(::grpc::ServerContext* /*context*/, const ::organization::DeleteContactRequest* /*request*/, ::organization::DeleteContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListContacts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListContacts() {
      ::grpc::Service::MarkMethodGeneric(32);
    }
    ~WithGenericMethod_ListContacts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListContacts(::grpc::ServerContext* /*context*/, const ::organization::ListContactsRequest* /*request*/, ::organization::ListContactsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GeneratePresignedURLs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GeneratePresignedURLs() {
      ::grpc::Service::MarkMethodGeneric(33);
    }
    ~WithGenericMethod_GeneratePresignedURLs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GeneratePresignedURLs(::grpc::ServerContext* /*context*/, const ::organization::GeneratePresignedURLsRequest* /*request*/, ::organization::GeneratePresignedURLsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateSaleSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateSaleSettings() {
      ::grpc::Service::MarkMethodGeneric(34);
    }
    ~WithGenericMethod_CreateSaleSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSaleSettings(::grpc::ServerContext* /*context*/, const ::organization::CreateSaleSettingsRequest* /*request*/, ::organization::CreateSaleSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSaleSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSaleSettings() {
      ::grpc::Service::MarkMethodGeneric(35);
    }
    ~WithGenericMethod_GetSaleSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSaleSettings(::grpc::ServerContext* /*context*/, const ::organization::GetSaleSettingsRequest* /*request*/, ::organization::GetSaleSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateSaleSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateSaleSettings() {
      ::grpc::Service::MarkMethodGeneric(36);
    }
    ~WithGenericMethod_UpdateSaleSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSaleSettings(::grpc::ServerContext* /*context*/, const ::organization::UpdateSaleSettingsRequest* /*request*/, ::organization::UpdateSaleSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateOrganization() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateOrganization(::grpc::ServerContext* /*context*/, const ::organization::CreateOrganizationRequest* /*request*/, ::organization::CreateOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateOrganization(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetOrganization() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOrganization(::grpc::ServerContext* /*context*/, const ::organization::GetOrganizationRequest* /*request*/, ::organization::GetOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOrganization(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListOrganizations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListOrganizations() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ListOrganizations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListOrganizations(::grpc::ServerContext* /*context*/, const ::organization::ListOrganizationsRequest* /*request*/, ::organization::ListOrganizationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListOrganizations(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PatchOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PatchOrganization() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_PatchOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchOrganization(::grpc::ServerContext* /*context*/, const ::organization::PatchOrganizationRequest* /*request*/, ::organization::PatchOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPatchOrganization(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateOrganization() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_UpdateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateOrganization(::grpc::ServerContext* /*context*/, const ::organization::UpdateOrganizationRequest* /*request*/, ::organization::UpdateOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateOrganization(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateCounterparty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateCounterparty() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_CreateCounterparty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCounterparty(::grpc::ServerContext* /*context*/, const ::organization::CreateCounterpartyRequest* /*request*/, ::organization::CreateCounterpartyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateCounterparty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCounterparty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCounterparty() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetCounterparty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCounterparty(::grpc::ServerContext* /*context*/, const ::organization::GetCounterpartyRequest* /*request*/, ::organization::GetCounterpartyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCounterparty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListCounterparties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListCounterparties() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_ListCounterparties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCounterparties(::grpc::ServerContext* /*context*/, const ::organization::ListCounterpartiesRequest* /*request*/, ::organization::ListCounterpartiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCounterparties(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PatchCounterparty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PatchCounterparty() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_PatchCounterparty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchCounterparty(::grpc::ServerContext* /*context*/, const ::organization::PatchCounterpartyRequest* /*request*/, ::organization::PatchCounterpartyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPatchCounterparty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListBankAccounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListBankAccounts() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_ListBankAccounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBankAccounts(::grpc::ServerContext* /*context*/, const ::organization::ListBankAccountsRequest* /*request*/, ::organization::ListBankAccountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListBankAccounts(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDefaultBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDefaultBankAccount() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_GetDefaultBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDefaultBankAccount(::grpc::ServerContext* /*context*/, const ::organization::GetDefaultBankAccountRequest* /*request*/, ::organization::GetDefaultBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDefaultBankAccount(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateBankAccount() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_CreateBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateBankAccount(::grpc::ServerContext* /*context*/, const ::organization::CreateBankAccountRequest* /*request*/, ::organization::CreateBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateBankAccount(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateBankAccount() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_UpdateBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBankAccount(::grpc::ServerContext* /*context*/, const ::organization::UpdateBankAccountRequest* /*request*/, ::organization::UpdateBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateBankAccount(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateBankAccounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateBankAccounts() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_UpdateBankAccounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBankAccounts(::grpc::ServerContext* /*context*/, const ::organization::UpdateBankAccountsRequest* /*request*/, ::organization::UpdateBankAccountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateBankAccounts(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteBankAccount() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_DeleteBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBankAccount(::grpc::ServerContext* /*context*/, const ::organization::DeleteBankAccountRequest* /*request*/, ::organization::DeleteBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteBankAccount(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateAddress() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_CreateAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAddress(::grpc::ServerContext* /*context*/, const ::organization::CreateAddressRequest* /*request*/, ::organization::CreateAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateAddress(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAddress() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_GetAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAddress(::grpc::ServerContext* /*context*/, const ::organization::GetAddressRequest* /*request*/, ::organization::GetAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAddress(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateAddress() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_UpdateAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAddress(::grpc::ServerContext* /*context*/, const ::organization::UpdateAddressRequest* /*request*/, ::organization::UpdateAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateAddress(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PatchAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PatchAddress() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_PatchAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchAddress(::grpc::ServerContext* /*context*/, const ::organization::PatchAddressRequest* /*request*/, ::organization::PatchAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPatchAddress(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteAddress() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_DeleteAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAddress(::grpc::ServerContext* /*context*/, const ::organization::DeleteAddressRequest* /*request*/, ::organization::DeleteAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteAddress(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateRelationship() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_CreateRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRelationship(::grpc::ServerContext* /*context*/, const ::organization::CreateRelationshipRequest* /*request*/, ::organization::CreateRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateRelationship(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListRelationships : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListRelationships() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_ListRelationships() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRelationships(::grpc::ServerContext* /*context*/, const ::organization::ListRelationshipsRequest* /*request*/, ::organization::ListRelationshipsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRelationships(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_EnsureRelationshipExists : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_EnsureRelationshipExists() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_EnsureRelationshipExists() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnsureRelationshipExists(::grpc::ServerContext* /*context*/, const ::organization::EnsureRelationshipExistsRequest* /*request*/, ::organization::EnsureRelationshipExistsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEnsureRelationshipExists(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateRelationship() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_UpdateRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRelationship(::grpc::ServerContext* /*context*/, const ::organization::UpdateRelationshipRequest* /*request*/, ::organization::UpdateRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateRelationship(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRelationshipType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRelationshipType() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_GetRelationshipType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRelationshipType(::grpc::ServerContext* /*context*/, const ::organization::GetRelationshipTypeRequest* /*request*/, ::organization::GetRelationshipTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRelationshipType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListRelationshipTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListRelationshipTypes() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_ListRelationshipTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRelationshipTypes(::grpc::ServerContext* /*context*/, const ::organization::ListRelationshipTypesRequest* /*request*/, ::organization::ListRelationshipTypesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRelationshipTypes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateRelationshipType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateRelationshipType() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_CreateRelationshipType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRelationshipType(::grpc::ServerContext* /*context*/, const ::organization::CreateRelationshipTypeRequest* /*request*/, ::organization::CreateRelationshipTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateRelationshipType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateRelationshipType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateRelationshipType() {
      ::grpc::Service::MarkMethodRaw(27);
    }
    ~WithRawMethod_UpdateRelationshipType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRelationshipType(::grpc::ServerContext* /*context*/, const ::organization::UpdateRelationshipTypeRequest* /*request*/, ::organization::UpdateRelationshipTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateRelationshipType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateContact() {
      ::grpc::Service::MarkMethodRaw(28);
    }
    ~WithRawMethod_CreateContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateContact(::grpc::ServerContext* /*context*/, const ::organization::CreateContactRequest* /*request*/, ::organization::CreateContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateContact(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetContact() {
      ::grpc::Service::MarkMethodRaw(29);
    }
    ~WithRawMethod_GetContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetContact(::grpc::ServerContext* /*context*/, const ::organization::GetContactRequest* /*request*/, ::organization::GetContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetContact(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateContact() {
      ::grpc::Service::MarkMethodRaw(30);
    }
    ~WithRawMethod_UpdateContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateContact(::grpc::ServerContext* /*context*/, const ::organization::UpdateContactRequest* /*request*/, ::organization::UpdateContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateContact(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteContact() {
      ::grpc::Service::MarkMethodRaw(31);
    }
    ~WithRawMethod_DeleteContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteContact(::grpc::ServerContext* /*context*/, const ::organization::DeleteContactRequest* /*request*/, ::organization::DeleteContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteContact(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListContacts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListContacts() {
      ::grpc::Service::MarkMethodRaw(32);
    }
    ~WithRawMethod_ListContacts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListContacts(::grpc::ServerContext* /*context*/, const ::organization::ListContactsRequest* /*request*/, ::organization::ListContactsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListContacts(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GeneratePresignedURLs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GeneratePresignedURLs() {
      ::grpc::Service::MarkMethodRaw(33);
    }
    ~WithRawMethod_GeneratePresignedURLs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GeneratePresignedURLs(::grpc::ServerContext* /*context*/, const ::organization::GeneratePresignedURLsRequest* /*request*/, ::organization::GeneratePresignedURLsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGeneratePresignedURLs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateSaleSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateSaleSettings() {
      ::grpc::Service::MarkMethodRaw(34);
    }
    ~WithRawMethod_CreateSaleSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSaleSettings(::grpc::ServerContext* /*context*/, const ::organization::CreateSaleSettingsRequest* /*request*/, ::organization::CreateSaleSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSaleSettings(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSaleSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSaleSettings() {
      ::grpc::Service::MarkMethodRaw(35);
    }
    ~WithRawMethod_GetSaleSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSaleSettings(::grpc::ServerContext* /*context*/, const ::organization::GetSaleSettingsRequest* /*request*/, ::organization::GetSaleSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSaleSettings(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateSaleSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateSaleSettings() {
      ::grpc::Service::MarkMethodRaw(36);
    }
    ~WithRawMethod_UpdateSaleSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSaleSettings(::grpc::ServerContext* /*context*/, const ::organization::UpdateSaleSettingsRequest* /*request*/, ::organization::UpdateSaleSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSaleSettings(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateOrganization() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateOrganization(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateOrganization(::grpc::ServerContext* /*context*/, const ::organization::CreateOrganizationRequest* /*request*/, ::organization::CreateOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateOrganization(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetOrganization() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetOrganization(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOrganization(::grpc::ServerContext* /*context*/, const ::organization::GetOrganizationRequest* /*request*/, ::organization::GetOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetOrganization(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListOrganizations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListOrganizations() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListOrganizations(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListOrganizations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListOrganizations(::grpc::ServerContext* /*context*/, const ::organization::ListOrganizationsRequest* /*request*/, ::organization::ListOrganizationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListOrganizations(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PatchOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PatchOrganization() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PatchOrganization(context, request, response); }));
    }
    ~WithRawCallbackMethod_PatchOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchOrganization(::grpc::ServerContext* /*context*/, const ::organization::PatchOrganizationRequest* /*request*/, ::organization::PatchOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PatchOrganization(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateOrganization() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateOrganization(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateOrganization(::grpc::ServerContext* /*context*/, const ::organization::UpdateOrganizationRequest* /*request*/, ::organization::UpdateOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateOrganization(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateCounterparty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateCounterparty() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateCounterparty(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateCounterparty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCounterparty(::grpc::ServerContext* /*context*/, const ::organization::CreateCounterpartyRequest* /*request*/, ::organization::CreateCounterpartyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateCounterparty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetCounterparty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetCounterparty() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetCounterparty(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetCounterparty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCounterparty(::grpc::ServerContext* /*context*/, const ::organization::GetCounterpartyRequest* /*request*/, ::organization::GetCounterpartyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCounterparty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListCounterparties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListCounterparties() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListCounterparties(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListCounterparties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCounterparties(::grpc::ServerContext* /*context*/, const ::organization::ListCounterpartiesRequest* /*request*/, ::organization::ListCounterpartiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListCounterparties(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PatchCounterparty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PatchCounterparty() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PatchCounterparty(context, request, response); }));
    }
    ~WithRawCallbackMethod_PatchCounterparty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchCounterparty(::grpc::ServerContext* /*context*/, const ::organization::PatchCounterpartyRequest* /*request*/, ::organization::PatchCounterpartyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PatchCounterparty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListBankAccounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListBankAccounts() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListBankAccounts(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListBankAccounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBankAccounts(::grpc::ServerContext* /*context*/, const ::organization::ListBankAccountsRequest* /*request*/, ::organization::ListBankAccountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListBankAccounts(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDefaultBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDefaultBankAccount() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDefaultBankAccount(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDefaultBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDefaultBankAccount(::grpc::ServerContext* /*context*/, const ::organization::GetDefaultBankAccountRequest* /*request*/, ::organization::GetDefaultBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDefaultBankAccount(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateBankAccount() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateBankAccount(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateBankAccount(::grpc::ServerContext* /*context*/, const ::organization::CreateBankAccountRequest* /*request*/, ::organization::CreateBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateBankAccount(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateBankAccount() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateBankAccount(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBankAccount(::grpc::ServerContext* /*context*/, const ::organization::UpdateBankAccountRequest* /*request*/, ::organization::UpdateBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateBankAccount(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateBankAccounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateBankAccounts() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateBankAccounts(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateBankAccounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBankAccounts(::grpc::ServerContext* /*context*/, const ::organization::UpdateBankAccountsRequest* /*request*/, ::organization::UpdateBankAccountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateBankAccounts(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteBankAccount() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteBankAccount(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBankAccount(::grpc::ServerContext* /*context*/, const ::organization::DeleteBankAccountRequest* /*request*/, ::organization::DeleteBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteBankAccount(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateAddress() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateAddress(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAddress(::grpc::ServerContext* /*context*/, const ::organization::CreateAddressRequest* /*request*/, ::organization::CreateAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateAddress(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAddress() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAddress(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAddress(::grpc::ServerContext* /*context*/, const ::organization::GetAddressRequest* /*request*/, ::organization::GetAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAddress(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateAddress() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateAddress(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAddress(::grpc::ServerContext* /*context*/, const ::organization::UpdateAddressRequest* /*request*/, ::organization::UpdateAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateAddress(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PatchAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PatchAddress() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PatchAddress(context, request, response); }));
    }
    ~WithRawCallbackMethod_PatchAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PatchAddress(::grpc::ServerContext* /*context*/, const ::organization::PatchAddressRequest* /*request*/, ::organization::PatchAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PatchAddress(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteAddress() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteAddress(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAddress(::grpc::ServerContext* /*context*/, const ::organization::DeleteAddressRequest* /*request*/, ::organization::DeleteAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteAddress(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateRelationship() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateRelationship(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRelationship(::grpc::ServerContext* /*context*/, const ::organization::CreateRelationshipRequest* /*request*/, ::organization::CreateRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateRelationship(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListRelationships : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListRelationships() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListRelationships(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListRelationships() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRelationships(::grpc::ServerContext* /*context*/, const ::organization::ListRelationshipsRequest* /*request*/, ::organization::ListRelationshipsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListRelationships(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_EnsureRelationshipExists : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_EnsureRelationshipExists() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->EnsureRelationshipExists(context, request, response); }));
    }
    ~WithRawCallbackMethod_EnsureRelationshipExists() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnsureRelationshipExists(::grpc::ServerContext* /*context*/, const ::organization::EnsureRelationshipExistsRequest* /*request*/, ::organization::EnsureRelationshipExistsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* EnsureRelationshipExists(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateRelationship() {
      ::grpc::Service::MarkMethodRawCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateRelationship(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRelationship(::grpc::ServerContext* /*context*/, const ::organization::UpdateRelationshipRequest* /*request*/, ::organization::UpdateRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateRelationship(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRelationshipType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRelationshipType() {
      ::grpc::Service::MarkMethodRawCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRelationshipType(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRelationshipType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRelationshipType(::grpc::ServerContext* /*context*/, const ::organization::GetRelationshipTypeRequest* /*request*/, ::organization::GetRelationshipTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRelationshipType(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListRelationshipTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListRelationshipTypes() {
      ::grpc::Service::MarkMethodRawCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListRelationshipTypes(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListRelationshipTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRelationshipTypes(::grpc::ServerContext* /*context*/, const ::organization::ListRelationshipTypesRequest* /*request*/, ::organization::ListRelationshipTypesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListRelationshipTypes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateRelationshipType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateRelationshipType() {
      ::grpc::Service::MarkMethodRawCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateRelationshipType(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateRelationshipType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRelationshipType(::grpc::ServerContext* /*context*/, const ::organization::CreateRelationshipTypeRequest* /*request*/, ::organization::CreateRelationshipTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateRelationshipType(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateRelationshipType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateRelationshipType() {
      ::grpc::Service::MarkMethodRawCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateRelationshipType(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateRelationshipType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRelationshipType(::grpc::ServerContext* /*context*/, const ::organization::UpdateRelationshipTypeRequest* /*request*/, ::organization::UpdateRelationshipTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateRelationshipType(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateContact() {
      ::grpc::Service::MarkMethodRawCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateContact(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateContact(::grpc::ServerContext* /*context*/, const ::organization::CreateContactRequest* /*request*/, ::organization::CreateContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateContact(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetContact() {
      ::grpc::Service::MarkMethodRawCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetContact(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetContact(::grpc::ServerContext* /*context*/, const ::organization::GetContactRequest* /*request*/, ::organization::GetContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetContact(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateContact() {
      ::grpc::Service::MarkMethodRawCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateContact(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateContact(::grpc::ServerContext* /*context*/, const ::organization::UpdateContactRequest* /*request*/, ::organization::UpdateContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateContact(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteContact() {
      ::grpc::Service::MarkMethodRawCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteContact(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteContact(::grpc::ServerContext* /*context*/, const ::organization::DeleteContactRequest* /*request*/, ::organization::DeleteContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteContact(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListContacts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListContacts() {
      ::grpc::Service::MarkMethodRawCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListContacts(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListContacts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListContacts(::grpc::ServerContext* /*context*/, const ::organization::ListContactsRequest* /*request*/, ::organization::ListContactsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListContacts(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GeneratePresignedURLs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GeneratePresignedURLs() {
      ::grpc::Service::MarkMethodRawCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GeneratePresignedURLs(context, request, response); }));
    }
    ~WithRawCallbackMethod_GeneratePresignedURLs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GeneratePresignedURLs(::grpc::ServerContext* /*context*/, const ::organization::GeneratePresignedURLsRequest* /*request*/, ::organization::GeneratePresignedURLsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GeneratePresignedURLs(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateSaleSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateSaleSettings() {
      ::grpc::Service::MarkMethodRawCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateSaleSettings(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateSaleSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSaleSettings(::grpc::ServerContext* /*context*/, const ::organization::CreateSaleSettingsRequest* /*request*/, ::organization::CreateSaleSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSaleSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSaleSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSaleSettings() {
      ::grpc::Service::MarkMethodRawCallback(35,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSaleSettings(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSaleSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSaleSettings(::grpc::ServerContext* /*context*/, const ::organization::GetSaleSettingsRequest* /*request*/, ::organization::GetSaleSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSaleSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateSaleSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateSaleSettings() {
      ::grpc::Service::MarkMethodRawCallback(36,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateSaleSettings(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateSaleSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSaleSettings(::grpc::ServerContext* /*context*/, const ::organization::UpdateSaleSettingsRequest* /*request*/, ::organization::UpdateSaleSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSaleSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateOrganization() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::CreateOrganizationRequest, ::organization::CreateOrganizationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::CreateOrganizationRequest, ::organization::CreateOrganizationResponse>* streamer) {
                       return this->StreamedCreateOrganization(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateOrganization(::grpc::ServerContext* /*context*/, const ::organization::CreateOrganizationRequest* /*request*/, ::organization::CreateOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateOrganization(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::CreateOrganizationRequest,::organization::CreateOrganizationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetOrganization() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::GetOrganizationRequest, ::organization::GetOrganizationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::GetOrganizationRequest, ::organization::GetOrganizationResponse>* streamer) {
                       return this->StreamedGetOrganization(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetOrganization(::grpc::ServerContext* /*context*/, const ::organization::GetOrganizationRequest* /*request*/, ::organization::GetOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetOrganization(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::GetOrganizationRequest,::organization::GetOrganizationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListOrganizations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListOrganizations() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::ListOrganizationsRequest, ::organization::ListOrganizationsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::ListOrganizationsRequest, ::organization::ListOrganizationsResponse>* streamer) {
                       return this->StreamedListOrganizations(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListOrganizations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListOrganizations(::grpc::ServerContext* /*context*/, const ::organization::ListOrganizationsRequest* /*request*/, ::organization::ListOrganizationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListOrganizations(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::ListOrganizationsRequest,::organization::ListOrganizationsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PatchOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PatchOrganization() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::PatchOrganizationRequest, ::organization::PatchOrganizationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::PatchOrganizationRequest, ::organization::PatchOrganizationResponse>* streamer) {
                       return this->StreamedPatchOrganization(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PatchOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PatchOrganization(::grpc::ServerContext* /*context*/, const ::organization::PatchOrganizationRequest* /*request*/, ::organization::PatchOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPatchOrganization(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::PatchOrganizationRequest,::organization::PatchOrganizationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateOrganization : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateOrganization() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::UpdateOrganizationRequest, ::organization::UpdateOrganizationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::UpdateOrganizationRequest, ::organization::UpdateOrganizationResponse>* streamer) {
                       return this->StreamedUpdateOrganization(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateOrganization() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateOrganization(::grpc::ServerContext* /*context*/, const ::organization::UpdateOrganizationRequest* /*request*/, ::organization::UpdateOrganizationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateOrganization(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::UpdateOrganizationRequest,::organization::UpdateOrganizationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateCounterparty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateCounterparty() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::CreateCounterpartyRequest, ::organization::CreateCounterpartyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::CreateCounterpartyRequest, ::organization::CreateCounterpartyResponse>* streamer) {
                       return this->StreamedCreateCounterparty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateCounterparty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateCounterparty(::grpc::ServerContext* /*context*/, const ::organization::CreateCounterpartyRequest* /*request*/, ::organization::CreateCounterpartyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateCounterparty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::CreateCounterpartyRequest,::organization::CreateCounterpartyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCounterparty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetCounterparty() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::GetCounterpartyRequest, ::organization::GetCounterpartyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::GetCounterpartyRequest, ::organization::GetCounterpartyResponse>* streamer) {
                       return this->StreamedGetCounterparty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetCounterparty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCounterparty(::grpc::ServerContext* /*context*/, const ::organization::GetCounterpartyRequest* /*request*/, ::organization::GetCounterpartyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCounterparty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::GetCounterpartyRequest,::organization::GetCounterpartyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListCounterparties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListCounterparties() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::ListCounterpartiesRequest, ::organization::ListCounterpartiesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::ListCounterpartiesRequest, ::organization::ListCounterpartiesResponse>* streamer) {
                       return this->StreamedListCounterparties(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListCounterparties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListCounterparties(::grpc::ServerContext* /*context*/, const ::organization::ListCounterpartiesRequest* /*request*/, ::organization::ListCounterpartiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListCounterparties(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::ListCounterpartiesRequest,::organization::ListCounterpartiesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PatchCounterparty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PatchCounterparty() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::PatchCounterpartyRequest, ::organization::PatchCounterpartyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::PatchCounterpartyRequest, ::organization::PatchCounterpartyResponse>* streamer) {
                       return this->StreamedPatchCounterparty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PatchCounterparty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PatchCounterparty(::grpc::ServerContext* /*context*/, const ::organization::PatchCounterpartyRequest* /*request*/, ::organization::PatchCounterpartyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPatchCounterparty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::PatchCounterpartyRequest,::organization::PatchCounterpartyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListBankAccounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListBankAccounts() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::ListBankAccountsRequest, ::organization::ListBankAccountsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::ListBankAccountsRequest, ::organization::ListBankAccountsResponse>* streamer) {
                       return this->StreamedListBankAccounts(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListBankAccounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListBankAccounts(::grpc::ServerContext* /*context*/, const ::organization::ListBankAccountsRequest* /*request*/, ::organization::ListBankAccountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListBankAccounts(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::ListBankAccountsRequest,::organization::ListBankAccountsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDefaultBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDefaultBankAccount() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::GetDefaultBankAccountRequest, ::organization::GetDefaultBankAccountResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::GetDefaultBankAccountRequest, ::organization::GetDefaultBankAccountResponse>* streamer) {
                       return this->StreamedGetDefaultBankAccount(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDefaultBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDefaultBankAccount(::grpc::ServerContext* /*context*/, const ::organization::GetDefaultBankAccountRequest* /*request*/, ::organization::GetDefaultBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDefaultBankAccount(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::GetDefaultBankAccountRequest,::organization::GetDefaultBankAccountResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateBankAccount() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::CreateBankAccountRequest, ::organization::CreateBankAccountResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::CreateBankAccountRequest, ::organization::CreateBankAccountResponse>* streamer) {
                       return this->StreamedCreateBankAccount(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateBankAccount(::grpc::ServerContext* /*context*/, const ::organization::CreateBankAccountRequest* /*request*/, ::organization::CreateBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateBankAccount(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::CreateBankAccountRequest,::organization::CreateBankAccountResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateBankAccount() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::UpdateBankAccountRequest, ::organization::UpdateBankAccountResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::UpdateBankAccountRequest, ::organization::UpdateBankAccountResponse>* streamer) {
                       return this->StreamedUpdateBankAccount(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateBankAccount(::grpc::ServerContext* /*context*/, const ::organization::UpdateBankAccountRequest* /*request*/, ::organization::UpdateBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateBankAccount(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::UpdateBankAccountRequest,::organization::UpdateBankAccountResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateBankAccounts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateBankAccounts() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::UpdateBankAccountsRequest, ::organization::UpdateBankAccountsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::UpdateBankAccountsRequest, ::organization::UpdateBankAccountsResponse>* streamer) {
                       return this->StreamedUpdateBankAccounts(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateBankAccounts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateBankAccounts(::grpc::ServerContext* /*context*/, const ::organization::UpdateBankAccountsRequest* /*request*/, ::organization::UpdateBankAccountsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateBankAccounts(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::UpdateBankAccountsRequest,::organization::UpdateBankAccountsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteBankAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteBankAccount() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::DeleteBankAccountRequest, ::organization::DeleteBankAccountResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::DeleteBankAccountRequest, ::organization::DeleteBankAccountResponse>* streamer) {
                       return this->StreamedDeleteBankAccount(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteBankAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteBankAccount(::grpc::ServerContext* /*context*/, const ::organization::DeleteBankAccountRequest* /*request*/, ::organization::DeleteBankAccountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteBankAccount(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::DeleteBankAccountRequest,::organization::DeleteBankAccountResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateAddress() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::CreateAddressRequest, ::organization::CreateAddressResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::CreateAddressRequest, ::organization::CreateAddressResponse>* streamer) {
                       return this->StreamedCreateAddress(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateAddress(::grpc::ServerContext* /*context*/, const ::organization::CreateAddressRequest* /*request*/, ::organization::CreateAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateAddress(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::CreateAddressRequest,::organization::CreateAddressResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAddress() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::GetAddressRequest, ::organization::GetAddressResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::GetAddressRequest, ::organization::GetAddressResponse>* streamer) {
                       return this->StreamedGetAddress(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAddress(::grpc::ServerContext* /*context*/, const ::organization::GetAddressRequest* /*request*/, ::organization::GetAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAddress(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::GetAddressRequest,::organization::GetAddressResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateAddress() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::UpdateAddressRequest, ::organization::UpdateAddressResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::UpdateAddressRequest, ::organization::UpdateAddressResponse>* streamer) {
                       return this->StreamedUpdateAddress(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateAddress(::grpc::ServerContext* /*context*/, const ::organization::UpdateAddressRequest* /*request*/, ::organization::UpdateAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateAddress(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::UpdateAddressRequest,::organization::UpdateAddressResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PatchAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PatchAddress() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::PatchAddressRequest, ::organization::PatchAddressResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::PatchAddressRequest, ::organization::PatchAddressResponse>* streamer) {
                       return this->StreamedPatchAddress(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PatchAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PatchAddress(::grpc::ServerContext* /*context*/, const ::organization::PatchAddressRequest* /*request*/, ::organization::PatchAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPatchAddress(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::PatchAddressRequest,::organization::PatchAddressResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteAddress : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteAddress() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::DeleteAddressRequest, ::organization::DeleteAddressResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::DeleteAddressRequest, ::organization::DeleteAddressResponse>* streamer) {
                       return this->StreamedDeleteAddress(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteAddress() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteAddress(::grpc::ServerContext* /*context*/, const ::organization::DeleteAddressRequest* /*request*/, ::organization::DeleteAddressResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteAddress(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::DeleteAddressRequest,::organization::DeleteAddressResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateRelationship() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::CreateRelationshipRequest, ::organization::CreateRelationshipResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::CreateRelationshipRequest, ::organization::CreateRelationshipResponse>* streamer) {
                       return this->StreamedCreateRelationship(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateRelationship(::grpc::ServerContext* /*context*/, const ::organization::CreateRelationshipRequest* /*request*/, ::organization::CreateRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateRelationship(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::CreateRelationshipRequest,::organization::CreateRelationshipResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListRelationships : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListRelationships() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::ListRelationshipsRequest, ::organization::ListRelationshipsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::ListRelationshipsRequest, ::organization::ListRelationshipsResponse>* streamer) {
                       return this->StreamedListRelationships(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListRelationships() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListRelationships(::grpc::ServerContext* /*context*/, const ::organization::ListRelationshipsRequest* /*request*/, ::organization::ListRelationshipsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListRelationships(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::ListRelationshipsRequest,::organization::ListRelationshipsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_EnsureRelationshipExists : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_EnsureRelationshipExists() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::EnsureRelationshipExistsRequest, ::organization::EnsureRelationshipExistsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::EnsureRelationshipExistsRequest, ::organization::EnsureRelationshipExistsResponse>* streamer) {
                       return this->StreamedEnsureRelationshipExists(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_EnsureRelationshipExists() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status EnsureRelationshipExists(::grpc::ServerContext* /*context*/, const ::organization::EnsureRelationshipExistsRequest* /*request*/, ::organization::EnsureRelationshipExistsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEnsureRelationshipExists(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::EnsureRelationshipExistsRequest,::organization::EnsureRelationshipExistsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateRelationship() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::UpdateRelationshipRequest, ::organization::UpdateRelationshipResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::UpdateRelationshipRequest, ::organization::UpdateRelationshipResponse>* streamer) {
                       return this->StreamedUpdateRelationship(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateRelationship(::grpc::ServerContext* /*context*/, const ::organization::UpdateRelationshipRequest* /*request*/, ::organization::UpdateRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateRelationship(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::UpdateRelationshipRequest,::organization::UpdateRelationshipResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRelationshipType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRelationshipType() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::GetRelationshipTypeRequest, ::organization::GetRelationshipTypeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::GetRelationshipTypeRequest, ::organization::GetRelationshipTypeResponse>* streamer) {
                       return this->StreamedGetRelationshipType(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRelationshipType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRelationshipType(::grpc::ServerContext* /*context*/, const ::organization::GetRelationshipTypeRequest* /*request*/, ::organization::GetRelationshipTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRelationshipType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::GetRelationshipTypeRequest,::organization::GetRelationshipTypeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListRelationshipTypes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListRelationshipTypes() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::ListRelationshipTypesRequest, ::organization::ListRelationshipTypesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::ListRelationshipTypesRequest, ::organization::ListRelationshipTypesResponse>* streamer) {
                       return this->StreamedListRelationshipTypes(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListRelationshipTypes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListRelationshipTypes(::grpc::ServerContext* /*context*/, const ::organization::ListRelationshipTypesRequest* /*request*/, ::organization::ListRelationshipTypesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListRelationshipTypes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::ListRelationshipTypesRequest,::organization::ListRelationshipTypesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateRelationshipType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateRelationshipType() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::CreateRelationshipTypeRequest, ::organization::CreateRelationshipTypeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::CreateRelationshipTypeRequest, ::organization::CreateRelationshipTypeResponse>* streamer) {
                       return this->StreamedCreateRelationshipType(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateRelationshipType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateRelationshipType(::grpc::ServerContext* /*context*/, const ::organization::CreateRelationshipTypeRequest* /*request*/, ::organization::CreateRelationshipTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateRelationshipType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::CreateRelationshipTypeRequest,::organization::CreateRelationshipTypeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateRelationshipType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateRelationshipType() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::UpdateRelationshipTypeRequest, ::organization::UpdateRelationshipTypeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::UpdateRelationshipTypeRequest, ::organization::UpdateRelationshipTypeResponse>* streamer) {
                       return this->StreamedUpdateRelationshipType(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateRelationshipType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateRelationshipType(::grpc::ServerContext* /*context*/, const ::organization::UpdateRelationshipTypeRequest* /*request*/, ::organization::UpdateRelationshipTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateRelationshipType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::UpdateRelationshipTypeRequest,::organization::UpdateRelationshipTypeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateContact() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::CreateContactRequest, ::organization::CreateContactResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::CreateContactRequest, ::organization::CreateContactResponse>* streamer) {
                       return this->StreamedCreateContact(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateContact(::grpc::ServerContext* /*context*/, const ::organization::CreateContactRequest* /*request*/, ::organization::CreateContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateContact(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::CreateContactRequest,::organization::CreateContactResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetContact() {
      ::grpc::Service::MarkMethodStreamed(29,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::GetContactRequest, ::organization::GetContactResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::GetContactRequest, ::organization::GetContactResponse>* streamer) {
                       return this->StreamedGetContact(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetContact(::grpc::ServerContext* /*context*/, const ::organization::GetContactRequest* /*request*/, ::organization::GetContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetContact(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::GetContactRequest,::organization::GetContactResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateContact() {
      ::grpc::Service::MarkMethodStreamed(30,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::UpdateContactRequest, ::organization::UpdateContactResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::UpdateContactRequest, ::organization::UpdateContactResponse>* streamer) {
                       return this->StreamedUpdateContact(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateContact(::grpc::ServerContext* /*context*/, const ::organization::UpdateContactRequest* /*request*/, ::organization::UpdateContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateContact(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::UpdateContactRequest,::organization::UpdateContactResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteContact : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteContact() {
      ::grpc::Service::MarkMethodStreamed(31,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::DeleteContactRequest, ::organization::DeleteContactResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::DeleteContactRequest, ::organization::DeleteContactResponse>* streamer) {
                       return this->StreamedDeleteContact(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteContact() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteContact(::grpc::ServerContext* /*context*/, const ::organization::DeleteContactRequest* /*request*/, ::organization::DeleteContactResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteContact(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::DeleteContactRequest,::organization::DeleteContactResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListContacts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListContacts() {
      ::grpc::Service::MarkMethodStreamed(32,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::ListContactsRequest, ::organization::ListContactsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::ListContactsRequest, ::organization::ListContactsResponse>* streamer) {
                       return this->StreamedListContacts(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListContacts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListContacts(::grpc::ServerContext* /*context*/, const ::organization::ListContactsRequest* /*request*/, ::organization::ListContactsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListContacts(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::ListContactsRequest,::organization::ListContactsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GeneratePresignedURLs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GeneratePresignedURLs() {
      ::grpc::Service::MarkMethodStreamed(33,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::GeneratePresignedURLsRequest, ::organization::GeneratePresignedURLsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::GeneratePresignedURLsRequest, ::organization::GeneratePresignedURLsResponse>* streamer) {
                       return this->StreamedGeneratePresignedURLs(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GeneratePresignedURLs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GeneratePresignedURLs(::grpc::ServerContext* /*context*/, const ::organization::GeneratePresignedURLsRequest* /*request*/, ::organization::GeneratePresignedURLsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGeneratePresignedURLs(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::GeneratePresignedURLsRequest,::organization::GeneratePresignedURLsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateSaleSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateSaleSettings() {
      ::grpc::Service::MarkMethodStreamed(34,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::CreateSaleSettingsRequest, ::organization::CreateSaleSettingsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::CreateSaleSettingsRequest, ::organization::CreateSaleSettingsResponse>* streamer) {
                       return this->StreamedCreateSaleSettings(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateSaleSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateSaleSettings(::grpc::ServerContext* /*context*/, const ::organization::CreateSaleSettingsRequest* /*request*/, ::organization::CreateSaleSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateSaleSettings(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::CreateSaleSettingsRequest,::organization::CreateSaleSettingsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSaleSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSaleSettings() {
      ::grpc::Service::MarkMethodStreamed(35,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::GetSaleSettingsRequest, ::organization::GetSaleSettingsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::GetSaleSettingsRequest, ::organization::GetSaleSettingsResponse>* streamer) {
                       return this->StreamedGetSaleSettings(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSaleSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSaleSettings(::grpc::ServerContext* /*context*/, const ::organization::GetSaleSettingsRequest* /*request*/, ::organization::GetSaleSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSaleSettings(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::GetSaleSettingsRequest,::organization::GetSaleSettingsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateSaleSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateSaleSettings() {
      ::grpc::Service::MarkMethodStreamed(36,
        new ::grpc::internal::StreamedUnaryHandler<
          ::organization::UpdateSaleSettingsRequest, ::organization::UpdateSaleSettingsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::organization::UpdateSaleSettingsRequest, ::organization::UpdateSaleSettingsResponse>* streamer) {
                       return this->StreamedUpdateSaleSettings(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateSaleSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateSaleSettings(::grpc::ServerContext* /*context*/, const ::organization::UpdateSaleSettingsRequest* /*request*/, ::organization::UpdateSaleSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateSaleSettings(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::organization::UpdateSaleSettingsRequest,::organization::UpdateSaleSettingsResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateOrganization<WithStreamedUnaryMethod_GetOrganization<WithStreamedUnaryMethod_ListOrganizations<WithStreamedUnaryMethod_PatchOrganization<WithStreamedUnaryMethod_UpdateOrganization<WithStreamedUnaryMethod_CreateCounterparty<WithStreamedUnaryMethod_GetCounterparty<WithStreamedUnaryMethod_ListCounterparties<WithStreamedUnaryMethod_PatchCounterparty<WithStreamedUnaryMethod_ListBankAccounts<WithStreamedUnaryMethod_GetDefaultBankAccount<WithStreamedUnaryMethod_CreateBankAccount<WithStreamedUnaryMethod_UpdateBankAccount<WithStreamedUnaryMethod_UpdateBankAccounts<WithStreamedUnaryMethod_DeleteBankAccount<WithStreamedUnaryMethod_CreateAddress<WithStreamedUnaryMethod_GetAddress<WithStreamedUnaryMethod_UpdateAddress<WithStreamedUnaryMethod_PatchAddress<WithStreamedUnaryMethod_DeleteAddress<WithStreamedUnaryMethod_CreateRelationship<WithStreamedUnaryMethod_ListRelationships<WithStreamedUnaryMethod_EnsureRelationshipExists<WithStreamedUnaryMethod_UpdateRelationship<WithStreamedUnaryMethod_GetRelationshipType<WithStreamedUnaryMethod_ListRelationshipTypes<WithStreamedUnaryMethod_CreateRelationshipType<WithStreamedUnaryMethod_UpdateRelationshipType<WithStreamedUnaryMethod_CreateContact<WithStreamedUnaryMethod_GetContact<WithStreamedUnaryMethod_UpdateContact<WithStreamedUnaryMethod_DeleteContact<WithStreamedUnaryMethod_ListContacts<WithStreamedUnaryMethod_GeneratePresignedURLs<WithStreamedUnaryMethod_CreateSaleSettings<WithStreamedUnaryMethod_GetSaleSettings<WithStreamedUnaryMethod_UpdateSaleSettings<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateOrganization<WithStreamedUnaryMethod_GetOrganization<WithStreamedUnaryMethod_ListOrganizations<WithStreamedUnaryMethod_PatchOrganization<WithStreamedUnaryMethod_UpdateOrganization<WithStreamedUnaryMethod_CreateCounterparty<WithStreamedUnaryMethod_GetCounterparty<WithStreamedUnaryMethod_ListCounterparties<WithStreamedUnaryMethod_PatchCounterparty<WithStreamedUnaryMethod_ListBankAccounts<WithStreamedUnaryMethod_GetDefaultBankAccount<WithStreamedUnaryMethod_CreateBankAccount<WithStreamedUnaryMethod_UpdateBankAccount<WithStreamedUnaryMethod_UpdateBankAccounts<WithStreamedUnaryMethod_DeleteBankAccount<WithStreamedUnaryMethod_CreateAddress<WithStreamedUnaryMethod_GetAddress<WithStreamedUnaryMethod_UpdateAddress<WithStreamedUnaryMethod_PatchAddress<WithStreamedUnaryMethod_DeleteAddress<WithStreamedUnaryMethod_CreateRelationship<WithStreamedUnaryMethod_ListRelationships<WithStreamedUnaryMethod_EnsureRelationshipExists<WithStreamedUnaryMethod_UpdateRelationship<WithStreamedUnaryMethod_GetRelationshipType<WithStreamedUnaryMethod_ListRelationshipTypes<WithStreamedUnaryMethod_CreateRelationshipType<WithStreamedUnaryMethod_UpdateRelationshipType<WithStreamedUnaryMethod_CreateContact<WithStreamedUnaryMethod_GetContact<WithStreamedUnaryMethod_UpdateContact<WithStreamedUnaryMethod_DeleteContact<WithStreamedUnaryMethod_ListContacts<WithStreamedUnaryMethod_GeneratePresignedURLs<WithStreamedUnaryMethod_CreateSaleSettings<WithStreamedUnaryMethod_GetSaleSettings<WithStreamedUnaryMethod_UpdateSaleSettings<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace organization


#endif  // GRPC_organization_2forganization_2eproto__INCLUDED

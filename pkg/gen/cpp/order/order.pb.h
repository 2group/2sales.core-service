// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: order/order.proto
// Protobuf C++ Version: 5.29.3

#ifndef order_2forder_2eproto_2epb_2eh
#define order_2forder_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "product/product.pb.h"
#include "organization/organization.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_order_2forder_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_order_2forder_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_order_2forder_2eproto;
namespace order {
class AddProductToCartRequest;
struct AddProductToCartRequestDefaultTypeInternal;
extern AddProductToCartRequestDefaultTypeInternal _AddProductToCartRequest_default_instance_;
class AddProductToCartResponse;
struct AddProductToCartResponseDefaultTypeInternal;
extern AddProductToCartResponseDefaultTypeInternal _AddProductToCartResponse_default_instance_;
class Cart;
struct CartDefaultTypeInternal;
extern CartDefaultTypeInternal _Cart_default_instance_;
class CartModel;
struct CartModelDefaultTypeInternal;
extern CartModelDefaultTypeInternal _CartModel_default_instance_;
class CartProducts;
struct CartProductsDefaultTypeInternal;
extern CartProductsDefaultTypeInternal _CartProducts_default_instance_;
class CreateOrderRequest;
struct CreateOrderRequestDefaultTypeInternal;
extern CreateOrderRequestDefaultTypeInternal _CreateOrderRequest_default_instance_;
class CreateOrderResponse;
struct CreateOrderResponseDefaultTypeInternal;
extern CreateOrderResponseDefaultTypeInternal _CreateOrderResponse_default_instance_;
class CreateSubOrderRequest;
struct CreateSubOrderRequestDefaultTypeInternal;
extern CreateSubOrderRequestDefaultTypeInternal _CreateSubOrderRequest_default_instance_;
class CreateSubOrderResponse;
struct CreateSubOrderResponseDefaultTypeInternal;
extern CreateSubOrderResponseDefaultTypeInternal _CreateSubOrderResponse_default_instance_;
class DeleteProductFromCartRequest;
struct DeleteProductFromCartRequestDefaultTypeInternal;
extern DeleteProductFromCartRequestDefaultTypeInternal _DeleteProductFromCartRequest_default_instance_;
class DeleteProductFromCartResponse;
struct DeleteProductFromCartResponseDefaultTypeInternal;
extern DeleteProductFromCartResponseDefaultTypeInternal _DeleteProductFromCartResponse_default_instance_;
class GetCountOfProductInCartRequest;
struct GetCountOfProductInCartRequestDefaultTypeInternal;
extern GetCountOfProductInCartRequestDefaultTypeInternal _GetCountOfProductInCartRequest_default_instance_;
class GetCountOfProductInCartResponse;
struct GetCountOfProductInCartResponseDefaultTypeInternal;
extern GetCountOfProductInCartResponseDefaultTypeInternal _GetCountOfProductInCartResponse_default_instance_;
class GetSubOrderRequest;
struct GetSubOrderRequestDefaultTypeInternal;
extern GetSubOrderRequestDefaultTypeInternal _GetSubOrderRequest_default_instance_;
class GetSubOrderResponse;
struct GetSubOrderResponseDefaultTypeInternal;
extern GetSubOrderResponseDefaultTypeInternal _GetSubOrderResponse_default_instance_;
class ListCartRequest;
struct ListCartRequestDefaultTypeInternal;
extern ListCartRequestDefaultTypeInternal _ListCartRequest_default_instance_;
class ListCartResponse;
struct ListCartResponseDefaultTypeInternal;
extern ListCartResponseDefaultTypeInternal _ListCartResponse_default_instance_;
class ListSubOrderRequest;
struct ListSubOrderRequestDefaultTypeInternal;
extern ListSubOrderRequestDefaultTypeInternal _ListSubOrderRequest_default_instance_;
class ListSubOrderResponse;
struct ListSubOrderResponseDefaultTypeInternal;
extern ListSubOrderResponseDefaultTypeInternal _ListSubOrderResponse_default_instance_;
class Order;
struct OrderDefaultTypeInternal;
extern OrderDefaultTypeInternal _Order_default_instance_;
class OrderItem;
struct OrderItemDefaultTypeInternal;
extern OrderItemDefaultTypeInternal _OrderItem_default_instance_;
class OrderItemModel;
struct OrderItemModelDefaultTypeInternal;
extern OrderItemModelDefaultTypeInternal _OrderItemModel_default_instance_;
class OrderModel;
struct OrderModelDefaultTypeInternal;
extern OrderModelDefaultTypeInternal _OrderModel_default_instance_;
class SubOrder;
struct SubOrderDefaultTypeInternal;
extern SubOrderDefaultTypeInternal _SubOrder_default_instance_;
class SubOrderModel;
struct SubOrderModelDefaultTypeInternal;
extern SubOrderModelDefaultTypeInternal _SubOrderModel_default_instance_;
class UpdateSubOrderRequest;
struct UpdateSubOrderRequestDefaultTypeInternal;
extern UpdateSubOrderRequestDefaultTypeInternal _UpdateSubOrderRequest_default_instance_;
class UpdateSubOrderResponse;
struct UpdateSubOrderResponseDefaultTypeInternal;
extern UpdateSubOrderResponseDefaultTypeInternal _UpdateSubOrderResponse_default_instance_;
}  // namespace order
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace order {

// ===================================================================


// -------------------------------------------------------------------

class SubOrderModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.SubOrderModel) */ {
 public:
  inline SubOrderModel() : SubOrderModel(nullptr) {}
  ~SubOrderModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubOrderModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubOrderModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubOrderModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubOrderModel(const SubOrderModel& from) : SubOrderModel(nullptr, from) {}
  inline SubOrderModel(SubOrderModel&& from) noexcept
      : SubOrderModel(nullptr, std::move(from)) {}
  inline SubOrderModel& operator=(const SubOrderModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubOrderModel& operator=(SubOrderModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubOrderModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubOrderModel* internal_default_instance() {
    return reinterpret_cast<const SubOrderModel*>(
        &_SubOrderModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SubOrderModel& a, SubOrderModel& b) { a.Swap(&b); }
  inline void Swap(SubOrderModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubOrderModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubOrderModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubOrderModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubOrderModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubOrderModel& from) { SubOrderModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubOrderModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.SubOrderModel"; }

 protected:
  explicit SubOrderModel(::google::protobuf::Arena* arena);
  SubOrderModel(::google::protobuf::Arena* arena, const SubOrderModel& from);
  SubOrderModel(::google::protobuf::Arena* arena, SubOrderModel&& from) noexcept
      : SubOrderModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 6,
    kInvoicePdfFieldNumber = 7,
    kDiscountIdFieldNumber = 8,
    kCreatedAtFieldNumber = 9,
    kUpdatedAtFieldNumber = 10,
    kCommentFieldNumber = 11,
    kIdFieldNumber = 1,
    kOriginalSubtotalFieldNumber = 2,
    kFinalSubtotalFieldNumber = 3,
    kToOrganizationIdFieldNumber = 4,
    kFromOrganizationIdFieldNumber = 5,
    kOrderIndexFieldNumber = 12,
  };
  // optional string status = 6;
  bool has_status() const;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // optional string invoice_pdf = 7;
  bool has_invoice_pdf() const;
  void clear_invoice_pdf() ;
  const std::string& invoice_pdf() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_invoice_pdf(Arg_&& arg, Args_... args);
  std::string* mutable_invoice_pdf();
  PROTOBUF_NODISCARD std::string* release_invoice_pdf();
  void set_allocated_invoice_pdf(std::string* value);

  private:
  const std::string& _internal_invoice_pdf() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_invoice_pdf(
      const std::string& value);
  std::string* _internal_mutable_invoice_pdf();

  public:
  // optional string discount_id = 8;
  bool has_discount_id() const;
  void clear_discount_id() ;
  const std::string& discount_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_discount_id(Arg_&& arg, Args_... args);
  std::string* mutable_discount_id();
  PROTOBUF_NODISCARD std::string* release_discount_id();
  void set_allocated_discount_id(std::string* value);

  private:
  const std::string& _internal_discount_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_discount_id(
      const std::string& value);
  std::string* _internal_mutable_discount_id();

  public:
  // optional string created_at = 9;
  bool has_created_at() const;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // optional string updated_at = 10;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // optional string comment = 11;
  bool has_comment() const;
  void clear_comment() ;
  const std::string& comment() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_comment(Arg_&& arg, Args_... args);
  std::string* mutable_comment();
  PROTOBUF_NODISCARD std::string* release_comment();
  void set_allocated_comment(std::string* value);

  private:
  const std::string& _internal_comment() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_comment(
      const std::string& value);
  std::string* _internal_mutable_comment();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // float original_subtotal = 2;
  void clear_original_subtotal() ;
  float original_subtotal() const;
  void set_original_subtotal(float value);

  private:
  float _internal_original_subtotal() const;
  void _internal_set_original_subtotal(float value);

  public:
  // float final_subtotal = 3;
  void clear_final_subtotal() ;
  float final_subtotal() const;
  void set_final_subtotal(float value);

  private:
  float _internal_final_subtotal() const;
  void _internal_set_final_subtotal(float value);

  public:
  // int64 to_organization_id = 4;
  void clear_to_organization_id() ;
  ::int64_t to_organization_id() const;
  void set_to_organization_id(::int64_t value);

  private:
  ::int64_t _internal_to_organization_id() const;
  void _internal_set_to_organization_id(::int64_t value);

  public:
  // int64 from_organization_id = 5;
  void clear_from_organization_id() ;
  ::int64_t from_organization_id() const;
  void set_from_organization_id(::int64_t value);

  private:
  ::int64_t _internal_from_organization_id() const;
  void _internal_set_from_organization_id(::int64_t value);

  public:
  // int64 order_index = 12;
  void clear_order_index() ;
  ::int64_t order_index() const;
  void set_order_index(::int64_t value);

  private:
  ::int64_t _internal_order_index() const;
  void _internal_set_order_index(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:order.SubOrderModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 0,
      91, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubOrderModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::google::protobuf::internal::ArenaStringPtr invoice_pdf_;
    ::google::protobuf::internal::ArenaStringPtr discount_id_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::google::protobuf::internal::ArenaStringPtr comment_;
    ::int64_t id_;
    float original_subtotal_;
    float final_subtotal_;
    ::int64_t to_organization_id_;
    ::int64_t from_organization_id_;
    ::int64_t order_index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class OrderModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.OrderModel) */ {
 public:
  inline OrderModel() : OrderModel(nullptr) {}
  ~OrderModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrderModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrderModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderModel(const OrderModel& from) : OrderModel(nullptr, from) {}
  inline OrderModel(OrderModel&& from) noexcept
      : OrderModel(nullptr, std::move(from)) {}
  inline OrderModel& operator=(const OrderModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderModel& operator=(OrderModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderModel* internal_default_instance() {
    return reinterpret_cast<const OrderModel*>(
        &_OrderModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(OrderModel& a, OrderModel& b) { a.Swap(&b); }
  inline void Swap(OrderModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrderModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderModel& from) { OrderModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrderModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.OrderModel"; }

 protected:
  explicit OrderModel(::google::protobuf::Arena* arena);
  OrderModel(::google::protobuf::Arena* arena, const OrderModel& from);
  OrderModel(::google::protobuf::Arena* arena, OrderModel&& from) noexcept
      : OrderModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 3,
    kCreatedAtFieldNumber = 8,
    kUpdatedAtFieldNumber = 9,
    kIdFieldNumber = 1,
    kCreatedByFieldNumber = 2,
    kOriginalTotalFieldNumber = 4,
    kFinalTotalFieldNumber = 5,
    kFromOrganizationIdFieldNumber = 6,
    kDiscountIdFieldNumber = 7,
  };
  // string status = 3;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // optional string created_at = 8;
  bool has_created_at() const;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // optional string updated_at = 9;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 created_by = 2;
  void clear_created_by() ;
  ::int64_t created_by() const;
  void set_created_by(::int64_t value);

  private:
  ::int64_t _internal_created_by() const;
  void _internal_set_created_by(::int64_t value);

  public:
  // float original_total = 4;
  void clear_original_total() ;
  float original_total() const;
  void set_original_total(float value);

  private:
  float _internal_original_total() const;
  void _internal_set_original_total(float value);

  public:
  // float final_total = 5;
  void clear_final_total() ;
  float final_total() const;
  void set_final_total(float value);

  private:
  float _internal_final_total() const;
  void _internal_set_final_total(float value);

  public:
  // int64 from_organization_id = 6;
  void clear_from_organization_id() ;
  ::int64_t from_organization_id() const;
  void set_from_organization_id(::int64_t value);

  private:
  ::int64_t _internal_from_organization_id() const;
  void _internal_set_from_organization_id(::int64_t value);

  public:
  // optional int64 discount_id = 7;
  bool has_discount_id() const;
  void clear_discount_id() ;
  ::int64_t discount_id() const;
  void set_discount_id(::int64_t value);

  private:
  ::int64_t _internal_discount_id() const;
  void _internal_set_discount_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:order.OrderModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::int64_t id_;
    ::int64_t created_by_;
    float original_total_;
    float final_total_;
    ::int64_t from_organization_id_;
    ::int64_t discount_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class OrderItemModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.OrderItemModel) */ {
 public:
  inline OrderItemModel() : OrderItemModel(nullptr) {}
  ~OrderItemModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrderItemModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrderItemModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderItemModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderItemModel(const OrderItemModel& from) : OrderItemModel(nullptr, from) {}
  inline OrderItemModel(OrderItemModel&& from) noexcept
      : OrderItemModel(nullptr, std::move(from)) {}
  inline OrderItemModel& operator=(const OrderItemModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderItemModel& operator=(OrderItemModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderItemModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderItemModel* internal_default_instance() {
    return reinterpret_cast<const OrderItemModel*>(
        &_OrderItemModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(OrderItemModel& a, OrderItemModel& b) { a.Swap(&b); }
  inline void Swap(OrderItemModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderItemModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderItemModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrderItemModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderItemModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderItemModel& from) { OrderItemModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrderItemModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.OrderItemModel"; }

 protected:
  explicit OrderItemModel(::google::protobuf::Arena* arena);
  OrderItemModel(::google::protobuf::Arena* arena, const OrderItemModel& from);
  OrderItemModel(::google::protobuf::Arena* arena, OrderItemModel&& from) noexcept
      : OrderItemModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCreatedAtFieldNumber = 9,
    kUpdatedAtFieldNumber = 10,
    kIdFieldNumber = 1,
    kSubOrderIdFieldNumber = 2,
    kProductIdFieldNumber = 3,
    kQuantityFieldNumber = 4,
    kOriginalPriceFieldNumber = 5,
    kDiscountIdFieldNumber = 7,
    kFinalPriceFieldNumber = 6,
  };
  // optional string created_at = 9;
  bool has_created_at() const;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // optional string updated_at = 10;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 sub_order_id = 2;
  void clear_sub_order_id() ;
  ::int64_t sub_order_id() const;
  void set_sub_order_id(::int64_t value);

  private:
  ::int64_t _internal_sub_order_id() const;
  void _internal_set_sub_order_id(::int64_t value);

  public:
  // int64 product_id = 3;
  void clear_product_id() ;
  ::int64_t product_id() const;
  void set_product_id(::int64_t value);

  private:
  ::int64_t _internal_product_id() const;
  void _internal_set_product_id(::int64_t value);

  public:
  // int32 quantity = 4;
  void clear_quantity() ;
  ::int32_t quantity() const;
  void set_quantity(::int32_t value);

  private:
  ::int32_t _internal_quantity() const;
  void _internal_set_quantity(::int32_t value);

  public:
  // float original_price = 5;
  void clear_original_price() ;
  float original_price() const;
  void set_original_price(float value);

  private:
  float _internal_original_price() const;
  void _internal_set_original_price(float value);

  public:
  // optional int64 discount_id = 7;
  bool has_discount_id() const;
  void clear_discount_id() ;
  ::int64_t discount_id() const;
  void set_discount_id(::int64_t value);

  private:
  ::int64_t _internal_discount_id() const;
  void _internal_set_discount_id(::int64_t value);

  public:
  // float final_price = 6;
  void clear_final_price() ;
  float final_price() const;
  void set_final_price(float value);

  private:
  float _internal_final_price() const;
  void _internal_set_final_price(float value);

  public:
  // @@protoc_insertion_point(class_scope:order.OrderItemModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      57, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderItemModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::int64_t id_;
    ::int64_t sub_order_id_;
    ::int64_t product_id_;
    ::int32_t quantity_;
    float original_price_;
    ::int64_t discount_id_;
    float final_price_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class ListSubOrderRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.ListSubOrderRequest) */ {
 public:
  inline ListSubOrderRequest() : ListSubOrderRequest(nullptr) {}
  ~ListSubOrderRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListSubOrderRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListSubOrderRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListSubOrderRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListSubOrderRequest(const ListSubOrderRequest& from) : ListSubOrderRequest(nullptr, from) {}
  inline ListSubOrderRequest(ListSubOrderRequest&& from) noexcept
      : ListSubOrderRequest(nullptr, std::move(from)) {}
  inline ListSubOrderRequest& operator=(const ListSubOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListSubOrderRequest& operator=(ListSubOrderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListSubOrderRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListSubOrderRequest* internal_default_instance() {
    return reinterpret_cast<const ListSubOrderRequest*>(
        &_ListSubOrderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(ListSubOrderRequest& a, ListSubOrderRequest& b) { a.Swap(&b); }
  inline void Swap(ListSubOrderRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListSubOrderRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListSubOrderRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListSubOrderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListSubOrderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListSubOrderRequest& from) { ListSubOrderRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListSubOrderRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.ListSubOrderRequest"; }

 protected:
  explicit ListSubOrderRequest(::google::protobuf::Arena* arena);
  ListSubOrderRequest(::google::protobuf::Arena* arena, const ListSubOrderRequest& from);
  ListSubOrderRequest(::google::protobuf::Arena* arena, ListSubOrderRequest&& from) noexcept
      : ListSubOrderRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 2,
    kCreatedByFieldNumber = 1,
    kLimitFieldNumber = 3,
    kOffsetFieldNumber = 4,
    kOrganizationIdFieldNumber = 5,
  };
  // string status = 2;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // int64 created_by = 1;
  void clear_created_by() ;
  ::int64_t created_by() const;
  void set_created_by(::int64_t value);

  private:
  ::int64_t _internal_created_by() const;
  void _internal_set_created_by(::int64_t value);

  public:
  // int64 limit = 3;
  void clear_limit() ;
  ::int64_t limit() const;
  void set_limit(::int64_t value);

  private:
  ::int64_t _internal_limit() const;
  void _internal_set_limit(::int64_t value);

  public:
  // int64 offset = 4;
  void clear_offset() ;
  ::int64_t offset() const;
  void set_offset(::int64_t value);

  private:
  ::int64_t _internal_offset() const;
  void _internal_set_offset(::int64_t value);

  public:
  // int64 organization_id = 5;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:order.ListSubOrderRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      40, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListSubOrderRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::int64_t created_by_;
    ::int64_t limit_;
    ::int64_t offset_;
    ::int64_t organization_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class ListCartRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.ListCartRequest) */ {
 public:
  inline ListCartRequest() : ListCartRequest(nullptr) {}
  ~ListCartRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListCartRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListCartRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListCartRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListCartRequest(const ListCartRequest& from) : ListCartRequest(nullptr, from) {}
  inline ListCartRequest(ListCartRequest&& from) noexcept
      : ListCartRequest(nullptr, std::move(from)) {}
  inline ListCartRequest& operator=(const ListCartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCartRequest& operator=(ListCartRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListCartRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListCartRequest* internal_default_instance() {
    return reinterpret_cast<const ListCartRequest*>(
        &_ListCartRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(ListCartRequest& a, ListCartRequest& b) { a.Swap(&b); }
  inline void Swap(ListCartRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCartRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListCartRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListCartRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListCartRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListCartRequest& from) { ListCartRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListCartRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.ListCartRequest"; }

 protected:
  explicit ListCartRequest(::google::protobuf::Arena* arena);
  ListCartRequest(::google::protobuf::Arena* arena, const ListCartRequest& from);
  ListCartRequest(::google::protobuf::Arena* arena, ListCartRequest&& from) noexcept
      : ListCartRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrganizationIdFieldNumber = 1,
  };
  // int64 organization_id = 1;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:order.ListCartRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListCartRequest& from_msg);
    ::int64_t organization_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class GetSubOrderRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.GetSubOrderRequest) */ {
 public:
  inline GetSubOrderRequest() : GetSubOrderRequest(nullptr) {}
  ~GetSubOrderRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSubOrderRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSubOrderRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSubOrderRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSubOrderRequest(const GetSubOrderRequest& from) : GetSubOrderRequest(nullptr, from) {}
  inline GetSubOrderRequest(GetSubOrderRequest&& from) noexcept
      : GetSubOrderRequest(nullptr, std::move(from)) {}
  inline GetSubOrderRequest& operator=(const GetSubOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSubOrderRequest& operator=(GetSubOrderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSubOrderRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSubOrderRequest* internal_default_instance() {
    return reinterpret_cast<const GetSubOrderRequest*>(
        &_GetSubOrderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(GetSubOrderRequest& a, GetSubOrderRequest& b) { a.Swap(&b); }
  inline void Swap(GetSubOrderRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSubOrderRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSubOrderRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSubOrderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSubOrderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSubOrderRequest& from) { GetSubOrderRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSubOrderRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.GetSubOrderRequest"; }

 protected:
  explicit GetSubOrderRequest(::google::protobuf::Arena* arena);
  GetSubOrderRequest(::google::protobuf::Arena* arena, const GetSubOrderRequest& from);
  GetSubOrderRequest(::google::protobuf::Arena* arena, GetSubOrderRequest&& from) noexcept
      : GetSubOrderRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:order.GetSubOrderRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSubOrderRequest& from_msg);
    ::int64_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class GetCountOfProductInCartResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.GetCountOfProductInCartResponse) */ {
 public:
  inline GetCountOfProductInCartResponse() : GetCountOfProductInCartResponse(nullptr) {}
  ~GetCountOfProductInCartResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetCountOfProductInCartResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetCountOfProductInCartResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCountOfProductInCartResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetCountOfProductInCartResponse(const GetCountOfProductInCartResponse& from) : GetCountOfProductInCartResponse(nullptr, from) {}
  inline GetCountOfProductInCartResponse(GetCountOfProductInCartResponse&& from) noexcept
      : GetCountOfProductInCartResponse(nullptr, std::move(from)) {}
  inline GetCountOfProductInCartResponse& operator=(const GetCountOfProductInCartResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCountOfProductInCartResponse& operator=(GetCountOfProductInCartResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCountOfProductInCartResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCountOfProductInCartResponse* internal_default_instance() {
    return reinterpret_cast<const GetCountOfProductInCartResponse*>(
        &_GetCountOfProductInCartResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(GetCountOfProductInCartResponse& a, GetCountOfProductInCartResponse& b) { a.Swap(&b); }
  inline void Swap(GetCountOfProductInCartResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCountOfProductInCartResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCountOfProductInCartResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetCountOfProductInCartResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCountOfProductInCartResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCountOfProductInCartResponse& from) { GetCountOfProductInCartResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetCountOfProductInCartResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.GetCountOfProductInCartResponse"; }

 protected:
  explicit GetCountOfProductInCartResponse(::google::protobuf::Arena* arena);
  GetCountOfProductInCartResponse(::google::protobuf::Arena* arena, const GetCountOfProductInCartResponse& from);
  GetCountOfProductInCartResponse(::google::protobuf::Arena* arena, GetCountOfProductInCartResponse&& from) noexcept
      : GetCountOfProductInCartResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCountFieldNumber = 1,
  };
  // int64 count = 1;
  void clear_count() ;
  ::int64_t count() const;
  void set_count(::int64_t value);

  private:
  ::int64_t _internal_count() const;
  void _internal_set_count(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:order.GetCountOfProductInCartResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetCountOfProductInCartResponse& from_msg);
    ::int64_t count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class GetCountOfProductInCartRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.GetCountOfProductInCartRequest) */ {
 public:
  inline GetCountOfProductInCartRequest() : GetCountOfProductInCartRequest(nullptr) {}
  ~GetCountOfProductInCartRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetCountOfProductInCartRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetCountOfProductInCartRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCountOfProductInCartRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetCountOfProductInCartRequest(const GetCountOfProductInCartRequest& from) : GetCountOfProductInCartRequest(nullptr, from) {}
  inline GetCountOfProductInCartRequest(GetCountOfProductInCartRequest&& from) noexcept
      : GetCountOfProductInCartRequest(nullptr, std::move(from)) {}
  inline GetCountOfProductInCartRequest& operator=(const GetCountOfProductInCartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCountOfProductInCartRequest& operator=(GetCountOfProductInCartRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCountOfProductInCartRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCountOfProductInCartRequest* internal_default_instance() {
    return reinterpret_cast<const GetCountOfProductInCartRequest*>(
        &_GetCountOfProductInCartRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(GetCountOfProductInCartRequest& a, GetCountOfProductInCartRequest& b) { a.Swap(&b); }
  inline void Swap(GetCountOfProductInCartRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCountOfProductInCartRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCountOfProductInCartRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetCountOfProductInCartRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCountOfProductInCartRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCountOfProductInCartRequest& from) { GetCountOfProductInCartRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetCountOfProductInCartRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.GetCountOfProductInCartRequest"; }

 protected:
  explicit GetCountOfProductInCartRequest(::google::protobuf::Arena* arena);
  GetCountOfProductInCartRequest(::google::protobuf::Arena* arena, const GetCountOfProductInCartRequest& from);
  GetCountOfProductInCartRequest(::google::protobuf::Arena* arena, GetCountOfProductInCartRequest&& from) noexcept
      : GetCountOfProductInCartRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrganizationIdFieldNumber = 1,
    kProductIdFieldNumber = 2,
  };
  // int64 organization_id = 1;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // int64 product_id = 2;
  void clear_product_id() ;
  ::int64_t product_id() const;
  void set_product_id(::int64_t value);

  private:
  ::int64_t _internal_product_id() const;
  void _internal_set_product_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:order.GetCountOfProductInCartRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetCountOfProductInCartRequest& from_msg);
    ::int64_t organization_id_;
    ::int64_t product_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class CreateOrderRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.CreateOrderRequest) */ {
 public:
  inline CreateOrderRequest() : CreateOrderRequest(nullptr) {}
  ~CreateOrderRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateOrderRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateOrderRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateOrderRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateOrderRequest(const CreateOrderRequest& from) : CreateOrderRequest(nullptr, from) {}
  inline CreateOrderRequest(CreateOrderRequest&& from) noexcept
      : CreateOrderRequest(nullptr, std::move(from)) {}
  inline CreateOrderRequest& operator=(const CreateOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateOrderRequest& operator=(CreateOrderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateOrderRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateOrderRequest* internal_default_instance() {
    return reinterpret_cast<const CreateOrderRequest*>(
        &_CreateOrderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(CreateOrderRequest& a, CreateOrderRequest& b) { a.Swap(&b); }
  inline void Swap(CreateOrderRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateOrderRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateOrderRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateOrderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateOrderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateOrderRequest& from) { CreateOrderRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateOrderRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.CreateOrderRequest"; }

 protected:
  explicit CreateOrderRequest(::google::protobuf::Arena* arena);
  CreateOrderRequest(::google::protobuf::Arena* arena, const CreateOrderRequest& from);
  CreateOrderRequest(::google::protobuf::Arena* arena, CreateOrderRequest&& from) noexcept
      : CreateOrderRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrganizationIdFieldNumber = 1,
  };
  // int64 organization_id = 1;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:order.CreateOrderRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateOrderRequest& from_msg);
    ::int64_t organization_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class CartModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.CartModel) */ {
 public:
  inline CartModel() : CartModel(nullptr) {}
  ~CartModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CartModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CartModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CartModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline CartModel(const CartModel& from) : CartModel(nullptr, from) {}
  inline CartModel(CartModel&& from) noexcept
      : CartModel(nullptr, std::move(from)) {}
  inline CartModel& operator=(const CartModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline CartModel& operator=(CartModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CartModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const CartModel* internal_default_instance() {
    return reinterpret_cast<const CartModel*>(
        &_CartModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CartModel& a, CartModel& b) { a.Swap(&b); }
  inline void Swap(CartModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CartModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CartModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CartModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CartModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CartModel& from) { CartModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CartModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.CartModel"; }

 protected:
  explicit CartModel(::google::protobuf::Arena* arena);
  CartModel(::google::protobuf::Arena* arena, const CartModel& from);
  CartModel(::google::protobuf::Arena* arena, CartModel&& from) noexcept
      : CartModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kOrganizationIdFieldNumber = 2,
  };
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 organization_id = 2;
  void clear_organization_id() ;
  ::int64_t organization_id() const;
  void set_organization_id(::int64_t value);

  private:
  ::int64_t _internal_organization_id() const;
  void _internal_set_organization_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:order.CartModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CartModel& from_msg);
    ::int64_t id_;
    ::int64_t organization_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class UpdateSubOrderResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.UpdateSubOrderResponse) */ {
 public:
  inline UpdateSubOrderResponse() : UpdateSubOrderResponse(nullptr) {}
  ~UpdateSubOrderResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateSubOrderResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateSubOrderResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSubOrderResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateSubOrderResponse(const UpdateSubOrderResponse& from) : UpdateSubOrderResponse(nullptr, from) {}
  inline UpdateSubOrderResponse(UpdateSubOrderResponse&& from) noexcept
      : UpdateSubOrderResponse(nullptr, std::move(from)) {}
  inline UpdateSubOrderResponse& operator=(const UpdateSubOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSubOrderResponse& operator=(UpdateSubOrderResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateSubOrderResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateSubOrderResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateSubOrderResponse*>(
        &_UpdateSubOrderResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(UpdateSubOrderResponse& a, UpdateSubOrderResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateSubOrderResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSubOrderResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateSubOrderResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateSubOrderResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateSubOrderResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateSubOrderResponse& from) { UpdateSubOrderResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateSubOrderResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.UpdateSubOrderResponse"; }

 protected:
  explicit UpdateSubOrderResponse(::google::protobuf::Arena* arena);
  UpdateSubOrderResponse(::google::protobuf::Arena* arena, const UpdateSubOrderResponse& from);
  UpdateSubOrderResponse(::google::protobuf::Arena* arena, UpdateSubOrderResponse&& from) noexcept
      : UpdateSubOrderResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuborderFieldNumber = 1,
  };
  // .order.SubOrderModel suborder = 1;
  bool has_suborder() const;
  void clear_suborder() ;
  const ::order::SubOrderModel& suborder() const;
  PROTOBUF_NODISCARD ::order::SubOrderModel* release_suborder();
  ::order::SubOrderModel* mutable_suborder();
  void set_allocated_suborder(::order::SubOrderModel* value);
  void unsafe_arena_set_allocated_suborder(::order::SubOrderModel* value);
  ::order::SubOrderModel* unsafe_arena_release_suborder();

  private:
  const ::order::SubOrderModel& _internal_suborder() const;
  ::order::SubOrderModel* _internal_mutable_suborder();

  public:
  // @@protoc_insertion_point(class_scope:order.UpdateSubOrderResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateSubOrderResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::order::SubOrderModel* suborder_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class OrderItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.OrderItem) */ {
 public:
  inline OrderItem() : OrderItem(nullptr) {}
  ~OrderItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrderItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrderItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderItem(const OrderItem& from) : OrderItem(nullptr, from) {}
  inline OrderItem(OrderItem&& from) noexcept
      : OrderItem(nullptr, std::move(from)) {}
  inline OrderItem& operator=(const OrderItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderItem& operator=(OrderItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderItem* internal_default_instance() {
    return reinterpret_cast<const OrderItem*>(
        &_OrderItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(OrderItem& a, OrderItem& b) { a.Swap(&b); }
  inline void Swap(OrderItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrderItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderItem& from) { OrderItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrderItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.OrderItem"; }

 protected:
  explicit OrderItem(::google::protobuf::Arena* arena);
  OrderItem(::google::protobuf::Arena* arena, const OrderItem& from);
  OrderItem(::google::protobuf::Arena* arena, OrderItem&& from) noexcept
      : OrderItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCreatedAtFieldNumber = 6,
    kUpdatedAtFieldNumber = 7,
    kProductFieldNumber = 2,
    kIdFieldNumber = 1,
    kQuantityFieldNumber = 3,
    kOriginalPriceFieldNumber = 4,
    kFinalPriceFieldNumber = 5,
  };
  // optional string created_at = 6;
  bool has_created_at() const;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // optional string updated_at = 7;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // .product.Product product = 2;
  bool has_product() const;
  void clear_product() ;
  const ::product::Product& product() const;
  PROTOBUF_NODISCARD ::product::Product* release_product();
  ::product::Product* mutable_product();
  void set_allocated_product(::product::Product* value);
  void unsafe_arena_set_allocated_product(::product::Product* value);
  ::product::Product* unsafe_arena_release_product();

  private:
  const ::product::Product& _internal_product() const;
  ::product::Product* _internal_mutable_product();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int32 quantity = 3;
  void clear_quantity() ;
  ::int32_t quantity() const;
  void set_quantity(::int32_t value);

  private:
  ::int32_t _internal_quantity() const;
  void _internal_set_quantity(::int32_t value);

  public:
  // float original_price = 4;
  void clear_original_price() ;
  float original_price() const;
  void set_original_price(float value);

  private:
  float _internal_original_price() const;
  void _internal_set_original_price(float value);

  public:
  // float final_price = 5;
  void clear_final_price() ;
  float final_price() const;
  void set_final_price(float value);

  private:
  float _internal_final_price() const;
  void _internal_set_final_price(float value);

  public:
  // @@protoc_insertion_point(class_scope:order.OrderItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      44, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderItem& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::product::Product* product_;
    ::int64_t id_;
    ::int32_t quantity_;
    float original_price_;
    float final_price_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class CartProducts final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.CartProducts) */ {
 public:
  inline CartProducts() : CartProducts(nullptr) {}
  ~CartProducts() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CartProducts* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CartProducts));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CartProducts(
      ::google::protobuf::internal::ConstantInitialized);

  inline CartProducts(const CartProducts& from) : CartProducts(nullptr, from) {}
  inline CartProducts(CartProducts&& from) noexcept
      : CartProducts(nullptr, std::move(from)) {}
  inline CartProducts& operator=(const CartProducts& from) {
    CopyFrom(from);
    return *this;
  }
  inline CartProducts& operator=(CartProducts&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CartProducts& default_instance() {
    return *internal_default_instance();
  }
  static inline const CartProducts* internal_default_instance() {
    return reinterpret_cast<const CartProducts*>(
        &_CartProducts_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CartProducts& a, CartProducts& b) { a.Swap(&b); }
  inline void Swap(CartProducts* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CartProducts* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CartProducts* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CartProducts>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CartProducts& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CartProducts& from) { CartProducts::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CartProducts* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.CartProducts"; }

 protected:
  explicit CartProducts(::google::protobuf::Arena* arena);
  CartProducts(::google::protobuf::Arena* arena, const CartProducts& from);
  CartProducts(::google::protobuf::Arena* arena, CartProducts&& from) noexcept
      : CartProducts(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductFieldNumber = 2,
    kIdFieldNumber = 1,
    kQuantityFieldNumber = 3,
  };
  // .product.Product product = 2;
  bool has_product() const;
  void clear_product() ;
  const ::product::Product& product() const;
  PROTOBUF_NODISCARD ::product::Product* release_product();
  ::product::Product* mutable_product();
  void set_allocated_product(::product::Product* value);
  void unsafe_arena_set_allocated_product(::product::Product* value);
  ::product::Product* unsafe_arena_release_product();

  private:
  const ::product::Product& _internal_product() const;
  ::product::Product* _internal_mutable_product();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 quantity = 3;
  void clear_quantity() ;
  ::int64_t quantity() const;
  void set_quantity(::int64_t value);

  private:
  ::int64_t _internal_quantity() const;
  void _internal_set_quantity(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:order.CartProducts)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CartProducts& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::product::Product* product_;
    ::int64_t id_;
    ::int64_t quantity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class UpdateSubOrderRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.UpdateSubOrderRequest) */ {
 public:
  inline UpdateSubOrderRequest() : UpdateSubOrderRequest(nullptr) {}
  ~UpdateSubOrderRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateSubOrderRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateSubOrderRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSubOrderRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateSubOrderRequest(const UpdateSubOrderRequest& from) : UpdateSubOrderRequest(nullptr, from) {}
  inline UpdateSubOrderRequest(UpdateSubOrderRequest&& from) noexcept
      : UpdateSubOrderRequest(nullptr, std::move(from)) {}
  inline UpdateSubOrderRequest& operator=(const UpdateSubOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSubOrderRequest& operator=(UpdateSubOrderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateSubOrderRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateSubOrderRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateSubOrderRequest*>(
        &_UpdateSubOrderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(UpdateSubOrderRequest& a, UpdateSubOrderRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateSubOrderRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSubOrderRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateSubOrderRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateSubOrderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateSubOrderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateSubOrderRequest& from) { UpdateSubOrderRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateSubOrderRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.UpdateSubOrderRequest"; }

 protected:
  explicit UpdateSubOrderRequest(::google::protobuf::Arena* arena);
  UpdateSubOrderRequest(::google::protobuf::Arena* arena, const UpdateSubOrderRequest& from);
  UpdateSubOrderRequest(::google::protobuf::Arena* arena, UpdateSubOrderRequest&& from) noexcept
      : UpdateSubOrderRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrderItemsFieldNumber = 5,
    kInvoicePdfFieldNumber = 4,
    kStatusFieldNumber = 6,
    kIdFieldNumber = 1,
    kOriginalTotalFieldNumber = 2,
    kFinalTotalFieldNumber = 3,
    kOrderIndexFieldNumber = 7,
  };
  // repeated .order.OrderItem order_items = 5;
  int order_items_size() const;
  private:
  int _internal_order_items_size() const;

  public:
  void clear_order_items() ;
  ::order::OrderItem* mutable_order_items(int index);
  ::google::protobuf::RepeatedPtrField<::order::OrderItem>* mutable_order_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::order::OrderItem>& _internal_order_items() const;
  ::google::protobuf::RepeatedPtrField<::order::OrderItem>* _internal_mutable_order_items();
  public:
  const ::order::OrderItem& order_items(int index) const;
  ::order::OrderItem* add_order_items();
  const ::google::protobuf::RepeatedPtrField<::order::OrderItem>& order_items() const;
  // string invoice_pdf = 4;
  void clear_invoice_pdf() ;
  const std::string& invoice_pdf() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_invoice_pdf(Arg_&& arg, Args_... args);
  std::string* mutable_invoice_pdf();
  PROTOBUF_NODISCARD std::string* release_invoice_pdf();
  void set_allocated_invoice_pdf(std::string* value);

  private:
  const std::string& _internal_invoice_pdf() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_invoice_pdf(
      const std::string& value);
  std::string* _internal_mutable_invoice_pdf();

  public:
  // string status = 6;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // float original_total = 2;
  void clear_original_total() ;
  float original_total() const;
  void set_original_total(float value);

  private:
  float _internal_original_total() const;
  void _internal_set_original_total(float value);

  public:
  // float final_total = 3;
  void clear_final_total() ;
  float final_total() const;
  void set_final_total(float value);

  private:
  float _internal_final_total() const;
  void _internal_set_final_total(float value);

  public:
  // int64 order_index = 7;
  void clear_order_index() ;
  ::int64_t order_index() const;
  void set_order_index(::int64_t value);

  private:
  ::int64_t _internal_order_index() const;
  void _internal_set_order_index(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:order.UpdateSubOrderRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      53, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateSubOrderRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::order::OrderItem > order_items_;
    ::google::protobuf::internal::ArenaStringPtr invoice_pdf_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::int64_t id_;
    float original_total_;
    float final_total_;
    ::int64_t order_index_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class SubOrder final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.SubOrder) */ {
 public:
  inline SubOrder() : SubOrder(nullptr) {}
  ~SubOrder() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubOrder* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubOrder));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubOrder(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubOrder(const SubOrder& from) : SubOrder(nullptr, from) {}
  inline SubOrder(SubOrder&& from) noexcept
      : SubOrder(nullptr, std::move(from)) {}
  inline SubOrder& operator=(const SubOrder& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubOrder& operator=(SubOrder&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubOrder& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubOrder* internal_default_instance() {
    return reinterpret_cast<const SubOrder*>(
        &_SubOrder_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(SubOrder& a, SubOrder& b) { a.Swap(&b); }
  inline void Swap(SubOrder* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubOrder* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubOrder* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubOrder>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubOrder& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubOrder& from) { SubOrder::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubOrder* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.SubOrder"; }

 protected:
  explicit SubOrder(::google::protobuf::Arena* arena);
  SubOrder(::google::protobuf::Arena* arena, const SubOrder& from);
  SubOrder(::google::protobuf::Arena* arena, SubOrder&& from) noexcept
      : SubOrder(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrderItemsFieldNumber = 2,
    kStatusFieldNumber = 7,
    kInvoicePdfFieldNumber = 8,
    kCreatedAtFieldNumber = 9,
    kUpdatedAtFieldNumber = 10,
    kCommentFieldNumber = 11,
    kToOrganizationFieldNumber = 5,
    kFromOrganizationFieldNumber = 6,
    kIdFieldNumber = 1,
    kOriginalSubtotalFieldNumber = 3,
    kFinalSubtotalFieldNumber = 4,
    kOrderIndexFieldNumber = 13,
    kIsSaleOutsideFieldNumber = 12,
  };
  // repeated .order.OrderItem order_items = 2;
  int order_items_size() const;
  private:
  int _internal_order_items_size() const;

  public:
  void clear_order_items() ;
  ::order::OrderItem* mutable_order_items(int index);
  ::google::protobuf::RepeatedPtrField<::order::OrderItem>* mutable_order_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::order::OrderItem>& _internal_order_items() const;
  ::google::protobuf::RepeatedPtrField<::order::OrderItem>* _internal_mutable_order_items();
  public:
  const ::order::OrderItem& order_items(int index) const;
  ::order::OrderItem* add_order_items();
  const ::google::protobuf::RepeatedPtrField<::order::OrderItem>& order_items() const;
  // optional string status = 7;
  bool has_status() const;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // optional string invoice_pdf = 8;
  bool has_invoice_pdf() const;
  void clear_invoice_pdf() ;
  const std::string& invoice_pdf() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_invoice_pdf(Arg_&& arg, Args_... args);
  std::string* mutable_invoice_pdf();
  PROTOBUF_NODISCARD std::string* release_invoice_pdf();
  void set_allocated_invoice_pdf(std::string* value);

  private:
  const std::string& _internal_invoice_pdf() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_invoice_pdf(
      const std::string& value);
  std::string* _internal_mutable_invoice_pdf();

  public:
  // optional string created_at = 9;
  bool has_created_at() const;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // optional string updated_at = 10;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // optional string comment = 11;
  bool has_comment() const;
  void clear_comment() ;
  const std::string& comment() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_comment(Arg_&& arg, Args_... args);
  std::string* mutable_comment();
  PROTOBUF_NODISCARD std::string* release_comment();
  void set_allocated_comment(std::string* value);

  private:
  const std::string& _internal_comment() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_comment(
      const std::string& value);
  std::string* _internal_mutable_comment();

  public:
  // .organization.Organization to_organization = 5;
  bool has_to_organization() const;
  void clear_to_organization() ;
  const ::organization::Organization& to_organization() const;
  PROTOBUF_NODISCARD ::organization::Organization* release_to_organization();
  ::organization::Organization* mutable_to_organization();
  void set_allocated_to_organization(::organization::Organization* value);
  void unsafe_arena_set_allocated_to_organization(::organization::Organization* value);
  ::organization::Organization* unsafe_arena_release_to_organization();

  private:
  const ::organization::Organization& _internal_to_organization() const;
  ::organization::Organization* _internal_mutable_to_organization();

  public:
  // .organization.Organization from_organization = 6;
  bool has_from_organization() const;
  void clear_from_organization() ;
  const ::organization::Organization& from_organization() const;
  PROTOBUF_NODISCARD ::organization::Organization* release_from_organization();
  ::organization::Organization* mutable_from_organization();
  void set_allocated_from_organization(::organization::Organization* value);
  void unsafe_arena_set_allocated_from_organization(::organization::Organization* value);
  ::organization::Organization* unsafe_arena_release_from_organization();

  private:
  const ::organization::Organization& _internal_from_organization() const;
  ::organization::Organization* _internal_mutable_from_organization();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // float original_subtotal = 3;
  void clear_original_subtotal() ;
  float original_subtotal() const;
  void set_original_subtotal(float value);

  private:
  float _internal_original_subtotal() const;
  void _internal_set_original_subtotal(float value);

  public:
  // float final_subtotal = 4;
  void clear_final_subtotal() ;
  float final_subtotal() const;
  void set_final_subtotal(float value);

  private:
  float _internal_final_subtotal() const;
  void _internal_set_final_subtotal(float value);

  public:
  // int64 order_index = 13;
  void clear_order_index() ;
  ::int64_t order_index() const;
  void set_order_index(::int64_t value);

  private:
  ::int64_t _internal_order_index() const;
  void _internal_set_order_index(::int64_t value);

  public:
  // bool is_sale_outside = 12;
  void clear_is_sale_outside() ;
  bool is_sale_outside() const;
  void set_is_sale_outside(bool value);

  private:
  bool _internal_is_sale_outside() const;
  void _internal_set_is_sale_outside(bool value);

  public:
  // @@protoc_insertion_point(class_scope:order.SubOrder)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 13, 3,
      75, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubOrder& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::order::OrderItem > order_items_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::google::protobuf::internal::ArenaStringPtr invoice_pdf_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::google::protobuf::internal::ArenaStringPtr comment_;
    ::organization::Organization* to_organization_;
    ::organization::Organization* from_organization_;
    ::int64_t id_;
    float original_subtotal_;
    float final_subtotal_;
    ::int64_t order_index_;
    bool is_sale_outside_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class Cart final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.Cart) */ {
 public:
  inline Cart() : Cart(nullptr) {}
  ~Cart() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Cart* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Cart));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Cart(
      ::google::protobuf::internal::ConstantInitialized);

  inline Cart(const Cart& from) : Cart(nullptr, from) {}
  inline Cart(Cart&& from) noexcept
      : Cart(nullptr, std::move(from)) {}
  inline Cart& operator=(const Cart& from) {
    CopyFrom(from);
    return *this;
  }
  inline Cart& operator=(Cart&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Cart& default_instance() {
    return *internal_default_instance();
  }
  static inline const Cart* internal_default_instance() {
    return reinterpret_cast<const Cart*>(
        &_Cart_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Cart& a, Cart& b) { a.Swap(&b); }
  inline void Swap(Cart* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Cart* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Cart* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Cart>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Cart& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Cart& from) { Cart::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Cart* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.Cart"; }

 protected:
  explicit Cart(::google::protobuf::Arena* arena);
  Cart(::google::protobuf::Arena* arena, const Cart& from);
  Cart(::google::protobuf::Arena* arena, Cart&& from) noexcept
      : Cart(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductsFieldNumber = 3,
    kOrganizationFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // repeated .order.CartProducts products = 3;
  int products_size() const;
  private:
  int _internal_products_size() const;

  public:
  void clear_products() ;
  ::order::CartProducts* mutable_products(int index);
  ::google::protobuf::RepeatedPtrField<::order::CartProducts>* mutable_products();

  private:
  const ::google::protobuf::RepeatedPtrField<::order::CartProducts>& _internal_products() const;
  ::google::protobuf::RepeatedPtrField<::order::CartProducts>* _internal_mutable_products();
  public:
  const ::order::CartProducts& products(int index) const;
  ::order::CartProducts* add_products();
  const ::google::protobuf::RepeatedPtrField<::order::CartProducts>& products() const;
  // .organization.Organization organization = 2;
  bool has_organization() const;
  void clear_organization() ;
  const ::organization::Organization& organization() const;
  PROTOBUF_NODISCARD ::organization::Organization* release_organization();
  ::organization::Organization* mutable_organization();
  void set_allocated_organization(::organization::Organization* value);
  void unsafe_arena_set_allocated_organization(::organization::Organization* value);
  ::organization::Organization* unsafe_arena_release_organization();

  private:
  const ::organization::Organization& _internal_organization() const;
  ::organization::Organization* _internal_mutable_organization();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:order.Cart)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Cart& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::order::CartProducts > products_;
    ::organization::Organization* organization_;
    ::int64_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class Order final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.Order) */ {
 public:
  inline Order() : Order(nullptr) {}
  ~Order() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Order* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Order));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Order(
      ::google::protobuf::internal::ConstantInitialized);

  inline Order(const Order& from) : Order(nullptr, from) {}
  inline Order(Order&& from) noexcept
      : Order(nullptr, std::move(from)) {}
  inline Order& operator=(const Order& from) {
    CopyFrom(from);
    return *this;
  }
  inline Order& operator=(Order&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Order& default_instance() {
    return *internal_default_instance();
  }
  static inline const Order* internal_default_instance() {
    return reinterpret_cast<const Order*>(
        &_Order_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(Order& a, Order& b) { a.Swap(&b); }
  inline void Swap(Order* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Order* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Order* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Order>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Order& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Order& from) { Order::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Order* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.Order"; }

 protected:
  explicit Order(::google::protobuf::Arena* arena);
  Order(::google::protobuf::Arena* arena, const Order& from);
  Order(::google::protobuf::Arena* arena, Order&& from) noexcept
      : Order(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubordersFieldNumber = 9,
    kStatusFieldNumber = 3,
    kCreatedAtFieldNumber = 7,
    kUpdatedAtFieldNumber = 8,
    kFromOrganizationFieldNumber = 6,
    kIdFieldNumber = 1,
    kCreatedByFieldNumber = 2,
    kOriginalTotalFieldNumber = 4,
    kFinalTotalFieldNumber = 5,
  };
  // repeated .order.SubOrder suborders = 9;
  int suborders_size() const;
  private:
  int _internal_suborders_size() const;

  public:
  void clear_suborders() ;
  ::order::SubOrder* mutable_suborders(int index);
  ::google::protobuf::RepeatedPtrField<::order::SubOrder>* mutable_suborders();

  private:
  const ::google::protobuf::RepeatedPtrField<::order::SubOrder>& _internal_suborders() const;
  ::google::protobuf::RepeatedPtrField<::order::SubOrder>* _internal_mutable_suborders();
  public:
  const ::order::SubOrder& suborders(int index) const;
  ::order::SubOrder* add_suborders();
  const ::google::protobuf::RepeatedPtrField<::order::SubOrder>& suborders() const;
  // string status = 3;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // optional string created_at = 7;
  bool has_created_at() const;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // optional string updated_at = 8;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // .organization.Organization from_organization = 6;
  bool has_from_organization() const;
  void clear_from_organization() ;
  const ::organization::Organization& from_organization() const;
  PROTOBUF_NODISCARD ::organization::Organization* release_from_organization();
  ::organization::Organization* mutable_from_organization();
  void set_allocated_from_organization(::organization::Organization* value);
  void unsafe_arena_set_allocated_from_organization(::organization::Organization* value);
  ::organization::Organization* unsafe_arena_release_from_organization();

  private:
  const ::organization::Organization& _internal_from_organization() const;
  ::organization::Organization* _internal_mutable_from_organization();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 created_by = 2;
  void clear_created_by() ;
  ::int64_t created_by() const;
  void set_created_by(::int64_t value);

  private:
  ::int64_t _internal_created_by() const;
  void _internal_set_created_by(::int64_t value);

  public:
  // float original_total = 4;
  void clear_original_total() ;
  float original_total() const;
  void set_original_total(float value);

  private:
  float _internal_original_total() const;
  void _internal_set_original_total(float value);

  public:
  // float final_total = 5;
  void clear_final_total() ;
  float final_total() const;
  void set_final_total(float value);

  private:
  float _internal_final_total() const;
  void _internal_set_final_total(float value);

  public:
  // @@protoc_insertion_point(class_scope:order.Order)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 2,
      54, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Order& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::order::SubOrder > suborders_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::organization::Organization* from_organization_;
    ::int64_t id_;
    ::int64_t created_by_;
    float original_total_;
    float final_total_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class ListSubOrderResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.ListSubOrderResponse) */ {
 public:
  inline ListSubOrderResponse() : ListSubOrderResponse(nullptr) {}
  ~ListSubOrderResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListSubOrderResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListSubOrderResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListSubOrderResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListSubOrderResponse(const ListSubOrderResponse& from) : ListSubOrderResponse(nullptr, from) {}
  inline ListSubOrderResponse(ListSubOrderResponse&& from) noexcept
      : ListSubOrderResponse(nullptr, std::move(from)) {}
  inline ListSubOrderResponse& operator=(const ListSubOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListSubOrderResponse& operator=(ListSubOrderResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListSubOrderResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListSubOrderResponse* internal_default_instance() {
    return reinterpret_cast<const ListSubOrderResponse*>(
        &_ListSubOrderResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(ListSubOrderResponse& a, ListSubOrderResponse& b) { a.Swap(&b); }
  inline void Swap(ListSubOrderResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListSubOrderResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListSubOrderResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListSubOrderResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListSubOrderResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListSubOrderResponse& from) { ListSubOrderResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListSubOrderResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.ListSubOrderResponse"; }

 protected:
  explicit ListSubOrderResponse(::google::protobuf::Arena* arena);
  ListSubOrderResponse(::google::protobuf::Arena* arena, const ListSubOrderResponse& from);
  ListSubOrderResponse(::google::protobuf::Arena* arena, ListSubOrderResponse&& from) noexcept
      : ListSubOrderResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrdersFieldNumber = 1,
    kTotalCountFieldNumber = 2,
  };
  // repeated .order.SubOrder orders = 1;
  int orders_size() const;
  private:
  int _internal_orders_size() const;

  public:
  void clear_orders() ;
  ::order::SubOrder* mutable_orders(int index);
  ::google::protobuf::RepeatedPtrField<::order::SubOrder>* mutable_orders();

  private:
  const ::google::protobuf::RepeatedPtrField<::order::SubOrder>& _internal_orders() const;
  ::google::protobuf::RepeatedPtrField<::order::SubOrder>* _internal_mutable_orders();
  public:
  const ::order::SubOrder& orders(int index) const;
  ::order::SubOrder* add_orders();
  const ::google::protobuf::RepeatedPtrField<::order::SubOrder>& orders() const;
  // int64 total_count = 2;
  void clear_total_count() ;
  ::int64_t total_count() const;
  void set_total_count(::int64_t value);

  private:
  ::int64_t _internal_total_count() const;
  void _internal_set_total_count(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:order.ListSubOrderResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListSubOrderResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::order::SubOrder > orders_;
    ::int64_t total_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class ListCartResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.ListCartResponse) */ {
 public:
  inline ListCartResponse() : ListCartResponse(nullptr) {}
  ~ListCartResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListCartResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListCartResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListCartResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListCartResponse(const ListCartResponse& from) : ListCartResponse(nullptr, from) {}
  inline ListCartResponse(ListCartResponse&& from) noexcept
      : ListCartResponse(nullptr, std::move(from)) {}
  inline ListCartResponse& operator=(const ListCartResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCartResponse& operator=(ListCartResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListCartResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListCartResponse* internal_default_instance() {
    return reinterpret_cast<const ListCartResponse*>(
        &_ListCartResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(ListCartResponse& a, ListCartResponse& b) { a.Swap(&b); }
  inline void Swap(ListCartResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCartResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListCartResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListCartResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListCartResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListCartResponse& from) { ListCartResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListCartResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.ListCartResponse"; }

 protected:
  explicit ListCartResponse(::google::protobuf::Arena* arena);
  ListCartResponse(::google::protobuf::Arena* arena, const ListCartResponse& from);
  ListCartResponse(::google::protobuf::Arena* arena, ListCartResponse&& from) noexcept
      : ListCartResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCartFieldNumber = 1,
  };
  // .order.Cart cart = 1;
  bool has_cart() const;
  void clear_cart() ;
  const ::order::Cart& cart() const;
  PROTOBUF_NODISCARD ::order::Cart* release_cart();
  ::order::Cart* mutable_cart();
  void set_allocated_cart(::order::Cart* value);
  void unsafe_arena_set_allocated_cart(::order::Cart* value);
  ::order::Cart* unsafe_arena_release_cart();

  private:
  const ::order::Cart& _internal_cart() const;
  ::order::Cart* _internal_mutable_cart();

  public:
  // @@protoc_insertion_point(class_scope:order.ListCartResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListCartResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::order::Cart* cart_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class GetSubOrderResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.GetSubOrderResponse) */ {
 public:
  inline GetSubOrderResponse() : GetSubOrderResponse(nullptr) {}
  ~GetSubOrderResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSubOrderResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSubOrderResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSubOrderResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSubOrderResponse(const GetSubOrderResponse& from) : GetSubOrderResponse(nullptr, from) {}
  inline GetSubOrderResponse(GetSubOrderResponse&& from) noexcept
      : GetSubOrderResponse(nullptr, std::move(from)) {}
  inline GetSubOrderResponse& operator=(const GetSubOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSubOrderResponse& operator=(GetSubOrderResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSubOrderResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSubOrderResponse* internal_default_instance() {
    return reinterpret_cast<const GetSubOrderResponse*>(
        &_GetSubOrderResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(GetSubOrderResponse& a, GetSubOrderResponse& b) { a.Swap(&b); }
  inline void Swap(GetSubOrderResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSubOrderResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSubOrderResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSubOrderResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSubOrderResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSubOrderResponse& from) { GetSubOrderResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSubOrderResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.GetSubOrderResponse"; }

 protected:
  explicit GetSubOrderResponse(::google::protobuf::Arena* arena);
  GetSubOrderResponse(::google::protobuf::Arena* arena, const GetSubOrderResponse& from);
  GetSubOrderResponse(::google::protobuf::Arena* arena, GetSubOrderResponse&& from) noexcept
      : GetSubOrderResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubOrderFieldNumber = 1,
  };
  // .order.SubOrder sub_order = 1;
  bool has_sub_order() const;
  void clear_sub_order() ;
  const ::order::SubOrder& sub_order() const;
  PROTOBUF_NODISCARD ::order::SubOrder* release_sub_order();
  ::order::SubOrder* mutable_sub_order();
  void set_allocated_sub_order(::order::SubOrder* value);
  void unsafe_arena_set_allocated_sub_order(::order::SubOrder* value);
  ::order::SubOrder* unsafe_arena_release_sub_order();

  private:
  const ::order::SubOrder& _internal_sub_order() const;
  ::order::SubOrder* _internal_mutable_sub_order();

  public:
  // @@protoc_insertion_point(class_scope:order.GetSubOrderResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSubOrderResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::order::SubOrder* sub_order_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class DeleteProductFromCartResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.DeleteProductFromCartResponse) */ {
 public:
  inline DeleteProductFromCartResponse() : DeleteProductFromCartResponse(nullptr) {}
  ~DeleteProductFromCartResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteProductFromCartResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteProductFromCartResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteProductFromCartResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteProductFromCartResponse(const DeleteProductFromCartResponse& from) : DeleteProductFromCartResponse(nullptr, from) {}
  inline DeleteProductFromCartResponse(DeleteProductFromCartResponse&& from) noexcept
      : DeleteProductFromCartResponse(nullptr, std::move(from)) {}
  inline DeleteProductFromCartResponse& operator=(const DeleteProductFromCartResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteProductFromCartResponse& operator=(DeleteProductFromCartResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteProductFromCartResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteProductFromCartResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteProductFromCartResponse*>(
        &_DeleteProductFromCartResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(DeleteProductFromCartResponse& a, DeleteProductFromCartResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteProductFromCartResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteProductFromCartResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteProductFromCartResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteProductFromCartResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteProductFromCartResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteProductFromCartResponse& from) { DeleteProductFromCartResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteProductFromCartResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.DeleteProductFromCartResponse"; }

 protected:
  explicit DeleteProductFromCartResponse(::google::protobuf::Arena* arena);
  DeleteProductFromCartResponse(::google::protobuf::Arena* arena, const DeleteProductFromCartResponse& from);
  DeleteProductFromCartResponse(::google::protobuf::Arena* arena, DeleteProductFromCartResponse&& from) noexcept
      : DeleteProductFromCartResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCartFieldNumber = 1,
  };
  // .order.Cart cart = 1;
  bool has_cart() const;
  void clear_cart() ;
  const ::order::Cart& cart() const;
  PROTOBUF_NODISCARD ::order::Cart* release_cart();
  ::order::Cart* mutable_cart();
  void set_allocated_cart(::order::Cart* value);
  void unsafe_arena_set_allocated_cart(::order::Cart* value);
  ::order::Cart* unsafe_arena_release_cart();

  private:
  const ::order::Cart& _internal_cart() const;
  ::order::Cart* _internal_mutable_cart();

  public:
  // @@protoc_insertion_point(class_scope:order.DeleteProductFromCartResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteProductFromCartResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::order::Cart* cart_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class DeleteProductFromCartRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.DeleteProductFromCartRequest) */ {
 public:
  inline DeleteProductFromCartRequest() : DeleteProductFromCartRequest(nullptr) {}
  ~DeleteProductFromCartRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteProductFromCartRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteProductFromCartRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteProductFromCartRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteProductFromCartRequest(const DeleteProductFromCartRequest& from) : DeleteProductFromCartRequest(nullptr, from) {}
  inline DeleteProductFromCartRequest(DeleteProductFromCartRequest&& from) noexcept
      : DeleteProductFromCartRequest(nullptr, std::move(from)) {}
  inline DeleteProductFromCartRequest& operator=(const DeleteProductFromCartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteProductFromCartRequest& operator=(DeleteProductFromCartRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteProductFromCartRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteProductFromCartRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteProductFromCartRequest*>(
        &_DeleteProductFromCartRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(DeleteProductFromCartRequest& a, DeleteProductFromCartRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteProductFromCartRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteProductFromCartRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteProductFromCartRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteProductFromCartRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteProductFromCartRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteProductFromCartRequest& from) { DeleteProductFromCartRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteProductFromCartRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.DeleteProductFromCartRequest"; }

 protected:
  explicit DeleteProductFromCartRequest(::google::protobuf::Arena* arena);
  DeleteProductFromCartRequest(::google::protobuf::Arena* arena, const DeleteProductFromCartRequest& from);
  DeleteProductFromCartRequest(::google::protobuf::Arena* arena, DeleteProductFromCartRequest&& from) noexcept
      : DeleteProductFromCartRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCartFieldNumber = 1,
  };
  // .order.Cart cart = 1;
  bool has_cart() const;
  void clear_cart() ;
  const ::order::Cart& cart() const;
  PROTOBUF_NODISCARD ::order::Cart* release_cart();
  ::order::Cart* mutable_cart();
  void set_allocated_cart(::order::Cart* value);
  void unsafe_arena_set_allocated_cart(::order::Cart* value);
  ::order::Cart* unsafe_arena_release_cart();

  private:
  const ::order::Cart& _internal_cart() const;
  ::order::Cart* _internal_mutable_cart();

  public:
  // @@protoc_insertion_point(class_scope:order.DeleteProductFromCartRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteProductFromCartRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::order::Cart* cart_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class CreateSubOrderResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.CreateSubOrderResponse) */ {
 public:
  inline CreateSubOrderResponse() : CreateSubOrderResponse(nullptr) {}
  ~CreateSubOrderResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateSubOrderResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateSubOrderResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateSubOrderResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateSubOrderResponse(const CreateSubOrderResponse& from) : CreateSubOrderResponse(nullptr, from) {}
  inline CreateSubOrderResponse(CreateSubOrderResponse&& from) noexcept
      : CreateSubOrderResponse(nullptr, std::move(from)) {}
  inline CreateSubOrderResponse& operator=(const CreateSubOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSubOrderResponse& operator=(CreateSubOrderResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateSubOrderResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateSubOrderResponse* internal_default_instance() {
    return reinterpret_cast<const CreateSubOrderResponse*>(
        &_CreateSubOrderResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(CreateSubOrderResponse& a, CreateSubOrderResponse& b) { a.Swap(&b); }
  inline void Swap(CreateSubOrderResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSubOrderResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateSubOrderResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateSubOrderResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateSubOrderResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateSubOrderResponse& from) { CreateSubOrderResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateSubOrderResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.CreateSubOrderResponse"; }

 protected:
  explicit CreateSubOrderResponse(::google::protobuf::Arena* arena);
  CreateSubOrderResponse(::google::protobuf::Arena* arena, const CreateSubOrderResponse& from);
  CreateSubOrderResponse(::google::protobuf::Arena* arena, CreateSubOrderResponse&& from) noexcept
      : CreateSubOrderResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubOrderFieldNumber = 1,
  };
  // .order.SubOrder sub_order = 1;
  bool has_sub_order() const;
  void clear_sub_order() ;
  const ::order::SubOrder& sub_order() const;
  PROTOBUF_NODISCARD ::order::SubOrder* release_sub_order();
  ::order::SubOrder* mutable_sub_order();
  void set_allocated_sub_order(::order::SubOrder* value);
  void unsafe_arena_set_allocated_sub_order(::order::SubOrder* value);
  ::order::SubOrder* unsafe_arena_release_sub_order();

  private:
  const ::order::SubOrder& _internal_sub_order() const;
  ::order::SubOrder* _internal_mutable_sub_order();

  public:
  // @@protoc_insertion_point(class_scope:order.CreateSubOrderResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateSubOrderResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::order::SubOrder* sub_order_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class CreateSubOrderRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.CreateSubOrderRequest) */ {
 public:
  inline CreateSubOrderRequest() : CreateSubOrderRequest(nullptr) {}
  ~CreateSubOrderRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateSubOrderRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateSubOrderRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateSubOrderRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateSubOrderRequest(const CreateSubOrderRequest& from) : CreateSubOrderRequest(nullptr, from) {}
  inline CreateSubOrderRequest(CreateSubOrderRequest&& from) noexcept
      : CreateSubOrderRequest(nullptr, std::move(from)) {}
  inline CreateSubOrderRequest& operator=(const CreateSubOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSubOrderRequest& operator=(CreateSubOrderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateSubOrderRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateSubOrderRequest* internal_default_instance() {
    return reinterpret_cast<const CreateSubOrderRequest*>(
        &_CreateSubOrderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(CreateSubOrderRequest& a, CreateSubOrderRequest& b) { a.Swap(&b); }
  inline void Swap(CreateSubOrderRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSubOrderRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateSubOrderRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateSubOrderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateSubOrderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateSubOrderRequest& from) { CreateSubOrderRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateSubOrderRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.CreateSubOrderRequest"; }

 protected:
  explicit CreateSubOrderRequest(::google::protobuf::Arena* arena);
  CreateSubOrderRequest(::google::protobuf::Arena* arena, const CreateSubOrderRequest& from);
  CreateSubOrderRequest(::google::protobuf::Arena* arena, CreateSubOrderRequest&& from) noexcept
      : CreateSubOrderRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSaleTypeFieldNumber = 2,
    kSubOrderFieldNumber = 1,
  };
  // string sale_type = 2;
  void clear_sale_type() ;
  const std::string& sale_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sale_type(Arg_&& arg, Args_... args);
  std::string* mutable_sale_type();
  PROTOBUF_NODISCARD std::string* release_sale_type();
  void set_allocated_sale_type(std::string* value);

  private:
  const std::string& _internal_sale_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sale_type(
      const std::string& value);
  std::string* _internal_mutable_sale_type();

  public:
  // .order.SubOrder sub_order = 1;
  bool has_sub_order() const;
  void clear_sub_order() ;
  const ::order::SubOrder& sub_order() const;
  PROTOBUF_NODISCARD ::order::SubOrder* release_sub_order();
  ::order::SubOrder* mutable_sub_order();
  void set_allocated_sub_order(::order::SubOrder* value);
  void unsafe_arena_set_allocated_sub_order(::order::SubOrder* value);
  ::order::SubOrder* unsafe_arena_release_sub_order();

  private:
  const ::order::SubOrder& _internal_sub_order() const;
  ::order::SubOrder* _internal_mutable_sub_order();

  public:
  // @@protoc_insertion_point(class_scope:order.CreateSubOrderRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      45, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateSubOrderRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr sale_type_;
    ::order::SubOrder* sub_order_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class CreateOrderResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.CreateOrderResponse) */ {
 public:
  inline CreateOrderResponse() : CreateOrderResponse(nullptr) {}
  ~CreateOrderResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateOrderResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateOrderResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateOrderResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateOrderResponse(const CreateOrderResponse& from) : CreateOrderResponse(nullptr, from) {}
  inline CreateOrderResponse(CreateOrderResponse&& from) noexcept
      : CreateOrderResponse(nullptr, std::move(from)) {}
  inline CreateOrderResponse& operator=(const CreateOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateOrderResponse& operator=(CreateOrderResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateOrderResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateOrderResponse* internal_default_instance() {
    return reinterpret_cast<const CreateOrderResponse*>(
        &_CreateOrderResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(CreateOrderResponse& a, CreateOrderResponse& b) { a.Swap(&b); }
  inline void Swap(CreateOrderResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateOrderResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateOrderResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateOrderResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateOrderResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateOrderResponse& from) { CreateOrderResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateOrderResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.CreateOrderResponse"; }

 protected:
  explicit CreateOrderResponse(::google::protobuf::Arena* arena);
  CreateOrderResponse(::google::protobuf::Arena* arena, const CreateOrderResponse& from);
  CreateOrderResponse(::google::protobuf::Arena* arena, CreateOrderResponse&& from) noexcept
      : CreateOrderResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubordersFieldNumber = 1,
  };
  // repeated .order.SubOrder suborders = 1;
  int suborders_size() const;
  private:
  int _internal_suborders_size() const;

  public:
  void clear_suborders() ;
  ::order::SubOrder* mutable_suborders(int index);
  ::google::protobuf::RepeatedPtrField<::order::SubOrder>* mutable_suborders();

  private:
  const ::google::protobuf::RepeatedPtrField<::order::SubOrder>& _internal_suborders() const;
  ::google::protobuf::RepeatedPtrField<::order::SubOrder>* _internal_mutable_suborders();
  public:
  const ::order::SubOrder& suborders(int index) const;
  ::order::SubOrder* add_suborders();
  const ::google::protobuf::RepeatedPtrField<::order::SubOrder>& suborders() const;
  // @@protoc_insertion_point(class_scope:order.CreateOrderResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateOrderResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::order::SubOrder > suborders_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class AddProductToCartResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.AddProductToCartResponse) */ {
 public:
  inline AddProductToCartResponse() : AddProductToCartResponse(nullptr) {}
  ~AddProductToCartResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddProductToCartResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddProductToCartResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddProductToCartResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddProductToCartResponse(const AddProductToCartResponse& from) : AddProductToCartResponse(nullptr, from) {}
  inline AddProductToCartResponse(AddProductToCartResponse&& from) noexcept
      : AddProductToCartResponse(nullptr, std::move(from)) {}
  inline AddProductToCartResponse& operator=(const AddProductToCartResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddProductToCartResponse& operator=(AddProductToCartResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddProductToCartResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddProductToCartResponse* internal_default_instance() {
    return reinterpret_cast<const AddProductToCartResponse*>(
        &_AddProductToCartResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(AddProductToCartResponse& a, AddProductToCartResponse& b) { a.Swap(&b); }
  inline void Swap(AddProductToCartResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddProductToCartResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddProductToCartResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddProductToCartResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddProductToCartResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddProductToCartResponse& from) { AddProductToCartResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddProductToCartResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.AddProductToCartResponse"; }

 protected:
  explicit AddProductToCartResponse(::google::protobuf::Arena* arena);
  AddProductToCartResponse(::google::protobuf::Arena* arena, const AddProductToCartResponse& from);
  AddProductToCartResponse(::google::protobuf::Arena* arena, AddProductToCartResponse&& from) noexcept
      : AddProductToCartResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCartFieldNumber = 1,
  };
  // .order.Cart cart = 1;
  bool has_cart() const;
  void clear_cart() ;
  const ::order::Cart& cart() const;
  PROTOBUF_NODISCARD ::order::Cart* release_cart();
  ::order::Cart* mutable_cart();
  void set_allocated_cart(::order::Cart* value);
  void unsafe_arena_set_allocated_cart(::order::Cart* value);
  ::order::Cart* unsafe_arena_release_cart();

  private:
  const ::order::Cart& _internal_cart() const;
  ::order::Cart* _internal_mutable_cart();

  public:
  // @@protoc_insertion_point(class_scope:order.AddProductToCartResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddProductToCartResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::order::Cart* cart_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};
// -------------------------------------------------------------------

class AddProductToCartRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:order.AddProductToCartRequest) */ {
 public:
  inline AddProductToCartRequest() : AddProductToCartRequest(nullptr) {}
  ~AddProductToCartRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddProductToCartRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddProductToCartRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddProductToCartRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddProductToCartRequest(const AddProductToCartRequest& from) : AddProductToCartRequest(nullptr, from) {}
  inline AddProductToCartRequest(AddProductToCartRequest&& from) noexcept
      : AddProductToCartRequest(nullptr, std::move(from)) {}
  inline AddProductToCartRequest& operator=(const AddProductToCartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddProductToCartRequest& operator=(AddProductToCartRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddProductToCartRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddProductToCartRequest* internal_default_instance() {
    return reinterpret_cast<const AddProductToCartRequest*>(
        &_AddProductToCartRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(AddProductToCartRequest& a, AddProductToCartRequest& b) { a.Swap(&b); }
  inline void Swap(AddProductToCartRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddProductToCartRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddProductToCartRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddProductToCartRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddProductToCartRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddProductToCartRequest& from) { AddProductToCartRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddProductToCartRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "order.AddProductToCartRequest"; }

 protected:
  explicit AddProductToCartRequest(::google::protobuf::Arena* arena);
  AddProductToCartRequest(::google::protobuf::Arena* arena, const AddProductToCartRequest& from);
  AddProductToCartRequest(::google::protobuf::Arena* arena, AddProductToCartRequest&& from) noexcept
      : AddProductToCartRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCartFieldNumber = 1,
  };
  // .order.Cart cart = 1;
  bool has_cart() const;
  void clear_cart() ;
  const ::order::Cart& cart() const;
  PROTOBUF_NODISCARD ::order::Cart* release_cart();
  ::order::Cart* mutable_cart();
  void set_allocated_cart(::order::Cart* value);
  void unsafe_arena_set_allocated_cart(::order::Cart* value);
  ::order::Cart* unsafe_arena_release_cart();

  private:
  const ::order::Cart& _internal_cart() const;
  ::order::Cart* _internal_mutable_cart();

  public:
  // @@protoc_insertion_point(class_scope:order.AddProductToCartRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddProductToCartRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::order::Cart* cart_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2forder_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CartModel

// int64 id = 1;
inline void CartModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t CartModel::id() const {
  // @@protoc_insertion_point(field_get:order.CartModel.id)
  return _internal_id();
}
inline void CartModel::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:order.CartModel.id)
}
inline ::int64_t CartModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void CartModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 organization_id = 2;
inline void CartModel::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t CartModel::organization_id() const {
  // @@protoc_insertion_point(field_get:order.CartModel.organization_id)
  return _internal_organization_id();
}
inline void CartModel::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:order.CartModel.organization_id)
}
inline ::int64_t CartModel::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void CartModel::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// -------------------------------------------------------------------

// Cart

// int64 id = 1;
inline void Cart::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t Cart::id() const {
  // @@protoc_insertion_point(field_get:order.Cart.id)
  return _internal_id();
}
inline void Cart::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:order.Cart.id)
}
inline ::int64_t Cart::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Cart::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .organization.Organization organization = 2;
inline bool Cart::has_organization() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.organization_ != nullptr);
  return value;
}
inline const ::organization::Organization& Cart::_internal_organization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Organization* p = _impl_.organization_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Organization&>(::organization::_Organization_default_instance_);
}
inline const ::organization::Organization& Cart::organization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.Cart.organization)
  return _internal_organization();
}
inline void Cart::unsafe_arena_set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.organization_);
  }
  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:order.Cart.organization)
}
inline ::organization::Organization* Cart::release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Organization* released = _impl_.organization_;
  _impl_.organization_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Organization* Cart::unsafe_arena_release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.Cart.organization)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::organization::Organization* temp = _impl_.organization_;
  _impl_.organization_ = nullptr;
  return temp;
}
inline ::organization::Organization* Cart::_internal_mutable_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.organization_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Organization>(GetArena());
    _impl_.organization_ = reinterpret_cast<::organization::Organization*>(p);
  }
  return _impl_.organization_;
}
inline ::organization::Organization* Cart::mutable_organization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::organization::Organization* _msg = _internal_mutable_organization();
  // @@protoc_insertion_point(field_mutable:order.Cart.organization)
  return _msg;
}
inline void Cart::set_allocated_organization(::organization::Organization* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.organization_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.organization_ = reinterpret_cast<::organization::Organization*>(value);
  // @@protoc_insertion_point(field_set_allocated:order.Cart.organization)
}

// repeated .order.CartProducts products = 3;
inline int Cart::_internal_products_size() const {
  return _internal_products().size();
}
inline int Cart::products_size() const {
  return _internal_products_size();
}
inline void Cart::clear_products() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.products_.Clear();
}
inline ::order::CartProducts* Cart::mutable_products(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:order.Cart.products)
  return _internal_mutable_products()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::order::CartProducts>* Cart::mutable_products()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:order.Cart.products)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_products();
}
inline const ::order::CartProducts& Cart::products(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.Cart.products)
  return _internal_products().Get(index);
}
inline ::order::CartProducts* Cart::add_products() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::order::CartProducts* _add = _internal_mutable_products()->Add();
  // @@protoc_insertion_point(field_add:order.Cart.products)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::order::CartProducts>& Cart::products() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:order.Cart.products)
  return _internal_products();
}
inline const ::google::protobuf::RepeatedPtrField<::order::CartProducts>&
Cart::_internal_products() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.products_;
}
inline ::google::protobuf::RepeatedPtrField<::order::CartProducts>*
Cart::_internal_mutable_products() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.products_;
}

// -------------------------------------------------------------------

// CartProducts

// int64 id = 1;
inline void CartProducts::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t CartProducts::id() const {
  // @@protoc_insertion_point(field_get:order.CartProducts.id)
  return _internal_id();
}
inline void CartProducts::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:order.CartProducts.id)
}
inline ::int64_t CartProducts::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void CartProducts::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .product.Product product = 2;
inline bool CartProducts::has_product() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_ != nullptr);
  return value;
}
inline const ::product::Product& CartProducts::_internal_product() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::Product* p = _impl_.product_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::Product&>(::product::_Product_default_instance_);
}
inline const ::product::Product& CartProducts::product() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.CartProducts.product)
  return _internal_product();
}
inline void CartProducts::unsafe_arena_set_allocated_product(::product::Product* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }
  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:order.CartProducts.product)
}
inline ::product::Product* CartProducts::release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* released = _impl_.product_;
  _impl_.product_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::Product* CartProducts::unsafe_arena_release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.CartProducts.product)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::product::Product* temp = _impl_.product_;
  _impl_.product_ = nullptr;
  return temp;
}
inline ::product::Product* CartProducts::_internal_mutable_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::Product>(GetArena());
    _impl_.product_ = reinterpret_cast<::product::Product*>(p);
  }
  return _impl_.product_;
}
inline ::product::Product* CartProducts::mutable_product() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::product::Product* _msg = _internal_mutable_product();
  // @@protoc_insertion_point(field_mutable:order.CartProducts.product)
  return _msg;
}
inline void CartProducts::set_allocated_product(::product::Product* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  // @@protoc_insertion_point(field_set_allocated:order.CartProducts.product)
}

// int64 quantity = 3;
inline void CartProducts::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = ::int64_t{0};
}
inline ::int64_t CartProducts::quantity() const {
  // @@protoc_insertion_point(field_get:order.CartProducts.quantity)
  return _internal_quantity();
}
inline void CartProducts::set_quantity(::int64_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:order.CartProducts.quantity)
}
inline ::int64_t CartProducts::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void CartProducts::_internal_set_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// -------------------------------------------------------------------

// OrderModel

// int64 id = 1;
inline void OrderModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t OrderModel::id() const {
  // @@protoc_insertion_point(field_get:order.OrderModel.id)
  return _internal_id();
}
inline void OrderModel::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:order.OrderModel.id)
}
inline ::int64_t OrderModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void OrderModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 created_by = 2;
inline void OrderModel::clear_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = ::int64_t{0};
}
inline ::int64_t OrderModel::created_by() const {
  // @@protoc_insertion_point(field_get:order.OrderModel.created_by)
  return _internal_created_by();
}
inline void OrderModel::set_created_by(::int64_t value) {
  _internal_set_created_by(value);
  // @@protoc_insertion_point(field_set:order.OrderModel.created_by)
}
inline ::int64_t OrderModel::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_;
}
inline void OrderModel::_internal_set_created_by(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = value;
}

// string status = 3;
inline void OrderModel::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& OrderModel::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.OrderModel.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderModel::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.OrderModel.status)
}
inline std::string* OrderModel::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:order.OrderModel.status)
  return _s;
}
inline const std::string& OrderModel::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void OrderModel::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(value, GetArena());
}
inline std::string* OrderModel::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* OrderModel::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.OrderModel.status)
  return _impl_.status_.Release();
}
inline void OrderModel::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_.IsDefault()) {
    _impl_.status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.OrderModel.status)
}

// float original_total = 4;
inline void OrderModel::clear_original_total() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_total_ = 0;
}
inline float OrderModel::original_total() const {
  // @@protoc_insertion_point(field_get:order.OrderModel.original_total)
  return _internal_original_total();
}
inline void OrderModel::set_original_total(float value) {
  _internal_set_original_total(value);
  // @@protoc_insertion_point(field_set:order.OrderModel.original_total)
}
inline float OrderModel::_internal_original_total() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.original_total_;
}
inline void OrderModel::_internal_set_original_total(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_total_ = value;
}

// float final_total = 5;
inline void OrderModel::clear_final_total() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_total_ = 0;
}
inline float OrderModel::final_total() const {
  // @@protoc_insertion_point(field_get:order.OrderModel.final_total)
  return _internal_final_total();
}
inline void OrderModel::set_final_total(float value) {
  _internal_set_final_total(value);
  // @@protoc_insertion_point(field_set:order.OrderModel.final_total)
}
inline float OrderModel::_internal_final_total() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.final_total_;
}
inline void OrderModel::_internal_set_final_total(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_total_ = value;
}

// int64 from_organization_id = 6;
inline void OrderModel::clear_from_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_organization_id_ = ::int64_t{0};
}
inline ::int64_t OrderModel::from_organization_id() const {
  // @@protoc_insertion_point(field_get:order.OrderModel.from_organization_id)
  return _internal_from_organization_id();
}
inline void OrderModel::set_from_organization_id(::int64_t value) {
  _internal_set_from_organization_id(value);
  // @@protoc_insertion_point(field_set:order.OrderModel.from_organization_id)
}
inline ::int64_t OrderModel::_internal_from_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_organization_id_;
}
inline void OrderModel::_internal_set_from_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_organization_id_ = value;
}

// optional int64 discount_id = 7;
inline bool OrderModel::has_discount_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void OrderModel::clear_discount_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.discount_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t OrderModel::discount_id() const {
  // @@protoc_insertion_point(field_get:order.OrderModel.discount_id)
  return _internal_discount_id();
}
inline void OrderModel::set_discount_id(::int64_t value) {
  _internal_set_discount_id(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:order.OrderModel.discount_id)
}
inline ::int64_t OrderModel::_internal_discount_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.discount_id_;
}
inline void OrderModel::_internal_set_discount_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.discount_id_ = value;
}

// optional string created_at = 8;
inline bool OrderModel::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OrderModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& OrderModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.OrderModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.OrderModel.created_at)
}
inline std::string* OrderModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:order.OrderModel.created_at)
  return _s;
}
inline const std::string& OrderModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void OrderModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* OrderModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* OrderModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.OrderModel.created_at)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.created_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.created_at_.Set("", GetArena());
  }
  return released;
}
inline void OrderModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.OrderModel.created_at)
}

// optional string updated_at = 9;
inline bool OrderModel::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void OrderModel::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& OrderModel::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.OrderModel.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderModel::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.OrderModel.updated_at)
}
inline std::string* OrderModel::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:order.OrderModel.updated_at)
  return _s;
}
inline const std::string& OrderModel::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void OrderModel::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* OrderModel::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* OrderModel::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.OrderModel.updated_at)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.updated_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  return released;
}
inline void OrderModel::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_at_.IsDefault()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.OrderModel.updated_at)
}

// -------------------------------------------------------------------

// SubOrderModel

// int64 id = 1;
inline void SubOrderModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t SubOrderModel::id() const {
  // @@protoc_insertion_point(field_get:order.SubOrderModel.id)
  return _internal_id();
}
inline void SubOrderModel::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:order.SubOrderModel.id)
}
inline ::int64_t SubOrderModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void SubOrderModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// float original_subtotal = 2;
inline void SubOrderModel::clear_original_subtotal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_subtotal_ = 0;
}
inline float SubOrderModel::original_subtotal() const {
  // @@protoc_insertion_point(field_get:order.SubOrderModel.original_subtotal)
  return _internal_original_subtotal();
}
inline void SubOrderModel::set_original_subtotal(float value) {
  _internal_set_original_subtotal(value);
  // @@protoc_insertion_point(field_set:order.SubOrderModel.original_subtotal)
}
inline float SubOrderModel::_internal_original_subtotal() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.original_subtotal_;
}
inline void SubOrderModel::_internal_set_original_subtotal(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_subtotal_ = value;
}

// float final_subtotal = 3;
inline void SubOrderModel::clear_final_subtotal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_subtotal_ = 0;
}
inline float SubOrderModel::final_subtotal() const {
  // @@protoc_insertion_point(field_get:order.SubOrderModel.final_subtotal)
  return _internal_final_subtotal();
}
inline void SubOrderModel::set_final_subtotal(float value) {
  _internal_set_final_subtotal(value);
  // @@protoc_insertion_point(field_set:order.SubOrderModel.final_subtotal)
}
inline float SubOrderModel::_internal_final_subtotal() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.final_subtotal_;
}
inline void SubOrderModel::_internal_set_final_subtotal(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_subtotal_ = value;
}

// int64 to_organization_id = 4;
inline void SubOrderModel::clear_to_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_organization_id_ = ::int64_t{0};
}
inline ::int64_t SubOrderModel::to_organization_id() const {
  // @@protoc_insertion_point(field_get:order.SubOrderModel.to_organization_id)
  return _internal_to_organization_id();
}
inline void SubOrderModel::set_to_organization_id(::int64_t value) {
  _internal_set_to_organization_id(value);
  // @@protoc_insertion_point(field_set:order.SubOrderModel.to_organization_id)
}
inline ::int64_t SubOrderModel::_internal_to_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_organization_id_;
}
inline void SubOrderModel::_internal_set_to_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_organization_id_ = value;
}

// int64 from_organization_id = 5;
inline void SubOrderModel::clear_from_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_organization_id_ = ::int64_t{0};
}
inline ::int64_t SubOrderModel::from_organization_id() const {
  // @@protoc_insertion_point(field_get:order.SubOrderModel.from_organization_id)
  return _internal_from_organization_id();
}
inline void SubOrderModel::set_from_organization_id(::int64_t value) {
  _internal_set_from_organization_id(value);
  // @@protoc_insertion_point(field_set:order.SubOrderModel.from_organization_id)
}
inline ::int64_t SubOrderModel::_internal_from_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_organization_id_;
}
inline void SubOrderModel::_internal_set_from_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_organization_id_ = value;
}

// optional string status = 6;
inline bool SubOrderModel::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void SubOrderModel::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SubOrderModel::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.SubOrderModel.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubOrderModel::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.SubOrderModel.status)
}
inline std::string* SubOrderModel::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:order.SubOrderModel.status)
  return _s;
}
inline const std::string& SubOrderModel::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void SubOrderModel::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.status_.Set(value, GetArena());
}
inline std::string* SubOrderModel::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* SubOrderModel::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.SubOrderModel.status)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.status_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.status_.Set("", GetArena());
  }
  return released;
}
inline void SubOrderModel::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_.IsDefault()) {
    _impl_.status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.SubOrderModel.status)
}

// optional string invoice_pdf = 7;
inline bool SubOrderModel::has_invoice_pdf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void SubOrderModel::clear_invoice_pdf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invoice_pdf_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SubOrderModel::invoice_pdf() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.SubOrderModel.invoice_pdf)
  return _internal_invoice_pdf();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubOrderModel::set_invoice_pdf(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.invoice_pdf_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.SubOrderModel.invoice_pdf)
}
inline std::string* SubOrderModel::mutable_invoice_pdf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_invoice_pdf();
  // @@protoc_insertion_point(field_mutable:order.SubOrderModel.invoice_pdf)
  return _s;
}
inline const std::string& SubOrderModel::_internal_invoice_pdf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.invoice_pdf_.Get();
}
inline void SubOrderModel::_internal_set_invoice_pdf(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.invoice_pdf_.Set(value, GetArena());
}
inline std::string* SubOrderModel::_internal_mutable_invoice_pdf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.invoice_pdf_.Mutable( GetArena());
}
inline std::string* SubOrderModel::release_invoice_pdf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.SubOrderModel.invoice_pdf)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.invoice_pdf_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.invoice_pdf_.Set("", GetArena());
  }
  return released;
}
inline void SubOrderModel::set_allocated_invoice_pdf(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.invoice_pdf_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.invoice_pdf_.IsDefault()) {
    _impl_.invoice_pdf_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.SubOrderModel.invoice_pdf)
}

// optional string discount_id = 8;
inline bool SubOrderModel::has_discount_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void SubOrderModel::clear_discount_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.discount_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SubOrderModel::discount_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.SubOrderModel.discount_id)
  return _internal_discount_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubOrderModel::set_discount_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.discount_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.SubOrderModel.discount_id)
}
inline std::string* SubOrderModel::mutable_discount_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_discount_id();
  // @@protoc_insertion_point(field_mutable:order.SubOrderModel.discount_id)
  return _s;
}
inline const std::string& SubOrderModel::_internal_discount_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.discount_id_.Get();
}
inline void SubOrderModel::_internal_set_discount_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.discount_id_.Set(value, GetArena());
}
inline std::string* SubOrderModel::_internal_mutable_discount_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.discount_id_.Mutable( GetArena());
}
inline std::string* SubOrderModel::release_discount_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.SubOrderModel.discount_id)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.discount_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.discount_id_.Set("", GetArena());
  }
  return released;
}
inline void SubOrderModel::set_allocated_discount_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.discount_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.discount_id_.IsDefault()) {
    _impl_.discount_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.SubOrderModel.discount_id)
}

// optional string created_at = 9;
inline bool SubOrderModel::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void SubOrderModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& SubOrderModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.SubOrderModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubOrderModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.SubOrderModel.created_at)
}
inline std::string* SubOrderModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:order.SubOrderModel.created_at)
  return _s;
}
inline const std::string& SubOrderModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void SubOrderModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* SubOrderModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* SubOrderModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.SubOrderModel.created_at)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.created_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.created_at_.Set("", GetArena());
  }
  return released;
}
inline void SubOrderModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.SubOrderModel.created_at)
}

// optional string updated_at = 10;
inline bool SubOrderModel::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void SubOrderModel::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& SubOrderModel::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.SubOrderModel.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubOrderModel::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.SubOrderModel.updated_at)
}
inline std::string* SubOrderModel::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:order.SubOrderModel.updated_at)
  return _s;
}
inline const std::string& SubOrderModel::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void SubOrderModel::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* SubOrderModel::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* SubOrderModel::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.SubOrderModel.updated_at)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.updated_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  return released;
}
inline void SubOrderModel::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_at_.IsDefault()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.SubOrderModel.updated_at)
}

// optional string comment = 11;
inline bool SubOrderModel::has_comment() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void SubOrderModel::clear_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& SubOrderModel::comment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.SubOrderModel.comment)
  return _internal_comment();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubOrderModel::set_comment(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.comment_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.SubOrderModel.comment)
}
inline std::string* SubOrderModel::mutable_comment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_comment();
  // @@protoc_insertion_point(field_mutable:order.SubOrderModel.comment)
  return _s;
}
inline const std::string& SubOrderModel::_internal_comment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.comment_.Get();
}
inline void SubOrderModel::_internal_set_comment(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.comment_.Set(value, GetArena());
}
inline std::string* SubOrderModel::_internal_mutable_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.comment_.Mutable( GetArena());
}
inline std::string* SubOrderModel::release_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.SubOrderModel.comment)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.comment_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.comment_.Set("", GetArena());
  }
  return released;
}
inline void SubOrderModel::set_allocated_comment(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.comment_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.comment_.IsDefault()) {
    _impl_.comment_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.SubOrderModel.comment)
}

// int64 order_index = 12;
inline void SubOrderModel::clear_order_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_index_ = ::int64_t{0};
}
inline ::int64_t SubOrderModel::order_index() const {
  // @@protoc_insertion_point(field_get:order.SubOrderModel.order_index)
  return _internal_order_index();
}
inline void SubOrderModel::set_order_index(::int64_t value) {
  _internal_set_order_index(value);
  // @@protoc_insertion_point(field_set:order.SubOrderModel.order_index)
}
inline ::int64_t SubOrderModel::_internal_order_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_index_;
}
inline void SubOrderModel::_internal_set_order_index(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_index_ = value;
}

// -------------------------------------------------------------------

// OrderItemModel

// int64 id = 1;
inline void OrderItemModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t OrderItemModel::id() const {
  // @@protoc_insertion_point(field_get:order.OrderItemModel.id)
  return _internal_id();
}
inline void OrderItemModel::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:order.OrderItemModel.id)
}
inline ::int64_t OrderItemModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void OrderItemModel::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 sub_order_id = 2;
inline void OrderItemModel::clear_sub_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sub_order_id_ = ::int64_t{0};
}
inline ::int64_t OrderItemModel::sub_order_id() const {
  // @@protoc_insertion_point(field_get:order.OrderItemModel.sub_order_id)
  return _internal_sub_order_id();
}
inline void OrderItemModel::set_sub_order_id(::int64_t value) {
  _internal_set_sub_order_id(value);
  // @@protoc_insertion_point(field_set:order.OrderItemModel.sub_order_id)
}
inline ::int64_t OrderItemModel::_internal_sub_order_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sub_order_id_;
}
inline void OrderItemModel::_internal_set_sub_order_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sub_order_id_ = value;
}

// int64 product_id = 3;
inline void OrderItemModel::clear_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = ::int64_t{0};
}
inline ::int64_t OrderItemModel::product_id() const {
  // @@protoc_insertion_point(field_get:order.OrderItemModel.product_id)
  return _internal_product_id();
}
inline void OrderItemModel::set_product_id(::int64_t value) {
  _internal_set_product_id(value);
  // @@protoc_insertion_point(field_set:order.OrderItemModel.product_id)
}
inline ::int64_t OrderItemModel::_internal_product_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_id_;
}
inline void OrderItemModel::_internal_set_product_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = value;
}

// int32 quantity = 4;
inline void OrderItemModel::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = 0;
}
inline ::int32_t OrderItemModel::quantity() const {
  // @@protoc_insertion_point(field_get:order.OrderItemModel.quantity)
  return _internal_quantity();
}
inline void OrderItemModel::set_quantity(::int32_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:order.OrderItemModel.quantity)
}
inline ::int32_t OrderItemModel::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void OrderItemModel::_internal_set_quantity(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// float original_price = 5;
inline void OrderItemModel::clear_original_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_price_ = 0;
}
inline float OrderItemModel::original_price() const {
  // @@protoc_insertion_point(field_get:order.OrderItemModel.original_price)
  return _internal_original_price();
}
inline void OrderItemModel::set_original_price(float value) {
  _internal_set_original_price(value);
  // @@protoc_insertion_point(field_set:order.OrderItemModel.original_price)
}
inline float OrderItemModel::_internal_original_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.original_price_;
}
inline void OrderItemModel::_internal_set_original_price(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_price_ = value;
}

// float final_price = 6;
inline void OrderItemModel::clear_final_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_price_ = 0;
}
inline float OrderItemModel::final_price() const {
  // @@protoc_insertion_point(field_get:order.OrderItemModel.final_price)
  return _internal_final_price();
}
inline void OrderItemModel::set_final_price(float value) {
  _internal_set_final_price(value);
  // @@protoc_insertion_point(field_set:order.OrderItemModel.final_price)
}
inline float OrderItemModel::_internal_final_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.final_price_;
}
inline void OrderItemModel::_internal_set_final_price(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_price_ = value;
}

// optional int64 discount_id = 7;
inline bool OrderItemModel::has_discount_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void OrderItemModel::clear_discount_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.discount_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t OrderItemModel::discount_id() const {
  // @@protoc_insertion_point(field_get:order.OrderItemModel.discount_id)
  return _internal_discount_id();
}
inline void OrderItemModel::set_discount_id(::int64_t value) {
  _internal_set_discount_id(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:order.OrderItemModel.discount_id)
}
inline ::int64_t OrderItemModel::_internal_discount_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.discount_id_;
}
inline void OrderItemModel::_internal_set_discount_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.discount_id_ = value;
}

// optional string created_at = 9;
inline bool OrderItemModel::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OrderItemModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& OrderItemModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.OrderItemModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderItemModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.OrderItemModel.created_at)
}
inline std::string* OrderItemModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:order.OrderItemModel.created_at)
  return _s;
}
inline const std::string& OrderItemModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void OrderItemModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* OrderItemModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* OrderItemModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.OrderItemModel.created_at)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.created_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.created_at_.Set("", GetArena());
  }
  return released;
}
inline void OrderItemModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.OrderItemModel.created_at)
}

// optional string updated_at = 10;
inline bool OrderItemModel::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void OrderItemModel::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& OrderItemModel::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.OrderItemModel.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderItemModel::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.OrderItemModel.updated_at)
}
inline std::string* OrderItemModel::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:order.OrderItemModel.updated_at)
  return _s;
}
inline const std::string& OrderItemModel::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void OrderItemModel::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* OrderItemModel::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* OrderItemModel::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.OrderItemModel.updated_at)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.updated_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  return released;
}
inline void OrderItemModel::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_at_.IsDefault()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.OrderItemModel.updated_at)
}

// -------------------------------------------------------------------

// Order

// int64 id = 1;
inline void Order::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t Order::id() const {
  // @@protoc_insertion_point(field_get:order.Order.id)
  return _internal_id();
}
inline void Order::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:order.Order.id)
}
inline ::int64_t Order::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Order::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 created_by = 2;
inline void Order::clear_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = ::int64_t{0};
}
inline ::int64_t Order::created_by() const {
  // @@protoc_insertion_point(field_get:order.Order.created_by)
  return _internal_created_by();
}
inline void Order::set_created_by(::int64_t value) {
  _internal_set_created_by(value);
  // @@protoc_insertion_point(field_set:order.Order.created_by)
}
inline ::int64_t Order::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_;
}
inline void Order::_internal_set_created_by(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = value;
}

// string status = 3;
inline void Order::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& Order::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.Order.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Order::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.Order.status)
}
inline std::string* Order::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:order.Order.status)
  return _s;
}
inline const std::string& Order::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void Order::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(value, GetArena());
}
inline std::string* Order::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* Order::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.Order.status)
  return _impl_.status_.Release();
}
inline void Order::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_.IsDefault()) {
    _impl_.status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.Order.status)
}

// float original_total = 4;
inline void Order::clear_original_total() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_total_ = 0;
}
inline float Order::original_total() const {
  // @@protoc_insertion_point(field_get:order.Order.original_total)
  return _internal_original_total();
}
inline void Order::set_original_total(float value) {
  _internal_set_original_total(value);
  // @@protoc_insertion_point(field_set:order.Order.original_total)
}
inline float Order::_internal_original_total() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.original_total_;
}
inline void Order::_internal_set_original_total(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_total_ = value;
}

// float final_total = 5;
inline void Order::clear_final_total() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_total_ = 0;
}
inline float Order::final_total() const {
  // @@protoc_insertion_point(field_get:order.Order.final_total)
  return _internal_final_total();
}
inline void Order::set_final_total(float value) {
  _internal_set_final_total(value);
  // @@protoc_insertion_point(field_set:order.Order.final_total)
}
inline float Order::_internal_final_total() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.final_total_;
}
inline void Order::_internal_set_final_total(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_total_ = value;
}

// .organization.Organization from_organization = 6;
inline bool Order::has_from_organization() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.from_organization_ != nullptr);
  return value;
}
inline const ::organization::Organization& Order::_internal_from_organization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Organization* p = _impl_.from_organization_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Organization&>(::organization::_Organization_default_instance_);
}
inline const ::organization::Organization& Order::from_organization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.Order.from_organization)
  return _internal_from_organization();
}
inline void Order::unsafe_arena_set_allocated_from_organization(::organization::Organization* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.from_organization_);
  }
  _impl_.from_organization_ = reinterpret_cast<::organization::Organization*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:order.Order.from_organization)
}
inline ::organization::Organization* Order::release_from_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::organization::Organization* released = _impl_.from_organization_;
  _impl_.from_organization_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Organization* Order::unsafe_arena_release_from_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.Order.from_organization)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::organization::Organization* temp = _impl_.from_organization_;
  _impl_.from_organization_ = nullptr;
  return temp;
}
inline ::organization::Organization* Order::_internal_mutable_from_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_organization_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Organization>(GetArena());
    _impl_.from_organization_ = reinterpret_cast<::organization::Organization*>(p);
  }
  return _impl_.from_organization_;
}
inline ::organization::Organization* Order::mutable_from_organization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::organization::Organization* _msg = _internal_mutable_from_organization();
  // @@protoc_insertion_point(field_mutable:order.Order.from_organization)
  return _msg;
}
inline void Order::set_allocated_from_organization(::organization::Organization* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.from_organization_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.from_organization_ = reinterpret_cast<::organization::Organization*>(value);
  // @@protoc_insertion_point(field_set_allocated:order.Order.from_organization)
}

// optional string created_at = 7;
inline bool Order::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Order::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Order::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.Order.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Order::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.Order.created_at)
}
inline std::string* Order::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:order.Order.created_at)
  return _s;
}
inline const std::string& Order::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void Order::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* Order::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* Order::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.Order.created_at)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.created_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.created_at_.Set("", GetArena());
  }
  return released;
}
inline void Order::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.Order.created_at)
}

// optional string updated_at = 8;
inline bool Order::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Order::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Order::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.Order.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Order::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.Order.updated_at)
}
inline std::string* Order::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:order.Order.updated_at)
  return _s;
}
inline const std::string& Order::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void Order::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* Order::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* Order::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.Order.updated_at)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.updated_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  return released;
}
inline void Order::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_at_.IsDefault()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.Order.updated_at)
}

// repeated .order.SubOrder suborders = 9;
inline int Order::_internal_suborders_size() const {
  return _internal_suborders().size();
}
inline int Order::suborders_size() const {
  return _internal_suborders_size();
}
inline void Order::clear_suborders() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.suborders_.Clear();
}
inline ::order::SubOrder* Order::mutable_suborders(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:order.Order.suborders)
  return _internal_mutable_suborders()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::order::SubOrder>* Order::mutable_suborders()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:order.Order.suborders)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_suborders();
}
inline const ::order::SubOrder& Order::suborders(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.Order.suborders)
  return _internal_suborders().Get(index);
}
inline ::order::SubOrder* Order::add_suborders() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::order::SubOrder* _add = _internal_mutable_suborders()->Add();
  // @@protoc_insertion_point(field_add:order.Order.suborders)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::order::SubOrder>& Order::suborders() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:order.Order.suborders)
  return _internal_suborders();
}
inline const ::google::protobuf::RepeatedPtrField<::order::SubOrder>&
Order::_internal_suborders() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.suborders_;
}
inline ::google::protobuf::RepeatedPtrField<::order::SubOrder>*
Order::_internal_mutable_suborders() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.suborders_;
}

// -------------------------------------------------------------------

// SubOrder

// int64 id = 1;
inline void SubOrder::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t SubOrder::id() const {
  // @@protoc_insertion_point(field_get:order.SubOrder.id)
  return _internal_id();
}
inline void SubOrder::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:order.SubOrder.id)
}
inline ::int64_t SubOrder::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void SubOrder::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// repeated .order.OrderItem order_items = 2;
inline int SubOrder::_internal_order_items_size() const {
  return _internal_order_items().size();
}
inline int SubOrder::order_items_size() const {
  return _internal_order_items_size();
}
inline void SubOrder::clear_order_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_items_.Clear();
}
inline ::order::OrderItem* SubOrder::mutable_order_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:order.SubOrder.order_items)
  return _internal_mutable_order_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::order::OrderItem>* SubOrder::mutable_order_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:order.SubOrder.order_items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_order_items();
}
inline const ::order::OrderItem& SubOrder::order_items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.SubOrder.order_items)
  return _internal_order_items().Get(index);
}
inline ::order::OrderItem* SubOrder::add_order_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::order::OrderItem* _add = _internal_mutable_order_items()->Add();
  // @@protoc_insertion_point(field_add:order.SubOrder.order_items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::order::OrderItem>& SubOrder::order_items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:order.SubOrder.order_items)
  return _internal_order_items();
}
inline const ::google::protobuf::RepeatedPtrField<::order::OrderItem>&
SubOrder::_internal_order_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_items_;
}
inline ::google::protobuf::RepeatedPtrField<::order::OrderItem>*
SubOrder::_internal_mutable_order_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.order_items_;
}

// float original_subtotal = 3;
inline void SubOrder::clear_original_subtotal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_subtotal_ = 0;
}
inline float SubOrder::original_subtotal() const {
  // @@protoc_insertion_point(field_get:order.SubOrder.original_subtotal)
  return _internal_original_subtotal();
}
inline void SubOrder::set_original_subtotal(float value) {
  _internal_set_original_subtotal(value);
  // @@protoc_insertion_point(field_set:order.SubOrder.original_subtotal)
}
inline float SubOrder::_internal_original_subtotal() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.original_subtotal_;
}
inline void SubOrder::_internal_set_original_subtotal(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_subtotal_ = value;
}

// float final_subtotal = 4;
inline void SubOrder::clear_final_subtotal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_subtotal_ = 0;
}
inline float SubOrder::final_subtotal() const {
  // @@protoc_insertion_point(field_get:order.SubOrder.final_subtotal)
  return _internal_final_subtotal();
}
inline void SubOrder::set_final_subtotal(float value) {
  _internal_set_final_subtotal(value);
  // @@protoc_insertion_point(field_set:order.SubOrder.final_subtotal)
}
inline float SubOrder::_internal_final_subtotal() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.final_subtotal_;
}
inline void SubOrder::_internal_set_final_subtotal(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_subtotal_ = value;
}

// .organization.Organization to_organization = 5;
inline bool SubOrder::has_to_organization() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.to_organization_ != nullptr);
  return value;
}
inline const ::organization::Organization& SubOrder::_internal_to_organization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Organization* p = _impl_.to_organization_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Organization&>(::organization::_Organization_default_instance_);
}
inline const ::organization::Organization& SubOrder::to_organization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.SubOrder.to_organization)
  return _internal_to_organization();
}
inline void SubOrder::unsafe_arena_set_allocated_to_organization(::organization::Organization* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.to_organization_);
  }
  _impl_.to_organization_ = reinterpret_cast<::organization::Organization*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:order.SubOrder.to_organization)
}
inline ::organization::Organization* SubOrder::release_to_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::organization::Organization* released = _impl_.to_organization_;
  _impl_.to_organization_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Organization* SubOrder::unsafe_arena_release_to_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.SubOrder.to_organization)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::organization::Organization* temp = _impl_.to_organization_;
  _impl_.to_organization_ = nullptr;
  return temp;
}
inline ::organization::Organization* SubOrder::_internal_mutable_to_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_organization_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Organization>(GetArena());
    _impl_.to_organization_ = reinterpret_cast<::organization::Organization*>(p);
  }
  return _impl_.to_organization_;
}
inline ::organization::Organization* SubOrder::mutable_to_organization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::organization::Organization* _msg = _internal_mutable_to_organization();
  // @@protoc_insertion_point(field_mutable:order.SubOrder.to_organization)
  return _msg;
}
inline void SubOrder::set_allocated_to_organization(::organization::Organization* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.to_organization_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.to_organization_ = reinterpret_cast<::organization::Organization*>(value);
  // @@protoc_insertion_point(field_set_allocated:order.SubOrder.to_organization)
}

// .organization.Organization from_organization = 6;
inline bool SubOrder::has_from_organization() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.from_organization_ != nullptr);
  return value;
}
inline const ::organization::Organization& SubOrder::_internal_from_organization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::organization::Organization* p = _impl_.from_organization_;
  return p != nullptr ? *p : reinterpret_cast<const ::organization::Organization&>(::organization::_Organization_default_instance_);
}
inline const ::organization::Organization& SubOrder::from_organization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.SubOrder.from_organization)
  return _internal_from_organization();
}
inline void SubOrder::unsafe_arena_set_allocated_from_organization(::organization::Organization* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.from_organization_);
  }
  _impl_.from_organization_ = reinterpret_cast<::organization::Organization*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:order.SubOrder.from_organization)
}
inline ::organization::Organization* SubOrder::release_from_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::organization::Organization* released = _impl_.from_organization_;
  _impl_.from_organization_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::organization::Organization* SubOrder::unsafe_arena_release_from_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.SubOrder.from_organization)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::organization::Organization* temp = _impl_.from_organization_;
  _impl_.from_organization_ = nullptr;
  return temp;
}
inline ::organization::Organization* SubOrder::_internal_mutable_from_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_organization_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::organization::Organization>(GetArena());
    _impl_.from_organization_ = reinterpret_cast<::organization::Organization*>(p);
  }
  return _impl_.from_organization_;
}
inline ::organization::Organization* SubOrder::mutable_from_organization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::organization::Organization* _msg = _internal_mutable_from_organization();
  // @@protoc_insertion_point(field_mutable:order.SubOrder.from_organization)
  return _msg;
}
inline void SubOrder::set_allocated_from_organization(::organization::Organization* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.from_organization_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.from_organization_ = reinterpret_cast<::organization::Organization*>(value);
  // @@protoc_insertion_point(field_set_allocated:order.SubOrder.from_organization)
}

// optional string status = 7;
inline bool SubOrder::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void SubOrder::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SubOrder::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.SubOrder.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubOrder::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.SubOrder.status)
}
inline std::string* SubOrder::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:order.SubOrder.status)
  return _s;
}
inline const std::string& SubOrder::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void SubOrder::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.status_.Set(value, GetArena());
}
inline std::string* SubOrder::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* SubOrder::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.SubOrder.status)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.status_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.status_.Set("", GetArena());
  }
  return released;
}
inline void SubOrder::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_.IsDefault()) {
    _impl_.status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.SubOrder.status)
}

// optional string invoice_pdf = 8;
inline bool SubOrder::has_invoice_pdf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void SubOrder::clear_invoice_pdf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invoice_pdf_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SubOrder::invoice_pdf() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.SubOrder.invoice_pdf)
  return _internal_invoice_pdf();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubOrder::set_invoice_pdf(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.invoice_pdf_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.SubOrder.invoice_pdf)
}
inline std::string* SubOrder::mutable_invoice_pdf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_invoice_pdf();
  // @@protoc_insertion_point(field_mutable:order.SubOrder.invoice_pdf)
  return _s;
}
inline const std::string& SubOrder::_internal_invoice_pdf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.invoice_pdf_.Get();
}
inline void SubOrder::_internal_set_invoice_pdf(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.invoice_pdf_.Set(value, GetArena());
}
inline std::string* SubOrder::_internal_mutable_invoice_pdf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.invoice_pdf_.Mutable( GetArena());
}
inline std::string* SubOrder::release_invoice_pdf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.SubOrder.invoice_pdf)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.invoice_pdf_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.invoice_pdf_.Set("", GetArena());
  }
  return released;
}
inline void SubOrder::set_allocated_invoice_pdf(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.invoice_pdf_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.invoice_pdf_.IsDefault()) {
    _impl_.invoice_pdf_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.SubOrder.invoice_pdf)
}

// optional string created_at = 9;
inline bool SubOrder::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void SubOrder::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SubOrder::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.SubOrder.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubOrder::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.SubOrder.created_at)
}
inline std::string* SubOrder::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:order.SubOrder.created_at)
  return _s;
}
inline const std::string& SubOrder::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void SubOrder::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* SubOrder::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* SubOrder::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.SubOrder.created_at)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.created_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.created_at_.Set("", GetArena());
  }
  return released;
}
inline void SubOrder::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.SubOrder.created_at)
}

// optional string updated_at = 10;
inline bool SubOrder::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void SubOrder::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& SubOrder::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.SubOrder.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubOrder::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.SubOrder.updated_at)
}
inline std::string* SubOrder::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:order.SubOrder.updated_at)
  return _s;
}
inline const std::string& SubOrder::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void SubOrder::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* SubOrder::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* SubOrder::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.SubOrder.updated_at)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.updated_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  return released;
}
inline void SubOrder::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_at_.IsDefault()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.SubOrder.updated_at)
}

// optional string comment = 11;
inline bool SubOrder::has_comment() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void SubOrder::clear_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& SubOrder::comment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.SubOrder.comment)
  return _internal_comment();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubOrder::set_comment(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.comment_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.SubOrder.comment)
}
inline std::string* SubOrder::mutable_comment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_comment();
  // @@protoc_insertion_point(field_mutable:order.SubOrder.comment)
  return _s;
}
inline const std::string& SubOrder::_internal_comment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.comment_.Get();
}
inline void SubOrder::_internal_set_comment(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.comment_.Set(value, GetArena());
}
inline std::string* SubOrder::_internal_mutable_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.comment_.Mutable( GetArena());
}
inline std::string* SubOrder::release_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.SubOrder.comment)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.comment_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.comment_.Set("", GetArena());
  }
  return released;
}
inline void SubOrder::set_allocated_comment(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.comment_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.comment_.IsDefault()) {
    _impl_.comment_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.SubOrder.comment)
}

// bool is_sale_outside = 12;
inline void SubOrder::clear_is_sale_outside() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_sale_outside_ = false;
}
inline bool SubOrder::is_sale_outside() const {
  // @@protoc_insertion_point(field_get:order.SubOrder.is_sale_outside)
  return _internal_is_sale_outside();
}
inline void SubOrder::set_is_sale_outside(bool value) {
  _internal_set_is_sale_outside(value);
  // @@protoc_insertion_point(field_set:order.SubOrder.is_sale_outside)
}
inline bool SubOrder::_internal_is_sale_outside() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_sale_outside_;
}
inline void SubOrder::_internal_set_is_sale_outside(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_sale_outside_ = value;
}

// int64 order_index = 13;
inline void SubOrder::clear_order_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_index_ = ::int64_t{0};
}
inline ::int64_t SubOrder::order_index() const {
  // @@protoc_insertion_point(field_get:order.SubOrder.order_index)
  return _internal_order_index();
}
inline void SubOrder::set_order_index(::int64_t value) {
  _internal_set_order_index(value);
  // @@protoc_insertion_point(field_set:order.SubOrder.order_index)
}
inline ::int64_t SubOrder::_internal_order_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_index_;
}
inline void SubOrder::_internal_set_order_index(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_index_ = value;
}

// -------------------------------------------------------------------

// OrderItem

// int64 id = 1;
inline void OrderItem::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t OrderItem::id() const {
  // @@protoc_insertion_point(field_get:order.OrderItem.id)
  return _internal_id();
}
inline void OrderItem::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:order.OrderItem.id)
}
inline ::int64_t OrderItem::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void OrderItem::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .product.Product product = 2;
inline bool OrderItem::has_product() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_ != nullptr);
  return value;
}
inline const ::product::Product& OrderItem::_internal_product() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::product::Product* p = _impl_.product_;
  return p != nullptr ? *p : reinterpret_cast<const ::product::Product&>(::product::_Product_default_instance_);
}
inline const ::product::Product& OrderItem::product() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.OrderItem.product)
  return _internal_product();
}
inline void OrderItem::unsafe_arena_set_allocated_product(::product::Product* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }
  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:order.OrderItem.product)
}
inline ::product::Product* OrderItem::release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::product::Product* released = _impl_.product_;
  _impl_.product_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::product::Product* OrderItem::unsafe_arena_release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.OrderItem.product)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::product::Product* temp = _impl_.product_;
  _impl_.product_ = nullptr;
  return temp;
}
inline ::product::Product* OrderItem::_internal_mutable_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.product_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::product::Product>(GetArena());
    _impl_.product_ = reinterpret_cast<::product::Product*>(p);
  }
  return _impl_.product_;
}
inline ::product::Product* OrderItem::mutable_product() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::product::Product* _msg = _internal_mutable_product();
  // @@protoc_insertion_point(field_mutable:order.OrderItem.product)
  return _msg;
}
inline void OrderItem::set_allocated_product(::product::Product* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.product_ = reinterpret_cast<::product::Product*>(value);
  // @@protoc_insertion_point(field_set_allocated:order.OrderItem.product)
}

// int32 quantity = 3;
inline void OrderItem::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = 0;
}
inline ::int32_t OrderItem::quantity() const {
  // @@protoc_insertion_point(field_get:order.OrderItem.quantity)
  return _internal_quantity();
}
inline void OrderItem::set_quantity(::int32_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:order.OrderItem.quantity)
}
inline ::int32_t OrderItem::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void OrderItem::_internal_set_quantity(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// float original_price = 4;
inline void OrderItem::clear_original_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_price_ = 0;
}
inline float OrderItem::original_price() const {
  // @@protoc_insertion_point(field_get:order.OrderItem.original_price)
  return _internal_original_price();
}
inline void OrderItem::set_original_price(float value) {
  _internal_set_original_price(value);
  // @@protoc_insertion_point(field_set:order.OrderItem.original_price)
}
inline float OrderItem::_internal_original_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.original_price_;
}
inline void OrderItem::_internal_set_original_price(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_price_ = value;
}

// float final_price = 5;
inline void OrderItem::clear_final_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_price_ = 0;
}
inline float OrderItem::final_price() const {
  // @@protoc_insertion_point(field_get:order.OrderItem.final_price)
  return _internal_final_price();
}
inline void OrderItem::set_final_price(float value) {
  _internal_set_final_price(value);
  // @@protoc_insertion_point(field_set:order.OrderItem.final_price)
}
inline float OrderItem::_internal_final_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.final_price_;
}
inline void OrderItem::_internal_set_final_price(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_price_ = value;
}

// optional string created_at = 6;
inline bool OrderItem::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OrderItem::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& OrderItem::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.OrderItem.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderItem::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.OrderItem.created_at)
}
inline std::string* OrderItem::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:order.OrderItem.created_at)
  return _s;
}
inline const std::string& OrderItem::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void OrderItem::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* OrderItem::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* OrderItem::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.OrderItem.created_at)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.created_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.created_at_.Set("", GetArena());
  }
  return released;
}
inline void OrderItem::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.OrderItem.created_at)
}

// optional string updated_at = 7;
inline bool OrderItem::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void OrderItem::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& OrderItem::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.OrderItem.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderItem::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.OrderItem.updated_at)
}
inline std::string* OrderItem::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:order.OrderItem.updated_at)
  return _s;
}
inline const std::string& OrderItem::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void OrderItem::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* OrderItem::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* OrderItem::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.OrderItem.updated_at)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.updated_at_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  return released;
}
inline void OrderItem::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_at_.IsDefault()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.OrderItem.updated_at)
}

// -------------------------------------------------------------------

// CreateSubOrderRequest

// .order.SubOrder sub_order = 1;
inline bool CreateSubOrderRequest::has_sub_order() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sub_order_ != nullptr);
  return value;
}
inline void CreateSubOrderRequest::clear_sub_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sub_order_ != nullptr) _impl_.sub_order_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::order::SubOrder& CreateSubOrderRequest::_internal_sub_order() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::order::SubOrder* p = _impl_.sub_order_;
  return p != nullptr ? *p : reinterpret_cast<const ::order::SubOrder&>(::order::_SubOrder_default_instance_);
}
inline const ::order::SubOrder& CreateSubOrderRequest::sub_order() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.CreateSubOrderRequest.sub_order)
  return _internal_sub_order();
}
inline void CreateSubOrderRequest::unsafe_arena_set_allocated_sub_order(::order::SubOrder* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sub_order_);
  }
  _impl_.sub_order_ = reinterpret_cast<::order::SubOrder*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:order.CreateSubOrderRequest.sub_order)
}
inline ::order::SubOrder* CreateSubOrderRequest::release_sub_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::order::SubOrder* released = _impl_.sub_order_;
  _impl_.sub_order_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::order::SubOrder* CreateSubOrderRequest::unsafe_arena_release_sub_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.CreateSubOrderRequest.sub_order)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::order::SubOrder* temp = _impl_.sub_order_;
  _impl_.sub_order_ = nullptr;
  return temp;
}
inline ::order::SubOrder* CreateSubOrderRequest::_internal_mutable_sub_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sub_order_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::order::SubOrder>(GetArena());
    _impl_.sub_order_ = reinterpret_cast<::order::SubOrder*>(p);
  }
  return _impl_.sub_order_;
}
inline ::order::SubOrder* CreateSubOrderRequest::mutable_sub_order() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::order::SubOrder* _msg = _internal_mutable_sub_order();
  // @@protoc_insertion_point(field_mutable:order.CreateSubOrderRequest.sub_order)
  return _msg;
}
inline void CreateSubOrderRequest::set_allocated_sub_order(::order::SubOrder* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.sub_order_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.sub_order_ = reinterpret_cast<::order::SubOrder*>(value);
  // @@protoc_insertion_point(field_set_allocated:order.CreateSubOrderRequest.sub_order)
}

// string sale_type = 2;
inline void CreateSubOrderRequest::clear_sale_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sale_type_.ClearToEmpty();
}
inline const std::string& CreateSubOrderRequest::sale_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.CreateSubOrderRequest.sale_type)
  return _internal_sale_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateSubOrderRequest::set_sale_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sale_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.CreateSubOrderRequest.sale_type)
}
inline std::string* CreateSubOrderRequest::mutable_sale_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sale_type();
  // @@protoc_insertion_point(field_mutable:order.CreateSubOrderRequest.sale_type)
  return _s;
}
inline const std::string& CreateSubOrderRequest::_internal_sale_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sale_type_.Get();
}
inline void CreateSubOrderRequest::_internal_set_sale_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sale_type_.Set(value, GetArena());
}
inline std::string* CreateSubOrderRequest::_internal_mutable_sale_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sale_type_.Mutable( GetArena());
}
inline std::string* CreateSubOrderRequest::release_sale_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.CreateSubOrderRequest.sale_type)
  return _impl_.sale_type_.Release();
}
inline void CreateSubOrderRequest::set_allocated_sale_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sale_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sale_type_.IsDefault()) {
    _impl_.sale_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.CreateSubOrderRequest.sale_type)
}

// -------------------------------------------------------------------

// CreateSubOrderResponse

// .order.SubOrder sub_order = 1;
inline bool CreateSubOrderResponse::has_sub_order() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sub_order_ != nullptr);
  return value;
}
inline void CreateSubOrderResponse::clear_sub_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sub_order_ != nullptr) _impl_.sub_order_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::order::SubOrder& CreateSubOrderResponse::_internal_sub_order() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::order::SubOrder* p = _impl_.sub_order_;
  return p != nullptr ? *p : reinterpret_cast<const ::order::SubOrder&>(::order::_SubOrder_default_instance_);
}
inline const ::order::SubOrder& CreateSubOrderResponse::sub_order() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.CreateSubOrderResponse.sub_order)
  return _internal_sub_order();
}
inline void CreateSubOrderResponse::unsafe_arena_set_allocated_sub_order(::order::SubOrder* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sub_order_);
  }
  _impl_.sub_order_ = reinterpret_cast<::order::SubOrder*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:order.CreateSubOrderResponse.sub_order)
}
inline ::order::SubOrder* CreateSubOrderResponse::release_sub_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::order::SubOrder* released = _impl_.sub_order_;
  _impl_.sub_order_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::order::SubOrder* CreateSubOrderResponse::unsafe_arena_release_sub_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.CreateSubOrderResponse.sub_order)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::order::SubOrder* temp = _impl_.sub_order_;
  _impl_.sub_order_ = nullptr;
  return temp;
}
inline ::order::SubOrder* CreateSubOrderResponse::_internal_mutable_sub_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sub_order_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::order::SubOrder>(GetArena());
    _impl_.sub_order_ = reinterpret_cast<::order::SubOrder*>(p);
  }
  return _impl_.sub_order_;
}
inline ::order::SubOrder* CreateSubOrderResponse::mutable_sub_order() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::order::SubOrder* _msg = _internal_mutable_sub_order();
  // @@protoc_insertion_point(field_mutable:order.CreateSubOrderResponse.sub_order)
  return _msg;
}
inline void CreateSubOrderResponse::set_allocated_sub_order(::order::SubOrder* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.sub_order_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.sub_order_ = reinterpret_cast<::order::SubOrder*>(value);
  // @@protoc_insertion_point(field_set_allocated:order.CreateSubOrderResponse.sub_order)
}

// -------------------------------------------------------------------

// GetSubOrderRequest

// int64 id = 1;
inline void GetSubOrderRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t GetSubOrderRequest::id() const {
  // @@protoc_insertion_point(field_get:order.GetSubOrderRequest.id)
  return _internal_id();
}
inline void GetSubOrderRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:order.GetSubOrderRequest.id)
}
inline ::int64_t GetSubOrderRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void GetSubOrderRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// GetSubOrderResponse

// .order.SubOrder sub_order = 1;
inline bool GetSubOrderResponse::has_sub_order() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sub_order_ != nullptr);
  return value;
}
inline void GetSubOrderResponse::clear_sub_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sub_order_ != nullptr) _impl_.sub_order_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::order::SubOrder& GetSubOrderResponse::_internal_sub_order() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::order::SubOrder* p = _impl_.sub_order_;
  return p != nullptr ? *p : reinterpret_cast<const ::order::SubOrder&>(::order::_SubOrder_default_instance_);
}
inline const ::order::SubOrder& GetSubOrderResponse::sub_order() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.GetSubOrderResponse.sub_order)
  return _internal_sub_order();
}
inline void GetSubOrderResponse::unsafe_arena_set_allocated_sub_order(::order::SubOrder* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sub_order_);
  }
  _impl_.sub_order_ = reinterpret_cast<::order::SubOrder*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:order.GetSubOrderResponse.sub_order)
}
inline ::order::SubOrder* GetSubOrderResponse::release_sub_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::order::SubOrder* released = _impl_.sub_order_;
  _impl_.sub_order_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::order::SubOrder* GetSubOrderResponse::unsafe_arena_release_sub_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.GetSubOrderResponse.sub_order)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::order::SubOrder* temp = _impl_.sub_order_;
  _impl_.sub_order_ = nullptr;
  return temp;
}
inline ::order::SubOrder* GetSubOrderResponse::_internal_mutable_sub_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sub_order_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::order::SubOrder>(GetArena());
    _impl_.sub_order_ = reinterpret_cast<::order::SubOrder*>(p);
  }
  return _impl_.sub_order_;
}
inline ::order::SubOrder* GetSubOrderResponse::mutable_sub_order() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::order::SubOrder* _msg = _internal_mutable_sub_order();
  // @@protoc_insertion_point(field_mutable:order.GetSubOrderResponse.sub_order)
  return _msg;
}
inline void GetSubOrderResponse::set_allocated_sub_order(::order::SubOrder* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.sub_order_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.sub_order_ = reinterpret_cast<::order::SubOrder*>(value);
  // @@protoc_insertion_point(field_set_allocated:order.GetSubOrderResponse.sub_order)
}

// -------------------------------------------------------------------

// ListSubOrderRequest

// int64 created_by = 1;
inline void ListSubOrderRequest::clear_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = ::int64_t{0};
}
inline ::int64_t ListSubOrderRequest::created_by() const {
  // @@protoc_insertion_point(field_get:order.ListSubOrderRequest.created_by)
  return _internal_created_by();
}
inline void ListSubOrderRequest::set_created_by(::int64_t value) {
  _internal_set_created_by(value);
  // @@protoc_insertion_point(field_set:order.ListSubOrderRequest.created_by)
}
inline ::int64_t ListSubOrderRequest::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_;
}
inline void ListSubOrderRequest::_internal_set_created_by(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_ = value;
}

// string status = 2;
inline void ListSubOrderRequest::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& ListSubOrderRequest::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.ListSubOrderRequest.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListSubOrderRequest::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.ListSubOrderRequest.status)
}
inline std::string* ListSubOrderRequest::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:order.ListSubOrderRequest.status)
  return _s;
}
inline const std::string& ListSubOrderRequest::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void ListSubOrderRequest::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(value, GetArena());
}
inline std::string* ListSubOrderRequest::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* ListSubOrderRequest::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.ListSubOrderRequest.status)
  return _impl_.status_.Release();
}
inline void ListSubOrderRequest::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_.IsDefault()) {
    _impl_.status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.ListSubOrderRequest.status)
}

// int64 limit = 3;
inline void ListSubOrderRequest::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = ::int64_t{0};
}
inline ::int64_t ListSubOrderRequest::limit() const {
  // @@protoc_insertion_point(field_get:order.ListSubOrderRequest.limit)
  return _internal_limit();
}
inline void ListSubOrderRequest::set_limit(::int64_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:order.ListSubOrderRequest.limit)
}
inline ::int64_t ListSubOrderRequest::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void ListSubOrderRequest::_internal_set_limit(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// int64 offset = 4;
inline void ListSubOrderRequest::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = ::int64_t{0};
}
inline ::int64_t ListSubOrderRequest::offset() const {
  // @@protoc_insertion_point(field_get:order.ListSubOrderRequest.offset)
  return _internal_offset();
}
inline void ListSubOrderRequest::set_offset(::int64_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:order.ListSubOrderRequest.offset)
}
inline ::int64_t ListSubOrderRequest::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void ListSubOrderRequest::_internal_set_offset(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// int64 organization_id = 5;
inline void ListSubOrderRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t ListSubOrderRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:order.ListSubOrderRequest.organization_id)
  return _internal_organization_id();
}
inline void ListSubOrderRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:order.ListSubOrderRequest.organization_id)
}
inline ::int64_t ListSubOrderRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void ListSubOrderRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// -------------------------------------------------------------------

// ListSubOrderResponse

// repeated .order.SubOrder orders = 1;
inline int ListSubOrderResponse::_internal_orders_size() const {
  return _internal_orders().size();
}
inline int ListSubOrderResponse::orders_size() const {
  return _internal_orders_size();
}
inline void ListSubOrderResponse::clear_orders() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.orders_.Clear();
}
inline ::order::SubOrder* ListSubOrderResponse::mutable_orders(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:order.ListSubOrderResponse.orders)
  return _internal_mutable_orders()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::order::SubOrder>* ListSubOrderResponse::mutable_orders()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:order.ListSubOrderResponse.orders)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_orders();
}
inline const ::order::SubOrder& ListSubOrderResponse::orders(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.ListSubOrderResponse.orders)
  return _internal_orders().Get(index);
}
inline ::order::SubOrder* ListSubOrderResponse::add_orders() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::order::SubOrder* _add = _internal_mutable_orders()->Add();
  // @@protoc_insertion_point(field_add:order.ListSubOrderResponse.orders)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::order::SubOrder>& ListSubOrderResponse::orders() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:order.ListSubOrderResponse.orders)
  return _internal_orders();
}
inline const ::google::protobuf::RepeatedPtrField<::order::SubOrder>&
ListSubOrderResponse::_internal_orders() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.orders_;
}
inline ::google::protobuf::RepeatedPtrField<::order::SubOrder>*
ListSubOrderResponse::_internal_mutable_orders() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.orders_;
}

// int64 total_count = 2;
inline void ListSubOrderResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = ::int64_t{0};
}
inline ::int64_t ListSubOrderResponse::total_count() const {
  // @@protoc_insertion_point(field_get:order.ListSubOrderResponse.total_count)
  return _internal_total_count();
}
inline void ListSubOrderResponse::set_total_count(::int64_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:order.ListSubOrderResponse.total_count)
}
inline ::int64_t ListSubOrderResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void ListSubOrderResponse::_internal_set_total_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// -------------------------------------------------------------------

// UpdateSubOrderRequest

// int64 id = 1;
inline void UpdateSubOrderRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t UpdateSubOrderRequest::id() const {
  // @@protoc_insertion_point(field_get:order.UpdateSubOrderRequest.id)
  return _internal_id();
}
inline void UpdateSubOrderRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:order.UpdateSubOrderRequest.id)
}
inline ::int64_t UpdateSubOrderRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void UpdateSubOrderRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// float original_total = 2;
inline void UpdateSubOrderRequest::clear_original_total() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_total_ = 0;
}
inline float UpdateSubOrderRequest::original_total() const {
  // @@protoc_insertion_point(field_get:order.UpdateSubOrderRequest.original_total)
  return _internal_original_total();
}
inline void UpdateSubOrderRequest::set_original_total(float value) {
  _internal_set_original_total(value);
  // @@protoc_insertion_point(field_set:order.UpdateSubOrderRequest.original_total)
}
inline float UpdateSubOrderRequest::_internal_original_total() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.original_total_;
}
inline void UpdateSubOrderRequest::_internal_set_original_total(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_total_ = value;
}

// float final_total = 3;
inline void UpdateSubOrderRequest::clear_final_total() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_total_ = 0;
}
inline float UpdateSubOrderRequest::final_total() const {
  // @@protoc_insertion_point(field_get:order.UpdateSubOrderRequest.final_total)
  return _internal_final_total();
}
inline void UpdateSubOrderRequest::set_final_total(float value) {
  _internal_set_final_total(value);
  // @@protoc_insertion_point(field_set:order.UpdateSubOrderRequest.final_total)
}
inline float UpdateSubOrderRequest::_internal_final_total() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.final_total_;
}
inline void UpdateSubOrderRequest::_internal_set_final_total(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_total_ = value;
}

// string invoice_pdf = 4;
inline void UpdateSubOrderRequest::clear_invoice_pdf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invoice_pdf_.ClearToEmpty();
}
inline const std::string& UpdateSubOrderRequest::invoice_pdf() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.UpdateSubOrderRequest.invoice_pdf)
  return _internal_invoice_pdf();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateSubOrderRequest::set_invoice_pdf(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invoice_pdf_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.UpdateSubOrderRequest.invoice_pdf)
}
inline std::string* UpdateSubOrderRequest::mutable_invoice_pdf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_invoice_pdf();
  // @@protoc_insertion_point(field_mutable:order.UpdateSubOrderRequest.invoice_pdf)
  return _s;
}
inline const std::string& UpdateSubOrderRequest::_internal_invoice_pdf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.invoice_pdf_.Get();
}
inline void UpdateSubOrderRequest::_internal_set_invoice_pdf(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invoice_pdf_.Set(value, GetArena());
}
inline std::string* UpdateSubOrderRequest::_internal_mutable_invoice_pdf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.invoice_pdf_.Mutable( GetArena());
}
inline std::string* UpdateSubOrderRequest::release_invoice_pdf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.UpdateSubOrderRequest.invoice_pdf)
  return _impl_.invoice_pdf_.Release();
}
inline void UpdateSubOrderRequest::set_allocated_invoice_pdf(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invoice_pdf_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.invoice_pdf_.IsDefault()) {
    _impl_.invoice_pdf_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.UpdateSubOrderRequest.invoice_pdf)
}

// repeated .order.OrderItem order_items = 5;
inline int UpdateSubOrderRequest::_internal_order_items_size() const {
  return _internal_order_items().size();
}
inline int UpdateSubOrderRequest::order_items_size() const {
  return _internal_order_items_size();
}
inline void UpdateSubOrderRequest::clear_order_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_items_.Clear();
}
inline ::order::OrderItem* UpdateSubOrderRequest::mutable_order_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:order.UpdateSubOrderRequest.order_items)
  return _internal_mutable_order_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::order::OrderItem>* UpdateSubOrderRequest::mutable_order_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:order.UpdateSubOrderRequest.order_items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_order_items();
}
inline const ::order::OrderItem& UpdateSubOrderRequest::order_items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.UpdateSubOrderRequest.order_items)
  return _internal_order_items().Get(index);
}
inline ::order::OrderItem* UpdateSubOrderRequest::add_order_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::order::OrderItem* _add = _internal_mutable_order_items()->Add();
  // @@protoc_insertion_point(field_add:order.UpdateSubOrderRequest.order_items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::order::OrderItem>& UpdateSubOrderRequest::order_items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:order.UpdateSubOrderRequest.order_items)
  return _internal_order_items();
}
inline const ::google::protobuf::RepeatedPtrField<::order::OrderItem>&
UpdateSubOrderRequest::_internal_order_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_items_;
}
inline ::google::protobuf::RepeatedPtrField<::order::OrderItem>*
UpdateSubOrderRequest::_internal_mutable_order_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.order_items_;
}

// string status = 6;
inline void UpdateSubOrderRequest::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& UpdateSubOrderRequest::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.UpdateSubOrderRequest.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateSubOrderRequest::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:order.UpdateSubOrderRequest.status)
}
inline std::string* UpdateSubOrderRequest::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:order.UpdateSubOrderRequest.status)
  return _s;
}
inline const std::string& UpdateSubOrderRequest::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void UpdateSubOrderRequest::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(value, GetArena());
}
inline std::string* UpdateSubOrderRequest::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* UpdateSubOrderRequest::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.UpdateSubOrderRequest.status)
  return _impl_.status_.Release();
}
inline void UpdateSubOrderRequest::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_.IsDefault()) {
    _impl_.status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:order.UpdateSubOrderRequest.status)
}

// int64 order_index = 7;
inline void UpdateSubOrderRequest::clear_order_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_index_ = ::int64_t{0};
}
inline ::int64_t UpdateSubOrderRequest::order_index() const {
  // @@protoc_insertion_point(field_get:order.UpdateSubOrderRequest.order_index)
  return _internal_order_index();
}
inline void UpdateSubOrderRequest::set_order_index(::int64_t value) {
  _internal_set_order_index(value);
  // @@protoc_insertion_point(field_set:order.UpdateSubOrderRequest.order_index)
}
inline ::int64_t UpdateSubOrderRequest::_internal_order_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_index_;
}
inline void UpdateSubOrderRequest::_internal_set_order_index(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_index_ = value;
}

// -------------------------------------------------------------------

// UpdateSubOrderResponse

// .order.SubOrderModel suborder = 1;
inline bool UpdateSubOrderResponse::has_suborder() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.suborder_ != nullptr);
  return value;
}
inline void UpdateSubOrderResponse::clear_suborder() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.suborder_ != nullptr) _impl_.suborder_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::order::SubOrderModel& UpdateSubOrderResponse::_internal_suborder() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::order::SubOrderModel* p = _impl_.suborder_;
  return p != nullptr ? *p : reinterpret_cast<const ::order::SubOrderModel&>(::order::_SubOrderModel_default_instance_);
}
inline const ::order::SubOrderModel& UpdateSubOrderResponse::suborder() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.UpdateSubOrderResponse.suborder)
  return _internal_suborder();
}
inline void UpdateSubOrderResponse::unsafe_arena_set_allocated_suborder(::order::SubOrderModel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.suborder_);
  }
  _impl_.suborder_ = reinterpret_cast<::order::SubOrderModel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:order.UpdateSubOrderResponse.suborder)
}
inline ::order::SubOrderModel* UpdateSubOrderResponse::release_suborder() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::order::SubOrderModel* released = _impl_.suborder_;
  _impl_.suborder_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::order::SubOrderModel* UpdateSubOrderResponse::unsafe_arena_release_suborder() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.UpdateSubOrderResponse.suborder)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::order::SubOrderModel* temp = _impl_.suborder_;
  _impl_.suborder_ = nullptr;
  return temp;
}
inline ::order::SubOrderModel* UpdateSubOrderResponse::_internal_mutable_suborder() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.suborder_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::order::SubOrderModel>(GetArena());
    _impl_.suborder_ = reinterpret_cast<::order::SubOrderModel*>(p);
  }
  return _impl_.suborder_;
}
inline ::order::SubOrderModel* UpdateSubOrderResponse::mutable_suborder() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::order::SubOrderModel* _msg = _internal_mutable_suborder();
  // @@protoc_insertion_point(field_mutable:order.UpdateSubOrderResponse.suborder)
  return _msg;
}
inline void UpdateSubOrderResponse::set_allocated_suborder(::order::SubOrderModel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.suborder_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.suborder_ = reinterpret_cast<::order::SubOrderModel*>(value);
  // @@protoc_insertion_point(field_set_allocated:order.UpdateSubOrderResponse.suborder)
}

// -------------------------------------------------------------------

// AddProductToCartRequest

// .order.Cart cart = 1;
inline bool AddProductToCartRequest::has_cart() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cart_ != nullptr);
  return value;
}
inline void AddProductToCartRequest::clear_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cart_ != nullptr) _impl_.cart_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::order::Cart& AddProductToCartRequest::_internal_cart() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::order::Cart* p = _impl_.cart_;
  return p != nullptr ? *p : reinterpret_cast<const ::order::Cart&>(::order::_Cart_default_instance_);
}
inline const ::order::Cart& AddProductToCartRequest::cart() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.AddProductToCartRequest.cart)
  return _internal_cart();
}
inline void AddProductToCartRequest::unsafe_arena_set_allocated_cart(::order::Cart* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cart_);
  }
  _impl_.cart_ = reinterpret_cast<::order::Cart*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:order.AddProductToCartRequest.cart)
}
inline ::order::Cart* AddProductToCartRequest::release_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::order::Cart* released = _impl_.cart_;
  _impl_.cart_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::order::Cart* AddProductToCartRequest::unsafe_arena_release_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.AddProductToCartRequest.cart)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::order::Cart* temp = _impl_.cart_;
  _impl_.cart_ = nullptr;
  return temp;
}
inline ::order::Cart* AddProductToCartRequest::_internal_mutable_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cart_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::order::Cart>(GetArena());
    _impl_.cart_ = reinterpret_cast<::order::Cart*>(p);
  }
  return _impl_.cart_;
}
inline ::order::Cart* AddProductToCartRequest::mutable_cart() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::order::Cart* _msg = _internal_mutable_cart();
  // @@protoc_insertion_point(field_mutable:order.AddProductToCartRequest.cart)
  return _msg;
}
inline void AddProductToCartRequest::set_allocated_cart(::order::Cart* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.cart_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.cart_ = reinterpret_cast<::order::Cart*>(value);
  // @@protoc_insertion_point(field_set_allocated:order.AddProductToCartRequest.cart)
}

// -------------------------------------------------------------------

// AddProductToCartResponse

// .order.Cart cart = 1;
inline bool AddProductToCartResponse::has_cart() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cart_ != nullptr);
  return value;
}
inline void AddProductToCartResponse::clear_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cart_ != nullptr) _impl_.cart_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::order::Cart& AddProductToCartResponse::_internal_cart() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::order::Cart* p = _impl_.cart_;
  return p != nullptr ? *p : reinterpret_cast<const ::order::Cart&>(::order::_Cart_default_instance_);
}
inline const ::order::Cart& AddProductToCartResponse::cart() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.AddProductToCartResponse.cart)
  return _internal_cart();
}
inline void AddProductToCartResponse::unsafe_arena_set_allocated_cart(::order::Cart* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cart_);
  }
  _impl_.cart_ = reinterpret_cast<::order::Cart*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:order.AddProductToCartResponse.cart)
}
inline ::order::Cart* AddProductToCartResponse::release_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::order::Cart* released = _impl_.cart_;
  _impl_.cart_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::order::Cart* AddProductToCartResponse::unsafe_arena_release_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.AddProductToCartResponse.cart)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::order::Cart* temp = _impl_.cart_;
  _impl_.cart_ = nullptr;
  return temp;
}
inline ::order::Cart* AddProductToCartResponse::_internal_mutable_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cart_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::order::Cart>(GetArena());
    _impl_.cart_ = reinterpret_cast<::order::Cart*>(p);
  }
  return _impl_.cart_;
}
inline ::order::Cart* AddProductToCartResponse::mutable_cart() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::order::Cart* _msg = _internal_mutable_cart();
  // @@protoc_insertion_point(field_mutable:order.AddProductToCartResponse.cart)
  return _msg;
}
inline void AddProductToCartResponse::set_allocated_cart(::order::Cart* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.cart_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.cart_ = reinterpret_cast<::order::Cart*>(value);
  // @@protoc_insertion_point(field_set_allocated:order.AddProductToCartResponse.cart)
}

// -------------------------------------------------------------------

// DeleteProductFromCartRequest

// .order.Cart cart = 1;
inline bool DeleteProductFromCartRequest::has_cart() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cart_ != nullptr);
  return value;
}
inline void DeleteProductFromCartRequest::clear_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cart_ != nullptr) _impl_.cart_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::order::Cart& DeleteProductFromCartRequest::_internal_cart() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::order::Cart* p = _impl_.cart_;
  return p != nullptr ? *p : reinterpret_cast<const ::order::Cart&>(::order::_Cart_default_instance_);
}
inline const ::order::Cart& DeleteProductFromCartRequest::cart() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.DeleteProductFromCartRequest.cart)
  return _internal_cart();
}
inline void DeleteProductFromCartRequest::unsafe_arena_set_allocated_cart(::order::Cart* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cart_);
  }
  _impl_.cart_ = reinterpret_cast<::order::Cart*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:order.DeleteProductFromCartRequest.cart)
}
inline ::order::Cart* DeleteProductFromCartRequest::release_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::order::Cart* released = _impl_.cart_;
  _impl_.cart_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::order::Cart* DeleteProductFromCartRequest::unsafe_arena_release_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.DeleteProductFromCartRequest.cart)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::order::Cart* temp = _impl_.cart_;
  _impl_.cart_ = nullptr;
  return temp;
}
inline ::order::Cart* DeleteProductFromCartRequest::_internal_mutable_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cart_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::order::Cart>(GetArena());
    _impl_.cart_ = reinterpret_cast<::order::Cart*>(p);
  }
  return _impl_.cart_;
}
inline ::order::Cart* DeleteProductFromCartRequest::mutable_cart() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::order::Cart* _msg = _internal_mutable_cart();
  // @@protoc_insertion_point(field_mutable:order.DeleteProductFromCartRequest.cart)
  return _msg;
}
inline void DeleteProductFromCartRequest::set_allocated_cart(::order::Cart* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.cart_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.cart_ = reinterpret_cast<::order::Cart*>(value);
  // @@protoc_insertion_point(field_set_allocated:order.DeleteProductFromCartRequest.cart)
}

// -------------------------------------------------------------------

// DeleteProductFromCartResponse

// .order.Cart cart = 1;
inline bool DeleteProductFromCartResponse::has_cart() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cart_ != nullptr);
  return value;
}
inline void DeleteProductFromCartResponse::clear_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cart_ != nullptr) _impl_.cart_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::order::Cart& DeleteProductFromCartResponse::_internal_cart() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::order::Cart* p = _impl_.cart_;
  return p != nullptr ? *p : reinterpret_cast<const ::order::Cart&>(::order::_Cart_default_instance_);
}
inline const ::order::Cart& DeleteProductFromCartResponse::cart() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.DeleteProductFromCartResponse.cart)
  return _internal_cart();
}
inline void DeleteProductFromCartResponse::unsafe_arena_set_allocated_cart(::order::Cart* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cart_);
  }
  _impl_.cart_ = reinterpret_cast<::order::Cart*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:order.DeleteProductFromCartResponse.cart)
}
inline ::order::Cart* DeleteProductFromCartResponse::release_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::order::Cart* released = _impl_.cart_;
  _impl_.cart_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::order::Cart* DeleteProductFromCartResponse::unsafe_arena_release_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.DeleteProductFromCartResponse.cart)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::order::Cart* temp = _impl_.cart_;
  _impl_.cart_ = nullptr;
  return temp;
}
inline ::order::Cart* DeleteProductFromCartResponse::_internal_mutable_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cart_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::order::Cart>(GetArena());
    _impl_.cart_ = reinterpret_cast<::order::Cart*>(p);
  }
  return _impl_.cart_;
}
inline ::order::Cart* DeleteProductFromCartResponse::mutable_cart() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::order::Cart* _msg = _internal_mutable_cart();
  // @@protoc_insertion_point(field_mutable:order.DeleteProductFromCartResponse.cart)
  return _msg;
}
inline void DeleteProductFromCartResponse::set_allocated_cart(::order::Cart* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.cart_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.cart_ = reinterpret_cast<::order::Cart*>(value);
  // @@protoc_insertion_point(field_set_allocated:order.DeleteProductFromCartResponse.cart)
}

// -------------------------------------------------------------------

// ListCartRequest

// int64 organization_id = 1;
inline void ListCartRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t ListCartRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:order.ListCartRequest.organization_id)
  return _internal_organization_id();
}
inline void ListCartRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:order.ListCartRequest.organization_id)
}
inline ::int64_t ListCartRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void ListCartRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// -------------------------------------------------------------------

// ListCartResponse

// .order.Cart cart = 1;
inline bool ListCartResponse::has_cart() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cart_ != nullptr);
  return value;
}
inline void ListCartResponse::clear_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cart_ != nullptr) _impl_.cart_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::order::Cart& ListCartResponse::_internal_cart() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::order::Cart* p = _impl_.cart_;
  return p != nullptr ? *p : reinterpret_cast<const ::order::Cart&>(::order::_Cart_default_instance_);
}
inline const ::order::Cart& ListCartResponse::cart() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.ListCartResponse.cart)
  return _internal_cart();
}
inline void ListCartResponse::unsafe_arena_set_allocated_cart(::order::Cart* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cart_);
  }
  _impl_.cart_ = reinterpret_cast<::order::Cart*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:order.ListCartResponse.cart)
}
inline ::order::Cart* ListCartResponse::release_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::order::Cart* released = _impl_.cart_;
  _impl_.cart_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::order::Cart* ListCartResponse::unsafe_arena_release_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:order.ListCartResponse.cart)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::order::Cart* temp = _impl_.cart_;
  _impl_.cart_ = nullptr;
  return temp;
}
inline ::order::Cart* ListCartResponse::_internal_mutable_cart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cart_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::order::Cart>(GetArena());
    _impl_.cart_ = reinterpret_cast<::order::Cart*>(p);
  }
  return _impl_.cart_;
}
inline ::order::Cart* ListCartResponse::mutable_cart() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::order::Cart* _msg = _internal_mutable_cart();
  // @@protoc_insertion_point(field_mutable:order.ListCartResponse.cart)
  return _msg;
}
inline void ListCartResponse::set_allocated_cart(::order::Cart* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.cart_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.cart_ = reinterpret_cast<::order::Cart*>(value);
  // @@protoc_insertion_point(field_set_allocated:order.ListCartResponse.cart)
}

// -------------------------------------------------------------------

// GetCountOfProductInCartRequest

// int64 organization_id = 1;
inline void GetCountOfProductInCartRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t GetCountOfProductInCartRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:order.GetCountOfProductInCartRequest.organization_id)
  return _internal_organization_id();
}
inline void GetCountOfProductInCartRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:order.GetCountOfProductInCartRequest.organization_id)
}
inline ::int64_t GetCountOfProductInCartRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void GetCountOfProductInCartRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// int64 product_id = 2;
inline void GetCountOfProductInCartRequest::clear_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = ::int64_t{0};
}
inline ::int64_t GetCountOfProductInCartRequest::product_id() const {
  // @@protoc_insertion_point(field_get:order.GetCountOfProductInCartRequest.product_id)
  return _internal_product_id();
}
inline void GetCountOfProductInCartRequest::set_product_id(::int64_t value) {
  _internal_set_product_id(value);
  // @@protoc_insertion_point(field_set:order.GetCountOfProductInCartRequest.product_id)
}
inline ::int64_t GetCountOfProductInCartRequest::_internal_product_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_id_;
}
inline void GetCountOfProductInCartRequest::_internal_set_product_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_ = value;
}

// -------------------------------------------------------------------

// GetCountOfProductInCartResponse

// int64 count = 1;
inline void GetCountOfProductInCartResponse::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = ::int64_t{0};
}
inline ::int64_t GetCountOfProductInCartResponse::count() const {
  // @@protoc_insertion_point(field_get:order.GetCountOfProductInCartResponse.count)
  return _internal_count();
}
inline void GetCountOfProductInCartResponse::set_count(::int64_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:order.GetCountOfProductInCartResponse.count)
}
inline ::int64_t GetCountOfProductInCartResponse::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void GetCountOfProductInCartResponse::_internal_set_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// -------------------------------------------------------------------

// CreateOrderRequest

// int64 organization_id = 1;
inline void CreateOrderRequest::clear_organization_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = ::int64_t{0};
}
inline ::int64_t CreateOrderRequest::organization_id() const {
  // @@protoc_insertion_point(field_get:order.CreateOrderRequest.organization_id)
  return _internal_organization_id();
}
inline void CreateOrderRequest::set_organization_id(::int64_t value) {
  _internal_set_organization_id(value);
  // @@protoc_insertion_point(field_set:order.CreateOrderRequest.organization_id)
}
inline ::int64_t CreateOrderRequest::_internal_organization_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_id_;
}
inline void CreateOrderRequest::_internal_set_organization_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_id_ = value;
}

// -------------------------------------------------------------------

// CreateOrderResponse

// repeated .order.SubOrder suborders = 1;
inline int CreateOrderResponse::_internal_suborders_size() const {
  return _internal_suborders().size();
}
inline int CreateOrderResponse::suborders_size() const {
  return _internal_suborders_size();
}
inline void CreateOrderResponse::clear_suborders() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.suborders_.Clear();
}
inline ::order::SubOrder* CreateOrderResponse::mutable_suborders(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:order.CreateOrderResponse.suborders)
  return _internal_mutable_suborders()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::order::SubOrder>* CreateOrderResponse::mutable_suborders()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:order.CreateOrderResponse.suborders)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_suborders();
}
inline const ::order::SubOrder& CreateOrderResponse::suborders(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:order.CreateOrderResponse.suborders)
  return _internal_suborders().Get(index);
}
inline ::order::SubOrder* CreateOrderResponse::add_suborders() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::order::SubOrder* _add = _internal_mutable_suborders()->Add();
  // @@protoc_insertion_point(field_add:order.CreateOrderResponse.suborders)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::order::SubOrder>& CreateOrderResponse::suborders() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:order.CreateOrderResponse.suborders)
  return _internal_suborders();
}
inline const ::google::protobuf::RepeatedPtrField<::order::SubOrder>&
CreateOrderResponse::_internal_suborders() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.suborders_;
}
inline ::google::protobuf::RepeatedPtrField<::order::SubOrder>*
CreateOrderResponse::_internal_mutable_suborders() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.suborders_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace order


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // order_2forder_2eproto_2epb_2eh

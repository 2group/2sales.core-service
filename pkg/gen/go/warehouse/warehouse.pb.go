// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: warehouse/warehouse.proto

package warehousev1

import (
	organization "github.com/2group/2sales.core-service/pkg/gen/go/organization"
	product "github.com/2group/2sales.core-service/pkg/gen/go/product"
	user "github.com/2group/2sales.core-service/pkg/gen/go/user"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WarehouseModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrganizationId int64                      `protobuf:"varint,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Name           string                     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Address        *organization.AddressModel `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Count          int64                      `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	Products       []*WarehouseProducts       `protobuf:"bytes,6,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *WarehouseModel) Reset() {
	*x = WarehouseModel{}
	mi := &file_warehouse_warehouse_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WarehouseModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarehouseModel) ProtoMessage() {}

func (x *WarehouseModel) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarehouseModel.ProtoReflect.Descriptor instead.
func (*WarehouseModel) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{0}
}

func (x *WarehouseModel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WarehouseModel) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *WarehouseModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WarehouseModel) GetAddress() *organization.AddressModel {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *WarehouseModel) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *WarehouseModel) GetProducts() []*WarehouseProducts {
	if x != nil {
		return x.Products
	}
	return nil
}

type Warehouse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrganizationId int64                      `protobuf:"varint,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Name           string                     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Address        *organization.AddressModel `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Count          int64                      `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	Products       []*WarehouseProducts       `protobuf:"bytes,6,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *Warehouse) Reset() {
	*x = Warehouse{}
	mi := &file_warehouse_warehouse_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Warehouse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Warehouse) ProtoMessage() {}

func (x *Warehouse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Warehouse.ProtoReflect.Descriptor instead.
func (*Warehouse) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{1}
}

func (x *Warehouse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Warehouse) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *Warehouse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Warehouse) GetAddress() *organization.AddressModel {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Warehouse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Warehouse) GetProducts() []*WarehouseProducts {
	if x != nil {
		return x.Products
	}
	return nil
}

type WarehouseAnalytics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductCount int64   `protobuf:"varint,1,opt,name=product_count,json=productCount,proto3" json:"product_count,omitempty"`
	Occupancy    float32 `protobuf:"fixed32,2,opt,name=occupancy,proto3" json:"occupancy,omitempty"`
	DefectRate   float32 `protobuf:"fixed32,3,opt,name=defect_rate,json=defectRate,proto3" json:"defect_rate,omitempty"`
}

func (x *WarehouseAnalytics) Reset() {
	*x = WarehouseAnalytics{}
	mi := &file_warehouse_warehouse_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WarehouseAnalytics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarehouseAnalytics) ProtoMessage() {}

func (x *WarehouseAnalytics) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarehouseAnalytics.ProtoReflect.Descriptor instead.
func (*WarehouseAnalytics) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{2}
}

func (x *WarehouseAnalytics) GetProductCount() int64 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

func (x *WarehouseAnalytics) GetOccupancy() float32 {
	if x != nil {
		return x.Occupancy
	}
	return 0
}

func (x *WarehouseAnalytics) GetDefectRate() float32 {
	if x != nil {
		return x.DefectRate
	}
	return 0
}

type WarehouseProducts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId int64                 `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Quantity  int64                 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Product   *product.ProductModel `protobuf:"bytes,4,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *WarehouseProducts) Reset() {
	*x = WarehouseProducts{}
	mi := &file_warehouse_warehouse_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WarehouseProducts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarehouseProducts) ProtoMessage() {}

func (x *WarehouseProducts) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarehouseProducts.ProtoReflect.Descriptor instead.
func (*WarehouseProducts) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{3}
}

func (x *WarehouseProducts) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WarehouseProducts) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *WarehouseProducts) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *WarehouseProducts) GetProduct() *product.ProductModel {
	if x != nil {
		return x.Product
	}
	return nil
}

type Acceptence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Organization *organization.Organization `protobuf:"bytes,2,opt,name=organization,proto3" json:"organization,omitempty"`
	Counterparty *organization.Organization `protobuf:"bytes,3,opt,name=counterparty,proto3" json:"counterparty,omitempty"`
	Warehouse    *Warehouse                 `protobuf:"bytes,4,opt,name=warehouse,proto3" json:"warehouse,omitempty"`
	DocumentUrl  *string                    `protobuf:"bytes,5,opt,name=document_url,json=documentUrl,proto3,oneof" json:"document_url,omitempty"`
	User         *user.User                 `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	Products     []*AccpetenceProduct       `protobuf:"bytes,7,rep,name=products,proto3" json:"products,omitempty"`
	CreatedAt    string                     `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Acceptence) Reset() {
	*x = Acceptence{}
	mi := &file_warehouse_warehouse_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Acceptence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acceptence) ProtoMessage() {}

func (x *Acceptence) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acceptence.ProtoReflect.Descriptor instead.
func (*Acceptence) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{4}
}

func (x *Acceptence) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Acceptence) GetOrganization() *organization.Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

func (x *Acceptence) GetCounterparty() *organization.Organization {
	if x != nil {
		return x.Counterparty
	}
	return nil
}

func (x *Acceptence) GetWarehouse() *Warehouse {
	if x != nil {
		return x.Warehouse
	}
	return nil
}

func (x *Acceptence) GetDocumentUrl() string {
	if x != nil && x.DocumentUrl != nil {
		return *x.DocumentUrl
	}
	return ""
}

func (x *Acceptence) GetUser() *user.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Acceptence) GetProducts() []*AccpetenceProduct {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *Acceptence) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type AcceptenceModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrganizationId int64   `protobuf:"varint,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	CounterpartyId int64   `protobuf:"varint,3,opt,name=counterparty_id,json=counterpartyId,proto3" json:"counterparty_id,omitempty"`
	WarehouseId    int64   `protobuf:"varint,4,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id,omitempty"`
	DocumentUrl    *string `protobuf:"bytes,5,opt,name=document_url,json=documentUrl,proto3,oneof" json:"document_url,omitempty"`
	UserId         int64   `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatedAt      string  `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *AcceptenceModel) Reset() {
	*x = AcceptenceModel{}
	mi := &file_warehouse_warehouse_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptenceModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptenceModel) ProtoMessage() {}

func (x *AcceptenceModel) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptenceModel.ProtoReflect.Descriptor instead.
func (*AcceptenceModel) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{5}
}

func (x *AcceptenceModel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AcceptenceModel) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *AcceptenceModel) GetCounterpartyId() int64 {
	if x != nil {
		return x.CounterpartyId
	}
	return 0
}

func (x *AcceptenceModel) GetWarehouseId() int64 {
	if x != nil {
		return x.WarehouseId
	}
	return 0
}

func (x *AcceptenceModel) GetDocumentUrl() string {
	if x != nil && x.DocumentUrl != nil {
		return *x.DocumentUrl
	}
	return ""
}

func (x *AcceptenceModel) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AcceptenceModel) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type AccpetenceProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Product  *product.Product `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
	Quantity int64            `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price    float32          `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *AccpetenceProduct) Reset() {
	*x = AccpetenceProduct{}
	mi := &file_warehouse_warehouse_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccpetenceProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccpetenceProduct) ProtoMessage() {}

func (x *AccpetenceProduct) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccpetenceProduct.ProtoReflect.Descriptor instead.
func (*AccpetenceProduct) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{6}
}

func (x *AccpetenceProduct) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccpetenceProduct) GetProduct() *product.Product {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *AccpetenceProduct) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *AccpetenceProduct) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type AccpetenceProductModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId int64   `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Quantity  int64   `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price     float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *AccpetenceProductModel) Reset() {
	*x = AccpetenceProductModel{}
	mi := &file_warehouse_warehouse_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccpetenceProductModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccpetenceProductModel) ProtoMessage() {}

func (x *AccpetenceProductModel) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccpetenceProductModel.ProtoReflect.Descriptor instead.
func (*AccpetenceProductModel) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{7}
}

func (x *AccpetenceProductModel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccpetenceProductModel) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *AccpetenceProductModel) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *AccpetenceProductModel) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type CreateWarehouseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	OrganizationId int64                      `protobuf:"varint,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Address        *organization.AddressModel `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *CreateWarehouseRequest) Reset() {
	*x = CreateWarehouseRequest{}
	mi := &file_warehouse_warehouse_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWarehouseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWarehouseRequest) ProtoMessage() {}

func (x *CreateWarehouseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWarehouseRequest.ProtoReflect.Descriptor instead.
func (*CreateWarehouseRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{8}
}

func (x *CreateWarehouseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateWarehouseRequest) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *CreateWarehouseRequest) GetAddress() *organization.AddressModel {
	if x != nil {
		return x.Address
	}
	return nil
}

type CreateWarehouseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Warehouse *WarehouseModel `protobuf:"bytes,1,opt,name=warehouse,proto3" json:"warehouse,omitempty"`
}

func (x *CreateWarehouseResponse) Reset() {
	*x = CreateWarehouseResponse{}
	mi := &file_warehouse_warehouse_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWarehouseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWarehouseResponse) ProtoMessage() {}

func (x *CreateWarehouseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWarehouseResponse.ProtoReflect.Descriptor instead.
func (*CreateWarehouseResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{9}
}

func (x *CreateWarehouseResponse) GetWarehouse() *WarehouseModel {
	if x != nil {
		return x.Warehouse
	}
	return nil
}

type ListWarehousesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId int64 `protobuf:"varint,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
}

func (x *ListWarehousesRequest) Reset() {
	*x = ListWarehousesRequest{}
	mi := &file_warehouse_warehouse_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWarehousesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWarehousesRequest) ProtoMessage() {}

func (x *ListWarehousesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWarehousesRequest.ProtoReflect.Descriptor instead.
func (*ListWarehousesRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{10}
}

func (x *ListWarehousesRequest) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

type ListWarehousesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Warehouses []*WarehouseModel `protobuf:"bytes,1,rep,name=warehouses,proto3" json:"warehouses,omitempty"`
}

func (x *ListWarehousesResponse) Reset() {
	*x = ListWarehousesResponse{}
	mi := &file_warehouse_warehouse_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWarehousesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWarehousesResponse) ProtoMessage() {}

func (x *ListWarehousesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWarehousesResponse.ProtoReflect.Descriptor instead.
func (*ListWarehousesResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{11}
}

func (x *ListWarehousesResponse) GetWarehouses() []*WarehouseModel {
	if x != nil {
		return x.Warehouses
	}
	return nil
}

type UpdateWarehouseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string                     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address *organization.AddressModel `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *UpdateWarehouseRequest) Reset() {
	*x = UpdateWarehouseRequest{}
	mi := &file_warehouse_warehouse_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWarehouseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWarehouseRequest) ProtoMessage() {}

func (x *UpdateWarehouseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWarehouseRequest.ProtoReflect.Descriptor instead.
func (*UpdateWarehouseRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateWarehouseRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateWarehouseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateWarehouseRequest) GetAddress() *organization.AddressModel {
	if x != nil {
		return x.Address
	}
	return nil
}

type UpdateWarehouseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Warehouse *WarehouseModel `protobuf:"bytes,1,opt,name=warehouse,proto3" json:"warehouse,omitempty"`
}

func (x *UpdateWarehouseResponse) Reset() {
	*x = UpdateWarehouseResponse{}
	mi := &file_warehouse_warehouse_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWarehouseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWarehouseResponse) ProtoMessage() {}

func (x *UpdateWarehouseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWarehouseResponse.ProtoReflect.Descriptor instead.
func (*UpdateWarehouseResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateWarehouseResponse) GetWarehouse() *WarehouseModel {
	if x != nil {
		return x.Warehouse
	}
	return nil
}

type GetProductsInWarehouseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WarehouseId int64  `protobuf:"varint,1,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id,omitempty"`
	Page        int64  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize    int64  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	SortBy      string `protobuf:"bytes,5,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	IsAscending bool   `protobuf:"varint,6,opt,name=is_ascending,json=isAscending,proto3" json:"is_ascending,omitempty"`
}

func (x *GetProductsInWarehouseRequest) Reset() {
	*x = GetProductsInWarehouseRequest{}
	mi := &file_warehouse_warehouse_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductsInWarehouseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductsInWarehouseRequest) ProtoMessage() {}

func (x *GetProductsInWarehouseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductsInWarehouseRequest.ProtoReflect.Descriptor instead.
func (*GetProductsInWarehouseRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{14}
}

func (x *GetProductsInWarehouseRequest) GetWarehouseId() int64 {
	if x != nil {
		return x.WarehouseId
	}
	return 0
}

func (x *GetProductsInWarehouseRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetProductsInWarehouseRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetProductsInWarehouseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetProductsInWarehouseRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *GetProductsInWarehouseRequest) GetIsAscending() bool {
	if x != nil {
		return x.IsAscending
	}
	return false
}

type GetProductsInWarehouseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products []*WarehouseProducts `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *GetProductsInWarehouseResponse) Reset() {
	*x = GetProductsInWarehouseResponse{}
	mi := &file_warehouse_warehouse_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductsInWarehouseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductsInWarehouseResponse) ProtoMessage() {}

func (x *GetProductsInWarehouseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductsInWarehouseResponse.ProtoReflect.Descriptor instead.
func (*GetProductsInWarehouseResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{15}
}

func (x *GetProductsInWarehouseResponse) GetProducts() []*WarehouseProducts {
	if x != nil {
		return x.Products
	}
	return nil
}

type GetWarehouseAnalyticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WarehouseId int64 `protobuf:"varint,1,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id,omitempty"`
}

func (x *GetWarehouseAnalyticsRequest) Reset() {
	*x = GetWarehouseAnalyticsRequest{}
	mi := &file_warehouse_warehouse_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWarehouseAnalyticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWarehouseAnalyticsRequest) ProtoMessage() {}

func (x *GetWarehouseAnalyticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWarehouseAnalyticsRequest.ProtoReflect.Descriptor instead.
func (*GetWarehouseAnalyticsRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{16}
}

func (x *GetWarehouseAnalyticsRequest) GetWarehouseId() int64 {
	if x != nil {
		return x.WarehouseId
	}
	return 0
}

type GetWarehouseAnalyticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Analytics *WarehouseAnalytics `protobuf:"bytes,1,opt,name=analytics,proto3" json:"analytics,omitempty"`
}

func (x *GetWarehouseAnalyticsResponse) Reset() {
	*x = GetWarehouseAnalyticsResponse{}
	mi := &file_warehouse_warehouse_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWarehouseAnalyticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWarehouseAnalyticsResponse) ProtoMessage() {}

func (x *GetWarehouseAnalyticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWarehouseAnalyticsResponse.ProtoReflect.Descriptor instead.
func (*GetWarehouseAnalyticsResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{17}
}

func (x *GetWarehouseAnalyticsResponse) GetAnalytics() *WarehouseAnalytics {
	if x != nil {
		return x.Analytics
	}
	return nil
}

type AddProductToWarehouseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WarehouseId int64 `protobuf:"varint,1,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id,omitempty"`
	ProductId   int64 `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Quantity    int64 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *AddProductToWarehouseRequest) Reset() {
	*x = AddProductToWarehouseRequest{}
	mi := &file_warehouse_warehouse_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddProductToWarehouseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductToWarehouseRequest) ProtoMessage() {}

func (x *AddProductToWarehouseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductToWarehouseRequest.ProtoReflect.Descriptor instead.
func (*AddProductToWarehouseRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{18}
}

func (x *AddProductToWarehouseRequest) GetWarehouseId() int64 {
	if x != nil {
		return x.WarehouseId
	}
	return 0
}

func (x *AddProductToWarehouseRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *AddProductToWarehouseRequest) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type AddProductToWarehouseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product *WarehouseProducts `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *AddProductToWarehouseResponse) Reset() {
	*x = AddProductToWarehouseResponse{}
	mi := &file_warehouse_warehouse_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddProductToWarehouseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductToWarehouseResponse) ProtoMessage() {}

func (x *AddProductToWarehouseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductToWarehouseResponse.ProtoReflect.Descriptor instead.
func (*AddProductToWarehouseResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{19}
}

func (x *AddProductToWarehouseResponse) GetProduct() *WarehouseProducts {
	if x != nil {
		return x.Product
	}
	return nil
}

type CreateAcceptenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId int64   `protobuf:"varint,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	CounterpartyId int64   `protobuf:"varint,2,opt,name=counterparty_id,json=counterpartyId,proto3" json:"counterparty_id,omitempty"`
	WarehouseId    int64   `protobuf:"varint,3,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id,omitempty"`
	UserId         int64   `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProductIds     []int64 `protobuf:"varint,6,rep,packed,name=product_ids,json=productIds,proto3" json:"product_ids,omitempty"`
}

func (x *CreateAcceptenceRequest) Reset() {
	*x = CreateAcceptenceRequest{}
	mi := &file_warehouse_warehouse_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAcceptenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAcceptenceRequest) ProtoMessage() {}

func (x *CreateAcceptenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAcceptenceRequest.ProtoReflect.Descriptor instead.
func (*CreateAcceptenceRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{20}
}

func (x *CreateAcceptenceRequest) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *CreateAcceptenceRequest) GetCounterpartyId() int64 {
	if x != nil {
		return x.CounterpartyId
	}
	return 0
}

func (x *CreateAcceptenceRequest) GetWarehouseId() int64 {
	if x != nil {
		return x.WarehouseId
	}
	return 0
}

func (x *CreateAcceptenceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateAcceptenceRequest) GetProductIds() []int64 {
	if x != nil {
		return x.ProductIds
	}
	return nil
}

type CreateAcceptenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acceptence *Acceptence `protobuf:"bytes,1,opt,name=acceptence,proto3" json:"acceptence,omitempty"`
}

func (x *CreateAcceptenceResponse) Reset() {
	*x = CreateAcceptenceResponse{}
	mi := &file_warehouse_warehouse_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAcceptenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAcceptenceResponse) ProtoMessage() {}

func (x *CreateAcceptenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAcceptenceResponse.ProtoReflect.Descriptor instead.
func (*CreateAcceptenceResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{21}
}

func (x *CreateAcceptenceResponse) GetAcceptence() *Acceptence {
	if x != nil {
		return x.Acceptence
	}
	return nil
}

type GetAcceptenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAcceptenceRequest) Reset() {
	*x = GetAcceptenceRequest{}
	mi := &file_warehouse_warehouse_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAcceptenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAcceptenceRequest) ProtoMessage() {}

func (x *GetAcceptenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAcceptenceRequest.ProtoReflect.Descriptor instead.
func (*GetAcceptenceRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{22}
}

func (x *GetAcceptenceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAcceptenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acceptence *Acceptence `protobuf:"bytes,1,opt,name=acceptence,proto3" json:"acceptence,omitempty"`
}

func (x *GetAcceptenceResponse) Reset() {
	*x = GetAcceptenceResponse{}
	mi := &file_warehouse_warehouse_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAcceptenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAcceptenceResponse) ProtoMessage() {}

func (x *GetAcceptenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAcceptenceResponse.ProtoReflect.Descriptor instead.
func (*GetAcceptenceResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{23}
}

func (x *GetAcceptenceResponse) GetAcceptence() *Acceptence {
	if x != nil {
		return x.Acceptence
	}
	return nil
}

type ListAcceptenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListAcceptenceRequest) Reset() {
	*x = ListAcceptenceRequest{}
	mi := &file_warehouse_warehouse_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAcceptenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAcceptenceRequest) ProtoMessage() {}

func (x *ListAcceptenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAcceptenceRequest.ProtoReflect.Descriptor instead.
func (*ListAcceptenceRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{24}
}

func (x *ListAcceptenceRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListAcceptenceRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListAcceptenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acceptences []*Acceptence `protobuf:"bytes,1,rep,name=acceptences,proto3" json:"acceptences,omitempty"`
	TotalCount  int64         `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListAcceptenceResponse) Reset() {
	*x = ListAcceptenceResponse{}
	mi := &file_warehouse_warehouse_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAcceptenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAcceptenceResponse) ProtoMessage() {}

func (x *ListAcceptenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAcceptenceResponse.ProtoReflect.Descriptor instead.
func (*ListAcceptenceResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{25}
}

func (x *ListAcceptenceResponse) GetAcceptences() []*Acceptence {
	if x != nil {
		return x.Acceptences
	}
	return nil
}

func (x *ListAcceptenceResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type UpdateAcceptenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrganizationId *int64  `protobuf:"varint,2,opt,name=organization_id,json=organizationId,proto3,oneof" json:"organization_id,omitempty"`
	CounterpartyId *int64  `protobuf:"varint,3,opt,name=counterparty_id,json=counterpartyId,proto3,oneof" json:"counterparty_id,omitempty"`
	WarehouseId    *int64  `protobuf:"varint,4,opt,name=warehouse_id,json=warehouseId,proto3,oneof" json:"warehouse_id,omitempty"`
	DocumentUrl    *string `protobuf:"bytes,5,opt,name=document_url,json=documentUrl,proto3,oneof" json:"document_url,omitempty"`
	UserId         *int64  `protobuf:"varint,6,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	ProductIds     []int64 `protobuf:"varint,7,rep,packed,name=product_ids,json=productIds,proto3" json:"product_ids,omitempty"`
}

func (x *UpdateAcceptenceRequest) Reset() {
	*x = UpdateAcceptenceRequest{}
	mi := &file_warehouse_warehouse_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAcceptenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAcceptenceRequest) ProtoMessage() {}

func (x *UpdateAcceptenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAcceptenceRequest.ProtoReflect.Descriptor instead.
func (*UpdateAcceptenceRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateAcceptenceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAcceptenceRequest) GetOrganizationId() int64 {
	if x != nil && x.OrganizationId != nil {
		return *x.OrganizationId
	}
	return 0
}

func (x *UpdateAcceptenceRequest) GetCounterpartyId() int64 {
	if x != nil && x.CounterpartyId != nil {
		return *x.CounterpartyId
	}
	return 0
}

func (x *UpdateAcceptenceRequest) GetWarehouseId() int64 {
	if x != nil && x.WarehouseId != nil {
		return *x.WarehouseId
	}
	return 0
}

func (x *UpdateAcceptenceRequest) GetDocumentUrl() string {
	if x != nil && x.DocumentUrl != nil {
		return *x.DocumentUrl
	}
	return ""
}

func (x *UpdateAcceptenceRequest) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *UpdateAcceptenceRequest) GetProductIds() []int64 {
	if x != nil {
		return x.ProductIds
	}
	return nil
}

type UpdateAcceptenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acceptence *Acceptence `protobuf:"bytes,1,opt,name=acceptence,proto3" json:"acceptence,omitempty"`
}

func (x *UpdateAcceptenceResponse) Reset() {
	*x = UpdateAcceptenceResponse{}
	mi := &file_warehouse_warehouse_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAcceptenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAcceptenceResponse) ProtoMessage() {}

func (x *UpdateAcceptenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAcceptenceResponse.ProtoReflect.Descriptor instead.
func (*UpdateAcceptenceResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateAcceptenceResponse) GetAcceptence() *Acceptence {
	if x != nil {
		return x.Acceptence
	}
	return nil
}

type DeleteAcceptenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAcceptenceRequest) Reset() {
	*x = DeleteAcceptenceRequest{}
	mi := &file_warehouse_warehouse_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAcceptenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAcceptenceRequest) ProtoMessage() {}

func (x *DeleteAcceptenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAcceptenceRequest.ProtoReflect.Descriptor instead.
func (*DeleteAcceptenceRequest) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteAcceptenceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteAcceptenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteAcceptenceResponse) Reset() {
	*x = DeleteAcceptenceResponse{}
	mi := &file_warehouse_warehouse_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAcceptenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAcceptenceResponse) ProtoMessage() {}

func (x *DeleteAcceptenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_warehouse_warehouse_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAcceptenceResponse.ProtoReflect.Descriptor instead.
func (*DeleteAcceptenceResponse) Descriptor() ([]byte, []int) {
	return file_warehouse_warehouse_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteAcceptenceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_warehouse_warehouse_proto protoreflect.FileDescriptor

var file_warehouse_warehouse_proto_rawDesc = []byte{
	0x0a, 0x19, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2f, 0x77, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x1a, 0x1f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f,
	0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xe3, 0x01, 0x0a, 0x0e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x34, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0xde, 0x01, 0x0a, 0x09, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x34, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x57, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x78, 0x0a, 0x12, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x65, 0x63, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x22, 0x8f, 0x01, 0x0a, 0x11, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x2f, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x22, 0x82, 0x03, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3e, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x12, 0x32, 0x0a, 0x09, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x2e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x09, 0x77, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x38, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x70,
	0x65, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x22, 0x87, 0x02, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72,
	0x6c, 0x22, 0x81, 0x01, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x70, 0x65, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x79, 0x0a, 0x16, 0x41, 0x63, 0x63, 0x70, 0x65, 0x74, 0x65,
	0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x22, 0x8b, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x52,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x09, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x22, 0x40, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x57,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0a, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x73, 0x22, 0x72, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x52, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x77, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x09, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x22, 0xc3, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x49, 0x6e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x72, 0x74, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x73, 0x63, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x73,
	0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x5a, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x6e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x22, 0x41, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x52, 0x09, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x22, 0x7c, 0x0a, 0x1c, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x54, 0x6f, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x57, 0x0a, 0x1d, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x54, 0x6f, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x2e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x17,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0x51, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x4e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63,
	0x65, 0x22, 0x48, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x72, 0x0a, 0x16, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xea, 0x02, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x0f, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x01, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52,
	0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x18,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x22,
	0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x18, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x32, 0xa6, 0x08, 0x0a, 0x10, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x21, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x77, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x55, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x73, 0x12, 0x20, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x21, 0x2e, 0x77, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49,
	0x6e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x28, 0x2e, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x49, 0x6e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x6e, 0x57, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x12, 0x27, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x15, 0x41,
	0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x6f, 0x57, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x12, 0x27, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x6f, 0x57, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x6f, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x77, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5b, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x22, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x48, 0x5a, 0x46, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x32, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x32,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x77, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x3b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_warehouse_warehouse_proto_rawDescOnce sync.Once
	file_warehouse_warehouse_proto_rawDescData = file_warehouse_warehouse_proto_rawDesc
)

func file_warehouse_warehouse_proto_rawDescGZIP() []byte {
	file_warehouse_warehouse_proto_rawDescOnce.Do(func() {
		file_warehouse_warehouse_proto_rawDescData = protoimpl.X.CompressGZIP(file_warehouse_warehouse_proto_rawDescData)
	})
	return file_warehouse_warehouse_proto_rawDescData
}

var file_warehouse_warehouse_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_warehouse_warehouse_proto_goTypes = []any{
	(*WarehouseModel)(nil),                 // 0: warehouse.WarehouseModel
	(*Warehouse)(nil),                      // 1: warehouse.Warehouse
	(*WarehouseAnalytics)(nil),             // 2: warehouse.WarehouseAnalytics
	(*WarehouseProducts)(nil),              // 3: warehouse.WarehouseProducts
	(*Acceptence)(nil),                     // 4: warehouse.Acceptence
	(*AcceptenceModel)(nil),                // 5: warehouse.AcceptenceModel
	(*AccpetenceProduct)(nil),              // 6: warehouse.AccpetenceProduct
	(*AccpetenceProductModel)(nil),         // 7: warehouse.AccpetenceProductModel
	(*CreateWarehouseRequest)(nil),         // 8: warehouse.CreateWarehouseRequest
	(*CreateWarehouseResponse)(nil),        // 9: warehouse.CreateWarehouseResponse
	(*ListWarehousesRequest)(nil),          // 10: warehouse.ListWarehousesRequest
	(*ListWarehousesResponse)(nil),         // 11: warehouse.ListWarehousesResponse
	(*UpdateWarehouseRequest)(nil),         // 12: warehouse.UpdateWarehouseRequest
	(*UpdateWarehouseResponse)(nil),        // 13: warehouse.UpdateWarehouseResponse
	(*GetProductsInWarehouseRequest)(nil),  // 14: warehouse.GetProductsInWarehouseRequest
	(*GetProductsInWarehouseResponse)(nil), // 15: warehouse.GetProductsInWarehouseResponse
	(*GetWarehouseAnalyticsRequest)(nil),   // 16: warehouse.GetWarehouseAnalyticsRequest
	(*GetWarehouseAnalyticsResponse)(nil),  // 17: warehouse.GetWarehouseAnalyticsResponse
	(*AddProductToWarehouseRequest)(nil),   // 18: warehouse.AddProductToWarehouseRequest
	(*AddProductToWarehouseResponse)(nil),  // 19: warehouse.AddProductToWarehouseResponse
	(*CreateAcceptenceRequest)(nil),        // 20: warehouse.CreateAcceptenceRequest
	(*CreateAcceptenceResponse)(nil),       // 21: warehouse.CreateAcceptenceResponse
	(*GetAcceptenceRequest)(nil),           // 22: warehouse.GetAcceptenceRequest
	(*GetAcceptenceResponse)(nil),          // 23: warehouse.GetAcceptenceResponse
	(*ListAcceptenceRequest)(nil),          // 24: warehouse.ListAcceptenceRequest
	(*ListAcceptenceResponse)(nil),         // 25: warehouse.ListAcceptenceResponse
	(*UpdateAcceptenceRequest)(nil),        // 26: warehouse.UpdateAcceptenceRequest
	(*UpdateAcceptenceResponse)(nil),       // 27: warehouse.UpdateAcceptenceResponse
	(*DeleteAcceptenceRequest)(nil),        // 28: warehouse.DeleteAcceptenceRequest
	(*DeleteAcceptenceResponse)(nil),       // 29: warehouse.DeleteAcceptenceResponse
	(*organization.AddressModel)(nil),      // 30: organization.AddressModel
	(*product.ProductModel)(nil),           // 31: product.ProductModel
	(*organization.Organization)(nil),      // 32: organization.Organization
	(*user.User)(nil),                      // 33: user.User
	(*product.Product)(nil),                // 34: product.Product
}
var file_warehouse_warehouse_proto_depIdxs = []int32{
	30, // 0: warehouse.WarehouseModel.address:type_name -> organization.AddressModel
	3,  // 1: warehouse.WarehouseModel.products:type_name -> warehouse.WarehouseProducts
	30, // 2: warehouse.Warehouse.address:type_name -> organization.AddressModel
	3,  // 3: warehouse.Warehouse.products:type_name -> warehouse.WarehouseProducts
	31, // 4: warehouse.WarehouseProducts.product:type_name -> product.ProductModel
	32, // 5: warehouse.Acceptence.organization:type_name -> organization.Organization
	32, // 6: warehouse.Acceptence.counterparty:type_name -> organization.Organization
	1,  // 7: warehouse.Acceptence.warehouse:type_name -> warehouse.Warehouse
	33, // 8: warehouse.Acceptence.user:type_name -> user.User
	6,  // 9: warehouse.Acceptence.products:type_name -> warehouse.AccpetenceProduct
	34, // 10: warehouse.AccpetenceProduct.product:type_name -> product.Product
	30, // 11: warehouse.CreateWarehouseRequest.address:type_name -> organization.AddressModel
	0,  // 12: warehouse.CreateWarehouseResponse.warehouse:type_name -> warehouse.WarehouseModel
	0,  // 13: warehouse.ListWarehousesResponse.warehouses:type_name -> warehouse.WarehouseModel
	30, // 14: warehouse.UpdateWarehouseRequest.address:type_name -> organization.AddressModel
	0,  // 15: warehouse.UpdateWarehouseResponse.warehouse:type_name -> warehouse.WarehouseModel
	3,  // 16: warehouse.GetProductsInWarehouseResponse.products:type_name -> warehouse.WarehouseProducts
	2,  // 17: warehouse.GetWarehouseAnalyticsResponse.analytics:type_name -> warehouse.WarehouseAnalytics
	3,  // 18: warehouse.AddProductToWarehouseResponse.product:type_name -> warehouse.WarehouseProducts
	4,  // 19: warehouse.CreateAcceptenceResponse.acceptence:type_name -> warehouse.Acceptence
	4,  // 20: warehouse.GetAcceptenceResponse.acceptence:type_name -> warehouse.Acceptence
	4,  // 21: warehouse.ListAcceptenceResponse.acceptences:type_name -> warehouse.Acceptence
	4,  // 22: warehouse.UpdateAcceptenceResponse.acceptence:type_name -> warehouse.Acceptence
	8,  // 23: warehouse.WarehouseService.CreateWarehouse:input_type -> warehouse.CreateWarehouseRequest
	10, // 24: warehouse.WarehouseService.ListWarehouses:input_type -> warehouse.ListWarehousesRequest
	12, // 25: warehouse.WarehouseService.UpdateWarehouse:input_type -> warehouse.UpdateWarehouseRequest
	14, // 26: warehouse.WarehouseService.GetProductsInWarehouse:input_type -> warehouse.GetProductsInWarehouseRequest
	16, // 27: warehouse.WarehouseService.GetWarehouseAnalytics:input_type -> warehouse.GetWarehouseAnalyticsRequest
	18, // 28: warehouse.WarehouseService.AddProductToWarehouse:input_type -> warehouse.AddProductToWarehouseRequest
	20, // 29: warehouse.WarehouseService.CreateAcceptence:input_type -> warehouse.CreateAcceptenceRequest
	22, // 30: warehouse.WarehouseService.GetAcceptence:input_type -> warehouse.GetAcceptenceRequest
	24, // 31: warehouse.WarehouseService.ListAcceptence:input_type -> warehouse.ListAcceptenceRequest
	26, // 32: warehouse.WarehouseService.UpdateAcceptence:input_type -> warehouse.UpdateAcceptenceRequest
	28, // 33: warehouse.WarehouseService.DeleteAcceptence:input_type -> warehouse.DeleteAcceptenceRequest
	9,  // 34: warehouse.WarehouseService.CreateWarehouse:output_type -> warehouse.CreateWarehouseResponse
	11, // 35: warehouse.WarehouseService.ListWarehouses:output_type -> warehouse.ListWarehousesResponse
	13, // 36: warehouse.WarehouseService.UpdateWarehouse:output_type -> warehouse.UpdateWarehouseResponse
	15, // 37: warehouse.WarehouseService.GetProductsInWarehouse:output_type -> warehouse.GetProductsInWarehouseResponse
	17, // 38: warehouse.WarehouseService.GetWarehouseAnalytics:output_type -> warehouse.GetWarehouseAnalyticsResponse
	19, // 39: warehouse.WarehouseService.AddProductToWarehouse:output_type -> warehouse.AddProductToWarehouseResponse
	21, // 40: warehouse.WarehouseService.CreateAcceptence:output_type -> warehouse.CreateAcceptenceResponse
	23, // 41: warehouse.WarehouseService.GetAcceptence:output_type -> warehouse.GetAcceptenceResponse
	25, // 42: warehouse.WarehouseService.ListAcceptence:output_type -> warehouse.ListAcceptenceResponse
	27, // 43: warehouse.WarehouseService.UpdateAcceptence:output_type -> warehouse.UpdateAcceptenceResponse
	29, // 44: warehouse.WarehouseService.DeleteAcceptence:output_type -> warehouse.DeleteAcceptenceResponse
	34, // [34:45] is the sub-list for method output_type
	23, // [23:34] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_warehouse_warehouse_proto_init() }
func file_warehouse_warehouse_proto_init() {
	if File_warehouse_warehouse_proto != nil {
		return
	}
	file_warehouse_warehouse_proto_msgTypes[4].OneofWrappers = []any{}
	file_warehouse_warehouse_proto_msgTypes[5].OneofWrappers = []any{}
	file_warehouse_warehouse_proto_msgTypes[26].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_warehouse_warehouse_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_warehouse_warehouse_proto_goTypes,
		DependencyIndexes: file_warehouse_warehouse_proto_depIdxs,
		MessageInfos:      file_warehouse_warehouse_proto_msgTypes,
	}.Build()
	File_warehouse_warehouse_proto = out.File
	file_warehouse_warehouse_proto_rawDesc = nil
	file_warehouse_warehouse_proto_goTypes = nil
	file_warehouse_warehouse_proto_depIdxs = nil
}

syntax = "proto3";

package service;

option go_package = "github.com/2group/2sales.core-service/pkg/gen/go/service;servicev1";

service ServiceService {
  rpc GetService (GetServiceRequest) returns (GetServiceResponse);
  rpc CreateService (CreateServiceRequest) returns (CreateServiceResponse);
  rpc DeleteService (DeleteServiceRequest) returns (DeleteServiceResponse);
  rpc PartialUpdateService (PartialUpdateServiceRequest) returns (PartialUpdateServiceResponse);
  rpc UpdateService (UpdateServiceRequest) returns (UpdateServiceResponse);
}

message ImageModel {
    int64 id = 1;
    string image_url = 3;
    optional int32 image_index = 4;
    string object_key = 7;
}

message Service {
    optional int64 id = 1;
    double price_from = 2;
    double price_to = 3;
    optional string status = 4;
    string name = 5;
    optional string image_url = 6;
    optional string description = 7;
    optional string created_at = 8;
    optional string updated_at = 9;
    optional int64 organization_id = 10;
    repeated ImageModel images = 11;
}

message GetServiceRequest {
    int64 id = 1;
}

message GetServiceResponse {
    Service service = 1;
}

message CreateServiceRequest {
    Service service = 1;
}

message CreateServiceResponse {
    Service service = 1;
}

message DeleteServiceRequest {
    int64 id = 1;
}

message DeleteServiceResponse {
    Service service = 1;
}

message PartialUpdateServiceRequest {
    Service service = 1;
}

message PartialUpdateServiceResponse {
    Service service = 1;
}

message UpdateServiceRequest {
    Service service = 1;
}

message UpdateServiceResponse {
    Service service = 1;
}

syntax = "proto3";

package employee;

option go_package = "github.com/2group/2sales.core-service/pkg/gen/go/employee;employeev1";

service EmployeeService {
    rpc GetEmployee (GetEmployeeRequest) returns (GetEmployeeResponse);
    rpc CreateEmployee (CreateEmployeeRequest) returns (CreateEmployeeResponse);
    rpc UpdateEmployee (UpdateEmployeeRequest) returns (UpdateEmployeeResponse);

    rpc CreateRole (CreateRoleRequest) returns (CreateRoleResponse);
    rpc UpdateRole (UpdateRoleRequest) returns (UpdateRoleResponse);
    rpc ListRole (ListRoleRequest) returns (ListRoleResponse);
    rpc DeleteRole (DeleteRoleRequest) returns (DeleteRoleResponse);

}

message Employee {
    optional int64 id = 1;
    optional int64 user_id = 2;
    optional string first_name = 3;
    optional string last_name = 4;
    optional int64 organization_id = 5;
    optional string created_at = 6;
    optional string updated_at = 7;
    repeated EmployeeRole employee_roles = 8;
}

message EmployeeRole {
    Role role = 1;
    optional int64 organization_id = 2;
    optional int64 branch_id = 3;
    optional string created_at = 4;
}

message Role {
    optional int64 id = 1;
    optional string name = 2;
    optional string description = 3;
}

message GetEmployeeRequest {
    oneof lookup {
        int64 id = 1;
        int64 user_id = 2;
    }
}

message GetEmployeeResponse {
    Employee employee = 1;
}

message CreateEmployeeRequest {
    Employee employee = 1;
}

message CreateEmployeeResponse {
    Employee employee = 1;
}

message UpdateEmployeeRequest {
    Employee employee = 1;
}

message UpdateEmployeeResponse {
    Employee employee = 1;
}
message CreateRoleRequest {
    Role role = 1;
}
message CreateRoleResponse {
    Role role = 1;
}
message UpdateRoleRequest {
    Role role = 1;
}
message UpdateRoleResponse {
    Role role = 1;
}
message ListRoleRequest {
    
} 
message ListRoleResponse {
    repeated Role roles = 1;
}
message DeleteRoleRequest {
    int64 id = 1;
}
message DeleteRoleResponse {
    Role role = 1;
}
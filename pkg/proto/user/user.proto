syntax = "proto3";

package user;

option go_package = "github.com/2group/2sales.core-service/pkg/gen/go/user;userv1";

service UserService {
    rpc Login (LoginRequest) returns (LoginResponse);
    rpc Register (RegisterRequest) returns (RegisterResponse);
    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse);
    rpc GetUser (GetUserRequest) returns (GetUserResponse);
    rpc DeleteUser (DeleteUserRequest) returns (DeleteUserResponse);

    rpc CreateRole (CreateRoleRequest) returns (CreateRoleResponse);
    rpc ListRoles (ListRolesRequest) returns (ListRolesResponse);
    rpc UpdateRole (UpdateRoleRequest) returns (UpdateRoleResponse);
    rpc DeleteRole (DeleteRoleRequest) returns (DeleteRoleResponse);

    rpc ListPermissions (ListPermissionsRequest) returns (ListPermissionsResponse);
}

message LoginRequest {
    string login = 1;
    string platform = 2;
    string password = 3;
}

message LoginResponse {
    string token = 1;
    UserModel user = 2;
}

message RegisterRequest {
    string first_name = 1;
    string last_name = 2;
    string email = 3;
    string phone_number = 4;
    string password = 5;
    string organization_type = 6;
    optional int64 role_id = 7;
}

message RegisterResponse {
    string token = 1;
    UserModel user = 2;
}

message UpdateUserRequest {
    int64 user_id = 1;
    string email = 2;
    string first_name = 3;
    string last_name = 4;
    string phone_number = 5;
    int64 organization_id = 6;
    int64 role_id = 7;
}

message UpdateUserResponse {
    string token = 1;
    UserModel user = 2;
}

message GetUserRequest {
    int64 user_id = 1;
}

message GetUserResponse {
    UserModel user = 1;
}

message DeleteUserRequest {
    int64 user_id = 1;
}

message DeleteUserResponse {
    bool success = 1;
}

message CreateRoleRequest {
    int64 organization_id = 1;
    string name = 2;
    string description = 3;
    repeated int64 permission_ids = 4;
}

message CreateRoleResponse {
    RoleModel role = 1;
}

message ListRolesRequest {
    int32 page_size = 1;
    int32 page_number = 2;
}

message ListRolesResponse {
    repeated RoleModel roles = 1;
    int32 total_count = 2;
}

message UpdateRoleRequest {
    int64 role_id = 1;
    string name = 2;
    string description = 3;
    repeated int64 permission_ids = 4;
}

message UpdateRoleResponse {
    RoleModel role = 1;
}

message DeleteRoleRequest {
    int64 role_id = 1;
}

message DeleteRoleResponse {
    bool success = 1;
}

message ListPermissionsRequest {
    int32 page_size = 1;
    int32 page_number = 2;
}

message ListPermissionsResponse {
    repeated PermissionModel permissions = 1;
    int32 total_count = 2;
}

message UserModel {
    int64 id = 1;
    optional string email = 3;
    optional string password_hash = 4;
    optional string phone_number = 5;
    optional string first_name = 6;
    optional string last_name = 7;
    optional int64 organization_id = 11;
    optional string created_at = 12;
    optional string updated_at = 13;
    optional string organization_type = 14;
    RoleModel role = 15;
}

message RoleModel {
    int64 id = 1;
    string name = 2;
    string description = 3;
    repeated PermissionModel permissions = 4;
}

message PermissionModel {
    int64 id = 1;
    string name = 2;
    string description = 3;
}

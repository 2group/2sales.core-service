syntax = "proto3";

package user;

option go_package = "github.com/2group/2sales.core-service/pkg/gen/go/user;userv1";

import "customer/customer.proto";
import "employee/employee.proto";

service UserService {
    rpc Login (LoginRequest) returns (LoginResponse);
    rpc Register (RegisterRequest) returns (RegisterResponse);
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse);
    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse);
    rpc ListUsers (ListUserRequest) returns (ListUserResponse);
}

service OtpService {
    rpc RequestOtp(RequestOtpRequest) returns (RequestOtpResponse);
    rpc VerifyOtp(VerifyOtpRequest) returns (VerifyOtpResponse);
}

message User {
    optional int64 id = 1;
    optional string email = 2;
    optional string phone_number = 3;
    optional string password = 4;
    optional customer.Customer customer = 5;
    optional employee.Employee employee = 6;
}

message LoginRequest {
    string login = 1;
    string password = 2;
    string platform = 3;
}

message LoginResponse {
    string token = 1;
    User user = 2;
    bool is_completed = 3;
}

message RegisterRequest {
    User user = 1;
}

message RegisterResponse {
    User user = 1;
    string token = 2;
}
message CreateUserRequest {
    User user = 1;
}

message CreateUserResponse {
    User user = 1;
}


message UpdateUserRequest {
    User user = 1;
}

message UpdateUserResponse {
    User user = 1;
}

message RequestOtpRequest {
    string phone_number = 1;
}

message RequestOtpResponse {
    bool ok = 1;
    string message = 2;
}

message VerifyOtpRequest {
    string phone_number = 1;
    string code         = 2;
}

message VerifyOtpResponse {
    User user = 1;
}
message ListUserRequest {
    int32 limit = 1;
    int32 offset = 2;
}
message ListUserResponse {
    repeated User users = 1;
    int32 total = 2;
}
